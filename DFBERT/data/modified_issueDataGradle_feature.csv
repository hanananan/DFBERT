num,label,code_len,con_num,keyword_num,keyword_fix,username,permission,ds
24337,1,4350,42,0,0,mduft,0,"title:Jacoco plugin causes implicit dependencies between unrelated tasks description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues--><!--- Provide a brief summary of the issue in the title above -->### Expected BehaviorWe're applying the jacoco plugin to multiple tasks within a single project, all of type JavaExec or JavaExecFork (psxpaul external plugin) like so:```jacoco {    applyTo initTestBDeploy    applyTo checkTestBDeploy    applyTo startTestBDeploy    if(!project.hasProperty('cypressNoCentral')) {        applyTo startTestBDeployCentral        applyTo startTestBDeployManaged    }}```Expectation is that these tasks maintain their ""current"" relationship.### Current BehaviorBuild fails with this message:```FAILURE: Build failed with an exception.* What went wrong:Some problems were found with the configuration of task ':test-data:startTestBDeployCentral' (type 'JavaExecFork').  - Gradle detected a problem with the following location: 'E:\other\workspaces\deployment\deployment\test-data'.    Reason: Task ':test-data:startTestBDeployCentral' uses this output of task ':test-data:checkTestBDeploy' without declaring an explicit or implicit dependency. This can lead to incorrect results being produced, depending on what order the tasks are executed.    Possible solutions:      1. Declare task ':test-data:checkTestBDeploy' as an input of ':test-data:startTestBDeployCentral'.      2. Declare an explicit dependency on ':test-data:checkTestBDeploy' from ':test-data:startTestBDeployCentral' using Task#dependsOn.      3. Declare an explicit dependency on ':test-data:checkTestBDeploy' from ':test-data:startTestBDeployCentral' using Task#mustRunAfter.    Please refer to https://docs.gradle.org/8.0.2/userguide/validation_problems.html#implicit_dependency for more details about this problem.  - Gradle detected a problem with the following location: 'E:\other\workspaces\deployment\deployment\test-data'.    Reason: Task ':test-data:startTestBDeployCentral' uses this output of task ':test-data:initTestBDeploy' without declaring an explicit or implicit dependency. This can lead to incorrect results being produced, depending on what order the tasks are executed.    Possible solutions:      1. Declare task ':test-data:initTestBDeploy' as an input of ':test-data:startTestBDeployCentral'.      2. Declare an explicit dependency on ':test-data:initTestBDeploy' from ':test-data:startTestBDeployCentral' using Task#dependsOn.      3. Declare an explicit dependency on ':test-data:initTestBDeploy' from ':test-data:startTestBDeployCentral' using Task#mustRunAfter.    Please refer to https://docs.gradle.org/8.0.2/userguide/validation_problems.html#implicit_dependency for more details about this problem.  - Gradle detected a problem with the following location: 'E:\other\workspaces\deployment\deployment\test-data'.    Reason: Task ':test-data:startTestBDeployCentral' uses this output of task ':test-data:startTestBDeploy' without declaring an explicit or implicit dependency. This can lead to incorrect results being produced, depending on what order the tasks are executed.    Possible solutions:      1. Declare task ':test-data:startTestBDeploy' as an input of ':test-data:startTestBDeployCentral'.      2. Declare an explicit dependency on ':test-data:startTestBDeploy' from ':test-data:startTestBDeployCentral' using Task#dependsOn.      3. Declare an explicit dependency on ':test-data:startTestBDeploy' from ':test-data:startTestBDeployCentral' using Task#mustRunAfter.    Please refer to https://docs.gradle.org/8.0.2/userguide/validation_problems.html#implicit_dependency for more details about this problem.```### Context<!--- How has this issue affected you? What are you trying to accomplish? --><!--- Providing context helps us come up with a solution that is most useful in the real world -->If I remove the `jacoco` block alltogether, all returns to normal. So it must be related to the `applyTo`s in there. The issue *also* appears if I comment out all applyTos except for *one* single one. E.g. if I leave the `applyTo startTestBDeploy` in the block, the message becomes shorter, but the error is still there:```FAILURE: Build failed with an exception.* What went wrong:A problem was found with the configuration of task ':test-data:startTestBDeployCentral' (type 'JavaExecFork').  - Gradle detected a problem with the following location: 'E:\other\workspaces\deployment\deployment\test-data'.    Reason: Task ':test-data:startTestBDeployCentral' uses this output of task ':test-data:startTestBDeploy' without declaring an explicit or implicit dependency. This can lead to incorrect results being produced, depending on what order the tasks are executed.    Possible solutions:      1. Declare task ':test-data:startTestBDeploy' as an input of ':test-data:startTestBDeployCentral'.      2. Declare an explicit dependency on ':test-data:startTestBDeploy' from ':test-data:startTestBDeployCentral' using Task#dependsOn.      3. Declare an explicit dependency on ':test-data:startTestBDeploy' from ':test-data:startTestBDeployCentral' using Task#mustRunAfter.    Please refer to https://docs.gradle.org/8.0.2/userguide/validation_problems.html#implicit_dependency for more details about this problem.```### Steps to Reproduce <!---Provide a self-contained example project as an attached archive or a Github project.You can use the following template with a Gradle GitHub action set up to showcase your problem: https://github.com/gradle/gradle-issue-reproducerIn the rare cases where this is infeasible, we will also accept a detailed set of instructions.-->Clone and checkout https://github.com/bdeployteam/bdeploy/tree/gradle-issue. Run `./gradlew runCypressHeadless` or `./gradlew clean build`.You can checkout test-data/build.gradle. It contains the mentioned tasks and the `jacoco` block. Note that some of the mentioned tasks are generated by `createServerTasks`### Your Environment<!--- Include as many relevant details about the environment you experienced the bug in --><!--- A build scan https://scans.gradle.com/get-started is ideal -->Build scan URL: https://gradle.com/s/vvbskvyuxgeq6
"
24280,0,0,296,0,1,jvandort,0,"title:Run dependency actions on entire hierarchy description:Make sure we run the dependency actions on the entire hierarchy before traversing that hierarchy for dependencies and excludes. This is because the dependency actions may themselves modify the hierarchy, so before traversing we need to make sure the hierarchy isn't going to change out from under us.This should be fine since configurations' dependency actions are idempotent. The actions automatically de-register themselves, so once they're called, they're not triggered for subsequent calls.Fixes: #24234
"
24236,0,0,226,0,0,mlopatkin,1,"title:Artifact transforms should be allowed to run external processes description:When the configuration cache is enabled and `STABLE_CONFIGURATION_CACHE` feature is used, a configuration cache problem is emitted if an artifact transform starts an external process.### Expected BehaviorNo configuration cache problem should be reported### Current BehaviorA configuration cache problem is reported for the process started in the transform action.### ContextThe configuration cache prohibits running external processes outside of tasks and value sources, because these may affect the configuration phase, and Gradle has no means to understand how the process output is used. However, artifact transforms are closer to tasks in this regard: they can (and should) define their inputs explicitly, and not being able to run external process to do the actual transformation is too limiting.### Steps to Reproduce TBDAllowing to read files without making them inputs could also be beneficial. It allows to use temp files in the transform action, and further aligns the behavior with tasks in included plugin builds/`buildSrc`.
"
24197,0,636,232,0,0,lacasseio,0,"title:Gradle 8 reports incorrect Configuration flags despite being configured correctly description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues--><!--- Provide a brief summary of the issue in the title above -->As part of the [Nokee project](https://nokee.dev), we encountered the following erroneous reporting from Gradle information log.### Expected Behavior<!--- Tell us what should happen -->There shouldn't be any information logs printed out for each consumable `Configuration`.### Current Behavior<!--- Tell us what happens instead of the expected behavior -->Gradle reports the following for each consumable `Configuration` part of a dependency resolution:```The configuration :fooElements is both consumable and declarable. This combination is incorrect, only one of these flags should be set.```### Context<!--- How has this issue affected you? What are you trying to accomplish? --><!--- Providing context helps us come up with a solution that is most useful in the real world -->The reports come from [`DefaultConfiguration#logIfImproperConfiguration`](https://github.com/gradle/gradle/blob/5c9b8ef4c2d2ff0760e5d12dc8aa409e0e692fa4/subprojects/dependency-management/src/main/java/org/gradle/api/internal/artifacts/configurations/DefaultConfiguration.java#L1743). However, it seems by default `canBeDeclaredAgainst` comes from this new, half-implemented feature,  `ConfigurationRole`. There is no mention in the release notes of any changes with regard to role-at-creation for `Configuration`. It's possible to change the `canBeDeclaredAgainst` flag, but only via an internal setter [`DeprecatableConfiguration#setCanBeDeclaredAgainst`](https://github.com/gradle/gradle/blob/5c9b8ef4c2d2ff0760e5d12dc8aa409e0e692fa4/subprojects/core-api/src/main/java/org/gradle/internal/deprecation/DeprecatableConfiguration.java#L125). In fact, that method is marked as 8.1 which seems to have leaked into Gradle 8.### Steps to Reproduce <!---Provide a self-contained example project as an attached archive or a Github project.You can use the following template with a Gradle GitHub action set up to showcase your problem: https://github.com/gradle/gradle-issue-reproducerIn the rare cases where this is infeasible, we will also accept a detailed set of instructions.-->Suppose the following code:```configurations.create('fooElements') {  canBeConsumed = true  canBeResolved = false  attributes {    attribute(Attribute.of(""my.attribute"", String), ""value"")  }}configurations.create('foo') {  canBeConsumed = false  canBeResolved = true  attributes {    attribute(Attribute.of(""my.attribute"", String), ""value"")  }}dependencies {  foo project}tasks.register('sayHello') {  doLast {    println 'Hello, world!'    configurations.foo.resolve()  }}```Executing `./gradlew sayHello -i` will report incorrect `Configuration` flags.### Your Environment<!--- Include as many relevant details about the environment you experienced the bug in --><!--- A build scan https://scans.gradle.com/get-started is ideal -->Build scan URL:
"
24175,1,0,0,0,0,SupSaiYaJin,0,"title:tooling models parallel fetch is unusable. description:Using IDEA Build #IC-213.7172.25open gradle.tooling.models.parallel.fetch in registryJust create a new Android Project then the sync will failedthe project is using gradle 7.0.2, the error stacktrace is below.[errortrace.txt](https://github.com/gradle/gradle/files/10899168/errortrace.txt)
"
24174,1,1356,22,0,0,lfygh,0,"title:test task error ""No tests found for given includes"" description:```------------------------------------------------------------Gradle 7.5.1------------------------------------------------------------Build time:   2022-08-05 21:17:56 UTCRevision:     d1daa0cbf1a0103000b71484e1dbfe096e095918Kotlin:       1.6.21Groovy:       3.0.10Ant:          Apache Ant(TM) version 1.10.11 compiled on July 10 2021JVM:          17.0.4 (Azul Systems, Inc. 17.0.4+8-LTS)OS:           Mac OS X 13.1 aarch64```if I have no test class, gradle test task work well ```javatest {    useJUnitPlatform()}```if I only have one test class, and I just exclude it, then the test task error  ""No tests found for given includes"" occurs.```javatest {    useJUnitPlatform()    filter {        excludeTestsMatching(""**Test"")    }}```here is the complete script,```javaplugins {    id 'java'}group 'org.example'version '1.0-SNAPSHOT'repositories {    mavenCentral()}dependencies {    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'}test {    useJUnitPlatform()    filter {        excludeTestsMatching(""**Test"")    }}```you can create an empty project with idea, then write some simple code,like this:```javapublic class Main {    public static void main(String[] args) {        System.out.println(""Hello world!"");    }}```then write test calss```javaclass MainTest {    @Test    void main() {    }}``` and run ```java./gradlew test```output:```java> Task :test FAILEDFAILURE: Build failed with an exception.* What went wrong:Execution failed for task ':test'.> No tests found for given includes: ```**so, what can I do to skip the error, and what is the diff between the two situations?**
"
24172,1,389,175,0,0,breskeby,0,"title:Configured extra properties on Test task are not accessible on execution with configuration cache enabled description:### Expected BehaviorWe declare extra properties for test tasks using```test.getExtensions().getExtraProperties().set(""dumpOutputOnFailure"", true);```then late when executing this test task we access this extra property again in a test listener:```Object errorReportingEnabled = testTask.getExtensions().getExtraProperties().get(""dumpOutputOnFailure"");```This worked with gradle < 8.0.2### Current BehaviorThe configuration above is broken with the following error message:```* What went wrong:Execution failed for task ':lib:test'.> Cannot get property 'dumpOutputOnFailure' on extra properties extension as it does not exist```### ContextWe ran into this with updating to gradle 8.0.2 (from 7.6) as we couldn't update to earlier gradle 8.x versions due to other blocking issues. So it might be a general problem since 8.0.### Steps to Reproduce Find attached a simple project to reproduce. If you run the attached project with```./gradlew :lib:test --rerun-tasks --scan```the build succeeds. running in addition with `--configuration-cache` makes it fail as described above. This worked with earlier gradle versions.[testExtraProperties.zip](https://github.com/gradle/gradle/files/10898281/testExtraProperties.zip)### Your Environment<!--- Include as many relevant details about the environment you experienced the bug in --><!--- A build scan https://scans.gradle.com/get-started is ideal -->Build scan URL:failure: https://scans.gradle.com/s/fcpr4jdqcpftw
"
24149,1,143,66,0,0,geminiKim,0,"title:The `useJUnitPlatform` setting in `KotlinDSL` does not work correctly since Gradle 8.0 description:In the KotlinDSL environment, the settings that were working correctly until gradle 7.6.1 are not working correctly since 8.0.I've checked the java + groovy environment and it doesn't have this problem.```kotlintasks.register<Test>(""restDocsTest"") {    group = ""verification""    useJUnitPlatform {        includeTags(""restdocs"")    }}```### Expected BehaviorThe test code with the value of `@Tag` from JUnit set to ""restdocs"" should be executed.### Current BehaviorThe `@Tag` is not recognized and the test code runs nothing.### ContextI had an issue with my test code not running when I wanted it to.### Steps to Reproduce If you get a `not-work-tests-gradle8` branch of this [repository](https://github.com/team-dodn/spring-boot-kotlin-template/tree/not-work-tests-gradle8) and do a `restDocsTest`, you can see the same issue.And if you check `restDocsTest` on version `gradle 7.6.1` in the `main` branch of this [repository](https://github.com/team-dodn/spring-boot-kotlin-template), you'll see it working fine.### Your EnvironmentI just migrated from gradle-wrapper 7.6.1 to 8.0
"
24114,0,0,251,0,1,ghale,1,"title:Always fail the test task if unrecoverable errors occur during test result processing description:We fixed an issue with serialization/deserialization of test failures in #24056, but there could be other unrecoverable failures that occur during test result processing that are not captured.  This makes it so that we always fail the test task when such errors occur.
"
24103,0,2631,89,0,0,liutikas,0,"title:Gradle throws/catches a lot of exceptions in AttributeMatchingVariantSelector description:During a profiling of [androidx](https://github.com/androidx/androidx) project I found that Gradle is throwing/catching around 290K instances of `org.gradle.internal.component.NoMatchingVariantSelectionException`### Expected BehaviorNo `org.gradle.internal.component.NoMatchingVariantSelectionException`### Current Behavior290K instances of `org.gradle.internal.component.NoMatchingVariantSelectionException`It seems to happen here```org.gradle.api.internal.artifacts.transform.AttributeMatchingVariantSelector.doSelect(AttributeMatchingVariantSelector.java)org.gradle.api.internal.artifacts.transform.AttributeMatchingVariantSelector.select(AttributeMatchingVariantSelector.java:93)org.gradle.configurationcache.serialization.codecs.LocalFileDependencyBackedArtifactSetCodec$encode$3.accept(LocalFileDependencyBackedArtifactSetCodec.kt:113)org.gradle.configurationcache.serialization.codecs.LocalFileDependencyBackedArtifactSetCodec$encode$3.accept(LocalFileDependencyBackedArtifactSetCodec.kt:111)org.gradle.api.internal.artifacts.type.DefaultArtifactTypeRegistry.visitArtifactTypes(DefaultArtifactTypeRegistry.java:73)org.gradle.configurationcache.serialization.codecs.LocalFileDependencyBackedArtifactSetCodec.encode(LocalFileDependencyBackedArtifactSetCodec.kt:111)org.gradle.configurationcache.serialization.codecs.LocalFileDependencyBackedArtifactSetCodec.encode(LocalFileDependencyBackedArtifactSetCodec.kt:75)org.gradle.configurationcache.serialization.codecs.BindingsBackedCodec.encode(BindingsBackedCodec.kt:52)org.gradle.configurationcache.serialization.DefaultWriteContext.write(Contexts.kt:86)org.gradle.configurationcache.serialization.CombinatorsKt.writeCollection(Combinators.kt:232)org.gradle.configurationcache.serialization.codecs.FileCollectionCodec.encodeContents(FileCollectionCodec.kt:64)org.gradle.configurationcache.serialization.codecs.FileCollectionCodec.encode(FileCollectionCodec.kt:57)org.gradle.configurationcache.serialization.codecs.FileCollectionCodec.encode(FileCollectionCodec.kt:49)org.gradle.configurationcache.serialization.codecs.BindingsBackedCodec.encode(BindingsBackedCodec.kt:52)org.gradle.configurationcache.serialization.DefaultWriteContext.write(Contexts.kt:86)org.gradle.configurationcache.serialization.codecs.transform.TransformStepSpecCodec.encode(Transforms.kt:57)org.gradle.configurationcache.serialization.codecs.transform.TransformStepSpecCodec.encode(Transforms.kt:52)org.gradle.configurationcache.serialization.codecs.BindingsBackedCodec.encode(BindingsBackedCodec.kt:52)org.gradle.configurationcache.serialization.DefaultWriteContext.write(Contexts.kt:86)org.gradle.configurationcache.serialization.codecs.transform.InitialTransformationNodeCodec.doEncode(InitialTransformationNode...```### ContextProfiling using YourKit### Steps to Reproduce ```LD_LIBRARY_PATH=$LD_LIBRARY_PATH:~/yourkit/bin/linux-x86-64/ ./gradlew zipTestConfigsWithApks zipConstrainedTestConfigsWithApks zipOwnersFiles createModuleInfo --dry-run -Pandroidx.profile.yourkitAgentPath=/usr/local/google/home/aurimas/yourkit/bin/linux-x86-64/libyjpagent.so```in androidx checkout.![image](https://user-images.githubusercontent.com/1418185/222261691-19325a0d-5b5c-42b3-9248-a5d6268f3dd0.png)
"
24097,1,9292,298,1,0,Goooler,0,"title:`GenerateMavenPom` seems to be incompatible with CC in Gradle 8.0 description:- Context: https://github.com/gradle/gradle/issues/21926#issuecomment-1450345200- Reproducer: https://github.com/Goooler/shadow/pull/15```* What went wrong:Configuration cache problems found in this build.1 problem was found storing the configuration cache.- Task `:generatePomFileForTestPublication` of type `org.gradle.api.publish.maven.tasks.GenerateMavenPom`: cannot serialize object of type 'org.gradle.api.internal.artifacts.DefaultDependencySet', a subtype of 'org.gradle.api.artifacts.DependencySet', as these are not supported with the configuration cache.  See https://docs.gradle.org/8.0.1/userguide/configuration_cache.html#config_cache:requirements:disallowed_typesSee the complete report at file:///home/circleci/shadow/build/reports/configuration-cache/63a4xikguon0pcj98808joey4/4hkeu1c3zn8rz20v6jxnhzicn/configuration-cache-report.html* Try:> Run with --info or --debug option to get more log output.* Exception is:org.gradle.configurationcache.ConfigurationCacheProblemsException: Configuration cache problems found in this build.1 problem was found storing the configuration cache.- Task `:generatePomFileForTestPublication` of type `org.gradle.api.publish.maven.tasks.GenerateMavenPom`: cannot serialize object of type 'org.gradle.api.internal.artifacts.DefaultDependencySet', a subtype of 'org.gradle.api.artifacts.DependencySet', as these are not supported with the configuration cache.  See https://docs.gradle.org/8.0.1/userguide/configuration_cache.html#config_cache:requirements:disallowed_typesSee the complete report at file:///home/circleci/shadow/build/reports/configuration-cache/63a4xikguon0pcj98808joey4/4hkeu1c3zn8rz20v6jxnhzicn/configuration-cache-report.html	at org.gradle.configurationcache.problems.ConfigurationCacheProblems.report(ConfigurationCacheProblems.kt:161)	at org.gradle.internal.buildtree.ProblemReportingBuildActionRunner.reportProblems(ProblemReportingBuildActionRunner.java:61)	at org.gradle.internal.buildtree.ProblemReportingBuildActionRunner.run(ProblemReportingBuildActionRunner.java:52)	at org.gradle.launcher.exec.BuildOutcomeReportingBuildActionRunner.run(BuildOutcomeReportingBuildActionRunner.java:65)	at org.gradle.tooling.internal.provider.FileSystemWatchingBuildActionRunner.run(FileSystemWatchingBuildActionRunner.java:140)	at org.gradle.launcher.exec.BuildCompletionNotifyingBuildActionRunner.run(BuildCompletionNotifyingBuildActionRunner.java:41)	at org.gradle.launcher.exec.RootBuildLifecycleBuildActionExecutor.lambda$execute$0(RootBuildLifecycleBuildActionExecutor.java:40)	at org.gradle.composite.internal.DefaultRootBuildState.run(DefaultRootBuildState.java:122)	at org.gradle.launcher.exec.RootBuildLifecycleBuildActionExecutor.execute(RootBuildLifecycleBuildActionExecutor.java:40)	at org.gradle.internal.buildtree.DefaultBuildTreeContext.execute(DefaultBuildTreeContext.java:40)	at org.gradle.launcher.exec.BuildTreeLifecycleBuildActionExecutor.lambda$execute$0(BuildTreeLifecycleBuildActionExecutor.java:65)	at org.gradle.internal.buildtree.BuildTreeState.run(BuildTreeState.java:53)	at org.gradle.launcher.exec.BuildTreeLifecycleBuildActionExecutor.execute(BuildTreeLifecycleBuildActionExecutor.java:65)	at org.gradle.launcher.exec.RunAsBuildOperationBuildActionExecutor$3.call(RunAsBuildOperationBuildActionExecutor.java:61)	at org.gradle.launcher.exec.RunAsBuildOperationBuildActionExecutor$3.call(RunAsBuildOperationBuildActionExecutor.java:57)	at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)	at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)	at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)	at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)	at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)	at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)	at org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)	at org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)	at org.gradle.launcher.exec.RunAsBuildOperationBuildActionExecutor.execute(RunAsBuildOperationBuildActionExecutor.java:57)	at org.gradle.launcher.exec.RunAsWorkerThreadBuildActionExecutor.lambda$execute$0(RunAsWorkerThreadBuildActionExecutor.java:36)	at org.gradle.internal.work.DefaultWorkerLeaseService.withLocks(DefaultWorkerLeaseService.java:249)	at org.gradle.internal.work.DefaultWorkerLeaseService.runAsWorkerThread(DefaultWorkerLeaseService.java:109)	at org.gradle.launcher.exec.RunAsWorkerThreadBuildActionExecutor.execute(RunAsWorkerThreadBuildActionExecutor.java:36)	at org.gradle.tooling.internal.provider.continuous.ContinuousBuildActionExecutor.execute(ContinuousBuildActionExecutor.java:110)	at org.gradle.tooling.internal.provider.SubscribableBuildActionExecutor.execute(SubscribableBuildActionExecutor.java:64)	at org.gradle.internal.session.DefaultBuildSessionContext.execute(DefaultBuildSessionContext.java:46)	at org.gradle.tooling.internal.provider.BuildSessionLifecycleBuildActionExecuter$ActionImpl.apply(BuildSessionLifecycleBuildActionExecuter.java:100)	at org.gradle.tooling.internal.provider.BuildSessionLifecycleBuildActionExecuter$ActionImpl.apply(BuildSessionLifecycleBuildActionExecuter.java:88)	at org.gradle.internal.session.BuildSessionState.run(BuildSessionState.java:69)	at org.gradle.tooling.internal.provider.BuildSessionLifecycleBuildActionExecuter.execute(BuildSessionLifecycleBuildActionExecuter.java:62)	at org.gradle.tooling.internal.provider.BuildSessionLifecycleBuildActionExecuter.execute(BuildSessionLifecycleBuildActionExecuter.java:41)	at org.gradle.tooling.internal.provider.StartParamsValidatingActionExecuter.execute(StartParamsValidatingActionExecuter.java:63)	at org.gradle.tooling.internal.provider.StartParamsValidatingActionExecuter.execute(StartParamsValidatingActionExecuter.java:31)	at org.gradle.tooling.internal.provider.SessionFailureReportingActionExecuter.execute(SessionFailureReportingActionExecuter.java:50)	at org.gradle.tooling.internal.provider.SessionFailureReportingActionExecuter.execute(SessionFailureReportingActionExecuter.java:38)	at org.gradle.tooling.internal.provider.SetupLoggingActionExecuter.execute(SetupLoggingActionExecuter.java:47)	at org.gradle.tooling.internal.provider.SetupLoggingActionExecuter.execute(SetupLoggingActionExecuter.java:31)	at org.gradle.launcher.daemon.server.exec.ExecuteBuild.doBuild(ExecuteBuild.java:65)	at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:37)	at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)	at org.gradle.launcher.daemon.server.exec.WatchForDisconnection.execute(WatchForDisconnection.java:39)	at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)	at org.gradle.launcher.daemon.server.exec.ResetDeprecationLogger.execute(ResetDeprecationLogger.java:29)	at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)	at org.gradle.launcher.daemon.server.exec.RequestStopIfSingleUsedDaemon.execute(RequestStopIfSingleUsedDaemon.java:35)	at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)	at org.gradle.launcher.daemon.server.exec.ForwardClientInput$2.create(ForwardClientInput.java:78)	at org.gradle.launcher.daemon.server.exec.ForwardClientInput$2.create(ForwardClientInput.java:75)	at org.gradle.util.internal.Swapper.swap(Swapper.java:38)	at org.gradle.launcher.daemon.server.exec.ForwardClientInput.execute(ForwardClientInput.java:75)	at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)	at org.gradle.launcher.daemon.server.exec.LogAndCheckHealth.execute(LogAndCheckHealth.java:64)	at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)	at org.gradle.launcher.daemon.server.exec.LogToClient.doBuild(LogToClient.java:63)	at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:37)	at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)	at org.gradle.launcher.daemon.server.exec.EstablishBuildEnvironment.doBuild(EstablishBuildEnvironment.java:84)	at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:37)	at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)	at org.gradle.launcher.daemon.server.exec.StartBuildOrRespondWithBusy$1.run(StartBuildOrRespondWithBusy.java:52)	at org.gradle.launcher.daemon.server.DaemonStateCoordinator$1.run(DaemonStateCoordinator.java:297)	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:49)```
"
24060,1,828,13,0,1,mucst,0,"title:Gradle remote build cache fails with status 413: Request Entity Too Large but cache artifact did not exceed maximum artifact size description:### Expected Behavior(No warning, cache artifact is uploaded to server. If submitting cache artifact fails due to size issue then **it would be really nice to receive information what size it was trying to upload vs what was the limit**).### Current BehaviorProject builds but logs `Could not store entry 1b3d8f05ce0676b175c6e29d44abfeeb in remote build cache: Storing entry at '[build cache url]' response status 413: Request Entity Too Large`[output_censored.log](https://github.com/gradle/gradle/files/10842338/output_censored.log)### Contextsettings.gradle:```buildCache {        remote(HttpBuildCache) {            enabled = true            url = 'https://mysite.com/cache/'            useExpectContinue = true // tried with and without this setting            push = true            credentials {                username = ""user1""                password = ""xxx""            }        }}```Build cache configuration (image: gradle/build-cache-node:14.0):```version: 5cache:  accessControl:    users:      user1:        level: readwrite        password: PASS_HASH_1        note: """"      user2:        level: read        password: PASS_HASH_2        note: """"    anonymousLevel: none  freeSpaceBufferSize: 1024  maxEntryAgeInHours: 168  maxArtifactSize: 200  targetSize:    type: fixed    size: 10000uiAccess:  type: secure  username: admin  password: PASS_HASH_ADMINregistration: null```### Steps to Reproduce The same setup (configuration) works on small examples as expected. I have problem on a large, mature project which I cannot share here. Nevertheless I upload the log file for the gradle execution (build cache debug enabled) while censoring out irrelevant parts.In the log you only find one task whose caching fails. (after purging local and remote build caches)`gradlew -Dorg.gradle.caching.debug=true clean assemble --console=plain`### Your EnvironmentGradle client: 7.2Gradle build cache node: 14.0Build scan URL: N/A
"
24056,0,0,251,0,1,ghale,0,"title:Fix issue with test exception that cannot be deserialized description:Previously, a failure while deserializing an exception thrown by a test would cause the result processor proxy to blow up and fail and the test would be in an unknown state.  This changes it so that we capture failures that occur during deserialization of the exception and we replace the test exception with an exception that notifies the user that there was an exception with a given type, but we are unable to provide the full exception because it failed to deserialize when transmitting back to the build process.  In specific cases, we might be able to do something about the issue with deserialization, but in the general case, I think this is the best we can do.  We'll now at least report the test as failed and provide some minimal information to the user so that they know what exception was thrown and why we couldn't provide more.Fixes #23602
"
24042,1,0,294,0,0,EugenMayer,0,"title:latest.version does only work for single-digets  description:When using `latest.release` we happen to learn that it seems to work for only single-digits.Means it will resolve 1.3.9 as latest release, but if 1.3.10/11/12 exists, it will never select those### Expected BehaviorIt should always select the latest version, ordererd by semver### Current Behavioronly works for single digits so 1.3.[0-9] works, while 1.3.[10) does not.I did not yet happen to test this for minor/majors### Contextgradle 7.6.1### Steps to Reproduce use  `latest.release` with a package that has a 2-digits patch release for the most recent major/minor## Other odd observationsusing `1.+` will not either, only `1.3.+`### Your Environmentgradle 7.6.1java 17
"
24023,0,24023,87,0,0,lwasyl,0,"title:`--scan` is ignored if configuration cache is reused  description:As title says, if configuration cache is reused then appending `--scan` doesn't trigger scan creation.You can test with https://github.com/lwasyl/kotlin-caching/tree/c845f0ae65359b001e1e4300d5b43d02532055b5 and running```bash./gradlew assemble --configuration-cache # will populate caches./gradlew assemble --configuration-cache --scan # will not trigger build scan```output:```bash> ./gradlew assemble --configuration-cacheConfiguration cache is an incubating feature.Calculating task graph as no configuration cache is available for tasks: assemble0 problems were found storing the configuration cache.See the complete report at file:///Users/wasyl/projects/opensource/kotlin-cache/build/reports/configuration-cache/a6cr06n4lp62pod0rg4r7nxdf/dpe9dhhfayc8wktcger3gwyyv/configuration-cache-report.htmlBUILD SUCCESSFUL in 581ms3 actionable tasks: 2 executed, 1 from cacheConfiguration cache entry stored.> ./gradlew assemble --configuration-cache --scanConfiguration cache is an incubating feature.Reusing configuration cache.BUILD SUCCESSFUL in 476ms3 actionable tasks: 3 up-to-dateConfiguration cache entry reused.```
"
23997,0,24701,226,0,0,mlopatkin,0,"title:Exception thrown from ValueSource should be a configuration cache problem description:Let's have a simple `build.gradle` file:```gradleimport org.gradle.api.provider.*abstract class FailureSource implements ValueSource<String, ValueSourceParameters.None> {  String obtain() { throw new UnsupportedOperationException(""Ignore me!"") }}def provider = providers.of(FailureSource) {}try {  provider.get()} catch (Exception e) {  println(""Still alive!"")}```And run it twice with the configuration cache enabled:```gradle --configuration-cachegradle --configuration-cache```## Expected result~~Both runs succeed~~After a discussion, this is what we consider the correct behavior:- First run produces a configuration cache problem (which fails build and discards the configuration cache by default but can be turned into a warning)- If the problem was turned into a warning and the cache entry was stored in the first build, the second run discards the cache entry and re-runs the configuration.## Actual resultSecond run fails:```FAILURE: Build failed with an exception.* What went wrong:Ignore me!* Try:> Run with --info or --debug option to get more log output.> Run with --scan to get full insights.* Exception is:java.lang.UnsupportedOperationException: Ignore me!        at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)        at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)        at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)        at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)        at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)        at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:105)        at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:59)        at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)        at org.gradle.internal.classpath.intercept.CallInterceptorsSet$DecoratingCallSite.access$401(CallInterceptorsSet.java:129)        at org.gradle.internal.classpath.intercept.CallInterceptorsSet$DecoratingCallSite$4.callOriginal(CallInterceptorsSet.java:181)        at org.gradle.internal.classpath.intercept.CallInterceptorsSet$1.doIntercept(CallInterceptorsSet.java:53)        at org.gradle.internal.classpath.intercept.CallInterceptorsSet$DecoratingCallSite.callConstructor(CallInterceptorsSet.java:178)        at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)        at FailureSource.obtain(/tmp/test/1/build.gradle:4)        at FailureSource.obtain(/tmp/test/1/build.gradle)        at org.gradle.internal.Try.ofFailable(Try.java:41)        at org.gradle.api.internal.provider.DefaultValueSourceProviderFactory$LazilyObtainedValue.obtain(DefaultValueSourceProviderFactory.java:301)        at org.gradle.api.internal.provider.DefaultValueSourceProviderFactory$ValueSourceProvider.calculateOwnValue(DefaultValueSourceProviderFactory.java:256)        at org.gradle.api.internal.provider.AbstractMinimalProvider.calculateOwnPresentValue(AbstractMinimalProvider.java:73)        at org.gradle.api.internal.provider.AbstractMinimalProvider.get(AbstractMinimalProvider.java:93)        at org.gradle.api.provider.Provider$get.call(Unknown Source)        at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:47)        at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:125)        at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:130)        at build_vqyjtwlcvcfu4jw81i0pfkkd.run(/tmp/test/1/build.gradle:10)        at org.gradle.groovy.scripts.internal.DefaultScriptRunnerFactory$ScriptRunnerImpl.run(DefaultScriptRunnerFactory.java:91)        at org.gradle.configuration.DefaultScriptPluginFactory$ScriptPluginImpl.lambda$apply$0(DefaultScriptPluginFactory.java:135)        at org.gradle.configuration.ProjectScriptTarget.addConfiguration(ProjectScriptTarget.java:79)        at org.gradle.configuration.DefaultScriptPluginFactory$ScriptPluginImpl.apply(DefaultScriptPluginFactory.java:138)        at org.gradle.configuration.BuildOperationScriptPlugin$1.run(BuildOperationScriptPlugin.java:65)        at org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:29)        at org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:26)        at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)        at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)        at org.gradle.internal.operations.DefaultBuildOperationRunner.run(DefaultBuildOperationRunner.java:47)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:68)        at org.gradle.configuration.BuildOperationScriptPlugin.lambda$apply$0(BuildOperationScriptPlugin.java:62)        at org.gradle.configuration.internal.DefaultUserCodeApplicationContext.apply(DefaultUserCodeApplicationContext.java:44)        at org.gradle.configuration.BuildOperationScriptPlugin.apply(BuildOperationScriptPlugin.java:62)        at org.gradle.api.internal.project.DefaultProjectStateRegistry$ProjectStateImpl.lambda$applyToMutableState$0(DefaultProjectStateRegistry.java:388)        at org.gradle.api.internal.project.DefaultProjectStateRegistry$ProjectStateImpl.fromMutableState(DefaultProjectStateRegistry.java:406)        at org.gradle.api.internal.project.DefaultProjectStateRegistry$ProjectStateImpl.applyToMutableState(DefaultProjectStateRegistry.java:387)        at org.gradle.configuration.project.BuildScriptProcessor.execute(BuildScriptProcessor.java:42)        at org.gradle.configuration.project.BuildScriptProcessor.execute(BuildScriptProcessor.java:26)        at org.gradle.configuration.project.ConfigureActionsProjectEvaluator.evaluate(ConfigureActionsProjectEvaluator.java:35)        at org.gradle.configuration.project.LifecycleProjectEvaluator$EvaluateProject.lambda$run$0(LifecycleProjectEvaluator.java:109)        at org.gradle.api.internal.project.DefaultProjectStateRegistry$ProjectStateImpl.lambda$applyToMutableState$0(DefaultProjectStateRegistry.java:388)        at org.gradle.api.internal.project.DefaultProjectStateRegistry$ProjectStateImpl.lambda$fromMutableState$1(DefaultProjectStateRegistry.java:411)        at org.gradle.internal.work.DefaultWorkerLeaseService.withReplacedLocks(DefaultWorkerLeaseService.java:345)        at org.gradle.api.internal.project.DefaultProjectStateRegistry$ProjectStateImpl.fromMutableState(DefaultProjectStateRegistry.java:411)        at org.gradle.api.internal.project.DefaultProjectStateRegistry$ProjectStateImpl.applyToMutableState(DefaultProjectStateRegistry.java:387)        at org.gradle.configuration.project.LifecycleProjectEvaluator$EvaluateProject.run(LifecycleProjectEvaluator.java:100)        at org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:29)        at org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:26)        at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)        at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)        at org.gradle.internal.operations.DefaultBuildOperationRunner.run(DefaultBuildOperationRunner.java:47)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:68)        at org.gradle.configuration.project.LifecycleProjectEvaluator.evaluate(LifecycleProjectEvaluator.java:72)        at org.gradle.api.internal.project.DefaultProject.evaluate(DefaultProject.java:792)        at org.gradle.api.internal.project.DefaultProject.evaluate(DefaultProject.java:156)        at org.gradle.api.internal.project.ProjectLifecycleController.lambda$ensureSelfConfigured$2(ProjectLifecycleController.java:84)        at org.gradle.internal.model.StateTransitionController.lambda$doTransition$13(StateTransitionController.java:247)        at org.gradle.internal.model.StateTransitionController.doTransition(StateTransitionController.java:258)        at org.gradle.internal.model.StateTransitionController.doTransition(StateTransitionController.java:246)        at org.gradle.internal.model.StateTransitionController.lambda$maybeTransitionIfNotCurrentlyTransitioning$10(StateTransitionController.java:207)        at org.gradle.internal.work.DefaultSynchronizer.withLock(DefaultSynchronizer.java:34)        at org.gradle.internal.model.StateTransitionController.maybeTransitionIfNotCurrentlyTransitioning(StateTransitionController.java:203)        at org.gradle.api.internal.project.ProjectLifecycleController.ensureSelfConfigured(ProjectLifecycleController.java:84)        at org.gradle.api.internal.project.DefaultProjectStateRegistry$ProjectStateImpl.ensureConfigured(DefaultProjectStateRegistry.java:362)        at org.gradle.execution.TaskPathProjectEvaluator.configure(TaskPathProjectEvaluator.java:33)        at org.gradle.execution.TaskPathProjectEvaluator.configureHierarchy(TaskPathProjectEvaluator.java:47)        at org.gradle.configuration.DefaultProjectsPreparer.prepareProjects(DefaultProjectsPreparer.java:42)        at org.gradle.configuration.BuildTreePreparingProjectsPreparer.prepareProjects(BuildTreePreparingProjectsPreparer.java:64)        at org.gradle.configuration.BuildOperationFiringProjectsPreparer$ConfigureBuild.run(BuildOperationFiringProjectsPreparer.java:52)        at org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:29)        at org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:26)        at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)        at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)        at org.gradle.internal.operations.DefaultBuildOperationRunner.run(DefaultBuildOperationRunner.java:47)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:68)        at org.gradle.configuration.BuildOperationFiringProjectsPreparer.prepareProjects(BuildOperationFiringProjectsPreparer.java:40)        at org.gradle.initialization.VintageBuildModelController.lambda$prepareProjects$2(VintageBuildModelController.java:84)        at org.gradle.internal.model.StateTransitionController.lambda$doTransition$13(StateTransitionController.java:247)        at org.gradle.internal.model.StateTransitionController.doTransition(StateTransitionController.java:258)        at org.gradle.internal.model.StateTransitionController.doTransition(StateTransitionController.java:246)        at org.gradle.internal.model.StateTransitionController.lambda$transitionIfNotPreviously$11(StateTransitionController.java:221)        at org.gradle.internal.work.DefaultSynchronizer.withLock(DefaultSynchronizer.java:34)        at org.gradle.internal.model.StateTransitionController.transitionIfNotPreviously(StateTransitionController.java:217)        at org.gradle.initialization.VintageBuildModelController.prepareProjects(VintageBuildModelController.java:84)        at org.gradle.initialization.VintageBuildModelController.prepareToScheduleTasks(VintageBuildModelController.java:71)        at org.gradle.configurationcache.ConfigurationCacheAwareBuildModelController.prepareToScheduleTasks(ConfigurationCacheAwareBuildModelController.kt:49)        at org.gradle.internal.build.DefaultBuildLifecycleController.lambda$prepareToScheduleTasks$3(DefaultBuildLifecycleController.java:134)        at org.gradle.internal.model.StateTransitionController.lambda$doTransition$13(StateTransitionController.java:247)        at org.gradle.internal.model.StateTransitionController.doTransition(StateTransitionController.java:258)        at org.gradle.internal.model.StateTransitionController.doTransition(StateTransitionController.java:246)        at org.gradle.internal.model.StateTransitionController.lambda$maybeTransition$9(StateTransitionController.java:198)        at org.gradle.internal.work.DefaultSynchronizer.withLock(DefaultSynchronizer.java:34)        at org.gradle.internal.model.StateTransitionController.maybeTransition(StateTransitionController.java:194)        at org.gradle.internal.build.DefaultBuildLifecycleController.prepareToScheduleTasks(DefaultBuildLifecycleController.java:132)        at org.gradle.internal.buildtree.DefaultBuildTreeWorkPreparer.scheduleRequestedTasks(DefaultBuildTreeWorkPreparer.java:36)        at org.gradle.configurationcache.ConfigurationCacheAwareBuildTreeWorkController$scheduleAndRunRequestedTasks$executionResult$1$result$1.invoke(ConfigurationCacheAwareBuildTreeWorkController.kt:41)        at org.gradle.configurationcache.ConfigurationCacheAwareBuildTreeWorkController$scheduleAndRunRequestedTasks$executionResult$1$result$1.invoke(ConfigurationCacheAwareBuildTreeWorkController.kt:40)        at org.gradle.configurationcache.DefaultConfigurationCache$loadOrScheduleRequestedTasks$1.invoke(DefaultConfigurationCache.kt:130)        at org.gradle.configurationcache.DefaultConfigurationCache$loadOrScheduleRequestedTasks$1.invoke(DefaultConfigurationCache.kt:129)        at org.gradle.configurationcache.DefaultConfigurationCache.runWorkThatContributesToCacheEntry(DefaultConfigurationCache.kt:289)        at org.gradle.configurationcache.DefaultConfigurationCache.loadOrScheduleRequestedTasks(DefaultConfigurationCache.kt:129)        at org.gradle.configurationcache.ConfigurationCacheAwareBuildTreeWorkController$scheduleAndRunRequestedTasks$executionResult$1.apply(ConfigurationCacheAwareBuildTreeWorkController.kt:40)        at org.gradle.configurationcache.ConfigurationCacheAwareBuildTreeWorkController$scheduleAndRunRequestedTasks$executionResult$1.apply(ConfigurationCacheAwareBuildTreeWorkController.kt:39)        at org.gradle.composite.internal.DefaultIncludedBuildTaskGraph.withNewWorkGraph(DefaultIncludedBuildTaskGraph.java:109)        at org.gradle.configurationcache.ConfigurationCacheAwareBuildTreeWorkController.scheduleAndRunRequestedTasks(ConfigurationCacheAwareBuildTreeWorkController.kt:39)        at org.gradle.internal.buildtree.DefaultBuildTreeLifecycleController.lambda$scheduleAndRunTasks$1(DefaultBuildTreeLifecycleController.java:68)        at org.gradle.internal.buildtree.DefaultBuildTreeLifecycleController.lambda$runBuild$4(DefaultBuildTreeLifecycleController.java:98)        at org.gradle.internal.model.StateTransitionController.lambda$transition$6(StateTransitionController.java:177)        at org.gradle.internal.model.StateTransitionController.doTransition(StateTransitionController.java:258)        at org.gradle.internal.model.StateTransitionController.lambda$transition$7(StateTransitionController.java:177)        at org.gradle.internal.work.DefaultSynchronizer.withLock(DefaultSynchronizer.java:44)        at org.gradle.internal.model.StateTransitionController.transition(StateTransitionController.java:177)        at org.gradle.internal.buildtree.DefaultBuildTreeLifecycleController.runBuild(DefaultBuildTreeLifecycleController.java:95)        at org.gradle.internal.buildtree.DefaultBuildTreeLifecycleController.scheduleAndRunTasks(DefaultBuildTreeLifecycleController.java:68)        at org.gradle.internal.buildtree.DefaultBuildTreeLifecycleController.scheduleAndRunTasks(DefaultBuildTreeLifecycleController.java:63)        at org.gradle.tooling.internal.provider.ExecuteBuildActionRunner.run(ExecuteBuildActionRunner.java:31)        at org.gradle.launcher.exec.ChainingBuildActionRunner.run(ChainingBuildActionRunner.java:35)        at org.gradle.internal.buildtree.ProblemReportingBuildActionRunner.run(ProblemReportingBuildActionRunner.java:49)        at org.gradle.launcher.exec.BuildOutcomeReportingBuildActionRunner.run(BuildOutcomeReportingBuildActionRunner.java:65)        at org.gradle.tooling.internal.provider.FileSystemWatchingBuildActionRunner.run(FileSystemWatchingBuildActionRunner.java:140)        at org.gradle.launcher.exec.BuildCompletionNotifyingBuildActionRunner.run(BuildCompletionNotifyingBuildActionRunner.java:41)        at org.gradle.launcher.exec.RootBuildLifecycleBuildActionExecutor.lambda$execute$0(RootBuildLifecycleBuildActionExecutor.java:40)        at org.gradle.composite.internal.DefaultRootBuildState.run(DefaultRootBuildState.java:122)        at org.gradle.launcher.exec.RootBuildLifecycleBuildActionExecutor.execute(RootBuildLifecycleBuildActionExecutor.java:40)        at org.gradle.internal.buildtree.DefaultBuildTreeContext.execute(DefaultBuildTreeContext.java:40)        at org.gradle.launcher.exec.BuildTreeLifecycleBuildActionExecutor.lambda$execute$0(BuildTreeLifecycleBuildActionExecutor.java:65)        at org.gradle.internal.buildtree.BuildTreeState.run(BuildTreeState.java:53)        at org.gradle.launcher.exec.BuildTreeLifecycleBuildActionExecutor.execute(BuildTreeLifecycleBuildActionExecutor.java:65)        at org.gradle.launcher.exec.RunAsBuildOperationBuildActionExecutor$3.call(RunAsBuildOperationBuildActionExecutor.java:61)        at org.gradle.launcher.exec.RunAsBuildOperationBuildActionExecutor$3.call(RunAsBuildOperationBuildActionExecutor.java:57)        at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)        at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)        at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)        at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)        at org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)        at org.gradle.launcher.exec.RunAsBuildOperationBuildActionExecutor.execute(RunAsBuildOperationBuildActionExecutor.java:57)        at org.gradle.launcher.exec.RunAsWorkerThreadBuildActionExecutor.lambda$execute$0(RunAsWorkerThreadBuildActionExecutor.java:36)        at org.gradle.internal.work.DefaultWorkerLeaseService.withLocks(DefaultWorkerLeaseService.java:249)        at org.gradle.internal.work.DefaultWorkerLeaseService.runAsWorkerThread(DefaultWorkerLeaseService.java:109)        at org.gradle.launcher.exec.RunAsWorkerThreadBuildActionExecutor.execute(RunAsWorkerThreadBuildActionExecutor.java:36)        at org.gradle.tooling.internal.provider.continuous.ContinuousBuildActionExecutor.execute(ContinuousBuildActionExecutor.java:110)        at org.gradle.tooling.internal.provider.SubscribableBuildActionExecutor.execute(SubscribableBuildActionExecutor.java:64)        at org.gradle.internal.session.DefaultBuildSessionContext.execute(DefaultBuildSessionContext.java:46)        at org.gradle.tooling.internal.provider.BuildSessionLifecycleBuildActionExecuter$ActionImpl.apply(BuildSessionLifecycleBuildActionExecuter.java:100)        at org.gradle.tooling.internal.provider.BuildSessionLifecycleBuildActionExecuter$ActionImpl.apply(BuildSessionLifecycleBuildActionExecuter.java:88)        at org.gradle.internal.session.BuildSessionState.run(BuildSessionState.java:69)        at org.gradle.tooling.internal.provider.BuildSessionLifecycleBuildActionExecuter.execute(BuildSessionLifecycleBuildActionExecuter.java:62)        at org.gradle.tooling.internal.provider.BuildSessionLifecycleBuildActionExecuter.execute(BuildSessionLifecycleBuildActionExecuter.java:41)        at org.gradle.tooling.internal.provider.StartParamsValidatingActionExecuter.execute(StartParamsValidatingActionExecuter.java:63)        at org.gradle.tooling.internal.provider.StartParamsValidatingActionExecuter.execute(StartParamsValidatingActionExecuter.java:31)        at org.gradle.tooling.internal.provider.SessionFailureReportingActionExecuter.execute(SessionFailureReportingActionExecuter.java:50)        at org.gradle.tooling.internal.provider.SessionFailureReportingActionExecuter.execute(SessionFailureReportingActionExecuter.java:38)        at org.gradle.tooling.internal.provider.SetupLoggingActionExecuter.execute(SetupLoggingActionExecuter.java:47)        at org.gradle.tooling.internal.provider.SetupLoggingActionExecuter.execute(SetupLoggingActionExecuter.java:31)        at org.gradle.launcher.daemon.server.exec.ExecuteBuild.doBuild(ExecuteBuild.java:65)        at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:37)        at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)        at org.gradle.launcher.daemon.server.exec.WatchForDisconnection.execute(WatchForDisconnection.java:39)        at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)        at org.gradle.launcher.daemon.server.exec.ResetDeprecationLogger.execute(ResetDeprecationLogger.java:29)        at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)        at org.gradle.launcher.daemon.server.exec.RequestStopIfSingleUsedDaemon.execute(RequestStopIfSingleUsedDaemon.java:35)        at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)        at org.gradle.launcher.daemon.server.exec.ForwardClientInput$2.create(ForwardClientInput.java:78)        at org.gradle.launcher.daemon.server.exec.ForwardClientInput$2.create(ForwardClientInput.java:75)        at org.gradle.util.internal.Swapper.swap(Swapper.java:38)        at org.gradle.launcher.daemon.server.exec.ForwardClientInput.execute(ForwardClientInput.java:75)        at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)        at org.gradle.launcher.daemon.server.exec.LogAndCheckHealth.execute(LogAndCheckHealth.java:64)        at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)        at org.gradle.launcher.daemon.server.exec.LogToClient.doBuild(LogToClient.java:63)        at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:37)        at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)        at org.gradle.launcher.daemon.server.exec.EstablishBuildEnvironment.doBuild(EstablishBuildEnvironment.java:84)        at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:37)        at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)        at org.gradle.launcher.daemon.server.exec.StartBuildOrRespondWithBusy$1.run(StartBuildOrRespondWithBusy.java:52)        at org.gradle.launcher.daemon.server.DaemonStateCoordinator$1.run(DaemonStateCoordinator.java:297)        at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)        at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:49)        at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)        at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)        at java.base/java.lang.Thread.run(Thread.java:829)```## ContextThere are many ways in which Gradle can deal with broken ValueSources, but the safest so far is to discard the cache and re-run the configuration phase. Moreover, as we now that the ValueSource had thrown at the time of writing the fingerprint, we can discard the cache immediately, as we know that the fingerprint will never match.
"
23974,1,420,111,0,0,hkupty,0,"title:Gradle 8.0 log volume eats up disk space quickly description:I noted recently by running a few tests and I noticed that gradle is logging a substantial amount if information.While I think it is ok, in a span of just a few days from the release that I've been using it, it seems to have consumed ~570GB of disk space with the logs.It can be that a) the arch linux package is being shipped with a very high debug level on (say trace) and/or b) gradle is lacking some cleanup/log rollout feature in the ~/.gradle/daemon/8.0.1 folder which makes this an ever increasing file.### Expected BehaviorGradle cleans up after old logs### Current Behaviorgradle logs @ `~/.gradle/daemon/8.0.1/` are consuming disk space reasonably fast.### ContextI got some notifications from intellij after running a few iteractions of JMH tests that my disk space was empty.Given the jmh tests were not necessarily involving disk, I felt there was a bug in my app but, after investigating further I noticed the folder that was using the more disk space was located in my home directory, which turned out to be `~/.gradle`.### Steps to Reproduce Not really sure if there's anything specific for reproducing my exact issue - consuming 570gb in a few days worth of test. But I can say that I've been running gradle continuously for my tests for the past days on my arch linux machine. ### Your Environmentarch linux, fairly updated;```------------------------------------------------------------Gradle 8.0.1------------------------------------------------------------Build time:   2023-02-17 20:37:16 UTCRevision:     <unknown>Kotlin:       1.8.10Groovy:       3.0.13Ant:          Apache Ant(TM) version 1.10.11 compiled on July 10 2021JVM:          17.0.6 (Oracle Corporation 17.0.6+10)OS:           Linux 6.1.11-arch1-1 amd64```Build scan URL: not sure if relevant, but I can provide one if we decide that it is.
"
23955,0,110,256,0,0,eskatos,1,"title:The `kotlin-dsl` plugin using `afterEvaluate {}` to configure `KotlinCompile` tasks prevents further configuring them description:### Expected BehaviorThe `kotlin-dsl` plugin doesn't use `afterEvaluate {}` to configure `KotlinCompile.compilerOptions` and one can customize `KotlinCompile` configuration.### Current BehaviorThe `kotlin-dsl` plugin uses `afterEvaluate {}` to configure `KotlinCompile.compilerOptions`, this prevents configuring `KotlinCompile.compilerOptions` further in order to customize `KotlinCompile` configuration.### WorkaroundUsing `afterEvaluate {}` after the `kotlin-dsl` plugin `afterEvaluate {}`.### ContextThis is, for example, useful to set the Kotlin language level to a higher one than the `kotlin-dsl` default in order to leverage new language features or libraries that require them in build logic. Code using those new features can't be directly used from standalone build scripts but as long as a plugin public API doesn't expose them the plugin can run.Before Kotlin 1.8 the `kotlin-dsl` was forced to resort to `afterEvaluate {}` because the `KotlinCompile` tasks did not provide lazy configuration properties. It is now possible to remove the need for `afterEvaluate {}`.### Steps to Reproduce Reproducer available in https://github.com/eskatos/issue-reproducers/tree/main/gradle/issue-23955```git clone https://github.com/eskatos/issue-reproducers.gitcd gradle/issue-23955./gradlew compileKotlin```
"
23949,0,0,218,0,0,ljacomet,1,"title:Exclude rule merging: missing optimization description:When Gradle process dependency excludes, there is a case we do not simplify:* Excluding `org:foo` and modules named `bar` or `foo` should result in excluding `org:foo` only
"
23944,0,0,251,0,1,ghale,0,"title:Fix physical memory monitoring in constrained Linux docker containers description:Supersedes https://github.com/gradle/gradle/pull/17628
"
23918,0,167,38,0,0,jgrey4296,0,"title:build init doesn't respect --no-incubating description:Running `gradle init --type basic --dsl kotlin --project-name testProject` insists on user input asking about incubating apis. Passing `--incubating` can silence it, but `--no-incubating` errors.### Expected BehaviorI expected Gradle to either accept `--no-incubating` as a cli option, or it not ask for user input when specifying all options.The [documenation](https://docs.gradle.org/7.5.1/userguide/command_line_interface.html) says ""Options that enable behavior have long-form options with inverses specified with --no-."" This is not the case.### Current BehaviorWhen *not* passing `--incubating`, Gradle waits for stdin to answer the incubating question.When passing `--no-incubating`, Gradle Errors with:```FAILURE: Build failed with an exception.* What went wrong:Problem configuring task :init from command line.> Unknown command-line option '--no-incubating'.```### ContextThis behaviour means either I can't create a gradle project as a non-interactive task, or I'm forced to enable incubating features. ### Steps to Reproduce Run variations of:`gradle init --type basic --dsl kotlin --project-name testProject`with `--incubating` and `--no-incubating` included, and as an external process.### Your EnvironmentMac OS  10.15.7, tested with Gradle 7.5.1, 7.6 and 8.0
"
23910,0,0,218,0,0,ljacomet,0,"title:Backport trusting only full GPG keys in dependency verification [Backport 7.6.1] description:Backport #23667 
"
23891,1,0,3,0,0,bropyro,0,"title:Issue when using withJavadocJar() in java task description:Hi, I tried to update from gradle 7.6 to gradle 8.0 in an internal library and my build failed without really detailed information.After several tries with uncommenting several parts of my build.gradle I could reduce the issue to using withJavadocJar() in the java task definition. My java task definition currently looks like thisjava {    toolchain {        languageVersion = JavaLanguageVersion.of(17)    }    withJavadocJar()    withSourcesJar()}While this is working with gradle 7.6 it does fail with gradle 8.0 but works again as soon as I uncomment the withJavadocJar() line.### Expected BehaviorThe build is running without issues### Current BehaviorI get a sadly not really helpful error:FAILURE: Build failed with an exception.* What went wrong:'void org.gradle.api.internal.file.UnionFileTree.<init>(java.lang.String, java.util.Collection)'### ContextCurrently no update to gradle 8.0 is possible. This is not a big deal right now as everything is working fine with 7.6 but I wanted to clarify if there is an issue in the new version### Steps to Reproduce You just need to take any project and add withJavadocJar() in the java task definition. Maybe I did something wrong but it worked like this with 7.6 and fails now
"
23885,0,0,62,0,0,ALikhachev,0,"title:Configuration cache failure when tasks are excluded by path description:If a project with Gradle 8.0 uses configuration cache and either excludes some tasks programatically or via CLI by providing a path, the build fails with either> Project with path ':' not found in build 'buildSrc'or> Cannot locate excluded tasks that match [requested path] as project 闂傚倷鑳堕崑銊╁磿閺屻儯鈧懘鎯囬弲淇筳ect of request path]闂?not found in root project 闂傚倷鑳堕崑銊╁磿閺屻儯鈧懘鎯囧鐖媡 project name]闂?### Steps to Reproduce https://github.com/ALikhachev/excluded-tasks-configuration-cache-reproThe repo contains a README file.It shows how to reproduce the first failure. If you remove the `buildSrc` module, it will fail with the second failure.Excluding tasks by name, e.g. `./gradlew -x jar` works fine.
"
23880,0,0,251,0,1,ghale,0,"title:Test against CodeNarc versions supported by the toolchain JDK description:Previously, this tested against the versions suported by the build JDK, which might have worked due to happy coincidence, but could break if the test fixture selected a different JDK to use for the toolchain.
"
23867,1,22380,15,0,0,agracy2246,0,"title:Seems like Gradle isn't loading necessary jacoco classes description:Application has all tests passing, but failing when JacocoReport tries to do its thing. Using 6.9.3.```plugins {	id 'java'	id 'application'	id 'jacoco'}``````dependencies {	implementation 'com.google.code.gson:gson:2.10.1'	implementation 'net.bytebuddy:byte-buddy:1.11.13'	testImplementation 'org.junit.platform:junit-platform-console-standalone:1.9.2'	testImplementation 'org.mockito:mockito-inline:3.12.4'	testImplementation 'org.mockito:mockito-core:3.12.4' 	testImplementation 'org.objenesis:objenesis:3.2'	testImplementation 'net.bytebuddy:byte-buddy-agent:1.11.13'}``````jacoco {    toolVersion = '0.8.6'}``````jacocoTestReport {	dependsOn test	reports {		xml.required = true		html.required = true	}}``````test {	// some project specific env variables omitted	finalizedBy jacocoTestReport}```I get the error:```* Exception is:org.gradle.api.tasks.TaskExecutionException: Execution failed for task ':jacocoTestReport'.        at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.lambda$executeIfValid$3(ExecuteActionsTaskExecuter.java:186)        at org.gradle.internal.Try$Failure.ifSuccessfulOrElse(Try.java:268)        at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeIfValid(ExecuteActionsTaskExecuter.java:184)        at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.execute(ExecuteActionsTaskExecuter.java:173)        at org.gradle.api.internal.tasks.execution.CleanupStaleOutputsExecuter.execute(CleanupStaleOutputsExecuter.java:109)        at org.gradle.api.internal.tasks.execution.FinalizePropertiesTaskExecuter.execute(FinalizePropertiesTaskExecuter.java:46)        at org.gradle.api.internal.tasks.execution.ResolveTaskExecutionModeExecuter.execute(ResolveTaskExecutionModeExecuter.java:62)        at org.gradle.api.internal.tasks.execution.SkipTaskWithNoActionsExecuter.execute(SkipTaskWithNoActionsExecuter.java:57)        at org.gradle.api.internal.tasks.execution.SkipOnlyIfTaskExecuter.execute(SkipOnlyIfTaskExecuter.java:56)        at org.gradle.api.internal.tasks.execution.CatchExceptionTaskExecuter.execute(CatchExceptionTaskExecuter.java:36)        at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.executeTask(EventFiringTaskExecuter.java:77)        at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.call(EventFiringTaskExecuter.java:55)        at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.call(EventFiringTaskExecuter.java:52)        at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:200)        at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:195)        at org.gradle.internal.operations.DefaultBuildOperationRunner$3.execute(DefaultBuildOperationRunner.java:75)        at org.gradle.internal.operations.DefaultBuildOperationRunner$3.execute(DefaultBuildOperationRunner.java:68)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:153)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:68)        at org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:62)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.lambda$call$2(DefaultBuildOperationExecutor.java:76)        at org.gradle.internal.operations.UnmanagedBuildOperationWrapper.callWithUnmanagedSupport(UnmanagedBuildOperationWrapper.java:54)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:76)        at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter.execute(EventFiringTaskExecuter.java:52)        at org.gradle.execution.plan.LocalTaskNodeExecutor.execute(LocalTaskNodeExecutor.java:41)        at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$InvokeNodeExecutorsAction.execute(DefaultTaskExecutionGraph.java:411)        at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$InvokeNodeExecutorsAction.execute(DefaultTaskExecutionGraph.java:398)        at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$BuildOperationAwareExecutionAction.execute(DefaultTaskExecutionGraph.java:391)        at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$BuildOperationAwareExecutionAction.execute(DefaultTaskExecutionGraph.java:377)        at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.lambda$run$0(DefaultPlanExecutor.java:127)        at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.execute(DefaultPlanExecutor.java:191)        at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.executeNextNode(DefaultPlanExecutor.java:182)        at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.run(DefaultPlanExecutor.java:124)        at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)        at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)        at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)Caused by: java.lang.NoClassDefFoundError: org/jacoco/report/IReportGroupVisitor        at org.apache.tools.ant.ComponentHelper.checkTaskClass(ComponentHelper.java:377)        at org.apache.tools.ant.ComponentHelper.addTaskDefinition(ComponentHelper.java:342)        at org.apache.tools.ant.Project.addTaskDefinition(Project.java:984)        at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)        at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)        at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)        at org.gradle.internal.metaobject.BeanDynamicObject$MetaClassAdapter.invokeMethod(BeanDynamicObject.java:484)        at org.gradle.internal.metaobject.BeanDynamicObject.tryInvokeMethod(BeanDynamicObject.java:196)        at org.gradle.internal.metaobject.AbstractDynamicObject.invokeMethod(AbstractDynamicObject.java:163)        at org.gradle.api.internal.project.antbuilder.AntBuilderDelegate.addTaskDefinition(AntBuilderDelegate.java:82)        at org.gradle.api.internal.project.antbuilder.AntBuilderDelegate.taskdef(AntBuilderDelegate.java:56)        at org.gradle.api.internal.project.antbuilder.AntBuilderDelegate.createNode(AntBuilderDelegate.java:97)        at org.gradle.internal.jacoco.AbstractAntJacocoReport$1.doCall(AbstractAntJacocoReport.java:42)        at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)        at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)        at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)        at org.gradle.util.ClosureBackedAction.execute(ClosureBackedAction.java:71)        at org.gradle.util.ClosureBackedAction.execute(ClosureBackedAction.java:52)        at org.gradle.api.internal.project.antbuilder.DefaultIsolatedAntBuilder$2.execute(DefaultIsolatedAntBuilder.java:154)        at org.gradle.api.internal.project.antbuilder.DefaultIsolatedAntBuilder$2.execute(DefaultIsolatedAntBuilder.java:136)        at org.gradle.api.internal.project.antbuilder.ClassPathToClassLoaderCache.withCachedClassLoader(ClassPathToClassLoaderCache.java:135)        at org.gradle.api.internal.project.antbuilder.DefaultIsolatedAntBuilder.execute(DefaultIsolatedAntBuilder.java:130)        at org.gradle.internal.jacoco.AbstractAntJacocoReport.configureAntReportTask(AbstractAntJacocoReport.java:38)        at org.gradle.internal.jacoco.AntJacocoReport.execute(AntJacocoReport.java:35)        at org.gradle.testing.jacoco.tasks.JacocoReport.generate(JacocoReport.java:93)        at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)        at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)        at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)        at org.gradle.internal.reflect.JavaMethod.invoke(JavaMethod.java:104)        at org.gradle.api.internal.project.taskfactory.StandardTaskAction.doExecute(StandardTaskAction.java:58)        at org.gradle.api.internal.project.taskfactory.StandardTaskAction.execute(StandardTaskAction.java:51)        at org.gradle.api.internal.project.taskfactory.StandardTaskAction.execute(StandardTaskAction.java:29)        at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter$2.run(ExecuteActionsTaskExecuter.java:494)        at org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:29)        at org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:26)        at org.gradle.internal.operations.DefaultBuildOperationRunner$3.execute(DefaultBuildOperationRunner.java:75)        at org.gradle.internal.operations.DefaultBuildOperationRunner$3.execute(DefaultBuildOperationRunner.java:68)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:153)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:68)        at org.gradle.internal.operations.DefaultBuildOperationRunner.run(DefaultBuildOperationRunner.java:56)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.lambda$run$1(DefaultBuildOperationExecutor.java:71)        at org.gradle.internal.operations.UnmanagedBuildOperationWrapper.runWithUnmanagedSupport(UnmanagedBuildOperationWrapper.java:45)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:71)        at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeAction(ExecuteActionsTaskExecuter.java:479)        at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeActions(ExecuteActionsTaskExecuter.java:462)        at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.access$400(ExecuteActionsTaskExecuter.java:105)        at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter$TaskExecution.executeWithPreviousOutputFiles(ExecuteActionsTaskExecuter.java:273)        at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter$TaskExecution.execute(ExecuteActionsTaskExecuter.java:251)        at org.gradle.internal.execution.steps.ExecuteStep.lambda$executeOperation$1(ExecuteStep.java:66)        at org.gradle.internal.execution.steps.ExecuteStep.executeOperation(ExecuteStep.java:66)        at org.gradle.internal.execution.steps.ExecuteStep.access$000(ExecuteStep.java:34)        at org.gradle.internal.execution.steps.ExecuteStep$1.call(ExecuteStep.java:47)        at org.gradle.internal.execution.steps.ExecuteStep$1.call(ExecuteStep.java:44)        at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:200)        at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:195)        at org.gradle.internal.operations.DefaultBuildOperationRunner$3.execute(DefaultBuildOperationRunner.java:75)        at org.gradle.internal.operations.DefaultBuildOperationRunner$3.execute(DefaultBuildOperationRunner.java:68)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:153)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:68)        at org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:62)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.lambda$call$2(DefaultBuildOperationExecutor.java:76)        at org.gradle.internal.operations.UnmanagedBuildOperationWrapper.callWithUnmanagedSupport(UnmanagedBuildOperationWrapper.java:54)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:76)        at org.gradle.internal.execution.steps.ExecuteStep.execute(ExecuteStep.java:44)        at org.gradle.internal.execution.steps.ExecuteStep.execute(ExecuteStep.java:34)        at org.gradle.internal.execution.steps.RemovePreviousOutputsStep.execute(RemovePreviousOutputsStep.java:72)        at org.gradle.internal.execution.steps.RemovePreviousOutputsStep.execute(RemovePreviousOutputsStep.java:42)        at org.gradle.internal.execution.steps.ResolveInputChangesStep.execute(ResolveInputChangesStep.java:53)        at org.gradle.internal.execution.steps.ResolveInputChangesStep.execute(ResolveInputChangesStep.java:39)        at org.gradle.internal.execution.steps.CancelExecutionStep.execute(CancelExecutionStep.java:44)        at org.gradle.internal.execution.steps.TimeoutStep.executeWithoutTimeout(TimeoutStep.java:77)        at org.gradle.internal.execution.steps.TimeoutStep.execute(TimeoutStep.java:58)        at org.gradle.internal.execution.steps.CreateOutputsStep.execute(CreateOutputsStep.java:54)        at org.gradle.internal.execution.steps.CreateOutputsStep.execute(CreateOutputsStep.java:32)        at org.gradle.internal.execution.steps.CaptureStateAfterExecutionStep.execute(CaptureStateAfterExecutionStep.java:57)        at org.gradle.internal.execution.steps.CaptureStateAfterExecutionStep.execute(CaptureStateAfterExecutionStep.java:38)        at org.gradle.internal.execution.steps.BroadcastChangingOutputsStep.execute(BroadcastChangingOutputsStep.java:63)        at org.gradle.internal.execution.steps.BroadcastChangingOutputsStep.execute(BroadcastChangingOutputsStep.java:30)        at org.gradle.internal.execution.steps.BuildCacheStep.executeWithoutCache(BuildCacheStep.java:176)        at org.gradle.internal.execution.steps.BuildCacheStep.execute(BuildCacheStep.java:76)        at org.gradle.internal.execution.steps.BuildCacheStep.execute(BuildCacheStep.java:47)        at org.gradle.internal.execution.steps.StoreExecutionStateStep.execute(StoreExecutionStateStep.java:43)        at org.gradle.internal.execution.steps.StoreExecutionStateStep.execute(StoreExecutionStateStep.java:32)        at org.gradle.internal.execution.steps.RecordOutputsStep.execute(RecordOutputsStep.java:39)        at org.gradle.internal.execution.steps.RecordOutputsStep.execute(RecordOutputsStep.java:25)        at org.gradle.internal.execution.steps.SkipUpToDateStep.executeBecause(SkipUpToDateStep.java:102)        at org.gradle.internal.execution.steps.SkipUpToDateStep.lambda$execute$0(SkipUpToDateStep.java:95)        at org.gradle.internal.execution.steps.SkipUpToDateStep.execute(SkipUpToDateStep.java:55)        at org.gradle.internal.execution.steps.SkipUpToDateStep.execute(SkipUpToDateStep.java:39)        at org.gradle.internal.execution.steps.ResolveChangesStep.execute(ResolveChangesStep.java:83)        at org.gradle.internal.execution.steps.ResolveChangesStep.execute(ResolveChangesStep.java:44)        at org.gradle.internal.execution.steps.legacy.MarkSnapshottingInputsFinishedStep.execute(MarkSnapshottingInputsFinishedStep.java:37)        at org.gradle.internal.execution.steps.legacy.MarkSnapshottingInputsFinishedStep.execute(MarkSnapshottingInputsFinishedStep.java:27)        at org.gradle.internal.execution.steps.ResolveCachingStateStep.execute(ResolveCachingStateStep.java:96)        at org.gradle.internal.execution.steps.ResolveCachingStateStep.execute(ResolveCachingStateStep.java:52)        at org.gradle.internal.execution.steps.CaptureStateBeforeExecutionStep.execute(CaptureStateBeforeExecutionStep.java:83)        at org.gradle.internal.execution.steps.CaptureStateBeforeExecutionStep.execute(CaptureStateBeforeExecutionStep.java:54)        at org.gradle.internal.execution.steps.ValidateStep.execute(ValidateStep.java:74)        at org.gradle.internal.execution.steps.SkipEmptyWorkStep.lambda$execute$2(SkipEmptyWorkStep.java:88)        at org.gradle.internal.execution.steps.SkipEmptyWorkStep.execute(SkipEmptyWorkStep.java:88)        at org.gradle.internal.execution.steps.SkipEmptyWorkStep.execute(SkipEmptyWorkStep.java:34)        at org.gradle.internal.execution.steps.legacy.MarkSnapshottingInputsStartedStep.execute(MarkSnapshottingInputsStartedStep.java:38)        at org.gradle.internal.execution.steps.LoadExecutionStateStep.execute(LoadExecutionStateStep.java:46)        at org.gradle.internal.execution.steps.LoadExecutionStateStep.execute(LoadExecutionStateStep.java:34)        at org.gradle.internal.execution.steps.AssignWorkspaceStep.lambda$execute$0(AssignWorkspaceStep.java:43)        at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter$TaskExecution$3.withWorkspace(ExecuteActionsTaskExecuter.java:286)        at org.gradle.internal.execution.steps.AssignWorkspaceStep.execute(AssignWorkspaceStep.java:43)        at org.gradle.internal.execution.steps.AssignWorkspaceStep.execute(AssignWorkspaceStep.java:33)        at org.gradle.internal.execution.steps.IdentityCacheStep.execute(IdentityCacheStep.java:40)        at org.gradle.internal.execution.steps.IdentityCacheStep.execute(IdentityCacheStep.java:30)        at org.gradle.internal.execution.steps.IdentifyStep.execute(IdentifyStep.java:54)        at org.gradle.internal.execution.steps.IdentifyStep.execute(IdentifyStep.java:40)        at org.gradle.internal.execution.impl.DefaultExecutionEngine.execute(DefaultExecutionEngine.java:41)        at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.lambda$executeIfValid$1(ExecuteActionsTaskExecuter.java:183)        at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeIfValid(ExecuteActionsTaskExecuter.java:183)        at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.execute(ExecuteActionsTaskExecuter.java:173)        at org.gradle.api.internal.tasks.execution.CleanupStaleOutputsExecuter.execute(CleanupStaleOutputsExecuter.java:109)        at org.gradle.api.internal.tasks.execution.FinalizePropertiesTaskExecuter.execute(FinalizePropertiesTaskExecuter.java:46)        at org.gradle.api.internal.tasks.execution.ResolveTaskExecutionModeExecuter.execute(ResolveTaskExecutionModeExecuter.java:62)        at org.gradle.api.internal.tasks.execution.SkipTaskWithNoActionsExecuter.execute(SkipTaskWithNoActionsExecuter.java:57)        at org.gradle.api.internal.tasks.execution.SkipOnlyIfTaskExecuter.execute(SkipOnlyIfTaskExecuter.java:56)        at org.gradle.api.internal.tasks.execution.CatchExceptionTaskExecuter.execute(CatchExceptionTaskExecuter.java:36)        at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.executeTask(EventFiringTaskExecuter.java:77)        at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.call(EventFiringTaskExecuter.java:55)        at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.call(EventFiringTaskExecuter.java:52)        at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:200)        at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:195)        at org.gradle.internal.operations.DefaultBuildOperationRunner$3.execute(DefaultBuildOperationRunner.java:75)        at org.gradle.internal.operations.DefaultBuildOperationRunner$3.execute(DefaultBuildOperationRunner.java:68)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:153)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:68)        at org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:62)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.lambda$call$2(DefaultBuildOperationExecutor.java:76)        at org.gradle.internal.operations.UnmanagedBuildOperationWrapper.callWithUnmanagedSupport(UnmanagedBuildOperationWrapper.java:54)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:76)        at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter.execute(EventFiringTaskExecuter.java:52)        at org.gradle.execution.plan.LocalTaskNodeExecutor.execute(LocalTaskNodeExecutor.java:41)        at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$InvokeNodeExecutorsAction.execute(DefaultTaskExecutionGraph.java:411)        at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$InvokeNodeExecutorsAction.execute(DefaultTaskExecutionGraph.java:398)        at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$BuildOperationAwareExecutionAction.execute(DefaultTaskExecutionGraph.java:391)        at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$BuildOperationAwareExecutionAction.execute(DefaultTaskExecutionGraph.java:377)        at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.lambda$run$0(DefaultPlanExecutor.java:127)        at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.execute(DefaultPlanExecutor.java:191)        at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.executeNextNode(DefaultPlanExecutor.java:182)        at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.run(DefaultPlanExecutor.java:124)        at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)        at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)        at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)Caused by: java.lang.ClassNotFoundException: org.jacoco.report.IReportGroupVisitor```
"
23861,0,0,281,0,0,alllex,1,"title:Anchor around example captions in the docs includes formatting tags verbatim description:As a side effect of making [examples in the docs linkable](https://github.com/gradle/gradle/pull/23389), the processing of the formatting within the example headers stopped working.Problematic example:https://docs.gradle.org/nightly/userguide/build_services.html#ex-build-service-implementing-operationcompletionlistener![image](https://user-images.githubusercontent.com/2759152/218049170-e0ffcfea-968c-44cb-b2f1-4b92fb82b185.png)
"
23843,1,0,38,0,0,zz541843,0,"title:gradle check ignores the local jdk description:https://docs.gradle.org/current/userguide/toolchains.html#sec:auto_detectionThis document says that gradle can read idea  jdk, but run gradle check still download adoptopenjdk, I then configured JAVA_HOME and ran gradle check again to read this jdk version.How can I configure gradle so that it recognizes idea jdk ?
"
23802,1,1290,1,0,0,amichne,0,"title:Corrupted configuration cache is persisted, resulting in guaranteed failure (until explicitly invalidated) description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues--><!--- Provide a brief summary of the issue in the title above -->In some scenarios, when the configuration cache is corrupted, this corrupted configuration is persisted to the cache instead of being cleared.### Expected Behavior<!--- Tell us what should happen -->This corrupted configuration should be cleared (or, if not possible to do partial evictions, the cache should be invalidated). The cache should be rebuilt on the next use, such that any errors due to configuration cache corruption are no longer observed (assuming a well-formed build script).### Current Behavior<!--- Tell us what happens instead of the expected behavior -->The corrupted configuration cache will be loaded upon even invocation of `./gradlew build`, resulting in failures in all futures attempts (until the cache is manually invalidated).### Context<!--- How has this issue affected you? What are you trying to accomplish? --><!--- Providing context helps us come up with a solution that is most useful in the real world -->It took quite a bit of time to understand what the issue was, due to only a minimal amount of information being returned, combined with a _much much_ faster failure than I had ever observed prior for this project.### Steps to Reproduce <!---Provide a self-contained example project as an attached archive or a Github project.You can use the following template with a Gradle GitHub action set up to showcase your problem: https://github.com/gradle/gradle-issue-reproducerIn the rare cases where this is infeasible, we will also accept a detailed set of instructions.-->### Your Environment<!--- Include as many relevant details about the environment you experienced the bug in --><!--- A build scan https://scans.gradle.com/get-started is ideal -->Build scan URL: (cannot link, will provided all relevant information below)Gradle 7.6#### Local Console Output```Starting a Gradle Daemon (subsequent builds will be faster)Configuration cache is an incubating feature.Reusing configuration cache.FAILURE: Build failed with an exception.* What went wrong:org.gradle.internal.operations.BuildOperationInvocationException (no error message)> java.io.EOFException (no error message)* Try:> Run with --stacktrace option to get the stack trace.> Run with --info or --debug option to get more log output.* Get more help at https://help.gradle.orgCONFIGURE FAILED in 5sPublishing build scan...https://gradle.***.com/s/***Configuration cache entry reused.```#### Gradle Scan ""Failure"" tab output```Failure 1 of 1 (No message provided)(No message provided)> Buffer underflow.Exceptionorg.gradle.internal.operations.BuildOperationInvocationException: (No message provided)	  > at org.gradle.internal.operations.DefaultBuildOperationRunner.throwAsBuildOperationInvocationException(DefaultBuildOperationRunner.java:192)...    Caused by: java.io.EOFException: (No message provided)     > at org.gradle.internal.serialize.kryo.KryoBackedDecoder.maybeEndOfStream(KryoBackedDecoder.java:80)...      Caused by: com.esotericsoftware.kryo.KryoException: Buffer underflow.	      > at com.esotericsoftware.kryo.io.Input.require(Input.java:181)	...```### Notes* I believe this corruption only existed in the `./gradle build` cache, as I was able to run a module-specific task without any issues. * Once the cache was corrupted for `./gradlew build`, I observed failures 100% of the time, until I manually invalidated the cache via `rm -rf .gradle/configuration-cache`.* For any failing commit, I was able to execute `./gradlew build` on my CICD pipeline, with zero failures observed.
"
23785,0,976,300,0,1,SimonMarquis,0,"title:Gradle generates broken links in logs description:<!--- Provide a brief summary of the issue in the title above -->### Current BehaviorWhen running out of memory, Gradle outputs the following log message:```The Daemon will expire after the build after running out of JVM Metaspace.The project memory settings are likely not configured or are configured to an insufficient value.The daemon will restart for the next build, which may increase subsequent build times.These settings can be adjusted by setting 'org.gradle.jvmargs' in 'gradle.properties'.The currently configured max heap space is '512 MiB' and the configured max metaspace is '256 MiB'.For more information on how to set these values, visit the user guide at https://docs.gradle.org/8.0-rc-2/userguide/build_environment.html#configuring_jvm_memoryTo disable this warning, set 'org.gradle.daemon.performance.disable-logging=true'.Daemon will be stopped at the end of the build after running out of JVM Metaspace```The provided link is not right, and should be changed to```diff-https://docs.gradle.org/8.0-rc-2/userguide/build_environment.html#configuring_jvm_memory+https://docs.gradle.org/8.0-rc-2/userguide/build_environment.html#sec:configuring_jvm_memory```### Steps to Reproduce Not a real ""steps to reproduce"" but here is a link to a GitHub Actions job that triggers it: https://github.com/SimonMarquis/SealedObjectInstances/actions/runs/4097340460/jobs/7065637485#step:4:156I guess we could also reduce the java allowed memory amount to something very small to trigger it every time.### Your Environment<!--- Include as many relevant details about the environment you experienced the bug in --><!--- A build scan https://scans.gradle.com/get-started is ideal -->Build scan URL: not relevant, but here it is https://scans.gradle.com/s/ylkb4lwsl6u3y### SolutionFix broken URLs used with `DocumentationRegistry.getDocumentationFor(String id, String section)`.
"
23766,0,1603,263,0,0,abstratt,1,"title:gradle :help produces wrong output on warm configuration cache description:`gradle help` produces different outputs between cold and warm configuration caches on a project with a build.gradle file but no settings.gradle file - in the warm run, it believes the project does not contain a valid Gradle build.```mkdir foocd footouch build.gradlegradle :help --configuration-cacheStarting a Gradle Daemon (subsequent builds will be faster)Configuration cache is an incubating feature.Calculating task graph as no configuration cache is available for tasks: :help> Task :helpWelcome to Gradle 7.6.To run a build, run gradle <task> ...To see a list of available tasks, run gradle tasksTo see more detail about a task, run gradle help --task <task>To see a list of command-line options, run gradle --helpFor more detail on using Gradle, see https://docs.gradle.org/7.6/userguide/command_line_interface.htmlFor troubleshooting, visit https://help.gradle.orgBUILD SUCCESSFUL in 2s1 actionable task: 1 executedConfiguration cache entry stored.闂? foo gradle :help --configuration-cacheConfiguration cache is an incubating feature.Reusing configuration cache.> Task :helpWelcome to Gradle 7.6.Directory '/private/tmp/foo' does not contain a Gradle build.To create a new build in this directory, run gradle initFor more detail on the 'init' task, see https://docs.gradle.org/7.6/userguide/build_init_plugin.htmlFor more detail on creating a Gradle build, see https://docs.gradle.org/7.6/userguide/tutorial_using_tasks.htmlTo see a list of command-line options, run gradle --helpFor more detail on using Gradle, see https://docs.gradle.org/7.6/userguide/command_line_interface.htmlFor troubleshooting, visit https://help.gradle.orgBUILD SUCCESSFUL in 367ms1 actionable task: 1 executedConfiguration cache entry reused.```
"
23741,1,576,13,0,0,ArtanBerisha1,0,"title:Failed to create MD5 hash for file content description:Out of no where gradle started to fail for a specific Android Studio project of mine (on Ubuntu 20.04.5 LTS), with the current error:```\`\* What went wrong:There was a failure while populating the build operation queue: Failed to create MD5 hash for file content.Failed to create MD5 hash for file content.Input/output error* Try:  Run with --info or --debug option to get more log output. Run with --scan to get full insights.* Exception is:  com.intellij.openapi.externalSystem.model.ExternalSystemException: There was a failure while populating the build operation queue: Failed to create MD5 hash for file content.  Failed to create MD5 hash for file content.  Input/output error\````I searched but couldn't find anything useful, I already have tried:1. Invalidate caches and restart on Android Studio2. I tried to clean gradle, ./gradlew clean and rebuild the project3. Restarted my laptop4. Deleted the repository and cloned again (after rebooting device)5. Changed the gradle version ( current one is 7.0.2 )6. Deleted .gradle/ and .idea/ files and build again7. Updated Android Studio to Android Studio Electric Eel | 2022.1.18. With other project it working, but when I tried with this specific project its failing, I tried to give all permissions to this folder with the command: sudo chmod -R 777 /Projects/MyProjectchecked the official discuss.gradle.org, there were some similar issues but with no reply. 
"
23731,0,0,240,0,1,donat,1,"title:Fix behavior for nested DeprecationLogger.whileDisabled invocations description:All deprecation warnings should be suppressed in the code executed with  DeprecationLogger.whileDisabled(). However, the current implementation does not handle nested whileDisabled() calls. So, if a build logic has the following pattern    DeprecationLogger.whileDisabled {        DeprecationLogger.whileDisabled {        }        DeprecationLogger.deprecate(""nag"")            .willBeRemovedInGradle9()            .undocumented()            .nagUser()      }then the nagging message will appear on the console.This is because the implementation uses a single, static boolean to keep track of whether or not log messages should be suppressed. That boolean will be set to false when the inner whileDisabled() method returns.This PR fixes this issue by counting how many levels of nested whileDisabled() are there and only disables the suppression after the outermost block finishes.
"
23712,0,0,251,0,1,ghale,0,"title:Fix issue with more workers being submitted than threads description:There was an issue in `DefaultBuildOperationQueue` where we were submitting more worker runnables to the thread pool than max workers.  This wasn't breaking anything, but it was incorrect and meant that the extra worker runnables would still need to be processed after the operations were all drained.  This fixes the issue and adds a test to guard against regression.
"
23659,1,1020,2,0,0,fabiorosa-sn,0,"title:Can't use extension function defined on settings.kts.gradle inside pluginManagement block description:Currently we can centralize the repository declaration on settings.gradle.kts using dependencyResolutionManagement{}for libs and pluginManagement{} for plugins. Defining a custom maven repository could demand some extra boiler plate do handle authentication.To make things cleaner, we would like to extract the boiler plate to a function inside settings.gradle.kts that could be used inside both dependencyResolutionManagement{} and  pluginManagement{}.### Expected BehaviorI should be able to use a function defined inside my kts script inside both dependencyResolutionManagement{} and pluginManagement{}### Current BehaviorThe function is available on at  dependencyResolutionManagement{} , but not at pluginManagement{}### ContextIts expected to be able to factor out repetitive code that can be reused on different parts of the kts script, to avoid boilerplate copy paste### Steps to Reproduce ```rootProject.name = ""my-project""fun RepositoryHandler.myAuthenticatedArtifactory(): MavenArtifactRepository =    maven {        url = uri(""<MY_ARTIFACTORY_URL>"")        val artifactoryTokenUser: String? by settings        val artifactoryTokenEnv = System.getenv(""ARTIFACTORY_ACCESS_TOKEN"")        (artifactoryTokenEnv ?: artifactoryTokenUser)?.let { artifactoryToken ->            credentials(HttpHeaderCredentials::class) {                name = ""Authorization""                value = ""Bearer $artifactoryToken""            }            authentication { create<HttpHeaderAuthentication>(""header"") }        } ?: throw RuntimeException(""闂傚倷绀侀悿鍥р枖閺囩喎鍨旈悗闈涙憸缁犳梻鈧箍鍎遍ˇ顖炴偂閿濆鐓熸繛鍡楃箲閸ｄ粙鏌ｉ悤鍌滅М闁哄苯绉堕幑鍕Ω閵夘喒鍋撻幘鍓佺＜婵°倐鍋撶紒澶婄秺瀵偊宕掑鐓庢畼濠?ARTIFACTORY TOKEN FOUND闂傚倷绀侀悿鍥р枖閺囩喎鍨旈悗闈涙憸缁犳梻鈧箍鍎遍ˇ顖炴偂閿濆鐓熸繛鍡楃箲閸ｄ粙鏌ｉ悤鍌滅М闁哄苯绉堕幑鍕Ω閵夘喒鍋撻幘鍓佺＜?)    }dependencyResolutionManagement {    repositoriesMode.set(RepositoriesMode.PREFER_SETTINGS)    repositories {        mavenCentral()        myAuthenticatedArtifactory()    }}pluginManagement {    repositories {        gradlePluginPortal()        myAuthenticatedArtifactory()    }}```### Your EnvironmentMacOs VenturaGradle: 7.6"
23645,0,0,299,0,0,madhead,0,"title:Broken link title in ""Migrating Builds From Apache Maven"" description:### Expected BehaviorAll the links to contain text for humans.### Current BehaviorOne of the links exposes MD cross-doc markup:![image](https://user-images.githubusercontent.com/577360/214453900-b2468d23-5411-4de1-a4b0-acc29bdf37cc.png)### Steps to Reproduce 1. Open https://docs.gradle.org/current/userguide/migrating_from_maven.html#migmvn:excluding_deps2. Read the second paragraph
"
23625,0,7498,74,0,1,sellmair,0,"title:Potentially bad assertion in ClasspathUtil description:During IntelliJ import tests, the ClasspathUtil is failing with an AssertionError:Stacktrace```textCaused by: java.lang.AssertionError	at org.gradle.internal.classloader.ClasspathUtil.getClasspathForResource(ClasspathUtil.java:136)	at org.gradle.internal.classloader.TransformingClassLoader.findClass(TransformingClassLoader.java:64)	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:587)	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)	at kotlin.reflect.jvm.internal.impl.descriptors.runtime.components.ReflectKotlinClassFinder.<init>(ReflectKotlinClassFinder.kt:30)	at kotlin.reflect.jvm.internal.impl.descriptors.runtime.components.RuntimeModuleData$Companion.create(RuntimeModuleData.kt:65)	at kotlin.reflect.jvm.internal.ModuleByClassLoaderKt.getOrCreateModule(moduleByClassLoader.kt:58)	at kotlin.reflect.jvm.internal.KDeclarationContainerImpl$Data$moduleData$2.invoke(KDeclarationContainerImpl.kt:36)	at kotlin.reflect.jvm.internal.KDeclarationContainerImpl$Data$moduleData$2.invoke(KDeclarationContainerImpl.kt:33)	at kotlin.reflect.jvm.internal.ReflectProperties$LazySoftVal.invoke(ReflectProperties.java:92)	at kotlin.reflect.jvm.internal.ReflectProperties$Val.getValue(ReflectProperties.java:31)	at kotlin.reflect.jvm.internal.KDeclarationContainerImpl$Data.getModuleData(KDeclarationContainerImpl.kt)	at kotlin.reflect.jvm.internal.KClassImpl$Data$descriptor$2.invoke(KClassImpl.kt:50)	at kotlin.reflect.jvm.internal.KClassImpl$Data$descriptor$2.invoke(KClassImpl.kt:47)	at kotlin.reflect.jvm.internal.ReflectProperties$LazySoftVal.invoke(ReflectProperties.java:92)	at kotlin.reflect.jvm.internal.ReflectProperties$Val.getValue(ReflectProperties.java:31)	at kotlin.reflect.jvm.internal.KClassImpl$Data.getDescriptor(KClassImpl.kt)	at kotlin.reflect.jvm.internal.KClassImpl.getDescriptor(KClassImpl.kt:182)	at kotlin.reflect.jvm.internal.KClassImpl.getDescriptor(KClassImpl.kt:44)	at kotlin.reflect.full.KClassifiers.createType(KClassifiers.kt:47)	at kotlin.reflect.jvm.internal.ReflectionFactoryImpl.typeOf(ReflectionFactoryImpl.java:123)	at kotlin.jvm.internal.Reflection.typeOf(Reflection.java:127)	at org.jetbrains.kotlin.idea.gradleTooling.IdeaKotlinExtras.<clinit>(IdeaKotlinExtras.kt:52)	at org.jetbrains.kotlin.idea.gradleTooling.IdeaKotlinExtras$Surrogate.readResolve(IdeaKotlinExtras.kt:42)	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)	at java.base/java.lang.reflect.Method.invoke(Method.java:568)	at java.base/java.io.ObjectStreamClass.invokeReadResolve(ObjectStreamClass.java:1190)	at java.base/java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2266)	at java.base/java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1733)	at java.base/java.io.ObjectInputStream$FieldValues.<init>(ObjectInputStream.java:2606)	at java.base/java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2457)	at java.base/java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2257)	at java.base/java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1733)	at java.base/java.io.ObjectInputStream.readObject(ObjectInputStream.java:509)	at java.base/java.io.ObjectInputStream.readObject(ObjectInputStream.java:467)	at java.base/java.util.HashMap.readObject(HashMap.java:1552)	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)	at java.base/java.lang.reflect.Method.invoke(Method.java:568)	at java.base/java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1100)	at java.base/java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2423)	at java.base/java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2257)	at java.base/java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1733)	at java.base/java.io.ObjectInputStream$FieldValues.<init>(ObjectInputStream.java:2606)	at java.base/java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2457)	at java.base/java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2257)	at java.base/java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1733)	at java.base/java.io.ObjectInputStream$FieldValues.<init>(ObjectInputStream.java:2606)	at java.base/java.io.ObjectInputStream.defaultReadObject(ObjectInputStream.java:647)	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$InvocationHandlerImpl.readObject(ProtocolToModelAdapter.java:381)	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)	at java.base/java.lang.reflect.Method.invoke(Method.java:568)	at java.base/java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1100)	at java.base/java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2423)	at java.base/java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2257)	at java.base/java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1733)	at java.base/java.io.ObjectInputStream$FieldValues.<init>(ObjectInputStream.java:2606)	at java.base/java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2457)	at java.base/java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2257)	at java.base/java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1733)	at java.base/java.io.ObjectInputStream.readObject(ObjectInputStream.java:509)	at java.base/java.io.ObjectInputStream.readObject(ObjectInputStream.java:467)	at java.base/java.util.HashMap.readObject(HashMap.java:1552)	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)	at java.base/java.lang.reflect.Method.invoke(Method.java:568)	at java.base/java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1100)	at java.base/java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2423)	at java.base/java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2257)	at java.base/java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1733)	at java.base/java.io.ObjectInputStream$FieldValues.<init>(ObjectInputStream.java:2606)	at java.base/java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2457)	at java.base/java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2257)	at java.base/java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1733)	at java.base/java.io.ObjectInputStream.readObject(ObjectInputStream.java:509)	at java.base/java.io.ObjectInputStream.readObject(ObjectInputStream.java:467)	at org.gradle.tooling.internal.provider.serialization.PayloadSerializer.deserialize(PayloadSerializer.java:76)```</details>Attached debugger at failing position:<img width=""1879"" alt=""image"" src=""https://user-images.githubusercontent.com/34319766/214094595-e9b0632c-96b8-4642-89f7-71adf08006fb.png"">The conditoin```javaschemeSpecificPart.substring(pos + 1).endsWith(""/"" + name)```would be true, however since the string 'name' is prefixed by '/META-INF/versions/9' the assertion fails.### Expected BehaviorAs disabling the assertion leads to the no user visible issues, I would expect no assertion to be thrown.### ContextThis affects Gradle Sync tests inside IntelliJ
"
23622,0,0,251,0,1,ghale,0,"title:Fix ordering of cross process close and file lock release description:We have been seeing some file lock timeout failures when opening the journal cache.  This may be because these two operations were inadvertently reordered while making other changes.
"
23614,0,0,259,0,0,asodja,1,"title:Building Java Modules with Blackbox Tests Sample new sample returns 404 description:Opening docs [Building Java Modules with Blackbox Tests Sample](https://docs.gradle.org/current/samples/sample_java_modules_multi_project_with_integration_tests.html) and clicking on ""New sample"" returns 404. It should probably link to https://docs.gradle.org/current/samples/sample_incubating_java_modules_multi_project_with_integration_tests.htmlFrom Slack: https://gradle-community.slack.com/archives/CAHSN3LDN/p1674263602226459
"
23564,0,0,25,1,0,blundell,0,"title:--offline is not respected for ""synthetic root projects"" description:### Expected BehaviorWhen I used the `--offline` flag (or alternatively, any gradle.properties), the complete build should use them.### Current BehaviorWith some digging (https://gradle-community.slack.com/archives/CA745PZHN/p1673970684037469?thread_ts=1673968972.714109&cid=CA745PZHN) it seems that when you have precompiled script plugins using the Kotlin DSL, then type-safe accessors are generated. The way these are generated (from >7.0) is using a ""synthetic root project"" [see here](https://github.com/gradle/gradle/issues/9386#issuecomment-781316283). This synthetic project does not respect the `--offline` flag and it does not inherit any gradle.properties.### ContextThis is a problem because that synthetic project gets the `gradle-intellij-plugin` applied, and that plugin requires a flag to be set: `org.jetbrains.intellij.buildFeature.selfUpdateCheck=false` (or `--offline` to passed) to stop it making a network request https://plugins.jetbrains.com/docs/intellij/tools-gradle-intellij-plugin-build-features.html#selfupdatecheck  A build with no network connection will otherwise fail.### Steps to Reproduce TBDAssumed steps:- Have a module that   1) has `implementation(""org.jetbrains.intellij.plugins:gradle-intellij-plugin:1.10.2"")` in its dependencies block  2) has some Kotlin DSL build scripts that need type safe accessors- Build the project with `-offline` and notice its ignored in the synthetic project- OR- Add a `gradle.property` and notice its ignored in the synthetic project### Your EnvironmentMacI don't think its environment specific.Build scan URL: can't share publicly sorry, I am on the Gradle slack if you want to reach me
"
23555,0,0,229,1,1,jbartok,1,"title:Improve Toolchain related deprecation nagging in `7.6` description:Continues the fixes started in * https://github.com/gradle/gradle/issues/23519Specifically: in Gradle 7.6 we have deprecation nagging in case there are no toolchain repositories configured, but it gets activated only when auto-provisioning actually happens. This is not enough, not even for builds that rely on the feature, because even those only download a toolchain once and then just use it in subsequent runs. We should always nag, if toolchains are being used. This needs to be backported to 7.6.1.
"
23554,0,0,229,0,1,jbartok,0,"title:Fix Toolchain related test failures on M1 Macs description:https://builds.gradle.org/buildConfiguration/Gradle_Experimental_Check_Soak_35_0/60473362?hideProblemsFromDependencies=false&hideTestsFromDependencies=true&expandBuildChangesSection=true&expandBuildTestsSection=true&expandBuildProblemsSection=true
"
23551,0,1105,275,0,0,TWiStErRob,0,"title:Invalid artifactId is used in pluginMarkerMaven POM description:### ContextI have a certain project structure on the file system, this does not match one to one with artifact names generated in `mavenCentral()`. I think this is quite usual setup. I recently wanted to enable marker publication, but the markers are not working, because their POM contains invalid artifact IDs which point to the directory structure rather than the actual artifact ID under which the project is published. Example below will make this very clear.### Steps to Reproduce1. Clone https://github.com/TWiStErRob/repros/tree/master/gradle/gradlePluginMarker-earlyArtifactId2. `gradlew publishToMavenLocal`     (or more specifically `gradlew generatePomFileForPluginMavenPublication generatePomFileForMyPluginPluginMarkerMavenPublication`)Observe the output POM filesObserve these two files: * `published/build/publications/pluginMaven/pom-default.xml` * `published/build/publications/myPluginPluginMarkerMaven/pom-default.xml`Or alternatively the published artifacts in your `~/.m2` (`mavenLocal()`) folder: * `~/.m2/com/example/different-name/1.2.3/different-name-1.2.3.pom` * `~/.m2/com/example/my-plugin/com.example.my-plugin.gradle.plugin/1.2.3/com.example.my-plugin.gradle.plugin-1.2.3.pom`Note: the name and location of these files are all correct based on the setup, which is in short:```kotlingroup = ""com.example""version = ""1.2.3""afterEvaluate {    publishing.publications.named<MavenPublication>(""pluginMaven"").configure { artifactId = ""different-name"" }}gradlePlugin.plugins.create(""myPlugin"") { id = ""com.example.my-plugin"" }```</details>### Current BehaviorThis is the marker POM.The referenced artifact doesn't exists, it assumes that the folder name is the same as the published artifact ID.```xml<project>  <groupId>com.example.my-plugin</groupId>  <artifactId>com.example.my-plugin.gradle.plugin</artifactId>  <version>1.2.3</version>  <packaging>pom</packaging>  <dependencies>    <dependency>      <groupId>com.example</groupId>      <artifactId>published</artifactId> <!-- ................... PROBLEM HERE -->      <version>1.2.3</version>    </dependency>  </dependencies></project>```### Expected Behavior```xml<project>  <groupId>com.example.my-plugin</groupId>  <artifactId>com.example.my-plugin.gradle.plugin</artifactId>  <version>1.2.3</version>  <packaging>pom</packaging>  <dependencies>    <dependency>      <groupId>com.example</groupId>      <artifactId>different-name</artifactId> <!-- ................... CORRECT HERE -->      <version>1.2.3</version>    </dependency>  </dependencies></project>```### Your Environment<!--- Include as many relevant details about the environment you experienced the bug in --><!--- A build scan https://scans.gradle.com/get-started is ideal -->Build scan URL: don't think it's relevant given the details below### Further detailsI actually found the problem here:`org.gradle.plugin.devel.plugins.MavenPluginPublishPlugin#createMavenMarkerPublication` * This method reads the coordinates into local variables `pluginGroupId`, `pluginArtifactId` and `pluginVersion`. * Then afterEvaluate in my build.gradle executes * Then `generatePomFileFor...Publication` task executes the `getPom().withXml` block * Which reads the cached local variablesI'm forced to use `afterEvaluate` in build.gradle because of the `afterEvaluate` in `MavenPluginPublishPlugin#apply`.There's literally no way to correctly configure this whether using the `plugins` block or `apply(plugin =`.Bar rewriting the two plugins with full `Property<T>` support, the solution would be to capture the `coordinates` variable in the `Action<XmlProvider>` block and read the group/artifact/version lazily during task execution.### WorkaroundThe only thing I can do is to either re-do the work of `java-gradle-plugin` (`MavenPluginPublishPlugin`) by registering the publication myself or by generating the marker myself. Neither of these is acceptable given the complexity and all the laziness work that has been done in Gradle over the last years to solve exactly these kinds of problems.
"
23521,0,0,218,0,1,ljacomet,0,"title:Dependency graph resolution: Equivalent excludes can cause un-necessary graph mutations description:Following the fix for #17964, another subtle bug has been introduced when graphs have large excludes and a heavy use of dependency substitutions.In some cases, changes in the `ExcludeSpec` will incorrectly be interpreted as impacting the graph, while the dependency nodes remain strictly the same.The root cause is that the `DependencyState` type is expected to be deduplicated and its `equals` is limited to object identity.However in `NodeState.maybeSubstitute`, the substituted `DependencyState` is not cached. A cache needs to be added there, building on the cache for `SubstitutionResult`, so that for a source `DependencyState`, a given result, the same modified `DependencyState` is returned.
"
23498,0,0,256,1,0,eskatos,0,"title:Error coverage for component metadata rule non-static Kotlin script inner-class description:* Closes https://github.com/gradle/gradle/issues/8423
"
23494,0,2326,0,0,0,BrianM5707,0,"title:Intermittent: ""You must specify a base url or at least one artifact pattern for an Ivy repository"" even when a base url is specified description:There is already a thread in the Gradle discussion forums about this issue, but I'll give a short summary. My project has an Ivy repository configured for node.js dependencies in the settings.gradle's dependencyResolutionManagement. All the configuration is static and a url is configured. On rare occasions, and depending on the set of tasks executed, one or more tasks will fail with this error:```shellYou must specify a base url or at least one artifact pattern for the Ivy repository 'Node.js(https://our.corporate.repository.com/repository/nodejs/)'```There error is intermittent and somewhat self-contradictory: it claims no URL is set, but the URL is shown in the description string.Thread with full context: https://discuss.gradle.org/t/you-must-specify-a-base-url-or-at-least-one-artifact-pattern-for-an-ivy-repository-error/43900### Expected BehaviorGradle should either succeed consistently, if the repository is configured correctly, or fail consistently otherwise.### Current BehaviorGradle usually succeeds and rarely fails.### ContextI think all relevant context is in this thread on the Gradle discussion forums: https://discuss.gradle.org/t/you-must-specify-a-base-url-or-at-least-one-artifact-pattern-for-an-ivy-repository-error/43900### Steps to Reproduce I attempted to create a minimum-reproducible-sample that matches the behavior of my actual project. I got close: in the sample project Gradle will produce a warning intermittently instead of an error. I haven't been able to figure out what escalates the warning to an error in my actual project. Hopefully the sample project is sufficient to demonstrate the race condition, though. I will attach the sample project as a zip file. Although I can't share the code for my actual project, I will attach a thread dump with the threads paused at the moment the race condition occurs (see step 8 in reproduction steps below), since the thread dump contains no sensitive information.[base-url-issue.zip](https://github.com/gradle/gradle/files/10395960/base-url-issue.zip)[threads_report_from_actual_project.txt](https://github.com/gradle/gradle/files/10395950/threads_report_from_actual_project.txt)Note that the issue happens intermittently in practice so reproducing it consistently requires using a debugger to force a specific race condition to occur.1. Create a directory for the sample project and unpack attached zip file in that directory2. Open settings.gradle and set the 'pathToThisDir' variable to the absolute path of the directory you unpacked the project into.3. Set breakpoint on DefaultIvyArtifactRepository lines 163 and 223. Make sure they only suspend the current thread and not all threads. The line numbers here assume Gradle 7.4.2.4. Run `./gradlew resolveConfiguration -Dorg.gradle.debug=true --no-daemon`5. Attach debugger on port 5005 and wait until two or more threads stop at 1636. Resume one thread until it stops again at 2237. Go back to any other thread and step over the getSchemes() method call8. (Optional) Generate a thread dump if you want to see the full stack traces9. Detach debuggerDone correctly, you should get a warning like this:```shell$ ./gradlew resolveConfiguration -Dorg.gradle.debug=true --no-daemonTo honour the JVM settings for this build a single-use Daemon process will be forked. See https://docs.gradle.org/7.4.2/userguide/gradle_daemon.html#sec:disabling_the_daemon.Daemon will be stopped at the end of the build > Task :module-1:resolveConfigurationExecution optimizations have been disabled for task ':module-1:resolveConfiguration' to ensure correctness due to the following reasons:  - Property '$1' cannot be resolved:  You must specify a base url or at least one artifact pattern for the Ivy repository 'myrepo(file:/path/to/base-url-issue/fake-repo/)'. Reason: An input file collection couldn't be resolved, making it impossible to determine task inputs. Please refer to https://docs.gradle.org/7.4.2/userguide/validation_problems.html#unresolvable_input for more details about this problem.> Task :module-2:resolveConfiguration/path/to/base-url-issue/fake-repo/v1.0/sometext-v1.0-someclassifier.txt> Task :module-1:resolveConfiguration/path/to/base-url-issue/fake-repo/v1.0/sometext-v1.0-someclassifier.txtDeprecated Gradle features were used in this build, making it incompatible with Gradle 8.0.You can use '--warning-mode all' to show the individual deprecation warnings and determine if they come from your own scripts or plugins.See https://docs.gradle.org/7.4.2/userguide/command_line_interface.html#sec:command_line_warningsExecution optimizations have been disabled for 1 invalid unit(s) of work during this build to ensure correctness.Please consult deprecation warnings for more details.BUILD SUCCESSFUL in 29s2 actionable tasks: 2 executed```### Your Environment```shell$ ./gradlew --version------------------------------------------------------------Gradle 7.4.2------------------------------------------------------------Build time:   2022-03-31 15:25:29 UTCRevision:     540473b8118064efcc264694cbcaa4b677f61041Kotlin:       1.5.31Groovy:       3.0.9Ant:          Apache Ant(TM) version 1.10.11 compiled on July 10 2021JVM:          1.8.0_262 (Amazon.com Inc. 25.262-b10)OS:           Mac OS X 10.16 x86_64```
"
23491,0,0,173,0,0,Tapchicoma,0,"title:Build produces INFO log ""Script 'build.gradle.kts' is not supposed to be used along with regular Kotlin sources, and will be ignored in the future versions by default."" description:### Expected BehaviorNo warning in INFO logs for Kotlin DSL scripts when running build with Gradle 8.0-rc-1+ version.### Current BehaviorWarning is printed in INFO level logs for any `*.gradle.kts` file.### Steps to Reproduce Check repro project from this [Kotlin issue](https://youtrack.jetbrains.com/issue/KT-55880)
"
23485,0,0,256,0,1,eskatos,0,"title:Let `Gradle` expose that it is `ExtensionAware` description:This allows access to extensions without casting to `ExtensionAware` from statically compiled languages such as Java or Kotlin.* Fixes #23160 
"
23473,1,23243,3,0,0,Osama-Mattar,0,"title: Can't build the android app. com.android.build.gradle.internal.res.Aapt2CompileRunnable description:I'm trying to build the app and I'm receiving the below error:gradle: 7.6android-gradle-plugin: 7.3.1```FAILURE: Build failed with an exception.* What went wrong:Execution failed for task ':app:mergeDevDebugResources'.> A failure occurred while executing com.android.build.gradle.internal.res.Aapt2CompileRunnable   > AAPT2 aapt2-7.3.1-8691043-linux Daemon #0: Daemon startup failed     This should not happen under normal circumstances, please file an issue if it does.* Try:> Run with --info or --debug option to get more log output.> Run with --scan to get full insights.* Exception is:org.gradle.api.tasks.TaskExecutionException: Execution failed for task ':app:mergeDevDebugResources'.	at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.lambda$executeIfValid$1(ExecuteActionsTaskExecuter.java:142)	at org.gradle.internal.Try$Failure.ifSuccessfulOrElse(Try.java:282)	at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeIfValid(ExecuteActionsTaskExecuter.java:140)	at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.execute(ExecuteActionsTaskExecuter.java:128)	at org.gradle.api.internal.tasks.execution.CleanupStaleOutputsExecuter.execute(CleanupStaleOutputsExecuter.java:77)	at org.gradle.api.internal.tasks.execution.FinalizePropertiesTaskExecuter.execute(FinalizePropertiesTaskExecuter.java:46)	at org.gradle.api.internal.tasks.execution.ResolveTaskExecutionModeExecuter.execute(ResolveTaskExecutionModeExecuter.java:51)	at org.gradle.api.internal.tasks.execution.SkipTaskWithNoActionsExecuter.execute(SkipTaskWithNoActionsExecuter.java:57)	at org.gradle.api.internal.tasks.execution.SkipOnlyIfTaskExecuter.execute(SkipOnlyIfTaskExecuter.java:57)	at org.gradle.api.internal.tasks.execution.CatchExceptionTaskExecuter.execute(CatchExceptionTaskExecuter.java:36)	at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.executeTask(EventFiringTaskExecuter.java:77)	at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.call(EventFiringTaskExecuter.java:55)	at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.call(EventFiringTaskExecuter.java:52)	at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)	at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)	at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)	at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)	at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)	at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)	at org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)	at org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)	at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter.execute(EventFiringTaskExecuter.java:52)	at org.gradle.execution.plan.LocalTaskNodeExecutor.execute(LocalTaskNodeExecutor.java:69)	at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$InvokeNodeExecutorsAction.execute(DefaultTaskExecutionGraph.java:322)	at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$InvokeNodeExecutorsAction.execute(DefaultTaskExecutionGraph.java:309)	at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$BuildOperationAwareExecutionAction.execute(DefaultTaskExecutionGraph.java:302)	at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$BuildOperationAwareExecutionAction.execute(DefaultTaskExecutionGraph.java:288)	at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.execute(DefaultPlanExecutor.java:462)	at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.run(DefaultPlanExecutor.java:379)	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:49)	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)	at java.base/java.lang.Thread.run(Thread.java:834)Caused by: org.gradle.workers.internal.DefaultWorkerExecutor$WorkExecutionException: A failure occurred while executing com.android.build.gradle.internal.res.Aapt2CompileRunnable	at org.gradle.workers.internal.DefaultWorkerExecutor$WorkItemExecution.waitForCompletion(DefaultWorkerExecutor.java:348)	at org.gradle.internal.work.DefaultAsyncWorkTracker.lambda$waitForItemsAndGatherFailures$2(DefaultAsyncWorkTracker.java:130)	at org.gradle.internal.Factories$1.create(Factories.java:31)	at org.gradle.internal.work.DefaultWorkerLeaseService.withoutLocks(DefaultWorkerLeaseService.java:321)	at org.gradle.internal.work.DefaultWorkerLeaseService.withoutLocks(DefaultWorkerLeaseService.java:304)	at org.gradle.internal.work.DefaultWorkerLeaseService.withoutLock(DefaultWorkerLeaseService.java:309)	at org.gradle.internal.work.DefaultAsyncWorkTracker.waitForItemsAndGatherFailures(DefaultAsyncWorkTracker.java:126)	at org.gradle.internal.work.DefaultAsyncWorkTracker.waitForItemsAndGatherFailures(DefaultAsyncWorkTracker.java:92)	at org.gradle.internal.work.DefaultAsyncWorkTracker.waitForAll(DefaultAsyncWorkTracker.java:78)	at org.gradle.internal.work.DefaultAsyncWorkTracker.waitForCompletion(DefaultAsyncWorkTracker.java:66)	at org.gradle.api.internal.tasks.execution.TaskExecution$3.run(TaskExecution.java:244)	at org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:29)	at org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:26)	at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)	at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)	at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)	at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)	at org.gradle.internal.operations.DefaultBuildOperationRunner.run(DefaultBuildOperationRunner.java:47)	at org.gradle.internal.operations.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:68)	at org.gradle.api.internal.tasks.execution.TaskExecution.executeAction(TaskExecution.java:221)	at org.gradle.api.internal.tasks.execution.TaskExecution.executeActions(TaskExecution.java:204)	at org.gradle.api.internal.tasks.execution.TaskExecution.executeWithPreviousOutputFiles(TaskExecution.java:187)	at org.gradle.api.internal.tasks.execution.TaskExecution.execute(TaskExecution.java:165)	at org.gradle.internal.execution.steps.ExecuteStep.executeInternal(ExecuteStep.java:89)	at org.gradle.internal.execution.steps.ExecuteStep.access$000(ExecuteStep.java:40)	at org.gradle.internal.execution.steps.ExecuteStep$1.call(ExecuteStep.java:53)	at org.gradle.internal.execution.steps.ExecuteStep$1.call(ExecuteStep.java:50)	at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)	at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)	at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)	at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)	at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)	at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)	at org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)	at org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)	at org.gradle.internal.execution.steps.ExecuteStep.execute(ExecuteStep.java:50)	at org.gradle.internal.execution.steps.ExecuteStep.execute(ExecuteStep.java:40)	at org.gradle.internal.execution.steps.RemovePreviousOutputsStep.execute(RemovePreviousOutputsStep.java:68)	at org.gradle.internal.execution.steps.RemovePreviousOutputsStep.execute(RemovePreviousOutputsStep.java:38)	at org.gradle.internal.execution.steps.CancelExecutionStep.execute(CancelExecutionStep.java:41)	at org.gradle.internal.execution.steps.TimeoutStep.executeWithoutTimeout(TimeoutStep.java:74)	at org.gradle.internal.execution.steps.TimeoutStep.execute(TimeoutStep.java:55)	at org.gradle.internal.execution.steps.CreateOutputsStep.execute(CreateOutputsStep.java:51)	at org.gradle.internal.execution.steps.CreateOutputsStep.execute(CreateOutputsStep.java:29)	at org.gradle.internal.execution.steps.CaptureStateAfterExecutionStep.executeDelegateBroadcastingChanges(CaptureStateAfterExecutionStep.java:124)	at org.gradle.internal.execution.steps.CaptureStateAfterExecutionStep.execute(CaptureStateAfterExecutionStep.java:80)	at org.gradle.internal.execution.steps.CaptureStateAfterExecutionStep.execute(CaptureStateAfterExecutionStep.java:58)	at org.gradle.internal.execution.steps.ResolveInputChangesStep.execute(ResolveInputChangesStep.java:48)	at org.gradle.internal.execution.steps.ResolveInputChangesStep.execute(ResolveInputChangesStep.java:36)	at org.gradle.internal.execution.steps.BuildCacheStep.executeWithoutCache(BuildCacheStep.java:181)	at org.gradle.internal.execution.steps.BuildCacheStep.lambda$execute$1(BuildCacheStep.java:71)	at org.gradle.internal.Either$Right.fold(Either.java:175)	at org.gradle.internal.execution.caching.CachingState.fold(CachingState.java:59)	at org.gradle.internal.execution.steps.BuildCacheStep.execute(BuildCacheStep.java:69)	at org.gradle.internal.execution.steps.BuildCacheStep.execute(BuildCacheStep.java:47)	at org.gradle.internal.execution.steps.StoreExecutionStateStep.execute(StoreExecutionStateStep.java:36)	at org.gradle.internal.execution.steps.StoreExecutionStateStep.execute(StoreExecutionStateStep.java:25)	at org.gradle.internal.execution.steps.RecordOutputsStep.execute(RecordOutputsStep.java:36)	at org.gradle.internal.execution.steps.RecordOutputsStep.execute(RecordOutputsStep.java:22)	at org.gradle.internal.execution.steps.SkipUpToDateStep.executeBecause(SkipUpToDateStep.java:110)	at org.gradle.internal.execution.steps.SkipUpToDateStep.lambda$execute$2(SkipUpToDateStep.java:56)	at java.base/java.util.Optional.orElseGet(Optional.java:369)	at org.gradle.internal.execution.steps.SkipUpToDateStep.execute(SkipUpToDateStep.java:56)	at org.gradle.internal.execution.steps.SkipUpToDateStep.execute(SkipUpToDateStep.java:38)	at org.gradle.internal.execution.steps.ResolveChangesStep.execute(ResolveChangesStep.java:73)	at org.gradle.internal.execution.steps.ResolveChangesStep.execute(ResolveChangesStep.java:44)	at org.gradle.internal.execution.steps.legacy.MarkSnapshottingInputsFinishedStep.execute(MarkSnapshottingInputsFinishedStep.java:37)	at org.gradle.internal.execution.steps.legacy.MarkSnapshottingInputsFinishedStep.execute(MarkSnapshottingInputsFinishedStep.java:27)	at org.gradle.internal.execution.steps.ResolveCachingStateStep.execute(ResolveCachingStateStep.java:89)	at org.gradle.internal.execution.steps.ResolveCachingStateStep.execute(ResolveCachingStateStep.java:50)	at org.gradle.internal.execution.steps.ValidateStep.execute(ValidateStep.java:102)	at org.gradle.internal.execution.steps.ValidateStep.execute(ValidateStep.java:57)	at org.gradle.internal.execution.steps.CaptureStateBeforeExecutionStep.execute(CaptureStateBeforeExecutionStep.java:76)	at org.gradle.internal.execution.steps.CaptureStateBeforeExecutionStep.execute(CaptureStateBeforeExecutionStep.java:50)	at org.gradle.internal.execution.steps.SkipEmptyWorkStep.executeWithNoEmptySources(SkipEmptyWorkStep.java:254)	at org.gradle.internal.execution.steps.SkipEmptyWorkStep.execute(SkipEmptyWorkStep.java:91)	at org.gradle.internal.execution.steps.SkipEmptyWorkStep.execute(SkipEmptyWorkStep.java:56)	at org.gradle.internal.execution.steps.RemoveUntrackedExecutionStateStep.execute(RemoveUntrackedExecutionStateStep.java:32)	at org.gradle.internal.execution.steps.RemoveUntrackedExecutionStateStep.execute(RemoveUntrackedExecutionStateStep.java:21)	at org.gradle.internal.execution.steps.legacy.MarkSnapshottingInputsStartedStep.execute(MarkSnapshottingInputsStartedStep.java:38)	at org.gradle.internal.execution.steps.LoadPreviousExecutionStateStep.execute(LoadPreviousExecutionStateStep.java:43)	at org.gradle.internal.execution.steps.LoadPreviousExecutionStateStep.execute(LoadPreviousExecutionStateStep.java:31)	at org.gradle.internal.execution.steps.AssignWorkspaceStep.lambda$execute$0(AssignWorkspaceStep.java:40)	at org.gradle.api.internal.tasks.execution.TaskExecution$4.withWorkspace(TaskExecution.java:281)	at org.gradle.internal.execution.steps.AssignWorkspaceStep.execute(AssignWorkspaceStep.java:40)	at org.gradle.internal.execution.steps.AssignWorkspaceStep.execute(AssignWorkspaceStep.java:30)	at org.gradle.internal.execution.steps.IdentityCacheStep.execute(IdentityCacheStep.java:37)	at org.gradle.internal.execution.steps.IdentityCacheStep.execute(IdentityCacheStep.java:27)	at org.gradle.internal.execution.steps.IdentifyStep.execute(IdentifyStep.java:44)	at org.gradle.internal.execution.steps.IdentifyStep.execute(IdentifyStep.java:33)	at org.gradle.internal.execution.impl.DefaultExecutionEngine$1.execute(DefaultExecutionEngine.java:76)	at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeIfValid(ExecuteActionsTaskExecuter.java:139)	at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.execute(ExecuteActionsTaskExecuter.java:128)	at org.gradle.api.internal.tasks.execution.CleanupStaleOutputsExecuter.execute(CleanupStaleOutputsExecuter.java:77)	at org.gradle.api.internal.tasks.execution.FinalizePropertiesTaskExecuter.execute(FinalizePropertiesTaskExecuter.java:46)	at org.gradle.api.internal.tasks.execution.ResolveTaskExecutionModeExecuter.execute(ResolveTaskExecutionModeExecuter.java:51)	at org.gradle.api.internal.tasks.execution.SkipTaskWithNoActionsExecuter.execute(SkipTaskWithNoActionsExecuter.java:57)	at org.gradle.api.internal.tasks.execution.SkipOnlyIfTaskExecuter.execute(SkipOnlyIfTaskExecuter.java:57)	at org.gradle.api.internal.tasks.execution.CatchExceptionTaskExecuter.execute(CatchExceptionTaskExecuter.java:36)	at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.executeTask(EventFiringTaskExecuter.java:77)	at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.call(EventFiringTaskExecuter.java:55)	at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.call(EventFiringTaskExecuter.java:52)	at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)	at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)	at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)	at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)	at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)	at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)	at org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)	at org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)	at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter.execute(EventFiringTaskExecuter.java:52)	at org.gradle.execution.plan.LocalTaskNodeExecutor.execute(LocalTaskNodeExecutor.java:69)	at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$InvokeNodeExecutorsAction.execute(DefaultTaskExecutionGraph.java:322)	at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$InvokeNodeExecutorsAction.execute(DefaultTaskExecutionGraph.java:309)	at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$BuildOperationAwareExecutionAction.execute(DefaultTaskExecutionGraph.java:302)	at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$BuildOperationAwareExecutionAction.execute(DefaultTaskExecutionGraph.java:288)	at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.execute(DefaultPlanExecutor.java:462)	at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.run(DefaultPlanExecutor.java:379)	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:49)	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)	at java.base/java.lang.Thread.run(Thread.java:834)Caused by: com.android.builder.internal.aapt.v2.Aapt2InternalException: AAPT2 aapt2-7.3.1-869[1043](https://gitlab.domain.ca/mobile/android/app/app-android/-/jobs/16046990#L1043)-linux Daemon #0: Daemon startup failedThis should not happen under normal circumstances, please file an issue if it does.	at com.android.builder.internal.aapt.v2.Aapt2Daemon.handleError(Aapt2Daemon.kt:193)	at com.android.builder.internal.aapt.v2.Aapt2Daemon.handleError$default(Aapt2Daemon.kt:190)	at com.android.builder.internal.aapt.v2.Aapt2Daemon.checkStarted(Aapt2Daemon.kt:77)	at com.android.builder.internal.aapt.v2.Aapt2Daemon.compile(Aapt2Daemon.kt:100)	at com.android.builder.internal.aapt.v2.Aapt2DaemonManager$LeasedAaptDaemon.compile(Aapt2DaemonManager.kt:170)	at com.android.builder.internal.aapt.v2.Aapt2DaemonManager$leasingAapt2Daemon$1.compile(Aapt2DaemonManager.kt:195)	at com.android.build.gradle.internal.services.PartialInProcessResourceProcessor.compile(PartialInProcessResourceProcessor.kt:47)	at com.android.build.gradle.internal.res.Aapt2CompileRunnableKt.runAapt2Compile(Aapt2CompileRunnable.kt:57)	at com.android.build.gradle.internal.res.Aapt2CompileRunnable.run(Aapt2CompileRunnable.kt:32)	at com.android.build.gradle.internal.profile.ProfileAwareWorkAction.execute(ProfileAwareWorkAction.kt:74)	at org.gradle.workers.internal.DefaultWorkerServer.execute(DefaultWorkerServer.java:63)	at org.gradle.workers.internal.NoIsolationWorkerFactory$1$1.create(NoIsolationWorkerFactory.java:66)	at org.gradle.workers.internal.NoIsolationWorkerFactory$1$1.create(NoIsolationWorkerFactory.java:62)	at org.gradle.internal.classloader.ClassLoaderUtils.executeInClassloader(ClassLoaderUtils.java:100)	at org.gradle.workers.internal.NoIsolationWorkerFactory$1.lambda$execute$0(NoIsolationWorkerFactory.java:62)	at org.gradle.workers.internal.AbstractWorker$1.call(AbstractWorker.java:44)	at org.gradle.workers.internal.AbstractWorker$1.call(AbstractWorker.java:41)	at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)	at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)	at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)	at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)	at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)	at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)	at org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)	at org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)	at org.gradle.workers.internal.AbstractWorker.executeWrappedInBuildOperation(AbstractWorker.java:41)	at org.gradle.workers.internal.NoIsolationWorkerFactory$1.execute(NoIsolationWorkerFactory.java:59)	at org.gradle.workers.internal.DefaultWorkerExecutor.lambda$submitWork$2(DefaultWorkerExecutor.java:212)	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)	at org.gradle.internal.work.DefaultConditionalExecutionQueue$ExecutionRunner.runExecution(DefaultConditionalExecutionQueue.java:187)	at org.gradle.internal.work.DefaultConditionalExecutionQueue$ExecutionRunner.access$700(DefaultConditionalExecutionQueue.java:120)	at org.gradle.internal.work.DefaultConditionalExecutionQueue$ExecutionRunner$1.run(DefaultConditionalExecutionQueue.java:162)	at org.gradle.internal.Factories$1.create(Factories.java:31)	at org.gradle.internal.work.DefaultWorkerLeaseService.withLocks(DefaultWorkerLeaseService.java:249)	at org.gradle.internal.work.DefaultWorkerLeaseService.runAsWorkerThread(DefaultWorkerLeaseService.java:109)	at org.gradle.internal.work.DefaultWorkerLeaseService.runAsWorkerThread(DefaultWorkerLeaseService.java:114)	at org.gradle.internal.work.DefaultConditionalExecutionQueue$ExecutionRunner.runBatch(DefaultConditionalExecutionQueue.java:157)	at org.gradle.internal.work.DefaultConditionalExecutionQueue$ExecutionRunner.run(DefaultConditionalExecutionQueue.java:126)	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)	... 5 moreCaused by: com.android.builder.internal.aapt.v2.Aapt2InternalException: Failed to start AAPT2 process.	at com.android.builder.internal.aapt.v2.Aapt2DaemonImpl.stopQuietly(Aapt2DaemonImpl.kt:128)	at com.android.builder.internal.aapt.v2.Aapt2DaemonImpl.startProcess(Aapt2DaemonImpl.kt:115)Deprecated Gradle features were used in this build, making it incompatible with Gradle 8.0.You can use '--warning-mode all' to show the individual deprecation warnings and determine if they come from your own scripts or plugins.See https://docs.gradle.org/7.6/userguide/command_line_interface.html#sec:command_line_warningsExecution optimizations have been disabled for 9 invalid unit(s) of work during this build to ensure correctness.Please consult deprecation warnings for more details.52 actionable tasks: 52 executed	at com.android.builder.internal.aapt.v2.Aapt2Daemon.checkStarted(Aapt2Daemon.kt:56)	... 42 moreCaused by: java.io.IOException: Process unexpectedly exit.	at com.android.builder.internal.aapt.v2.Aapt2DaemonImpl.startProcess(Aapt2DaemonImpl.kt:116)	... 43 more```
"
23468,0,0,251,0,1,ghale,0,"title:Disabled parameterized tests show up in test reports description:Fixes an issue where parameterized tests that were disabled were not showing up in test reports at all rather than being shown as skipped.Fixes #20081Supersedes #21004 
"
23463,0,0,251,0,1,ghale,0,"title:Backport fix for ""Unable to make progress running work"" issue description:Fixes #23294 
"
23461,0,0,256,0,1,eskatos,0,"title:Let Kotlin DSL precompiled script plugin support not use compileKotlin.doFirst to configure the Kotlin compiler description:* Fixes #22091 ----The old codepath is kept for folks using previous versions of the `kotlin-dsl` plugin.This PR also opportunistically - removes now not needed test setup ignoring deprecations - not needed since the uprade to Kotlin 1.8,- introduces `withGroovyBuilder { hasProperty(name) }` - needed in this PR's implementation.- extends coverage for kotlin versions in `KotlinDslPluginGradlePluginCrossVersionSmokeTest`----This should be merged after* https://github.com/gradle/gradle/pull/23485which introduce a workaround for this in a test.
"
23452,1,247,221,0,0,nnym,0,"title:Multiple dependency declarations return `null`. description:Dependency declarations that declare multiple dependencies return `null` which makes them non-nestable.### Expected Behavior```groovyinclude(implementation(    ""abc:def:123"",    ""ghi:jkl:456""))````abc:def:123` and `ghi:jkl:456` are added to the configurations `implementation` and `include`.### Current Behavior`implementation(..., ...)` returns `null` which is not a valid dependency notation so an exception is thrown. However, `include(implementation(""abc:def:123""))` works.### ContextI was trying to add multiple dependencies to multiple configurations. I understand that I can use```groovyinclude(	implementation(""abc:def:123""),	implementation(""ghi:jkl:456""))```or```groovyinclude([	""abc:def:123"",	""ghi:jkl:456""].collect {implementation(it)})```but the ideal solution would be the example that I've shown under ""Expected Behavior"".### Steps to Reproducehttps://github.com/auoeke/gradle-nested-dependencies/blob/groovy-dsl/build.gradle is an example build script that reproduces the problem.https://github.com/auoeke/gradle-nested-dependencies/actions/runs/3878006872/jobs/6613692543### Your EnvironmentOS: Artix LinuxJDK: Temurin 19.0.1+10Gradle: 8.0-20230109000231+0000#https://github.com/gradle/gradle/blob/b93888cebcd246df1f822042cfe3323cd412f252/subprojects/dependency-management/src/main/java/org/gradle/api/internal/artifacts/dsl/dependencies/DynamicAddDependencyMethods.java#L58-L61I theorize that this issue can be solved by replacing the above code by `return DynamicInvokeResult.found(normalizedArgs.stream().map(arg -> dependencyAdder.add(configuration, arg, null)).toList());` or something similar.
"
23426,1,0,10,0,0,doniwinata0309,0,"title:File system watching causing super slow build   description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues--><!--- Provide a brief summary of the issue in the title above -->### Expected BehaviorFile system watching should not significantly reduce build speed### Current BehaviorEnabled file system watching sometimes slowing build significantly### ContextHi my local build slowing down significantly only when file system watching enable. These are task that 5x-10x longer to build:1. kaptGenerateStubsKotlin2. Clean build3. Requesting remote gradle cache4. PackageResources taskI am not sure if this happen on every build, but mostly after clean or full build (non incremental)Do you have some advice to debug this issue ? or which profiler i should use to profile file system watching ?Thank you in advance### Your EnvironmentAndroid Gradle plugin 7.3.0Gradle: 7.5.1Kotlin: 1.7.21Number of modules 300++OS: MacOS M1
"
23425,1,1490,27,0,0,ArchangelX360,0,"title:Custom interface extending `TaskProvider<T>` fails to be converted to a task in `dependsOn` description:I have a custom `TaskProvider` that is enriched by some metadata:```kotlinclass SomeMetadataTaskProvider<T : Task>(taskProvider: TaskProvider<T>, val someMetadata: String) : TaskProvider<T> by taskProvider```Gradle fails to understand it should be a valid candidate for `dependsOn` as it is a `TaskProvider`.### Expected Behavior```kotlinclass SomeMetadataTaskProvider<T : Task>(taskProvider: TaskProvider<T>, val someMetadata: String) : TaskProvider<T> by taskProviderval t = tasks.register(""task1"")val metadataT = SomeMetadataTaskProvider(t, ""some metadata"")val t2 = tasks.register(""task2"") {    dependsOn(metadataT) // expected to work seemlessly}```### Current BehaviorFails with:```Could not determine the dependencies of task ':task2'.> Cannot convert Build_gradle$SomeMetadataTaskProvider@15b07421 to a task.  The following types/formats are supported:    - A String or CharSequence task name or path    - A Task instance    - A TaskReference instance    - A Buildable instance    - A TaskDependency instance    - A Provider that represents a task output    - A Provider instance that returns any of these types    - A Closure instance that returns any of these types    - A Callable instance that returns any of these types    - An Iterable, Collection, Map or array instance that contains any of these types```### ContextSo far, we are working around the issue by referring it by name `dependsOn(metadataT.name)`.### Steps to Reproduce ```kotlin# build.gradle.ktsclass SomeMetadataTaskProvider<T : Task>(taskProvider: TaskProvider<T>, val someMetadata: String) : TaskProvider<T> by taskProviderval t = tasks.register(""task1"")val metadataT = SomeMetadataTaskProvider(t, ""some metadata"")val t2 = tasks.register(""task2"") {    dependsOn(metadataT) // expected to work seemlessly}```and run `./gradlew task2`.
"
23411,1,570,296,0,0,eigenraven,0,"title:Using mavenContent{include """"} in pluginManagement in settings.gradle leads to a fake project being initialized description:### Expected BehaviorWhen specifying maven repository content filters in the pluginManagement section in settings.gradle, specifically `include(""group.name"")`, it shouldn't affect the project structure of the build.### Current BehaviorAdding a `include(""maven.group"")` to the contentFilter### Context<!--- How has this issue affected you? What are you trying to accomplish? --><!--- Providing context helps us come up with a solution that is most useful in the real world -->### Steps to Reproduce <!---Provide a self-contained example project as an attached archive or a Github project.You can use the following template with a Gradle GitHub action set up to showcase your problem: https://github.com/gradle/gradle-issue-reproducerIn the rare cases where this is infeasible, we will also accept a detailed set of instructions.-->Example settings.gradle, modified after `gradle init` in a folder named grtest:```groovypluginManagement {    repositories {        mavenCentral {            mavenContent {                include(""maven.group"")            }        }        gradlePluginPortal()    }}rootProject.name = 'grtest'```Running `./gradlew projects` yields:```------------------------------------------------------------Root project 'grtest'------------------------------------------------------------Root project 'grtest'\--- Project ':maven.group'To see a list of the tasks of a project, run gradlew <project-path>:tasksFor example, try running gradlew :maven.group:tasks```Reproducer repository: <https://github.com/eigenraven/gradle-issue-mavencontent/actions/runs/3848973881/jobs/6557404363#step:4:63>### Your EnvironmentArch Linux, OpenJDK 17, Gradle 8.0-rc1 downloaded via `gradle wrapper`Build scan URL: <https://scans.gradle.com/s/7bbyu3vwvfjl4>
"
23399,0,0,251,0,0,ghale,0,"title:Allow lenient configurations to select artifacts even if some are unavailable description:Artifacts can be resolvable, but still be unavailable, such as the pom artifact from an included build substituting for an external library.  This change allows lenient configurations to select a list of resolvable artifacts, ignoring any that may be resolvable but not available.
"
23378,0,168,2,0,0,EarthCitizen,0,"title:unzipped-distribution - Log4j Vulnerability on Enterprise File System Scans description:The files downloaded into `$HOME/.gradle/caches/transforms-3/<..some ID..>/transformed/unzipped-distribution/gradle-7.5.1` contain the following JARs:```./subprojects/docs/src/snippets/antMigration/fileDeps/kotlin/libs/log4j-1.2.8.jar./subprojects/docs/src/snippets/antMigration/fileDeps/groovy/libs/log4j-1.2.8.jar```These show up on enterprise file scans as a vulnerability on the dev machines. Please remove or upgrade this JAR from `unzipped-distribution`.
"
23365,1,0,0,0,0,grandhisaikiranmayi,0,"title:I am getting an error like this.Please help me to get this solution description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues--><!--- Provide a brief summary of the issue in the title above -->### Expected Behavior<!--- Tell us what should happen -->### Current Behavior<!--- Tell us what happens instead of the expected behavior -->### Context<!--- How has this issue affected you? What are you trying to accomplish? --><!--- Providing context helps us come up with a solution that is most useful in the real world -->### Steps to Reproduce <!---Provide a self-contained example project as an attached archive or a Github project.You can use the following template with a Gradle GitHub action set up to showcase your problem: https://github.com/gradle/gradle-issue-reproducerIn the rare cases where this is infeasible, we will also accept a detailed set of instructions.-->### Your Environment<!--- Include as many relevant details about the environment you experienced the bug in --><!--- A build scan https://scans.gradle.com/get-started is ideal -->Build scan URL:
"
23364,1,2080,294,0,0,eirnym,0,"title:gradlew and gradlew.bat scripts difference between Github and wrapper task execution description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues--><!--- Provide a brief summary of the issue in the title above -->### Expected Behavior* Gradle wrapper downloads wrapper the same scripts as shown [on GitHub](https://raw.githubusercontent.com/gradle/gradle/release7x/gradlew). Script below will show no difference, thus nothing to commit.* UTF-8 file encoding flag is included in DEFAULT_JVM_OPTS### Current BehaviorGradle wrapper scripts has some important differences:* some space differences at the end of line (minor issue) for * DEFAULT_JVM_OPTS has no `file.encoding` set```diffdiff --git a/gradlew b/gradlewindex 5580fce..65dcd68 100755--- a/gradlew+++ b/gradlew@@ -86,7 +86,7 @@ APP_BASE_NAME=${0##*/} APP_HOME=$( cd ""${APP_HOME:-./}"" && pwd -P ) || exit  # Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.-DEFAULT_JVM_OPTS='-Dfile.encoding=UTF-8 ""-Xmx64m"" ""-Xms64m""'+DEFAULT_JVM_OPTS='""-Xmx64m"" ""-Xms64m""'  # Use the maximum available, or set MAX_FD != -1 to use that value. MAX_FD=maximum@@ -144,7 +144,7 @@ if ! ""$cygwin"" && ! ""$darwin"" && ! ""$nonstop"" ; then     case $MAX_FD in #(       max*)         # In POSIX sh, ulimit -H is undefined. That's why the result is checked to see if it worked.-        # shellcheck disable=SC3045+        # shellcheck disable=SC3045          MAX_FD=$( ulimit -H -n ) ||             warn ""Could not query maximum file descriptor limit""     esac@@ -152,7 +152,7 @@ if ! ""$cygwin"" && ! ""$darwin"" && ! ""$nonstop"" ; then       '' | soft) :;; #(       *)         # In POSIX sh, ulimit -n is undefined. That's why the result is checked to see if it worked.-        # shellcheck disable=SC3045+        # shellcheck disable=SC3045          ulimit -n ""$MAX_FD"" ||             warn ""Could not set maximum file descriptor limit to $MAX_FD""     esac```<!--- Tell us what happens instead of the expected behavior -->### ContextDefault file encoding is not UTF-8 per java standard and all Windows developers are affected as their locale is not UTF-8.I've tried:* run wrapper task under various Linux, macOS and Windows versions* explicitely set locale to non-UTF-8 locale on all systems above using LANG environment variableManual downloading the scripts is not a solution.<!--- How has this issue affected you? What are you trying to accomplish? --><!--- Providing context helps us come up with a solution that is most useful in the real world -->### Steps to Reproduce version `7.6` and `release7x` branch were chosen arbitrarely as they currently the same  at the moment of writing the issue to minimize difference and script complexity1. Download via curl to an empty folder 2. make a commit3. fetch the wrapper with the same version```zsh$ mkdir empty && cd empty && git init$ curl -sSLo gradle/wrapper/gradle-wrapper.properties https://github.com/gradle/gradle/raw/release7x/gradle/wrapper/gradle-wrapper.properties$ curl -sSLo gradle/wrapper/gradle-wrapper.jar https://github.com/gradle/gradle/raw/release7x/gradle/wrapper/gradle-wrapper.jar$ curl -sSLo gradlew  https://github.com/gradle/gradle/raw/release7x/gradlew$ curl -sSLo gradlew.bat https://github.com/gradle/gradle/raw/release7x/gradlew.bat $ chmod +x gradlew$ echo 'gradlew text eol=lf' >> .gitattributes$ echo 'gradlew.bat text eol=crlf' >> .gitattributes$ git add gradle* .gitattributes$ git commit -m test$ ./gradlew wrapper --gradle-version=7.6$ git diff$ # there should be no differences shown```<!---Provide a self-contained example project as an attached archive or a Github project.You can use the following template with a Gradle GitHub action set up to showcase your problem: https://github.com/gradle/gradle-issue-reproducerIn the rare cases where this is infeasible, we will also accept a detailed set of instructions.-->### Your Environment<!--- Include as many relevant details about the environment you experienced the bug in --><!--- A build scan https://scans.gradle.com/get-started is ideal -->tested on macOS, various Linux and Windows 10 & 11.
"
23353,1,0,130,0,1,sultan,0,"title:Existing version not resolved description:The artifact resolver fails to find artifacts if they exist outside maven metadata.### Current BehaviorThe artifact resolver fails to find artifacts if they exist outside maven metadata.The dependency tree fails to show there exist a version 1.2.6 for my dep+--- org.glassfish.web:jakarta.servlet.jsp.jstl:1.2.+ FAILED### Expected BehaviorArtifact resolver should search versions before calling it a day.1. The resolver can check the metadata first to speed up the search2. If no version found then search within the html page instead.### Contexttrying to keep a tidy dependency tree using an update range in same minorthe resolver fails to find the existing depshad to manually manage a fixed version value, this becomes tiring the more i have to do it### Steps to Reproduce1. build.gradle file with :dependencies {	runtimeOnly group: 'org.glassfish.web', name: 'jakarta.servlet.jsp.jstl', version: '1.2.+'}3.  run dependencies --write-locks### Workaround (tiring)runtimeOnly group: 'org.glassfish.web', name: 'jakarta.servlet.jsp.jstl', version: '1.2.6'### Your EnvironmentGradle 7.6
"
23345,0,0,251,0,1,ghale,0,"title:Add disambiguation rules for newer codenarc versions description:The default version of codenarc (3.1.0) has multiple published variants which must be disambiguated in the case where the JVMEcoSystemPlugin has not also been applied.We could just apply the `JvmEcoSystem` plugin here, but it does pull along a bunch of additional stuff that isn't necessary.  This is the minimum necessary to fix the problem.Fixes #23343 
"
23343,1,1998,64,0,0,davidburstrom,0,"title:8.0 RC 1 regression: CodeNarc plugin cannot resolve its dependencies description:### Expected/Current BehaviorIf I have a build script like```plugins {    id(""base"")    id(""codenarc"")}repositories {    mavenCentral()}val codenarcGradle by tasks.registering(CodeNarc::class) {    this.source(fileTree(""."").include(""*.gradle""))}tasks.named(""build"").configure {    dependsOn(codenarcGradle)}```and try to run `./gradlew build`, the build will fail with ```Execution failed for task ':codenarcGradle'.> Could not resolve all files for configuration ':codenarc'.   > Could not resolve org.codenarc:CodeNarc:3.1.0.     Required by:         project :      > Cannot choose between the following variants of org.codenarc:CodeNarc:3.1.0:          - runtimeElements          - shadowRuntimeElements        All of them match the consumer attributes:          - Variant 'runtimeElements' capability org.codenarc:CodeNarc:3.1.0:              - Unmatched attributes:                  - Provides org.gradle.category 'library' but the consumer didn't ask for it                  - Provides org.gradle.dependency.bundling 'external' but the consumer didn't ask for it                  - Provides org.gradle.jvm.version '8' but the consumer didn't ask for it                  - Provides org.gradle.libraryelements 'jar' but the consumer didn't ask for it                  - Provides org.gradle.status 'release' but the consumer didn't ask for it                  - Provides org.gradle.usage 'java-runtime' but the consumer didn't ask for it          - Variant 'shadowRuntimeElements' capability org.codenarc:CodeNarc:3.1.0:              - Unmatched attributes:                  - Provides org.gradle.category 'library' but the consumer didn't ask for it                  - Provides org.gradle.dependency.bundling 'shadowed' but the consumer didn't ask for it                  - Provides org.gradle.libraryelements 'jar' but the consumer didn't ask for it                  - Provides org.gradle.status 'release' but the consumer didn't ask for it                  - Provides org.gradle.usage 'java-runtime' but the consumer didn't ask for it```### ContextI'm running CodeNarc on a set of Gradle scripts written in Groovy. This worked in Gradle 7.6.### Steps to Reproduce [gradle-issue-codenarc.zip](https://github.com/gradle/gradle/files/10319761/gradle-issue-codenarc.zip)### Your EnvironmentBuild scan URL: https://scans.gradle.com/s/etlkrmzj44vaw/dependencies?toggled=W1swXSxbMCwwXV0
"
23330,0,0,251,0,0,ghale,0,"title:Only require ordinal nodes that are actually depended on description:We have been seeing some issues with the task execution plan not being able to make progress. Looking at [the reproducer](https://github.com/gradle/gradle/blob/e5cc0915b12e88bfaf97b4065352cd48642af51c/subprojects/core/src/integTest/groovy/org/gradle/api/DestroyerTaskCommandLineOrderIntegrationTest.groovy#L451) from @wolfs, it appears the following is happening:- we are adding producers to ordinal group 1- this causes the destroyer ordinals from the previous group (ordinal group 0) [to be scheduled](https://github.com/gradle/gradle/blob/901ba375e5bab6cceb48820a69a1858f8128b5b7/subprojects/core/src/main/java/org/gradle/execution/plan/OrdinalNodeAccess.java#L59) but not the producer ordinal from group 1 (or any of its dependencies)- when we update the dependencies complete for the last passing producer node from ordinal group 1, we [mark his dependents as ready](https://github.com/gradle/gradle/blob/901ba375e5bab6cceb48820a69a1858f8128b5b7/subprojects/core/src/main/java/org/gradle/execution/plan/DefaultFinalizedExecutionPlan.java#L364) which includes the producer node from group 1.- the producer node from group 1 is added to the ready group (even though it wasn't originally scheduled), completes, but then, because we have --continue, it adds its dependencies (including the producer node from ordinal group 0) to the waiting list.- Now we are waiting on the producer node from group 0, but it is not scheduled, so no progress.This change addresses the problem by only changing the state of ordinal nodes to required (i.e. SHOULD_RUN) when a task node (or another ordinal node) from a later group adds it as a dependency.  This means that it won't get added to the ready queue later (since it is not required) and therefore it won't trigger the condition where we end up waiting on one of its dependencies.This effectively reverts the changes from https://github.com/gradle/gradle/pull/23292.
"
23327,1,0,251,0,0,ghale,0,"title:Ensure ordinal nodes are scheduled if there are nodes in their group description:We have been seeing some issues with the task execution plan not being able to make progress.  Looking at [the reproducer](https://github.com/gradle/gradle/blob/e5cc0915b12e88bfaf97b4065352cd48642af51c/subprojects/core/src/integTest/groovy/org/gradle/api/DestroyerTaskCommandLineOrderIntegrationTest.groovy#L451) from @wolfs, it appears the following is happening:- we are adding producers to ordinal group 1- this causes the destroyer ordinals from the previous group (ordinal group 0) [to be scheduled](https://github.com/gradle/gradle/blob/901ba375e5bab6cceb48820a69a1858f8128b5b7/subprojects/core/src/main/java/org/gradle/execution/plan/OrdinalNodeAccess.java#L59) but not the producer ordinal from group 1 (or any of its dependencies)-  when we update the dependencies complete for the _passing_ producer node from ordinal group 1, we [mark his dependents as ready](https://github.com/gradle/gradle/blob/901ba375e5bab6cceb48820a69a1858f8128b5b7/subprojects/core/src/main/java/org/gradle/execution/plan/DefaultFinalizedExecutionPlan.java#L364) which includes the producer node from group 1.- the producer node from group 1 is added to the ready group, completes, but then, because we have `--continue`, it adds its dependencies (including the producer node from ordinal group 0) to the waiting list.- Now we are waiting on the producer node from group 0, but it is not scheduled, so no progress.This change addresses the problem by always scheduling the producer node for an ordinal group (and its predecessors) when a producer is added to the group.  Same for destroyers.  This means that the producer node will be scheduled and will run even if there are no succeeding groups that depend on it.Another approach here might be to change the initial state of ordinal nodes to something other than SHOULD_RUN, so that the producer node from ordinal group 0 never gets added to the waiting nodes (and possibly that the producer node from ordinal group 1 does not get added to ready nodes).This effectively reverts the changes from #23292. 
"
23326,1,0,0,0,0,Jromefan1,0,"title:Every time I try to use my mod in a world It give me a error description:""A crash in JVM native code was detected. Don't worry!""It says that every time I try to start up my mod. I tried reinstalling but nothing happened and now I can't run my mods. I tried and tried to start my mod but it won't work. ![Screenshot 2022-12-28 103651](https://user-images.githubusercontent.com/121569525/209843846-9d397018-2b71-4b75-912a-13b6a17ef323.png)
"
23316,1,0,297,0,0,samruddhikhandale,0,"title:CVE-2022-36033: Bump version for ""jsoup"" plugin description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues--><!--- Provide a brief summary of the issue in the title above -->### Expected Behavior`gradle` installs the `jsoup-1.15.3.jar` plugin. The plugin version should be >= 1.15.3 to patch the vulnerability.### Current Behavior<!--- Tell us what happens instead of the expected behavior -->`gradle v7.6` installs the `jsoup-1.15.1.jar` plugin. According to https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-36033, the vulnerability is patched in `jsoup-1.15.3.jar`.闂備焦鏋奸弲婵嗏枍閵忋垻绠? Looks like the version needs to be bumped in this file 婵☆偓绲介崯顖炲疮? https://github.com/gradle/gradle/blob/e311794a0f75ebec3c1eec83e35b66161ff81435/build-logic/build-platform/build.gradle.kts#L69
"
23308,0,0,251,0,1,ghale,0,"title:Backout changes for Codenarc to use worker API description:This is due to #23296.  We'll reintroduce these changes and fix the issue in 8.1. 
"
23302,0,0,215,0,0,adammurdoch,1,"title:Signing plugin does not sign Gradle module metadata artifact for Ivy publication description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues-->### Expected BehaviorThe signing plugin should sign all artifacts in a publication.### Current BehaviorThe signing plugin does not sign the module metadata artifact for Ivy publications. It does sign the module metadata artifact for Maven publications.### Context<!--- How has this issue affected you? What are you trying to accomplish? --><!--- Providing context helps us come up with a solution that is most useful in the real world -->### Steps to Reproduce Run `./gradlew publish` in this sample repository: https://github.com/gradle/configuration-cache-dependency-managementThe Ivy module in `ivy-lib/build` does not contain a signature for the metadata artifact. The Maven module in `maven-lib/build` does contain a signature.### Your Environment<!--- Include as many relevant details about the environment you experienced the bug in --><!--- A build scan https://scans.gradle.com/get-started is ideal -->Build scan URL:
"
23298,0,120,136,0,0,stewartbryson,0,"title:Use testSourceSets.add(sourceSets.functionalTest) instead of testSourceSets(sourceSets.functionalTest) description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues--><!--- Provide a brief summary of the issue in the title above -->### Expected Behavior<!--- Tell us what should happen -->When using the `init` task to create a `groovy-gradle-plugin`, the following is written to `plugin/build.gradle`:```gradlePlugin.testSourceSets(sourceSets.functionalTest)```Instead, it should write:```gradlePlugin.testSourceSets.add(sourceSets.functionalTest)```### Current Behavior<!--- Tell us what happens instead of the expected behavior -->The current behavior invalidates the built-in `test` sourceSet .### Context<!--- How has this issue affected you? What are you trying to accomplish? --><!--- Providing context helps us come up with a solution that is most useful in the real world -->It took me forever to figure out why the standard `test` sourceSet did not automatically apply the TestKit in the initialized project. It's not intuitive to people getting started with `JvmTestSuite` from older Gradle releases.### Steps to Reproduce <!---Provide a self-contained example project as an attached archive or a Github project.You can use the following template with a Gradle GitHub action set up to showcase your problem: https://github.com/gradle/gradle-issue-reproducerIn the rare cases where this is infeasible, we will also accept a detailed set of instructions.-->Run: `gradle init --type groovy-gradle-plugin`Create any test in: `plugin/src/test/groovy`Run: `gradle test`The output: `unable to resolve class org.gradle.testkit.runner.GradleRunner`### Your Environment<!--- Include as many relevant details about the environment you experienced the bug in --><!--- A build scan https://scans.gradle.com/get-started is ideal -->Build scan URL:https://scans.gradle.com/s/pmtdqlhzc4fzc
"
23296,0,258,251,0,0,ghale,0,"title:Regression: Running codenarc against Groovy4 projects is broken description:### Expected BehaviorAdding codenarc `3.1.0-groovy-4.0` and groovy4 to the codenarc dependencies allows codenarc to be run against a Groovy4 project.### Current BehaviorIt fails with```Caused by: java.lang.NoSuchMethodError: 'java.util.List org.codehaus.groovy.runtime.ScriptBytecodeAdapter.createRange(java.lang.Object, java.lang.Object, boolean, boolean)'at org.codenarc.report.TextReportWriter.writeSummary(TextReportWriter.groovy:58)```
"
23294,0,0,300,0,1,wolfs,1,"title:""Unable to make progress running work"" together with --continue and failing tasks (Backport to 7.6.1) description:Backport the fix for #23293 to 7.6.1.
"
23293,0,10842,300,0,0,wolfs,0,"title:""Unable to make progress running work"" together with --continue and failing tasks description:We saw some problems with ""Unable to make progress running work"" in the Gradle build when a task fails on CI. On CI we run with `--continue`. It seems like that exposes some problems in the current scheduling logic.Here is a build scan which has such a problem: https://ge.gradle.org/s/ae62bq5aaut2a/console-log?page=2#L1564-L1575It runs `clean compileAllBuild` and there is a compilation failure in `:dependency-management:compileJava`. That already would cause the build to fail, though the build stalls end ends up with this problem:```Unable to make progress running work. The following items are queued for execution but none of them can be started:  - Build ':':      - Waiting for nodes:          - producer locations for task group 0 (state=SHOULD_RUN, dependencies=NOT_COMPLETE, group=task group 0, no dependencies )      - Scheduling events:          - node added to plan: destroyer locations for task group 0, when: scheduled, state: SHOULD_RUN, dependencies: 122, is ready node? false          - node added to waiting-for-set: producer locations for task group 0, when: other node completed, due-to: producer locations for task group 1, state: SHOULD_RUN, dependencies: 0, is ready node? false      - Ordinal groups:          - group 0 entry nodes: [:clean (EXECUTED), :antlr:clean (EXECUTED), :api-metadata:clean (EXECUTED), :architecture-test:clean (EXECUTED), :base-annotations:clean (EXECUTED), :base-services:clean (EXECUTED), :base-services-groovy:clean (EXECUTED), :bootstrap:clean (EXECUTED), :build-cache:clean (EXECUTED), :build-cache-base:clean (EXECUTED), :build-cache-http:clean (EXECUTED), :build-cache-packaging:clean (EXECUTED), :build-events:clean (EXECUTED), :build-init:clean (EXECUTED), :build-operations:clean (EXECUTED), :build-option:clean (EXECUTED), :build-profile:clean (EXECUTED), :build-scan-performance:clean (EXECUTED), :cli:clean (EXECUTED), :code-quality:clean (EXECUTED), :composite-builds:clean (EXECUTED), :configuration-cache:clean (EXECUTED), :core:clean (EXECUTED), :core-api:clean (EXECUTED), :core-platform:clean (EXECUTED), :dependency-management:clean (EXECUTED), :diagnostics:clean (EXECUTED), :distributions-basics:clean (EXECUTED), :distributions-core:clean (EXECUTED), :distributions-dependencies:clean (EXECUTED), :distributions-full:clean (EXECUTED), :distributions-integ-tests:clean (EXECUTED), :distributions-jvm:clean (EXECUTED), :distributions-native:clean (EXECUTED), :distributions-publishing:clean (EXECUTED), :docs:clean (EXECUTED), :docs-asciidoctor-extensions:clean (EXECUTED), :docs-asciidoctor-extensions-base:clean (EXECUTED), :ear:clean (EXECUTED), :enterprise:clean (EXECUTED), :enterprise-logging:clean (EXECUTED), :enterprise-operations:clean (EXECUTED), :enterprise-workers:clean (EXECUTED), :execution:clean (EXECUTED), :file-collections:clean (EXECUTED), :file-temp:clean (EXECUTED), :file-watching:clean (EXECUTED), :files:clean (EXECUTED), :functional:clean (EXECUTED), :hashing:clean (EXECUTED), :ide:clean (EXECUTED), :ide-native:clean (EXECUTED), :installation-beacon:clean (EXECUTED), :instrumentation-agent:clean (EXECUTED), :integ-test:clean (EXECUTED), :internal-architecture-testing:clean (EXECUTED), :internal-build-reports:clean (EXECUTED), :internal-integ-testing:clean (EXECUTED), :internal-performance-testing:clean (EXECUTED), :internal-testing:clean (EXECUTED), :ivy:clean (EXECUTED), :jacoco:clean (EXECUTED), :java-compiler-plugin:clean (EXECUTED), :jvm-services:clean (EXECUTED), :kotlin-dsl:clean (EXECUTED), :kotlin-dsl-integ-tests:clean (EXECUTED), :kotlin-dsl-plugins:clean (EXECUTED), :kotlin-dsl-provider-plugins:clean (EXECUTED), :kotlin-dsl-tooling-builders:clean (EXECUTED), :kotlin-dsl-tooling-models:clean (EXECUTED), :language-groovy:clean (EXECUTED), :language-java:clean (EXECUTED), :language-jvm:clean (EXECUTED), :language-native:clean (EXECUTED), :launcher:clean (EXECUTED), :logging:clean (EXECUTED), :logging-api:clean (EXECUTED), :maven:clean (EXECUTED), :messaging:clean (EXECUTED), :model-core:clean (EXECUTED), :model-groovy:clean (EXECUTED), :native:clean (EXECUTED), :normalization-java:clean (EXECUTED), :performance:clean (EXECUTED), :persistent-cache:clean (EXECUTED), :platform-base:clean (EXECUTED), :platform-jvm:clean (EXECUTED), :platform-native:clean (EXECUTED), :plugin-development:clean (EXECUTED), :plugin-use:clean (EXECUTED), :plugins:clean (EXECUTED), :problems:clean (EXECUTED), :process-services:clean (EXECUTED), :publish:clean (EXECUTED), :reporting:clean (EXECUTED), :resources:clean (EXECUTED), :resources-gcs:clean (EXECUTED), :resources-http:clean (EXECUTED), :resources-s3:clean (EXECUTED), :resources-sftp:clean (EXECUTED), :samples:clean (EXECUTED), :scala:clean (EXECUTED), :security:clean (EXECUTED), :signing:clean (EXECUTED), :smoke-test:clean (EXECUTED), :snapshots:clean (EXECUTED), :soak:clean (EXECUTED), :test-kit:clean (EXECUTED), :testing-base:clean (EXECUTED), :testing-junit-platform:clean (EXECUTED), :testing-jvm:clean (EXECUTED), :testing-jvm-infrastructure:clean (EXECUTED), :testing-native:clean (EXECUTED), :tooling-api:clean (EXECUTED), :tooling-api-builders:clean (EXECUTED), :tooling-native:clean (EXECUTED), :version-control:clean (EXECUTED), :worker-processes:clean (EXECUTED), :worker-services:clean (EXECUTED), :workers:clean (EXECUTED), :wrapper:clean (EXECUTED), :wrapper-shared:clean (EXECUTED)]          - group 1 entry nodes: [:compileAllBuild (EXECUTED), :antlr:compileAllBuild (FAILED_DEPENDENCY), :api-metadata:compileAllBuild (FAILED_DEPENDENCY), :architecture-test:compileAllBuild (FAILED_DEPENDENCY), :base-annotations:compileAllBuild (FAILED_DEPENDENCY), :base-services:compileAllBuild (FAILED_DEPENDENCY), :base-services-groovy:compileAllBuild (FAILED_DEPENDENCY), :bootstrap:compileAllBuild (FAILED_DEPENDENCY), :build-cache:compileAllBuild (FAILED_DEPENDENCY), :build-cache-base:compileAllBuild (FAILED_DEPENDENCY), :build-cache-http:compileAllBuild (FAILED_DEPENDENCY), :build-cache-packaging:compileAllBuild (FAILED_DEPENDENCY), :build-events:compileAllBuild (FAILED_DEPENDENCY), :build-init:compileAllBuild (FAILED_DEPENDENCY), :build-operations:compileAllBuild (FAILED_DEPENDENCY), :build-option:compileAllBuild (FAILED_DEPENDENCY), :build-profile:compileAllBuild (FAILED_DEPENDENCY), :build-scan-performance:compileAllBuild (FAILED_DEPENDENCY), :cli:compileAllBuild (FAILED_DEPENDENCY), :code-quality:compileAllBuild (FAILED_DEPENDENCY), :composite-builds:compileAllBuild (FAILED_DEPENDENCY), :configuration-cache:compileAllBuild (FAILED_DEPENDENCY), :core:compileAllBuild (FAILED_DEPENDENCY), :core-api:compileAllBuild (FAILED_DEPENDENCY), :dependency-management:compileAllBuild (FAILED_DEPENDENCY), :diagnostics:compileAllBuild (FAILED_DEPENDENCY), :distributions-integ-tests:compileAllBuild (FAILED_DEPENDENCY), :docs:compileAllBuild (FAILED_DEPENDENCY), :docs-asciidoctor-extensions:compileAllBuild (FAILED_DEPENDENCY), :docs-asciidoctor-extensions-base:compileAllBuild (FAILED_DEPENDENCY), :ear:compileAllBuild (FAILED_DEPENDENCY), :enterprise:compileAllBuild (FAILED_DEPENDENCY), :enterprise-logging:compileAllBuild (FAILED_DEPENDENCY), :enterprise-operations:compileAllBuild (FAILED_DEPENDENCY), :enterprise-workers:compileAllBuild (FAILED_DEPENDENCY), :execution:compileAllBuild (FAILED_DEPENDENCY), :file-collections:compileAllBuild (FAILED_DEPENDENCY), :file-temp:compileAllBuild (FAILED_DEPENDENCY), :file-watching:compileAllBuild (FAILED_DEPENDENCY), :files:compileAllBuild (FAILED_DEPENDENCY), :functional:compileAllBuild (FAILED_DEPENDENCY), :hashing:compileAllBuild (FAILED_DEPENDENCY), :ide:compileAllBuild (FAILED_DEPENDENCY), :ide-native:compileAllBuild (FAILED_DEPENDENCY), :installation-beacon:compileAllBuild (FAILED_DEPENDENCY), :instrumentation-agent:compileAllBuild (FAILED_DEPENDENCY), :integ-test:compileAllBuild (FAILED_DEPENDENCY), :internal-architecture-testing:compileAllBuild (FAILED_DEPENDENCY), :internal-integ-testing:compileAllBuild (FAILED_DEPENDENCY), :internal-performance-testing:compileAllBuild (FAILED_DEPENDENCY), :internal-testing:compileAllBuild (FAILED_DEPENDENCY), :ivy:compileAllBuild (FAILED_DEPENDENCY), :jacoco:compileAllBuild (FAILED_DEPENDENCY), :java-compiler-plugin:compileAllBuild (FAILED_DEPENDENCY), :jvm-services:compileAllBuild (FAILED_DEPENDENCY), :kotlin-dsl:compileAllBuild (FAILED_DEPENDENCY), :kotlin-dsl-integ-tests:compileAllBuild (FAILED_DEPENDENCY), :kotlin-dsl-plugins:compileAllBuild (FAILED_DEPENDENCY), :kotlin-dsl-provider-plugins:compileAllBuild (FAILED_DEPENDENCY), :kotlin-dsl-tooling-builders:compileAllBuild (FAILED_DEPENDENCY), :kotlin-dsl-tooling-models:compileAllBuild (FAILED_DEPENDENCY), :language-groovy:compileAllBuild (FAILED_DEPENDENCY), :language-java:compileAllBuild (FAILED_DEPENDENCY), :language-jvm:compileAllBuild (FAILED_DEPENDENCY), :language-native:compileAllBuild (FAILED_DEPENDENCY), :launcher:compileAllBuild (FAILED_DEPENDENCY), :logging:compileAllBuild (FAILED_DEPENDENCY), :logging-api:compileAllBuild (FAILED_DEPENDENCY), :maven:compileAllBuild (FAILED_DEPENDENCY), :messaging:compileAllBuild (FAILED_DEPENDENCY), :model-core:compileAllBuild (FAILED_DEPENDENCY), :model-groovy:compileAllBuild (FAILED_DEPENDENCY), :native:compileAllBuild (FAILED_DEPENDENCY), :normalization-java:compileAllBuild (FAILED_DEPENDENCY), :performance:compileAllBuild (FAILED_DEPENDENCY), :persistent-cache:compileAllBuild (FAILED_DEPENDENCY), :platform-base:compileAllBuild (FAILED_DEPENDENCY), :platform-jvm:compileAllBuild (FAILED_DEPENDENCY), :platform-native:compileAllBuild (FAILED_DEPENDENCY), :plugin-development:compileAllBuild (FAILED_DEPENDENCY), :plugin-use:compileAllBuild (FAILED_DEPENDENCY), :plugins:compileAllBuild (FAILED_DEPENDENCY), :problems:compileAllBuild (FAILED_DEPENDENCY), :process-services:compileAllBuild (FAILED_DEPENDENCY), :publish:compileAllBuild (FAILED_DEPENDENCY), :reporting:compileAllBuild (FAILED_DEPENDENCY), :resources:compileAllBuild (FAILED_DEPENDENCY), :resources-gcs:compileAllBuild (FAILED_DEPENDENCY), :resources-http:compileAllBuild (FAILED_DEPENDENCY), :resources-s3:compileAllBuild (FAILED_DEPENDENCY), :resources-sftp:compileAllBuild (FAILED_DEPENDENCY), :samples:compileAllBuild (FAILED_DEPENDENCY), :scala:compileAllBuild (FAILED_DEPENDENCY), :security:compileAllBuild (FAILED_DEPENDENCY), :signing:compileAllBuild (FAILED_DEPENDENCY), :smoke-test:compileAllBuild (FAILED_DEPENDENCY), :snapshots:compileAllBuild (FAILED_DEPENDENCY), :soak:compileAllBuild (FAILED_DEPENDENCY), :test-kit:compileAllBuild (FAILED_DEPENDENCY), :testing-base:compileAllBuild (FAILED_DEPENDENCY), :testing-junit-platform:compileAllBuild (FAILED_DEPENDENCY), :testing-jvm:compileAllBuild (FAILED_DEPENDENCY), :testing-jvm-infrastructure:compileAllBuild (FAILED_DEPENDENCY), :testing-native:compileAllBuild (FAILED_DEPENDENCY), :tooling-api:compileAllBuild (FAILED_DEPENDENCY), :tooling-api-builders:compileAllBuild (FAILED_DEPENDENCY), :tooling-native:compileAllBuild (FAILED_DEPENDENCY), :version-control:compileAllBuild (FAILED_DEPENDENCY), :worker-processes:compileAllBuild (FAILED_DEPENDENCY), :worker-services:compileAllBuild (FAILED_DEPENDENCY), :workers:compileAllBuild (FAILED_DEPENDENCY), :wrapper:compileAllBuild (FAILED_DEPENDENCY), :wrapper-shared:compileAllBuild (FAILED_DEPENDENCY)]  - Workers waiting for work: 4  - Stopped workers: 8```### Expected BehaviorThe build fails after running all the tasks which don't depend on the failing compile task.### Current BehaviorThe build stalls and then fails with ""Unable to make progress running work."", see the error message above.### ContextThe good news is that this doesn't seem to affect builds which already are passing. Only failing builds will take 30 seconds longer and then fail with two failures except with one.### Steps to Reproduce https://github.com/gradle/gradle/pull/23292 adds a reproducer for the problem.### Your EnvironmentBuild scan URL: https://ge.gradle.org/s/ae62bq5aaut2a
"
23286,0,0,296,0,0,jvandort,0,"title:VersionConstraint.branch and ModuleDependency.endorsing are not copied when a dependency is copied.  description:When copying a dependency via `Dependency#copy`, the `endorsing` field of `AbstractModuleDependency` and the `branch` field of `DefaultMutableVersionConstraint` are not copied. This means `copy` is incomplete and is thus not a true copy. 
"
23256,0,0,251,0,1,ghale,0,"title:Fix issue with ALWAYS cache cleanup not firing on session end description:#23244 broke the ALWAYS cleanup frequency such that cleanup was no longer occurring at the end of the build session.  It turns out that our integration tests don't reuse Gradle user home services by default, which meant that the tests that should have caught this didn't because cleanup was still getting called at session end when the GUH caches were being closed.This change fixes the issue and adjusts the tests that would catch this problem by ensuring that they reuse Gradle user home services and won't introduce a cache close.
"
23255,1,562,7,0,0,flemminglundahl,0,"title:Dependency Management Resolution not possible with modules description:When using the Dependency Management Resolution in combination with modules extensions are not available when used in either allporjects or subprojects in the root build.gradle.### Expected BehaviorWould be able to use dependency extensions in the same way it is possible in buildscript and subprojects.### Current Behavior`Extension with name 'libs' does not exist. Currently registered extension names: [ext, base, defaultArtifacts, sourceSets, reporting, javaToolchains, java, testing, scalaRuntime, scala]`### ContextTrying to align dependencies as intended with the Dependency Management Resolution feature.### Steps to ReproduceRoot build.gradle.kts```plugins {  kotlin(""jvm"") version ""1.6.21""}buildscript {  dependencies {    classpath(libs.scala.library)  }}allprojects {  apply(plugin = ""java"")  apply(plugin = ""scala"")  dependencies {//    implementation(libs.scala.library)  }}``````rootProject.name = ""dependency-management-resolution-modules-issue-sample""dependencyResolutionManagement {  repositories.mavenLocal()  versionCatalogs {    create(""libs"") {      library(""scala-library"", ""org.scala-lang:scala-library:2.13.6"")    }  }}include(""child"")```The child module is not important, it just has to be there.A project with this setup will be able to create the gradle project. But the the dependency implementation(libs.scala.library) in allrpojects is included, it will fail with the mentioned error. The error can then again be removed by excluding the child module. The same issue can be reproduced with subprojects instead of allprojects. Since buildscripts works fine I assume that there is an issue with applying this when subprojects are available. There is no issue using this feature in the subprojects/modules themselves. It is only when using either allprojects or subprojects.I created a sample-project where the issue is reproduceable, but wasn't able to either upload it to this issue or create a branch on this repo for it. Let me know if more information is needed.### Your EnvironmentReproduced with versions 7.5.1 and 7.6.
"
23246,0,0,296,1,1,jvandort,0,"title:Ensure all version catalog dependency properties are copied description:Follow up for #23096 with a more comprehensive test. Ensures `targetConfiguration` is copied when version catalog dependencies are copied. This property was copied pre `7.6` but regressed in `7.6`.While fixing this bug, I discovered `endorsing` and `versionConstraint.branch` were also not copied. We are leaving those fixes out of this PR but will fix in `8.1`. See: https://github.com/gradle/gradle/issues/23286
"
23232,0,0,296,0,1,jvandort,0,"title:Inject services into MinimalExternalModuleDependency instances description:<!--- The issue this PR addresses -->Fixes #23096All dependencies which extend `AbstractModuleDependency` should have their `attributesFactory` and `capabilityNotationParser` initialized. This is usually done in the `DefaultDependencyFactory`, though now that `MinimalExternalModuleDependency` extends `ExternalModuleDependency` and its implements extend `AbstractModuleDependency`, we must be sure that we initialize its services when we instantiate them. This PR does that. Further, we ensure we properly copy all fields in instances of `MinimalExternalModuleDependency` when copying them. This ensures we do not leave behind dependency artifacts or other data when adding dependencies to configurations via the project `DependencyHandler`. 
"
23224,0,0,259,1,1,asodja,0,"title:Backport to 7.6.1 ""Fix for Incremental compilation with modules"" description:Backport #23119 to 7.x line to fix https://github.com/gradle/gradle/issues/23067 in 7.x line.
"
23199,0,0,113,0,1,xaviarias,1,"title:`ValidatePlugins` task uses isolated process with configured toolchain description:  - Fixes: #23125
"
23163,1,12341,24,0,0,yogurtearl,0,"title:Gradle repeatedly tries to download from invalid `https://repo.gradle.org/gradle/list/libs-releases` URLs when sync'd with intellij.  description:In Intellij (or android studio) 2022.2 with Gradle 7.6: (See repro project attached to this issue: https://issuetracker.google.com/issues/262411060)**Actual**When doing a IDE/gradle sync gradle adds a ""Gradle Libs"" repository to the build, which then tries to download URLs are invalid. It repeatedly tries and fails to load these on EVERY sync. See here: https://github.com/gradle/gradle/blame/c8e06b899e7ac5fb70be7d9e336d9dad512924bd/subprojects/ide/src/main/java/org/gradle/plugins/ide/internal/resolver/DefaultGradleApiSourcesResolver.java#L36which leads to this during Gradle Sync: ```2022-12-14T09:08:15.193-0700 [DEBUG] [org.gradle.api.internal.artifacts.ivyservice.ivyresolve.RepositoryChainComponentMetaDataResolver] Using org.jetbrains:annotations:13.0 from org.gradle.api.internal.artifacts.ivyservice.ivyresolve.FilteredModuleComponentRepository@6636618e2022-12-14T09:08:15.193-0700 [DEBUG] [org.gradle.api.internal.artifacts.ivyservice.modulecache.ResolvedArtifactCaches] Reusing in-memory cache for repo 'Gradle Libs' [e23a3c8fff203ae7442cf4965791923f].2022-12-14T09:08:15.193-0700 [DEBUG] [org.gradle.api.internal.artifacts.ivyservice.ivyresolve.RepositoryChainComponentMetaDataResolver] Attempting to resolve component for org.codehaus.groovy:groovy:3.0.13 using repositories [Gradle Libs]2022-12-14T09:08:15.193-0700 [DEBUG] [org.gradle.api.internal.artifacts.ivyservice.ivyresolve.CachingModuleComponentRepository] Detected non-existence of module 'org.codehaus.groovy:groovy:3.0.13' in resolver cache 'Gradle Libs'2022-12-14T09:08:15.193-0700 [DEBUG] [org.gradle.api.internal.artifacts.ivyservice.modulecache.ResolvedArtifactCaches] Reusing in-memory cache for repo 'Gradle Libs' [e23a3c8fff203ae7442cf4965791923f].2022-12-14T09:08:15.193-0700 [DEBUG] [org.gradle.api.internal.artifacts.ivyservice.ivyresolve.RepositoryChainComponentMetaDataResolver] Attempting to resolve component for org.codehaus.groovy:groovy-ant:3.0.13 using repositories [Gradle Libs]2022-12-14T09:08:15.193-0700 [DEBUG] [org.gradle.api.internal.artifacts.ivyservice.ivyresolve.CachingModuleComponentRepository] Detected non-existence of module 'org.codehaus.groovy:groovy-ant:3.0.13' in resolver cache 'Gradle Libs'2022-12-14T09:08:15.194-0700 [DEBUG] [org.gradle.api.internal.artifacts.ivyservice.modulecache.ResolvedArtifactCaches] Reusing in-memory cache for repo 'Gradle Libs' [e23a3c8fff203ae7442cf4965791923f].2022-12-14T09:08:15.194-0700 [DEBUG] [org.gradle.api.internal.artifacts.ivyservice.ivyresolve.RepositoryChainComponentMetaDataResolver] Attempting to resolve component for org.codehaus.groovy:groovy-astbuilder:3.0.13 using repositories [Gradle Libs]2022-12-14T09:08:15.194-0700 [DEBUG] [org.gradle.api.internal.artifacts.ivyservice.ivyresolve.CachingModuleComponentRepository] Detected non-existence of module 'org.codehaus.groovy:groovy-astbuilder:3.0.13' in resolver cache 'Gradle Libs'2022-12-14T09:08:15.194-0700 [DEBUG] [org.gradle.api.internal.artifacts.ivyservice.modulecache.ResolvedArtifactCaches] Reusing in-memory cache for repo 'Gradle Libs' [e23a3c8fff203ae7442cf4965791923f].2022-12-14T09:08:15.194-0700 [DEBUG] [org.gradle.api.internal.artifacts.ivyservice.ivyresolve.RepositoryChainComponentMetaDataResolver] Attempting to resolve component for org.codehaus.groovy:groovy-console:3.0.13 using repositories [Gradle Libs]2022-12-14T09:08:15.194-0700 [DEBUG] [org.gradle.api.internal.artifacts.ivyservice.ivyresolve.CachingModuleComponentRepository] Detected non-existence of module 'org.codehaus.groovy:groovy-console:3.0.13' in resolver cache 'Gradle Libs'2022-12-14T09:08:15.194-0700 [DEBUG] [org.gradle.api.internal.artifacts.ivyservice.modulecache.ResolvedArtifactCaches] Reusing in-memory cache for repo 'Gradle Libs' [e23a3c8fff203ae7442cf4965791923f].2022-12-14T09:08:15.194-0700 [DEBUG] [org.gradle.api.internal.artifacts.ivyservice.ivyresolve.RepositoryChainComponentMetaDataResolver] Attempting to resolve component for org.codehaus.groovy:groovy-datetime:3.0.13 using repositories [Gradle Libs]2022-12-14T09:08:15.194-0700 [DEBUG] [org.gradle.api.internal.artifacts.ivyservice.ivyresolve.CachingModuleComponentRepository] Detected non-existence of module 'org.codehaus.groovy:groovy-datetime:3.0.13' in resolver cache 'Gradle Libs'2022-12-14T09:08:15.194-0700 [DEBUG] [org.gradle.api.internal.artifacts.ivyservice.modulecache.ResolvedArtifactCaches] Reusing in-memory cache for repo 'Gradle Libs' [e23a3c8fff203ae7442cf4965791923f].2022-12-14T09:08:15.194-0700 [DEBUG] [org.gradle.api.internal.artifacts.ivyservice.ivyresolve.RepositoryChainComponentMetaDataResolver] Attempting to resolve component for org.codehaus.groovy:groovy-dateutil:3.0.13 using repositories [Gradle Libs]2022-12-14T09:08:15.194-0700 [DEBUG] [org.gradle.api.internal.artifacts.ivyservice.ivyresolve.CachingModuleComponentRepository] Detected non-existence of module 'org.codehaus.groovy:groovy-dateutil:3.0.13' in resolver cache 'Gradle Libs'2022-12-14T09:08:15.194-0700 [DEBUG] [org.gradle.api.internal.artifacts.ivyservice.modulecache.ResolvedArtifactCaches] Reusing in-memory cache for repo 'Gradle Libs' [e23a3c8fff203ae7442cf4965791923f].2022-12-14T09:08:15.194-0700 [DEBUG] [org.gradle.api.internal.artifacts.ivyservice.ivyresolve.RepositoryChainComponentMetaDataResolver] Attempting to resolve component for org.codehaus.groovy:groovy-groovydoc:3.0.13 using repositories [Gradle Libs]2022-12-14T09:08:15.194-0700 [DEBUG] [org.gradle.api.internal.artifacts.ivyservice.ivyresolve.CachingModuleComponentRepository] Detected non-existence of module 'org.codehaus.groovy:groovy-groovydoc:3.0.13' in resolver cache 'Gradle Libs'2022-12-14T09:08:15.194-0700 [DEBUG] [org.gradle.api.internal.artifacts.ivyservice.modulecache.ResolvedArtifactCaches] Reusing in-memory cache for repo 'Gradle Libs' [e23a3c8fff203ae7442cf4965791923f].2022-12-14T09:08:15.194-0700 [DEBUG] [org.gradle.api.internal.artifacts.ivyservice.ivyresolve.RepositoryChainComponentMetaDataResolver] Attempting to resolve component for org.codehaus.groovy:groovy-json:3.0.13 using repositories [Gradle Libs]2022-12-14T09:08:15.195-0700 [DEBUG] [org.gradle.api.internal.artifacts.ivyservice.ivyresolve.CachingModuleComponentRepository] Detected non-existence of module 'org.codehaus.groovy:groovy-json:3.0.13' in resolver cache 'Gradle Libs'2022-12-14T09:08:15.195-0700 [DEBUG] [org.gradle.api.internal.artifacts.ivyservice.modulecache.ResolvedArtifactCaches] Reusing in-memory cache for repo 'Gradle Libs' [e23a3c8fff203ae7442cf4965791923f].2022-12-14T09:08:15.195-0700 [DEBUG] [org.gradle.api.internal.artifacts.ivyservice.ivyresolve.RepositoryChainComponentMetaDataResolver] Attempting to resolve component for org.codehaus.groovy:groovy-nio:3.0.13 using repositories [Gradle Libs]2022-12-14T09:08:15.195-0700 [DEBUG] [org.gradle.api.internal.artifacts.ivyservice.ivyresolve.CachingModuleComponentRepository] Detected non-existence of module 'org.codehaus.groovy:groovy-nio:3.0.13' in resolver cache 'Gradle Libs'2022-12-14T09:08:15.195-0700 [DEBUG] [org.gradle.api.internal.artifacts.ivyservice.modulecache.ResolvedArtifactCaches] Reusing in-memory cache for repo 'Gradle Libs' [e23a3c8fff203ae7442cf4965791923f].2022-12-14T09:08:15.195-0700 [DEBUG] [org.gradle.api.internal.artifacts.ivyservice.ivyresolve.RepositoryChainComponentMetaDataResolver] Attempting to resolve component for org.codehaus.groovy:groovy-sql:3.0.13 using repositories [Gradle Libs]2022-12-14T09:08:15.195-0700 [DEBUG] [org.gradle.api.internal.artifacts.ivyservice.ivyresolve.CachingModuleComponentRepository] Detected non-existence of module 'org.codehaus.groovy:groovy-sql:3.0.13' in resolver cache 'Gradle Libs'2022-12-14T09:08:15.195-0700 [DEBUG] [org.gradle.api.internal.artifacts.ivyservice.modulecache.ResolvedArtifactCaches] Reusing in-memory cache for repo 'Gradle Libs' [e23a3c8fff203ae7442cf4965791923f].2022-12-14T09:08:15.195-0700 [DEBUG] [org.gradle.api.internal.artifacts.ivyservice.ivyresolve.RepositoryChainComponentMetaDataResolver] Attempting to resolve component for org.codehaus.groovy:groovy-templates:3.0.13 using repositories [Gradle Libs]2022-12-14T09:08:15.195-0700 [DEBUG] [org.gradle.api.internal.artifacts.ivyservice.ivyresolve.CachingModuleComponentRepository] Detected non-existence of module 'org.codehaus.groovy:groovy-templates:3.0.13' in resolver cache 'Gradle Libs'2022-12-14T09:08:15.195-0700 [DEBUG] [org.gradle.api.internal.artifacts.ivyservice.modulecache.ResolvedArtifactCaches] Reusing in-memory cache for repo 'Gradle Libs' [e23a3c8fff203ae7442cf4965791923f].2022-12-14T09:08:15.195-0700 [DEBUG] [org.gradle.api.internal.artifacts.ivyservice.ivyresolve.RepositoryChainComponentMetaDataResolver] Attempting to resolve component for org.codehaus.groovy:groovy-test:3.0.13 using repositories [Gradle Libs]2022-12-14T09:08:15.195-0700 [DEBUG] [org.gradle.api.internal.artifacts.ivyservice.ivyresolve.CachingModuleComponentRepository] Detected non-existence of module 'org.codehaus.groovy:groovy-test:3.0.13' in resolver cache 'Gradle Libs'2022-12-14T09:08:15.195-0700 [DEBUG] [org.gradle.api.internal.artifacts.ivyservice.modulecache.ResolvedArtifactCaches] Reusing in-memory cache for repo 'Gradle Libs' [e23a3c8fff203ae7442cf4965791923f].2022-12-14T09:08:15.195-0700 [DEBUG] [org.gradle.api.internal.artifacts.ivyservice.ivyresolve.RepositoryChainComponentMetaDataResolver] Attempting to resolve component for org.codehaus.groovy:groovy-xml:3.0.13 using repositories [Gradle Libs]2022-12-14T09:08:15.195-0700 [DEBUG] [org.gradle.api.internal.artifacts.ivyservice.ivyresolve.CachingModuleComponentRepository] Detected non-existence of module 'org.codehaus.groovy:groovy-xml:3.0.13' in resolver cache 'Gradle Libs'```Which leads to downloading from these invalid URLs (these poms do not exist at these URLs) ```2022-12-14T08:39:36.181-0700 [DEBUG] [org.gradle.internal.resource.transport.http.HttpClientHelper] Performing HTTP GET: https://repo.gradle.org/gradle/list/libs-releases/org/codehaus/groovy/groovy/3.0.13/groovy-3.0.13.pom2022-12-14T08:39:36.643-0700 [INFO] [org.gradle.internal.resource.transport.http.HttpClientHelper] Resource missing. [HTTP GET: https://repo.gradle.org/gradle/list/libs-releases/org/codehaus/groovy/groovy/3.0.13/groovy-3.0.13.pom]2022-12-14T08:39:36.644-0700 [DEBUG] [org.gradle.internal.resource.transport.http.HttpClientHelper] Performing HTTP GET: https://repo.gradle.org/gradle/list/libs-releases/org/codehaus/groovy/groovy-ant/3.0.13/groovy-ant-3.0.13.pom2022-12-14T08:39:37.064-0700 [INFO] [org.gradle.internal.resource.transport.http.HttpClientHelper] Resource missing. [HTTP GET: https://repo.gradle.org/gradle/list/libs-releases/org/codehaus/groovy/groovy-ant/3.0.13/groovy-ant-3.0.13.pom]2022-12-14T08:39:37.065-0700 [DEBUG] [org.gradle.internal.resource.transport.http.HttpClientHelper] Performing HTTP GET: https://repo.gradle.org/gradle/list/libs-releases/org/codehaus/groovy/groovy-astbuilder/3.0.13/groovy-astbuilder-3.0.13.pom2022-12-14T08:39:37.292-0700 [INFO] [org.gradle.internal.resource.transport.http.HttpClientHelper] Resource missing. [HTTP GET: https://repo.gradle.org/gradle/list/libs-releases/org/codehaus/groovy/groovy-astbuilder/3.0.13/groovy-astbuilder-3.0.13.pom]2022-12-14T08:39:37.293-0700 [DEBUG] [org.gradle.internal.resource.transport.http.HttpClientHelper] Performing HTTP GET: https://repo.gradle.org/gradle/list/libs-releases/org/codehaus/groovy/groovy-console/3.0.13/groovy-console-3.0.13.pom2022-12-14T08:39:37.477-0700 [INFO] [org.gradle.internal.resource.transport.http.HttpClientHelper] Resource missing. [HTTP GET: https://repo.gradle.org/gradle/list/libs-releases/org/codehaus/groovy/groovy-console/3.0.13/groovy-console-3.0.13.pom]2022-12-14T08:39:37.479-0700 [DEBUG] [org.gradle.internal.resource.transport.http.HttpClientHelper] Performing HTTP GET: https://repo.gradle.org/gradle/list/libs-releases/org/codehaus/groovy/groovy-datetime/3.0.13/groovy-datetime-3.0.13.pom2022-12-14T08:39:38.052-0700 [INFO] [org.gradle.internal.resource.transport.http.HttpClientHelper] Resource missing. [HTTP GET: https://repo.gradle.org/gradle/list/libs-releases/org/codehaus/groovy/groovy-datetime/3.0.13/groovy-datetime-3.0.13.pom]2022-12-14T08:39:38.053-0700 [DEBUG] [org.gradle.internal.resource.transport.http.HttpClientHelper] Performing HTTP GET: https://repo.gradle.org/gradle/list/libs-releases/org/codehaus/groovy/groovy-dateutil/3.0.13/groovy-dateutil-3.0.13.pom2022-12-14T08:39:38.264-0700 [INFO] [org.gradle.internal.resource.transport.http.HttpClientHelper] Resource missing. [HTTP GET: https://repo.gradle.org/gradle/list/libs-releases/org/codehaus/groovy/groovy-dateutil/3.0.13/groovy-dateutil-3.0.13.pom]2022-12-14T08:39:38.266-0700 [DEBUG] [org.gradle.internal.resource.transport.http.HttpClientHelper] Performing HTTP GET: https://repo.gradle.org/gradle/list/libs-releases/org/codehaus/groovy/groovy-groovydoc/3.0.13/groovy-groovydoc-3.0.13.pom```**Expected** Don't download from invalid URLs. 
"
23162,1,291,64,0,0,davidburstrom,0,"title:Gradle 7.6: Dependency verification is failing for latest version of a dependency even though it should not be resolved description:### Expected BehaviorIf a project* is using dependency verification and* it already has kotlin-compiler-embeddable:1.7.22 accounted for and* it sets up a configuration like below (with a constraint with open upper bound)```buildscript {    repositories {        mavenCentral()    }    dependencies {        classpath(""org.jetbrains.kotlin:kotlin-compiler-embeddable"") {            version {                strictly(""[1.4.0,)"")                prefer(""1.7.22"")            }        }    }}```it should simply resolve version 1.7.22 in the dependency tree.### Current BehaviorDependency verification fails saying that 1.8.0-RC metadata (or whichever is the current latest) is not accounted for.### ContextI'd really want to use dependency verification. Adding the latest version is a no-go, as the build is not reproducible. The workaround it to turn off dependency metadata verification, which is not ideal either.### Steps to Reproduce [gradle-dependency-verification-bug-issue-with-latest.zip](https://github.com/gradle/gradle/files/10229222/gradle-dependency-verification-bug-issue-with-latest.zip)The self-contained example can be run with `./build.sh`. ### Your Environment* Gradle 7.6
"
23160,0,270,256,0,0,eskatos,0,"title:The `Gradle` type does not expose that it is `ExtensionAware` making accessing extensions and extra properties difficult in the Kotlin DSL description:### Expected Behavior```kotlin// init.gradle.ktsval foo = extensions.findByType<Something>()val myProp: String? by extra```### Current BehaviorThe above currently fails respectively with `Unresolved reference: extension` and `Unresolved reference: extra`.You need to cast to `ExtensionAware`:```kotlin// init.gradle.ktsval foo = (gradle as ExtensionAware).extensions.findByType<Something>()val myProp: String? by (gradle as ExtensionAware).extra```
"
23154,1,0,0,0,0,chromatograph,0,"title:Gradle totally unsupports corporate proxy description:Maven just works, but Gradle fails constantly.Spent hours and no resultMake it work like Maven or something
"
23148,0,2986,11,0,0,bacecek,0,"title:Caused by: java.lang.ClassCastException: class com.android.build.gradle.internal.plugins.AppPlugin$ApplicationAndroidComponentsExtensionImplCompat_Decorated cannot be cast to class kotlin.Unit description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues--><!--- Provide a brief summary of the issue in the title above -->### Expected BehaviorSuccessful project configuration### Current BehaviorGot build failure during project configuration. ```Caused by: java.lang.ClassCastException: class com.android.build.gradle.internal.plugins.AppPlugin$ApplicationAndroidComponentsExtensionImplCompat_Decorated cannot be cast to class kotlin.Unit (com.android.build.gradle.internal.plugins.AppPlugin$ApplicationAndroidComponentsExtensionImplCompat_Decorated is in unnamed module of loader org.gradle.internal.classloader.VisitableURLClassLoader @48ee7c62; kotlin.Unit is in unnamed module of loader org.gradle.internal.classloader.VisitableURLClassLoader @548e7350)	at Dev_bacecek_base_gradle.<init>(dev.bacecek.base.gradle.kts:31)	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)	at Dev_bacecek_basePlugin.apply(Dev_bacecek_basePlugin.kt:13)	at Dev_bacecek_basePlugin.apply(Dev_bacecek_basePlugin.kt:7)	at org.gradle.api.internal.plugins.ImperativeOnlyPluginTarget.applyImperative(ImperativeOnlyPluginTarget.java:43)	at org.gradle.api.internal.plugins.RuleBasedPluginTarget.applyImperative(RuleBasedPluginTarget.java:51)	at org.gradle.api.internal.plugins.DefaultPluginManager.addPlugin(DefaultPluginManager.java:187)	at org.gradle.api.internal.plugins.DefaultPluginManager.access$100(DefaultPluginManager.java:52)	at org.gradle.api.internal.plugins.DefaultPluginManager$AddPluginBuildOperation.run(DefaultPluginManager.java:282)	at org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:29)	at org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:26)	at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)	at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)	at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)	at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)	at org.gradle.internal.operations.DefaultBuildOperationRunner.run(DefaultBuildOperationRunner.java:47)	at org.gradle.internal.operations.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:68)	at org.gradle.api.internal.plugins.DefaultPluginManager.lambda$doApply$0(DefaultPluginManager.java:167)	at org.gradle.configuration.internal.DefaultUserCodeApplicationContext.apply(DefaultUserCodeApplicationContext.java:44)	at org.gradle.api.internal.plugins.DefaultPluginManager.doApply(DefaultPluginManager.java:166)	... 210 more```### ContextThe stacktrace and code contains Android related code, but the main cause does not seems to be related to Android by itself. The issue is reproduced in combination by several factors: using kotlin `.apply` function under some condition and this block is the latest in the file. For example:```// buildSrc/src/main/kotlin/example.gradle.kts...if (true) {    extensions.getByName<BaseExtension>(""example"").apply {        // some code here    }}//end of the file```So when I remove one of the factors (use `run` instead of `apply` or remove condition or move it above other code/add any code below) the issue is not respoducing.### Steps to Reproduce Configure project using any task on module where the plugin is applied (for example in sample project `./gradlew :app:assembleDebug`) or sync project in Intellij IDEA/Android Studio.### Your EnvironmentGradle version 7.6. Also reproduced in 7.5.Sample project to reproduce the issue: https://github.com/bacecek/sample-checking-assistant-role/tree/gradle/classcastexception_in_precompiled_script_plugin and precompiled script code here: https://github.com/bacecek/sample-checking-assistant-role/blob/gradle/classcastexception_in_precompiled_script_plugin/buildSrc/src/main/kotlin/dev.bacecek.base.gradle.kts.
"
23139,0,0,215,0,0,adammurdoch,0,"title:Do not discard build services that are build event listeners after storing the configuration cache entry description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues-->All build services are currently discarded after storing the configuration entry, and recreated at execution time if required. However, some event listeners may also collect configuration time data/state as well as execution time data/state and discarding these build services can break these listeners.### Expected BehaviorDo not discard build services that are event listeners after storing the configuration cache entry.### Current BehaviorBuild services that are event listeners are discarded after storing the configuration cache entry.### Context<!--- How has this issue affected you? What are you trying to accomplish? --><!--- Providing context helps us come up with a solution that is most useful in the real world -->### Steps to Reproduce <!---Provide a self-contained example project as an attached archive or a Github project.You can use the following template with a Gradle GitHub action set up to showcase your problem: https://github.com/gradle/gradle-issue-reproducerIn the rare cases where this is infeasible, we will also accept a detailed set of instructions.-->### Your Environment<!--- Include as many relevant details about the environment you experienced the bug in --><!--- A build scan https://scans.gradle.com/get-started is ideal -->Build scan URL:
"
23129,0,474,1,0,0,Tiller,0,"title:Missing 'archiveName' attribute in eclipse wtp description:### Expected BehaviorWhen generating the `.settings/org.eclipse.wst.common.component` file with the eclipse plugin, project dependencies should include an attribute named 'archiveName' and generated war from Eclipse should include the dependency.```xml<dependent-module archiveName=""lib.jar"" deploy-path=""/WEB-INF/lib"" handle=""module:/resource/lib/lib"">    <dependency-type>uses</dependency-type></dependent-module>``````bash$ unzip -l out.war | grep ""lib.jar""1308484  2022-12-13 10:36   WEB-INF/lib/lib.jar```### Current BehaviorThe 'archiveName' attribute is not generated leading Eclipse to print a warning and the generated war to miss the library.```xml<dependent-module deploy-path=""/WEB-INF/lib"" handle=""module:/resource/lib/lib"">    <dependency-type>uses</dependency-type></dependent-module>``````bash$ unzip -l out.war | grep ""lib.jar""<no result>```![image](https://user-images.githubusercontent.com/831119/207284204-47f18d54-51e8-446a-83ce-640ce3cb71b2.png)### ContextTrying to generate a WAR with eclipse to deploy in JBoss### Steps to Reproduce Run `./gradlew eclipse` on https://github.com/Tiller/gradle-eclipse-issue. Import project, and check 'Deployment Assembly' or export war from Eclipse.### Your EnvironmentGradle 7.6, Linux, Java 11
"
23125,0,488,256,0,0,eskatos,0,"title:`ValidatePlugins` task fails if configured Java Toolchain > Java running the build description:The `:validatePlugins` task contributed by the `java-gradle-plugin` plugin fails if configured Java Toolchain > Java running the build.### Expected Behavior`:validatePlugins` should work.### Current Behavior`:validatePlugins` fails with```> Task :validatePlugins FAILEDFAILURE: Build failed with an exception.* What went wrong:Execution failed for task ':validatePlugins'.> There was a failure while executing work items   > A failure occurred while executing org.gradle.plugin.devel.tasks.internal.ValidateAction      > example/MyPlugin has been compiled by a more recent version of the Java Runtime (class file version 61.0), this version of the Java Runtime only recognizes class file versions up to 55.0```https://scans.gradle.com/s/qchj6qg7eke42https://github.com/eskatos/gradle-plugin-toochains-issue/actions/runs/3679778575/jobs/6224627010#step:4:155### Steps to Reproduce * clone https://github.com/eskatos/gradle-plugin-toochains-issue* use Java < 17 to run the build* run `./gradlew validatePlugins`### ContextDiscovered while working on* https://github.com/gradle/gradle/pull/23118----The `ValidatePlugins` task loads plugin classes in an isolated classloader (using the Worker API) in the build daemon JVM. This fails if the plugin is built targeting a Java version that is more recent than the one running the build. In that case the task should use an isolated process running with the configured toolchain.
"
23121,0,0,17,0,0,gavra0,0,"title:Build services closed twice with configuration cache in 8.0 description:Version: `8.0-milestone-5`Using a project with a build service, if configuration cache is enabled, the `close` method on a build service is invoked twice:- once during the task graph serialization- the second time during deserializationThis is a problem as build services may have side-effects. E.g. AGP has a build service that writes a file when `close` is invoked.With `-Dorg.gradle.configuration-cache.internal.load-after-store=false` the `close` method is invoked only once, as expected.---See https://gradle.slack.com/archives/C10J6STFZ/p1670870065971169?thread_ts=1670858488.093889&cid=C10J6STFZ
"
23115,0,0,298,0,1,reinsch82,1,"title:make jvm args lists unmodifiable description:<!--- The issue this PR addresses -->- Fixes #22671
"
23106,0,23013,299,0,0,martinbonnin,0,"title:Version catalogs: library names cannot end with `-class` description:Try to add the following to a version catalog:```toml[libraries]material3-window-size-class = { module = ""androidx.compose.material3:material3-window-size-class"", version= ""1.0.0""}```This triggers the following error:```java.lang.RuntimeException: org.gradle.api.internal.catalog.GeneratedClassCompilationException: Unable to compile generated sources:  - File LibrariesForLibs.java, line: 517, getClass() in org.gradle.accessors.dm.LibrariesForLibs.Material3WindowSizeLibraryAccessors cannot override getClass() in java.lang.Object      overridden method is final	at org.gradle.api.internal.catalog.DefaultDependenciesAccessors.generateAccessors(DefaultDependenciesAccessors.java:144)	at org.gradle.configuration.BuildTreePreparingProjectsPreparer.generateDependenciesAccessorsAndAssignPluginVersions(BuildTreePreparingProjectsPreparer.java:87)	at org.gradle.configuration.BuildTreePreparingProjectsPreparer.prepareProjects(BuildTreePreparingProjectsPreparer.java:54)	at org.gradle.configuration.BuildOperationFiringProjectsPreparer$ConfigureBuild.run(BuildOperationFiringProjectsPreparer.java:52)	at org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:29)	at org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:26)	at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)	at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)	at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)	at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)	at org.gradle.internal.operations.DefaultBuildOperationRunner.run(DefaultBuildOperationRunner.java:47)	at org.gradle.internal.operations.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:68)	at org.gradle.configuration.BuildOperationFiringProjectsPreparer.prepareProjects(BuildOperationFiringProjectsPreparer.java:40)	at org.gradle.initialization.VintageBuildModelController.lambda$prepareProjects$2(VintageBuildModelController.java:84)	at org.gradle.internal.model.StateTransitionController.lambda$doTransition$12(StateTransitionController.java:236)	at org.gradle.internal.model.StateTransitionController.doTransition(StateTransitionController.java:247)	at org.gradle.internal.model.StateTransitionController.doTransition(StateTransitionController.java:235)	at org.gradle.internal.model.StateTransitionController.lambda$transitionIfNotPreviously$10(StateTransitionController.java:210)	at org.gradle.internal.work.DefaultSynchronizer.withLock(DefaultSynchronizer.java:34)	at org.gradle.internal.model.StateTransitionController.transitionIfNotPreviously(StateTransitionController.java:206)	at org.gradle.initialization.VintageBuildModelController.prepareProjects(VintageBuildModelController.java:84)	at org.gradle.initialization.VintageBuildModelController.getConfiguredModel(VintageBuildModelController.java:64)	at org.gradle.internal.build.DefaultBuildLifecycleController.lambda$withProjectsConfigured$1(DefaultBuildLifecycleController.java:116)	at org.gradle.internal.model.StateTransitionController.lambda$notInState$3(StateTransitionController.java:143)	at org.gradle.internal.work.DefaultSynchronizer.withLock(DefaultSynchronizer.java:44)	at org.gradle.internal.model.StateTransitionController.notInState(StateTransitionController.java:139)	at org.gradle.internal.build.DefaultBuildLifecycleController.withProjectsConfigured(DefaultBuildLifecycleController.java:116)	at org.gradle.internal.build.DefaultBuildToolingModelController.locateBuilderForTarget(DefaultBuildToolingModelController.java:57)	at org.gradle.internal.buildtree.DefaultBuildTreeModelCreator$DefaultBuildTreeModelController.lambda$locateBuilderForTarget$0(DefaultBuildTreeModelCreator.java:73)	at org.gradle.internal.build.DefaultBuildLifecycleController.withToolingModels(DefaultBuildLifecycleController.java:180)	at org.gradle.internal.build.AbstractBuildState.withToolingModels(AbstractBuildState.java:123)	at org.gradle.internal.buildtree.DefaultBuildTreeModelCreator$DefaultBuildTreeModelController.locateBuilderForTarget(DefaultBuildTreeModelCreator.java:73)	at org.gradle.internal.buildtree.DefaultBuildTreeModelCreator$DefaultBuildTreeModelController.locateBuilderForDefaultTarget(DefaultBuildTreeModelCreator.java:68)	at org.gradle.tooling.internal.provider.runner.DefaultBuildController.getTarget(DefaultBuildController.java:157)	at org.gradle.tooling.internal.provider.runner.DefaultBuildController.getModel(DefaultBuildController.java:101)	at org.gradle.tooling.internal.consumer.connection.ParameterAwareBuildControllerAdapter.getModel(ParameterAwareBuildControllerAdapter.java:39)	at org.gradle.tooling.internal.consumer.connection.UnparameterizedBuildController.getModel(UnparameterizedBuildController.java:113)	at org.gradle.tooling.internal.consumer.connection.NestedActionAwareBuildControllerAdapter.getModel(NestedActionAwareBuildControllerAdapter.java:31)	at org.gradle.tooling.internal.consumer.connection.UnparameterizedBuildController.findModel(UnparameterizedBuildController.java:97)	at org.gradle.tooling.internal.consumer.connection.NestedActionAwareBuildControllerAdapter.findModel(NestedActionAwareBuildControllerAdapter.java:31)	at org.gradle.tooling.internal.consumer.connection.UnparameterizedBuildController.findModel(UnparameterizedBuildController.java:81)	at org.gradle.tooling.internal.consumer.connection.NestedActionAwareBuildControllerAdapter.findModel(NestedActionAwareBuildControllerAdapter.java:31)	at org.gradle.tooling.internal.consumer.connection.UnparameterizedBuildController.findModel(UnparameterizedBuildController.java:66)	at org.gradle.tooling.internal.consumer.connection.NestedActionAwareBuildControllerAdapter.findModel(NestedActionAwareBuildControllerAdapter.java:31)	at org.jetbrains.plugins.gradle.model.ProjectImportAction.execute(ProjectImportAction.java:125)	at org.jetbrains.plugins.gradle.model.ProjectImportAction.execute(ProjectImportAction.java:42)	at org.gradle.tooling.internal.consumer.connection.InternalBuildActionAdapter.execute(InternalBuildActionAdapter.java:64)	at org.gradle.tooling.internal.provider.runner.AbstractClientProvidedBuildActionRunner$ActionAdapter.runAction(AbstractClientProvidedBuildActionRunner.java:131)	at org.gradle.tooling.internal.provider.runner.AbstractClientProvidedBuildActionRunner$ActionAdapter.beforeTasks(AbstractClientProvidedBuildActionRunner.java:99)	at org.gradle.internal.buildtree.DefaultBuildTreeModelCreator.beforeTasks(DefaultBuildTreeModelCreator.java:52)	at org.gradle.internal.buildtree.DefaultBuildTreeLifecycleController.lambda$fromBuildModel$2(DefaultBuildTreeLifecycleController.java:82)	at org.gradle.internal.buildtree.DefaultBuildTreeLifecycleController.lambda$runBuild$5(DefaultBuildTreeLifecycleController.java:113)	at org.gradle.internal.model.StateTransitionController.lambda$transition$5(StateTransitionController.java:166)	at org.gradle.internal.model.StateTransitionController.doTransition(StateTransitionController.java:247)	at org.gradle.internal.model.StateTransitionController.lambda$transition$6(StateTransitionController.java:166)	at org.gradle.internal.work.DefaultSynchronizer.withLock(DefaultSynchronizer.java:44)	at org.gradle.internal.model.StateTransitionController.transition(StateTransitionController.java:166)	at org.gradle.internal.buildtree.DefaultBuildTreeLifecycleController.runBuild(DefaultBuildTreeLifecycleController.java:110)	at org.gradle.internal.buildtree.DefaultBuildTreeLifecycleController.fromBuildModel(DefaultBuildTreeLifecycleController.java:81)	at org.gradle.tooling.internal.provider.runner.AbstractClientProvidedBuildActionRunner.runClientAction(AbstractClientProvidedBuildActionRunner.java:43)	at org.gradle.tooling.internal.provider.runner.ClientProvidedPhasedActionRunner.run(ClientProvidedPhasedActionRunner.java:53)	at org.gradle.launcher.exec.ChainingBuildActionRunner.run(ChainingBuildActionRunner.java:35)	at org.gradle.internal.buildtree.ProblemReportingBuildActionRunner.run(ProblemReportingBuildActionRunner.java:49)	at org.gradle.launcher.exec.BuildOutcomeReportingBuildActionRunner.run(BuildOutcomeReportingBuildActionRunner.java:65)	at org.gradle.tooling.internal.provider.FileSystemWatchingBuildActionRunner.run(FileSystemWatchingBuildActionRunner.java:136)	at org.gradle.launcher.exec.BuildCompletionNotifyingBuildActionRunner.run(BuildCompletionNotifyingBuildActionRunner.java:41)	at org.gradle.launcher.exec.RootBuildLifecycleBuildActionExecutor.lambda$execute$0(RootBuildLifecycleBuildActionExecutor.java:40)	at org.gradle.composite.internal.DefaultRootBuildState.run(DefaultRootBuildState.java:122)	at org.gradle.launcher.exec.RootBuildLifecycleBuildActionExecutor.execute(RootBuildLifecycleBuildActionExecutor.java:40)	at org.gradle.internal.buildtree.DefaultBuildTreeContext.execute(DefaultBuildTreeContext.java:40)	at org.gradle.launcher.exec.BuildTreeLifecycleBuildActionExecutor.lambda$execute$0(BuildTreeLifecycleBuildActionExecutor.java:65)	at org.gradle.internal.buildtree.BuildTreeState.run(BuildTreeState.java:53)	at org.gradle.launcher.exec.BuildTreeLifecycleBuildActionExecutor.execute(BuildTreeLifecycleBuildActionExecutor.java:65)	at org.gradle.launcher.exec.RunAsBuildOperationBuildActionExecutor$3.call(RunAsBuildOperationBuildActionExecutor.java:61)	at org.gradle.launcher.exec.RunAsBuildOperationBuildActionExecutor$3.call(RunAsBuildOperationBuildActionExecutor.java:57)	at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)	at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)	at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)	at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)	at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)	at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)	at org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)	at org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)	at org.gradle.launcher.exec.RunAsBuildOperationBuildActionExecutor.execute(RunAsBuildOperationBuildActionExecutor.java:57)	at org.gradle.launcher.exec.RunAsWorkerThreadBuildActionExecutor.lambda$execute$0(RunAsWorkerThreadBuildActionExecutor.java:36)	at org.gradle.internal.work.DefaultWorkerLeaseService.withLocks(DefaultWorkerLeaseService.java:249)	at org.gradle.internal.work.DefaultWorkerLeaseService.runAsWorkerThread(DefaultWorkerLeaseService.java:109)	at org.gradle.launcher.exec.RunAsWorkerThreadBuildActionExecutor.execute(RunAsWorkerThreadBuildActionExecutor.java:36)	at org.gradle.tooling.internal.provider.continuous.ContinuousBuildActionExecutor.execute(ContinuousBuildActionExecutor.java:110)	at org.gradle.tooling.internal.provider.SubscribableBuildActionExecutor.execute(SubscribableBuildActionExecutor.java:64)	at org.gradle.internal.session.DefaultBuildSessionContext.execute(DefaultBuildSessionContext.java:46)	at org.gradle.tooling.internal.provider.BuildSessionLifecycleBuildActionExecuter$ActionImpl.apply(BuildSessionLifecycleBuildActionExecuter.java:100)	at org.gradle.tooling.internal.provider.BuildSessionLifecycleBuildActionExecuter$ActionImpl.apply(BuildSessionLifecycleBuildActionExecuter.java:88)	at org.gradle.internal.session.BuildSessionState.run(BuildSessionState.java:69)	at org.gradle.tooling.internal.provider.BuildSessionLifecycleBuildActionExecuter.execute(BuildSessionLifecycleBuildActionExecuter.java:62)	at org.gradle.tooling.internal.provider.BuildSessionLifecycleBuildActionExecuter.execute(BuildSessionLifecycleBuildActionExecuter.java:41)	at org.gradle.tooling.internal.provider.StartParamsValidatingActionExecuter.execute(StartParamsValidatingActionExecuter.java:63)	at org.gradle.tooling.internal.provider.StartParamsValidatingActionExecuter.execute(StartParamsValidatingActionExecuter.java:31)	at org.gradle.tooling.internal.provider.SessionFailureReportingActionExecuter.execute(SessionFailureReportingActionExecuter.java:52)	at org.gradle.tooling.internal.provider.SessionFailureReportingActionExecuter.execute(SessionFailureReportingActionExecuter.java:40)	at org.gradle.tooling.internal.provider.SetupLoggingActionExecuter.execute(SetupLoggingActionExecuter.java:47)	at org.gradle.tooling.internal.provider.SetupLoggingActionExecuter.execute(SetupLoggingActionExecuter.java:31)	at org.gradle.launcher.daemon.server.exec.ExecuteBuild.doBuild(ExecuteBuild.java:65)	at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:37)	at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)	at org.gradle.launcher.daemon.server.exec.WatchForDisconnection.execute(WatchForDisconnection.java:39)	at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)	at org.gradle.launcher.daemon.server.exec.ResetDeprecationLogger.execute(ResetDeprecationLogger.java:29)	at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)	at org.gradle.launcher.daemon.server.exec.RequestStopIfSingleUsedDaemon.execute(RequestStopIfSingleUsedDaemon.java:35)	at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)	at org.gradle.launcher.daemon.server.exec.ForwardClientInput$2.create(ForwardClientInput.java:78)	at org.gradle.launcher.daemon.server.exec.ForwardClientInput$2.create(ForwardClientInput.java:75)	at org.gradle.util.internal.Swapper.swap(Swapper.java:38)	at org.gradle.launcher.daemon.server.exec.ForwardClientInput.execute(ForwardClientInput.java:75)	at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)	at org.gradle.launcher.daemon.server.exec.LogAndCheckHealth.execute(LogAndCheckHealth.java:55)	at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)	at org.gradle.launcher.daemon.server.exec.LogToClient.doBuild(LogToClient.java:63)	at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:37)	at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)	at org.gradle.launcher.daemon.server.exec.EstablishBuildEnvironment.doBuild(EstablishBuildEnvironment.java:84)	at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:37)	at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)	at org.gradle.launcher.daemon.server.exec.StartBuildOrRespondWithBusy$1.run(StartBuildOrRespondWithBusy.java:52)	at org.gradle.launcher.daemon.server.DaemonStateCoordinator$1.run(DaemonStateCoordinator.java:297)	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:49)Caused by: org.gradle.api.internal.catalog.GeneratedClassCompilationException: Unable to compile generated sources:  - File LibrariesForLibs.java, line: 517, getClass() in org.gradle.accessors.dm.LibrariesForLibs.Material3WindowSizeLibraryAccessors cannot override getClass() in java.lang.Object      overridden method is final	at org.gradle.api.internal.catalog.SimpleGeneratedJavaClassCompiler.throwCompilationError(SimpleGeneratedJavaClassCompiler.java:83)	at org.gradle.api.internal.catalog.SimpleGeneratedJavaClassCompiler.compile(SimpleGeneratedJavaClassCompiler.java:68)	at org.gradle.api.internal.catalog.DefaultDependenciesAccessors$AbstractAccessorUnitOfWork.execute(DefaultDependenciesAccessors.java:312)	at org.gradle.internal.execution.steps.ExecuteStep.executeInternal(ExecuteStep.java:89)	at org.gradle.internal.execution.steps.ExecuteStep.access$000(ExecuteStep.java:40)	at org.gradle.internal.execution.steps.ExecuteStep$1.call(ExecuteStep.java:53)	at org.gradle.internal.execution.steps.ExecuteStep$1.call(ExecuteStep.java:50)	at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)	at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)	at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)	at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)	at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)	at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)	at org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)	at org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)	at org.gradle.internal.execution.steps.ExecuteStep.execute(ExecuteStep.java:50)	at org.gradle.internal.execution.steps.ExecuteStep.execute(ExecuteStep.java:40)	at org.gradle.internal.execution.steps.RemovePreviousOutputsStep.execute(RemovePreviousOutputsStep.java:68)	at org.gradle.internal.execution.steps.RemovePreviousOutputsStep.execute(RemovePreviousOutputsStep.java:38)	at org.gradle.internal.execution.steps.TimeoutStep.executeWithoutTimeout(TimeoutStep.java:74)	at org.gradle.internal.execution.steps.TimeoutStep.execute(TimeoutStep.java:55)	at org.gradle.internal.execution.steps.CreateOutputsStep.execute(CreateOutputsStep.java:51)	at org.gradle.internal.execution.steps.CreateOutputsStep.execute(CreateOutputsStep.java:29)	at org.gradle.internal.execution.steps.CaptureStateAfterExecutionStep.executeDelegateBroadcastingChanges(CaptureStateAfterExecutionStep.java:124)	at org.gradle.internal.execution.steps.CaptureStateAfterExecutionStep.execute(CaptureStateAfterExecutionStep.java:80)	at org.gradle.internal.execution.steps.CaptureStateAfterExecutionStep.execute(CaptureStateAfterExecutionStep.java:58)	at org.gradle.internal.execution.steps.ResolveInputChangesStep.execute(ResolveInputChangesStep.java:48)	at org.gradle.internal.execution.steps.ResolveInputChangesStep.execute(ResolveInputChangesStep.java:36)	at org.gradle.internal.execution.steps.StoreExecutionStateStep.execute(StoreExecutionStateStep.java:36)	at org.gradle.internal.execution.steps.StoreExecutionStateStep.execute(StoreExecutionStateStep.java:25)	at org.gradle.internal.execution.steps.SkipUpToDateStep.executeBecause(SkipUpToDateStep.java:110)	at org.gradle.internal.execution.steps.SkipUpToDateStep.lambda$execute$2(SkipUpToDateStep.java:56)	at org.gradle.internal.execution.steps.SkipUpToDateStep.execute(SkipUpToDateStep.java:56)	at org.gradle.internal.execution.steps.SkipUpToDateStep.execute(SkipUpToDateStep.java:38)	at org.gradle.internal.execution.steps.ResolveChangesStep.execute(ResolveChangesStep.java:73)	at org.gradle.internal.execution.steps.ResolveChangesStep.execute(ResolveChangesStep.java:44)	at org.gradle.api.internal.artifacts.DependencyManagementBuildScopeServices$NoOpCachingStateStep.execute(DependencyManagementBuildScopeServices.java:740)	at org.gradle.api.internal.artifacts.DependencyManagementBuildScopeServices$NoOpCachingStateStep.execute(DependencyManagementBuildScopeServices.java:731)	at org.gradle.internal.execution.steps.ValidateStep.execute(ValidateStep.java:102)	at org.gradle.internal.execution.steps.ValidateStep.execute(ValidateStep.java:57)	at org.gradle.internal.execution.steps.CaptureStateBeforeExecutionStep.execute(CaptureStateBeforeExecutionStep.java:76)	at org.gradle.internal.execution.steps.CaptureStateBeforeExecutionStep.execute(CaptureStateBeforeExecutionStep.java:50)	at org.gradle.internal.execution.steps.RemoveUntrackedExecutionStateStep.execute(RemoveUntrackedExecutionStateStep.java:32)	at org.gradle.internal.execution.steps.RemoveUntrackedExecutionStateStep.execute(RemoveUntrackedExecutionStateStep.java:21)	at org.gradle.internal.execution.steps.LoadPreviousExecutionStateStep.execute(LoadPreviousExecutionStateStep.java:43)	at org.gradle.internal.execution.steps.LoadPreviousExecutionStateStep.execute(LoadPreviousExecutionStateStep.java:31)	at org.gradle.internal.execution.steps.AssignWorkspaceStep.lambda$execute$0(AssignWorkspaceStep.java:40)	at org.gradle.internal.execution.workspace.impl.DefaultImmutableWorkspaceProvider.lambda$withWorkspace$3(DefaultImmutableWorkspaceProvider.java:124)	at org.gradle.cache.internal.LockOnDemandCrossProcessCacheAccess.withFileLock(LockOnDemandCrossProcessCacheAccess.java:90)	at org.gradle.cache.internal.DefaultCacheAccess.withFileLock(DefaultCacheAccess.java:191)	at org.gradle.cache.internal.DefaultPersistentDirectoryStore.withFileLock(DefaultPersistentDirectoryStore.java:188)	at org.gradle.cache.internal.DefaultCacheFactory$ReferenceTrackingCache.withFileLock(DefaultCacheFactory.java:209)	at org.gradle.internal.execution.workspace.impl.DefaultImmutableWorkspaceProvider.withWorkspace(DefaultImmutableWorkspaceProvider.java:121)	at org.gradle.api.internal.catalog.DependenciesAccessorsWorkspaceProvider.withWorkspace(DependenciesAccessorsWorkspaceProvider.java:51)	at org.gradle.internal.execution.steps.AssignWorkspaceStep.execute(AssignWorkspaceStep.java:40)	at org.gradle.internal.execution.steps.AssignWorkspaceStep.execute(AssignWorkspaceStep.java:30)	at org.gradle.internal.execution.steps.IdentityCacheStep.execute(IdentityCacheStep.java:37)	at org.gradle.internal.execution.steps.IdentityCacheStep.execute(IdentityCacheStep.java:27)	at org.gradle.internal.execution.steps.IdentifyStep.execute(IdentifyStep.java:44)	at org.gradle.internal.execution.steps.IdentifyStep.execute(IdentifyStep.java:33)	at org.gradle.internal.execution.impl.DefaultExecutionEngine$1.execute(DefaultExecutionEngine.java:76)	at org.gradle.api.internal.catalog.DefaultDependenciesAccessors.executeWork(DefaultDependenciesAccessors.java:172)	at org.gradle.api.internal.catalog.DefaultDependenciesAccessors.writeDependenciesAccessors(DefaultDependenciesAccessors.java:149)	at org.gradle.api.internal.catalog.DefaultDependenciesAccessors.generateAccessors(DefaultDependenciesAccessors.java:135)	... 127 more```Because it clashes with `Object.getClass`. The limitation is very ok but it'd be nice to make the error message more explicit.Gradle Version: 7.6
"
23046,0,698,10,0,0,fp7,0,"title:grolifant shasum changed and building gradle from source fails. description:gradle build does not work any more.### Expected BehaviorThe build completes### Current Behaviorthe build fails:```* What went wrong:Execution failed for task ':build-logic:binary-compatibility:compileKotlin'.> Error while evaluating property 'filteredArgumentsMap' of task ':build-logic:binary-compatibility:compileKotlin'   > Dependency verification failed for configuration ':build-logic:binary-compatibility:compileClasspath'     One artifact failed verification: grolifant-0.16.1.jar (org.ysb33r.gradle:grolifant:0.16.1) from repository Gradle Central Plugin Repository     This can indicate that a dependency has been compromised. Please carefully verify the signatures and checksums. Key servers are disabled, this can indicate that you need to update the local keyring with the missing keys.```### ContextI think it stopped working on november 8th when grolifant 0.16.1 was republished to mavencentraljava: openjdk version ""11.0.16"" 2022-07-19
"
23025,0,0,229,0,1,jbartok,0,"title:Back-port toolchain related fixes to 7.6.1 description:Need to backport following changes:- #22819 - #23024 - #23050 - #23112
"
23016,0,0,229,0,0,jbartok,0,"title:toolchainManagement.jvm.javaRepositories should not expose the full surface of NamedDomainObjectList description:We should delegate to `NamedDomainObjectList`, not extend it.
"
22999,0,2447,297,0,0,big-guy,1,"title:Sporadic NPEs when compiling Java code description:NullPointerExceptions are thrown when compiling Java code _sometimes_. This seems to be a recent regression.### Expected BehaviorJava compilation completes successfully.### Current BehaviorJava compilation fails with an internal Gradle NPE error.### ContextThis seems to only happen if there is a listener for the build operation. This is the case when running from TAPI or when the build scan plugin is applied.This is the stack trace reported by build scans:```Caused by: java.lang.NullPointerException: (No message provided)    at org.gradle.api.internal.tasks.compile.tooling.JavaCompileTaskSuccessResultPostProcessor.findTaskOperationId(JavaCompileTaskSuccessResultPostProcessor.java:65)   at org.gradle.api.internal.tasks.compile.tooling.JavaCompileTaskSuccessResultPostProcessor.findTaskOperationId(JavaCompileTaskSuccessResultPostProcessor.java:69)   at org.gradle.api.internal.tasks.compile.tooling.JavaCompileTaskSuccessResultPostProcessor.finished(JavaCompileTaskSuccessResultPostProcessor.java:58)  at org.gradle.tooling.internal.provider.runner.TaskOperationMapper$PostProcessors.finished(TaskOperationMapper.java:156)    at org.gradle.tooling.internal.provider.runner.ClientBuildEventGenerator.finished(ClientBuildEventGenerator.java:106)   at org.gradle.internal.operations.DefaultBuildOperationListenerManager$ProgressShieldingBuildOperationListener.finished(DefaultBuildOperationListenerManager.java:127)  at org.gradle.internal.operations.DefaultBuildOperationListenerManager$1.finished(DefaultBuildOperationListenerManager.java:60) at org.gradle.internal.operations.DefaultBuildOperationExecutor$ListenerAdapter.stop(DefaultBuildOperationExecutor.java:214)    at org.gradle.internal.operations.DefaultBuildOperationRunner$BuildOperationTrackingListener.stop(DefaultBuildOperationRunner.java:243) at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:73)    at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)    at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157) at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)  at org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53) at org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73) at org.gradle.api.internal.tasks.compile.CompileJavaBuildOperationReportingCompiler.execute(CompileJavaBuildOperationReportingCompiler.java:51) at org.gradle.api.tasks.compile.JavaCompile.performCompilation(JavaCompile.java:221)    at org.gradle.api.tasks.compile.JavaCompile.performIncrementalCompilation(JavaCompile.java:162) at org.gradle.api.tasks.compile.JavaCompile.compile(JavaCompile.java:147)```However, this is stripping out the actual line of the NPE, which is in `java.util.concurrent.ConcurrentHashMap#get`. The underlying NPE occurs when `null` is passed as an `id` on this line:https://github.com/gradle/gradle/blob/1c3ff71dee7ce26ee61e153ab31efa1f939d7d2a/subprojects/language-java/src/main/java/org/gradle/api/internal/tasks/compile/tooling/JavaCompileTaskSuccessResultPostProcessor.java#L65I was able to confirm that we get a similar stacktrace when I explicitly pass `null`:https://ge.gradle.org/s/mdbxuyiimzrau/tests/:tooling-api:embeddedCrossVersionTest/org.gradle.integtests.tooling.r76.TestLauncherTestSpecCrossVersionSpec/can%20select%20test%20classes%20TAPI%20current%20-%3E%20Gradle%20current?expanded-stacktrace=WyIwLTEtMi0zIl0&focused-exception-line=0-1-2-3-0&top-execution=1### Steps to Reproduce I believe the sequence is:1. `finished` is called with a `CompileJavaBuildOperationType.Result` result.2. We call `findTaskOperationId` with the parent of the result. This is non-null.3. The `id` does not exist in `parentsOfOperationsWithJavaCompileTaskAncestor`.  parent is null.4. We call `findTaskOperationId` with a null id. 5. NPE is thrown in the `get(...)`.I'm not sure if the parent never existed in `parentsOfOperationsWithJavaCompileTaskAncestor` or if it was removed. ### Your EnvironmentThere are more private build scans available. 
"
22996,0,0,263,0,0,abstratt,0,"title:Shared Build Services consumed using @ServiceReference are instantiated even if not used description:Shared Build Services consumed using @ServiceReference are instantiated even if not used.That is due to the fact that properties marked as service references are validatable, and our validation framework currently forces properties to be evaluated, even if all we need to validate for is the presence of a value.
"
22989,0,0,296,1,1,jvandort,0,"title:Remove CompileView attribute from derived Maven variants description:Due to some weirdness with the kotlin multiplatform plugins, there is ambiguity between compileElements andone of the multiplatform-created variants. The only way to avoid this ambiguity is to disable theCompileView attribute schema compatibility rule.This rule is required to allow us to select the derived maven api variant which declared the java-internalcompile view, while we are requesting the java-api compile view. To allow us to continue selecting this variant,without the compatibility rule, we need to remove the attribute from the derived variant.Fixes https://github.com/gradle/gradle/issues/22952
"
22966,0,0,71,0,0,bodhili,0,"title:doc link not working description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues--><!--- Provide a brief summary of the issue in the title above -->### Expected Behavior<!--- Tell us what should happen -->- link works fine### Current Behavior<!--- Tell us what happens instead of the expected behavior -->- the link not working### Context<!--- How has this issue affected you? What are you trying to accomplish? --><!--- Providing context helps us come up with a solution that is most useful in the real world -->- `Java Toolchain (userguide/toolchains.html)` link in the file `CONTRIBUTING.md` Guidelines docs don't work### Steps to Reproduce <!---Provide a self-contained example project as an attached archive or a Github project.You can use the following template with a Gradle GitHub action set up to showcase your problem: https://github.com/gradle/gradle-issue-reproducerIn the rare cases where this is infeasible, we will also accept a detailed set of instructions.-->### Your Environment<!--- Include as many relevant details about the environment you experienced the bug in --><!--- A build scan https://scans.gradle.com/get-started is ideal -->Build scan URL:
"
22964,0,0,281,0,0,alllex,0,"title:Incremental compilation is not observed for Scala 3 description:The same integration test observes Scala 2 incremental compilation, but shows that with Scala 3 all the classes are recompiled.The relevant tests in `ZincScalaCompilerIntegrationTest` are marked with the link to this issue.
"
22960,1,1444,296,0,0,SgtSilvio,0,"title:Inconsistency between javadocElements and javadoc variants description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues--><!--- Provide a brief summary of the issue in the title above -->Since Gradle 7.5, Gradle derives not only the `compile` and `runtime` variants from Maven components without Gradle Module Metadata, but also the `javadoc` and `sources` variants.`compile` and `runtime` act as substitutes for Gradle's `apiElements` and `runtimeElements` variants.`javadoc` and `sources` should also act as substitutes for `javadocElements` and `sourcesElements`, but they are inconsistent regarding transitive dependencies.### Expected Behavior<!--- Tell us what should happen -->The derived `javadoc` and `sources` are consistent with the `javadocElements` and `sourcesElements` variants.Two options:1. The derived `javadoc` and `sources` variants should NOT have any transitive dependencies (preferred)2. The `javadocElements` and `sourcesElements` variants should also have transitive dependencies from the `runtimeElements` variant (this would be a more breaking change)### Current Behavior<!--- Tell us what happens instead of the expected behavior -->The derived `javadoc` and `sources` variants have transitive dependencies from the `runtime` variant.The `javadocElements` and `sourcesElements` variants do NOT have any transitive dependencies.### Context<!--- How has this issue affected you? What are you trying to accomplish? --><!--- Providing context helps us come up with a solution that is most useful in the real world -->Theses variants are important for plugins that process javadoc files. For example, changes/workarounds are required for my plugin: https://github.com/SgtSilvio/gradle-javadoc-linksAs the new derived variants were not mentioned in the release notes (afaict), I looked at Gradle's code to find out how it works.  Maybe the links are helpful for this issue:- commit where the javadoc and sources variants were added: https://github.com/gradle/gradle/commit/0ff23f0db7f35d1903b6966c644a215f2afcaf0c#diff-b5a80424a8414c52e6f50e67353fb9c5a5269dab80c2bc7ee1fc7c30d99d920d- javadoc and sources use runtimeConfiguration as base: https://github.com/gradle/gradle/blob/c5566ea98bdc48ca42c1bcedae04cc9bd3cd9b1d/subprojects/dependency-management/src/main/java/org/gradle/internal/component/external/model/JavaEcosystemVariantDerivationStrategy.java#L59### Steps to Reproduce <!---Provide a self-contained example project as an attached archive or a Github project.You can use the following template with a Gradle GitHub action set up to showcase your problem: https://github.com/gradle/gradle-issue-reproducerIn the rare cases where this is infeasible, we will also accept a detailed set of instructions.-->The following `build.gradle.kts` shows the difference between dependencies with a `javadocElements` variant (components with Gradle Module Metadata or Gradle Projects) and a dependency with a derived `javadoc` variant:```kotlinplugins {    `java`}java {    withJavadocJar()}val foo: Configuration by configurations.creating {    isCanBeConsumed = false    isCanBeResolved = true    attributes {        attribute(Category.CATEGORY_ATTRIBUTE, objects.named(Category.DOCUMENTATION))        attribute(DocsType.DOCS_TYPE_ATTRIBUTE, objects.named(DocsType.JAVADOC))    }}dependencies {    // dependency without Gradle Module Metadata -> ""javadoc"" configuration derived from pom    foo(""io.netty:netty-handler:4.1.85.Final"")    // dependency with Gradle Module Metadata -> ""javadocElements"" configuration    foo(""com.hivemq:hivemq-mqtt-client:1.3.0"")    // project dependency -> ""javadocElements"" configuration    foo(project)}afterEvaluate {    println(""dependency without Gradle Module Metadata -> \""javadoc\"" configuration derived from pom -> has transitive dependencies"")    foo.files(dependencies.create(""io.netty:netty-handler:4.1.85.Final"")).forEach { println(""> $it"") }    println()    println(""dependency with Gradle Module Metadata -> \""javadocElements\"" configuration -> no transitive dependencies"")    foo.files(dependencies.create(""com.hivemq:hivemq-mqtt-client:1.3.0"")).forEach { println(""> $it"") }    println()    println(""project dependency -> \""javadocElements\"" configuration -> no transitive dependencies"")    foo.files(dependencies.create(project)).forEach { println(""> $it"") }}```### Your Environment<!--- Include as many relevant details about the environment you experienced the bug in --><!--- A build scan https://scans.gradle.com/get-started is ideal -->Build scan URL:
"
22957,1,287,108,0,0,BlockyTheDev,0,"title:processResources says UP-TO-DATE until clean description:### Expected BehaviorGradle should replace the version token every time like in my manifest task.### Current BehaviorAfter changing my version-variable in my `gradle.properties` file and running the task again it doesn't replace the version in my file located in the `resources` folder every time (see code snippet) instead of only after running a clean task or changing something in the task.### ContextEvery time I change the version to build my project for production and I forget to run a clean task, when I only change the version to a release one, I am going to release a version which has a SNAPSHOT version in the app version file, but the manifest has the right version, which ends in much chaos in other products needing this version.### Steps to Reproduce Use this code and add a value `project_version` to a file named `gradle.properties` and change the value after the first run.```groovyString version2 = project.findProperty('project_version')?: '1.0.0-UNKNOWN'processResources {    doFirst {        file(""$buildDir/resources/main"").listFiles().each {            it.delete()        }    }    expand 'GRADLE_VARIABLE_PROJECT_VERSION': version2}```### Your EnvironmentGradle version 7.6
"
22949,0,29264,222,0,0,h0tk3y,1,"title:IDE import fails with Project Isolation enabled: Expected unreportedProblemInCurrentCall to be called after enterDynamicCall description:If Project Isolation is enabled via a Gradle property `org.gradle.unsafe.isolated-projects=true`, then importing the project in IntelliJ IDEA fails with the following message:```Expected unreportedProblemInCurrentCall to be called after enterDynamicCall```<img width=""1080"" alt=""image"" src=""https://user-images.githubusercontent.com/1888526/205258147-96f71ac6-7fcf-4094-aba8-4f9ff491ddfd.png"">### Expected BehaviorIntelliJ IDEA imports the project correctly with `org.gradle.unsafe.isolated-projects=true`.### Current BehaviorDuring the import, Gradle throws an exception. The stack trace of the exception is:  Stack trace```stacktracecom.intellij.openapi.externalSystem.model.ExternalSystemException: Expected unreportedProblemInCurrentCall to be called after enterDynamicCall	at org.jetbrains.plugins.gradle.model.ProjectImportAction.addBuildModels(ProjectImportAction.java:412)	at org.jetbrains.plugins.gradle.model.ProjectImportAction.execute(ProjectImportAction.java:138)	at org.jetbrains.plugins.gradle.model.ProjectImportAction.execute(ProjectImportAction.java:42)	at org.gradle.tooling.internal.consumer.connection.InternalBuildActionAdapter.execute(InternalBuildActionAdapter.java:64)	at org.gradle.tooling.internal.provider.runner.AbstractClientProvidedBuildActionRunner$ActionAdapter.runAction(AbstractClientProvidedBuildActionRunner.java:131)	at org.gradle.tooling.internal.provider.runner.AbstractClientProvidedBuildActionRunner$ActionAdapter.fromBuildModel(AbstractClientProvidedBuildActionRunner.java:104)	at org.gradle.tooling.internal.provider.runner.AbstractClientProvidedBuildActionRunner$ActionAdapter.fromBuildModel(AbstractClientProvidedBuildActionRunner.java:84)	at org.gradle.internal.buildtree.DefaultBuildTreeModelCreator.fromBuildModel(DefaultBuildTreeModelCreator.java:57)	at org.gradle.configurationcache.ConfigurationCacheAwareBuildTreeModelCreator$fromBuildModel$1.invoke(ConfigurationCacheAwareBuildTreeModelCreator.kt:35)	at org.gradle.configurationcache.DefaultConfigurationCache$loadOrCreateModel$1.invoke(DefaultConfigurationCache.kt:155)	at org.gradle.configurationcache.DefaultConfigurationCache.runWorkThatContributesToCacheEntry(DefaultConfigurationCache.kt:289)	at org.gradle.configurationcache.DefaultConfigurationCache.loadOrCreateModel(DefaultConfigurationCache.kt:154)	at org.gradle.configurationcache.ConfigurationCacheAwareBuildTreeModelCreator.fromBuildModel(ConfigurationCacheAwareBuildTreeModelCreator.kt:34)	at org.gradle.internal.buildtree.DefaultBuildTreeLifecycleController.lambda$fromBuildModel$2(DefaultBuildTreeLifecycleController.java:81)	at org.gradle.internal.buildtree.DefaultBuildTreeLifecycleController.lambda$runBuild$4(DefaultBuildTreeLifecycleController.java:98)	at org.gradle.internal.model.StateTransitionController.lambda$transition$6(StateTransitionController.java:177)	at org.gradle.internal.model.StateTransitionController.doTransition(StateTransitionController.java:258)	at org.gradle.internal.model.StateTransitionController.lambda$transition$7(StateTransitionController.java:177)	at org.gradle.internal.work.DefaultSynchronizer.withLock(DefaultSynchronizer.java:44)	at org.gradle.internal.model.StateTransitionController.transition(StateTransitionController.java:177)	at org.gradle.internal.buildtree.DefaultBuildTreeLifecycleController.runBuild(DefaultBuildTreeLifecycleController.java:95)	at org.gradle.internal.buildtree.DefaultBuildTreeLifecycleController.fromBuildModel(DefaultBuildTreeLifecycleController.java:73)	at org.gradle.tooling.internal.provider.runner.AbstractClientProvidedBuildActionRunner.runClientAction(AbstractClientProvidedBuildActionRunner.java:43)	at org.gradle.tooling.internal.provider.runner.ClientProvidedPhasedActionRunner.run(ClientProvidedPhasedActionRunner.java:53)	at org.gradle.launcher.exec.ChainingBuildActionRunner.run(ChainingBuildActionRunner.java:35)	at org.gradle.internal.buildtree.ProblemReportingBuildActionRunner.run(ProblemReportingBuildActionRunner.java:49)	at org.gradle.launcher.exec.BuildOutcomeReportingBuildActionRunner.run(BuildOutcomeReportingBuildActionRunner.java:65)	at org.gradle.tooling.internal.provider.FileSystemWatchingBuildActionRunner.run(FileSystemWatchingBuildActionRunner.java:140)	at org.gradle.launcher.exec.BuildCompletionNotifyingBuildActionRunner.run(BuildCompletionNotifyingBuildActionRunner.java:41)	at org.gradle.launcher.exec.RootBuildLifecycleBuildActionExecutor.lambda$execute$0(RootBuildLifecycleBuildActionExecutor.java:40)	at org.gradle.composite.internal.DefaultRootBuildState.run(DefaultRootBuildState.java:122)	at org.gradle.launcher.exec.RootBuildLifecycleBuildActionExecutor.execute(RootBuildLifecycleBuildActionExecutor.java:40)	at org.gradle.internal.buildtree.DefaultBuildTreeContext.execute(DefaultBuildTreeContext.java:40)	at org.gradle.launcher.exec.BuildTreeLifecycleBuildActionExecutor.lambda$execute$0(BuildTreeLifecycleBuildActionExecutor.java:65)	at org.gradle.internal.buildtree.BuildTreeState.run(BuildTreeState.java:53)	at org.gradle.launcher.exec.BuildTreeLifecycleBuildActionExecutor.execute(BuildTreeLifecycleBuildActionExecutor.java:65)	at org.gradle.launcher.exec.RunAsBuildOperationBuildActionExecutor$3.call(RunAsBuildOperationBuildActionExecutor.java:61)	at org.gradle.launcher.exec.RunAsBuildOperationBuildActionExecutor$3.call(RunAsBuildOperationBuildActionExecutor.java:57)	at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)	at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)	at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)	at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)	at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)	at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)	at org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)	at org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)	at org.gradle.launcher.exec.RunAsBuildOperationBuildActionExecutor.execute(RunAsBuildOperationBuildActionExecutor.java:57)	at org.gradle.launcher.exec.RunAsWorkerThreadBuildActionExecutor.lambda$execute$0(RunAsWorkerThreadBuildActionExecutor.java:36)	at org.gradle.internal.work.DefaultWorkerLeaseService.withLocks(DefaultWorkerLeaseService.java:249)	at org.gradle.internal.work.DefaultWorkerLeaseService.runAsWorkerThread(DefaultWorkerLeaseService.java:109)	at org.gradle.launcher.exec.RunAsWorkerThreadBuildActionExecutor.execute(RunAsWorkerThreadBuildActionExecutor.java:36)	at org.gradle.tooling.internal.provider.continuous.ContinuousBuildActionExecutor.execute(ContinuousBuildActionExecutor.java:110)	at org.gradle.tooling.internal.provider.SubscribableBuildActionExecutor.execute(SubscribableBuildActionExecutor.java:64)	at org.gradle.internal.session.DefaultBuildSessionContext.execute(DefaultBuildSessionContext.java:46)	at org.gradle.tooling.internal.provider.BuildSessionLifecycleBuildActionExecuter$ActionImpl.apply(BuildSessionLifecycleBuildActionExecuter.java:100)	at org.gradle.tooling.internal.provider.BuildSessionLifecycleBuildActionExecuter$ActionImpl.apply(BuildSessionLifecycleBuildActionExecuter.java:88)	at org.gradle.internal.session.BuildSessionState.run(BuildSessionState.java:69)	at org.gradle.tooling.internal.provider.BuildSessionLifecycleBuildActionExecuter.execute(BuildSessionLifecycleBuildActionExecuter.java:62)	at org.gradle.tooling.internal.provider.BuildSessionLifecycleBuildActionExecuter.execute(BuildSessionLifecycleBuildActionExecuter.java:41)	at org.gradle.tooling.internal.provider.StartParamsValidatingActionExecuter.execute(StartParamsValidatingActionExecuter.java:63)	at org.gradle.tooling.internal.provider.StartParamsValidatingActionExecuter.execute(StartParamsValidatingActionExecuter.java:31)	at org.gradle.tooling.internal.provider.SessionFailureReportingActionExecuter.execute(SessionFailureReportingActionExecuter.java:50)	at org.gradle.tooling.internal.provider.SessionFailureReportingActionExecuter.execute(SessionFailureReportingActionExecuter.java:38)	at org.gradle.tooling.internal.provider.SetupLoggingActionExecuter.execute(SetupLoggingActionExecuter.java:47)	at org.gradle.tooling.internal.provider.SetupLoggingActionExecuter.execute(SetupLoggingActionExecuter.java:31)	at org.gradle.launcher.daemon.server.exec.ExecuteBuild.doBuild(ExecuteBuild.java:65)	at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:37)	at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)	at org.gradle.launcher.daemon.server.exec.WatchForDisconnection.execute(WatchForDisconnection.java:39)	at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)	at org.gradle.launcher.daemon.server.exec.ResetDeprecationLogger.execute(ResetDeprecationLogger.java:29)	at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)	at org.gradle.launcher.daemon.server.exec.RequestStopIfSingleUsedDaemon.execute(RequestStopIfSingleUsedDaemon.java:35)	at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)	at org.gradle.launcher.daemon.server.exec.ForwardClientInput$2.create(ForwardClientInput.java:78)	at org.gradle.launcher.daemon.server.exec.ForwardClientInput$2.create(ForwardClientInput.java:75)	at org.gradle.util.internal.Swapper.swap(Swapper.java:38)	at org.gradle.launcher.daemon.server.exec.ForwardClientInput.execute(ForwardClientInput.java:75)	at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)	at org.gradle.launcher.daemon.server.exec.LogAndCheckHealth.execute(LogAndCheckHealth.java:55)	at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)	at org.gradle.launcher.daemon.server.exec.LogToClient.doBuild(LogToClient.java:63)	at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:37)	at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)	at org.gradle.launcher.daemon.server.exec.EstablishBuildEnvironment.doBuild(EstablishBuildEnvironment.java:84)	at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:37)	at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)	at org.gradle.launcher.daemon.server.exec.StartBuildOrRespondWithBusy$1.run(StartBuildOrRespondWithBusy.java:52)	at org.gradle.launcher.daemon.server.DaemonStateCoordinator$1.run(DaemonStateCoordinator.java:297)	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:49)java.lang.IllegalStateException: Expected unreportedProblemInCurrentCall to be called after enterDynamicCall	at org.gradle.configurationcache.DefaultDynamicCallProblemReporting.unreportedProblemInCurrentCall(DynamicCallProblemReporting.kt:75)	at org.gradle.configurationcache.CrossProjectModelAccessTrackingParentDynamicObject.maybeReportProjectIsolationViolation(CrossProjectModelAccessTrackingParentDynamicObject.kt:118)	at org.gradle.configurationcache.CrossProjectModelAccessTrackingParentDynamicObject.onAccess(CrossProjectModelAccessTrackingParentDynamicObject.kt:113)	at org.gradle.configurationcache.CrossProjectModelAccessTrackingParentDynamicObject.hasProperty(CrossProjectModelAccessTrackingParentDynamicObject.kt:56)	at org.gradle.internal.metaobject.CompositeDynamicObject.hasProperty(CompositeDynamicObject.java:45)	at org.gradle.api.internal.project.DefaultProject_Decorated.hasProperty(Unknown Source)	at org.gradle.configurationcache.ProblemReportingCrossProjectModelAccess$ProblemReportingProject.hasProperty(ProblemReportingCrossProjectModelAccess.kt:647)	at org.gradle.api.Project$hasProperty.call(Unknown Source)	at org.jetbrains.plugins.gradle.tooling.builder.ExternalProjectBuilderImpl.getSourceSets(ExternalProjectBuilderImpl.groovy:223)	at org.jetbrains.plugins.gradle.tooling.builder.ExternalProjectBuilderImpl.doBuild(ExternalProjectBuilderImpl.groovy:107)	at org.jetbrains.plugins.gradle.tooling.builder.ExternalProjectBuilderImpl.doBuild(ExternalProjectBuilderImpl.groovy:116)	at org.jetbrains.plugins.gradle.tooling.builder.ExternalProjectBuilderImpl.buildAll(ExternalProjectBuilderImpl.groovy:75)	at org.jetbrains.plugins.gradle.tooling.internal.ExtraModelBuilder.buildAll(ExtraModelBuilder.java:107)	at org.jetbrains.plugins.gradle.tooling.internal.ExtraModelBuilder.buildAll(ExtraModelBuilder.java:76)	at org.gradle.tooling.provider.model.internal.DefaultToolingModelBuilderRegistry$BuilderWithParameter.build(DefaultToolingModelBuilderRegistry.java:287)	at org.gradle.tooling.provider.model.internal.DefaultToolingModelBuilderRegistry$UserCodeAssigningBuilder.lambda$build$0(DefaultToolingModelBuilderRegistry.java:374)	at org.gradle.configuration.internal.DefaultUserCodeApplicationContext$CurrentApplication.reapply(DefaultUserCodeApplicationContext.java:109)	at org.gradle.tooling.provider.model.internal.DefaultToolingModelBuilderRegistry$UserCodeAssigningBuilder.build(DefaultToolingModelBuilderRegistry.java:374)	at org.gradle.tooling.provider.model.internal.DefaultToolingModelBuilderRegistry$LockSingleProjectBuilder.lambda$build$0(DefaultToolingModelBuilderRegistry.java:304)	at org.gradle.api.internal.project.DefaultProjectStateRegistry$ProjectStateImpl.lambda$fromMutableState$1(DefaultProjectStateRegistry.java:400)	at org.gradle.internal.work.DefaultWorkerLeaseService.withReplacedLocks(DefaultWorkerLeaseService.java:345)	at org.gradle.api.internal.project.DefaultProjectStateRegistry$ProjectStateImpl.fromMutableState(DefaultProjectStateRegistry.java:400)	at org.gradle.tooling.provider.model.internal.DefaultToolingModelBuilderRegistry$LockSingleProjectBuilder.build(DefaultToolingModelBuilderRegistry.java:304)	at org.gradle.tooling.provider.model.internal.DefaultToolingModelBuilderRegistry$BuildOperationWrappingBuilder$1.call(DefaultToolingModelBuilderRegistry.java:337)	at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)	at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)	at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)	at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)	at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)	at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)	at org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)	at org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)	at org.gradle.tooling.provider.model.internal.DefaultToolingModelBuilderRegistry$BuildOperationWrappingBuilder.build(DefaultToolingModelBuilderRegistry.java:334)	at org.gradle.internal.build.DefaultBuildToolingModelController$AbstractToolingScope.getModel(DefaultBuildToolingModelController.java:82)	at org.gradle.configurationcache.ConfigurationCacheAwareBuildToolingModelController$CachingToolingModelScope$getModel$1.invoke(ConfigurationCacheAwareBuildToolingModelController.kt:55)	at org.gradle.configurationcache.fingerprint.ConfigurationCacheFingerprintWriter.collectFingerprintForProject(ConfigurationCacheFingerprintWriter.kt:431)	at org.gradle.configurationcache.fingerprint.ConfigurationCacheFingerprintController$Writing.collectFingerprintForProject(ConfigurationCacheFingerprintController.kt:151)	at org.gradle.configurationcache.fingerprint.ConfigurationCacheFingerprintController.collectFingerprintForProject(ConfigurationCacheFingerprintController.kt:237)	at org.gradle.configurationcache.models.IntermediateModelController$loadOrCreateIntermediateModel$1.invoke(IntermediateModelController.kt:68)	at org.gradle.configurationcache.models.IntermediateModelController$loadOrCreateIntermediateModel$1.invoke(IntermediateModelController.kt:65)	at org.gradle.configurationcache.models.ProjectStateStore.loadOrCreateValue(ProjectStateStore.kt:113)	at org.gradle.configurationcache.models.IntermediateModelController.loadOrCreateIntermediateModel(IntermediateModelController.kt:65)	at org.gradle.configurationcache.DefaultConfigurationCache.loadOrCreateIntermediateModel(DefaultConfigurationCache.kt:162)	at org.gradle.configurationcache.ConfigurationCacheAwareBuildToolingModelController$CachingToolingModelScope.getModel(ConfigurationCacheAwareBuildToolingModelController.kt:54)	at org.gradle.tooling.internal.provider.runner.DefaultBuildController.getModel(DefaultBuildController.java:106)	at org.gradle.tooling.internal.consumer.connection.ParameterAwareBuildControllerAdapter.getModel(ParameterAwareBuildControllerAdapter.java:39)	at org.gradle.tooling.internal.consumer.connection.UnparameterizedBuildController.getModel(UnparameterizedBuildController.java:113)	at org.gradle.tooling.internal.consumer.connection.NestedActionAwareBuildControllerAdapter.getModel(NestedActionAwareBuildControllerAdapter.java:31)	at org.gradle.tooling.internal.consumer.connection.UnparameterizedBuildController.findModel(UnparameterizedBuildController.java:97)	at org.gradle.tooling.internal.consumer.connection.NestedActionAwareBuildControllerAdapter.findModel(NestedActionAwareBuildControllerAdapter.java:31)	at org.gradle.tooling.internal.consumer.connection.UnparameterizedBuildController.findModel(UnparameterizedBuildController.java:81)	at org.gradle.tooling.internal.consumer.connection.NestedActionAwareBuildControllerAdapter.findModel(NestedActionAwareBuildControllerAdapter.java:31)	at org.jetbrains.plugins.gradle.model.ProjectImportAction$MyBuildController.findModel(ProjectImportAction.java:634)	at org.jetbrains.plugins.gradle.model.ProjectImportAction$MyBuildController.findModel(ProjectImportAction.java:655)	at org.jetbrains.plugins.gradle.model.ClassSetImportModelProvider.populateBuildModels(ClassSetImportModelProvider.java:27)	at org.jetbrains.plugins.gradle.model.ProjectImportAction.addBuildModels(ProjectImportAction.java:400)	at org.jetbrains.plugins.gradle.model.ProjectImportAction.execute(ProjectImportAction.java:138)	at org.jetbrains.plugins.gradle.model.ProjectImportAction.execute(ProjectImportAction.java:42)	at org.gradle.tooling.internal.consumer.connection.InternalBuildActionAdapter.execute(InternalBuildActionAdapter.java:64)	at org.gradle.tooling.internal.provider.runner.AbstractClientProvidedBuildActionRunner$ActionAdapter.runAction(AbstractClientProvidedBuildActionRunner.java:131)	at org.gradle.tooling.internal.provider.runner.AbstractClientProvidedBuildActionRunner$ActionAdapter.fromBuildModel(AbstractClientProvidedBuildActionRunner.java:104)	at org.gradle.tooling.internal.provider.runner.AbstractClientProvidedBuildActionRunner$ActionAdapter.fromBuildModel(AbstractClientProvidedBuildActionRunner.java:84)	at org.gradle.internal.buildtree.DefaultBuildTreeModelCreator.fromBuildModel(DefaultBuildTreeModelCreator.java:57)	at org.gradle.configurationcache.ConfigurationCacheAwareBuildTreeModelCreator$fromBuildModel$1.invoke(ConfigurationCacheAwareBuildTreeModelCreator.kt:35)	at org.gradle.configurationcache.DefaultConfigurationCache$loadOrCreateModel$1.invoke(DefaultConfigurationCache.kt:155)	at org.gradle.configurationcache.DefaultConfigurationCache.runWorkThatContributesToCacheEntry(DefaultConfigurationCache.kt:289)	at org.gradle.configurationcache.DefaultConfigurationCache.loadOrCreateModel(DefaultConfigurationCache.kt:154)	at org.gradle.configurationcache.ConfigurationCacheAwareBuildTreeModelCreator.fromBuildModel(ConfigurationCacheAwareBuildTreeModelCreator.kt:34)	at org.gradle.internal.buildtree.DefaultBuildTreeLifecycleController.lambda$fromBuildModel$2(DefaultBuildTreeLifecycleController.java:81)	at org.gradle.internal.buildtree.DefaultBuildTreeLifecycleController.lambda$runBuild$4(DefaultBuildTreeLifecycleController.java:98)	at org.gradle.internal.model.StateTransitionController.lambda$transition$6(StateTransitionController.java:177)	at org.gradle.internal.model.StateTransitionController.doTransition(StateTransitionController.java:258)	at org.gradle.internal.model.StateTransitionController.lambda$transition$7(StateTransitionController.java:177)	at org.gradle.internal.work.DefaultSynchronizer.withLock(DefaultSynchronizer.java:44)	at org.gradle.internal.model.StateTransitionController.transition(StateTransitionController.java:177)	at org.gradle.internal.buildtree.DefaultBuildTreeLifecycleController.runBuild(DefaultBuildTreeLifecycleController.java:95)	at org.gradle.internal.buildtree.DefaultBuildTreeLifecycleController.fromBuildModel(DefaultBuildTreeLifecycleController.java:73)	at org.gradle.tooling.internal.provider.runner.AbstractClientProvidedBuildActionRunner.runClientAction(AbstractClientProvidedBuildActionRunner.java:43)	at org.gradle.tooling.internal.provider.runner.ClientProvidedPhasedActionRunner.run(ClientProvidedPhasedActionRunner.java:53)	at org.gradle.launcher.exec.ChainingBuildActionRunner.run(ChainingBuildActionRunner.java:35)	at org.gradle.internal.buildtree.ProblemReportingBuildActionRunner.run(ProblemReportingBuildActionRunner.java:49)	at org.gradle.launcher.exec.BuildOutcomeReportingBuildActionRunner.run(BuildOutcomeReportingBuildActionRunner.java:65)	at org.gradle.tooling.internal.provider.FileSystemWatchingBuildActionRunner.run(FileSystemWatchingBuildActionRunner.java:140)	at org.gradle.launcher.exec.BuildCompletionNotifyingBuildActionRunner.run(BuildCompletionNotifyingBuildActionRunner.java:41)	at org.gradle.launcher.exec.RootBuildLifecycleBuildActionExecutor.lambda$execute$0(RootBuildLifecycleBuildActionExecutor.java:40)	at org.gradle.composite.internal.DefaultRootBuildState.run(DefaultRootBuildState.java:122)	at org.gradle.launcher.exec.RootBuildLifecycleBuildActionExecutor.execute(RootBuildLifecycleBuildActionExecutor.java:40)	at org.gradle.internal.buildtree.DefaultBuildTreeContext.execute(DefaultBuildTreeContext.java:40)	at org.gradle.launcher.exec.BuildTreeLifecycleBuildActionExecutor.lambda$execute$0(BuildTreeLifecycleBuildActionExecutor.java:65)	at org.gradle.internal.buildtree.BuildTreeState.run(BuildTreeState.java:53)	at org.gradle.launcher.exec.BuildTreeLifecycleBuildActionExecutor.execute(BuildTreeLifecycleBuildActionExecutor.java:65)	at org.gradle.launcher.exec.RunAsBuildOperationBuildActionExecutor$3.call(RunAsBuildOperationBuildActionExecutor.java:61)	at org.gradle.launcher.exec.RunAsBuildOperationBuildActionExecutor$3.call(RunAsBuildOperationBuildActionExecutor.java:57)	at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)	at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)	at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)	at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)	at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)	at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)	at org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)	at org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)	at org.gradle.launcher.exec.RunAsBuildOperationBuildActionExecutor.execute(RunAsBuildOperationBuildActionExecutor.java:57)	at org.gradle.launcher.exec.RunAsWorkerThreadBuildActionExecutor.lambda$execute$0(RunAsWorkerThreadBuildActionExecutor.java:36)	at org.gradle.internal.work.DefaultWorkerLeaseService.withLocks(DefaultWorkerLeaseService.java:249)	at org.gradle.internal.work.DefaultWorkerLeaseService.runAsWorkerThread(DefaultWorkerLeaseService.java:109)	at org.gradle.launcher.exec.RunAsWorkerThreadBuildActionExecutor.execute(RunAsWorkerThreadBuildActionExecutor.java:36)	at org.gradle.tooling.internal.provider.continuous.ContinuousBuildActionExecutor.execute(ContinuousBuildActionExecutor.java:110)	at org.gradle.tooling.internal.provider.SubscribableBuildActionExecutor.execute(SubscribableBuildActionExecutor.java:64)	at org.gradle.internal.session.DefaultBuildSessionContext.execute(DefaultBuildSessionContext.java:46)	at org.gradle.tooling.internal.provider.BuildSessionLifecycleBuildActionExecuter$ActionImpl.apply(BuildSessionLifecycleBuildActionExecuter.java:100)	at org.gradle.tooling.internal.provider.BuildSessionLifecycleBuildActionExecuter$ActionImpl.apply(BuildSessionLifecycleBuildActionExecuter.java:88)	at org.gradle.internal.session.BuildSessionState.run(BuildSessionState.java:69)	at org.gradle.tooling.internal.provider.BuildSessionLifecycleBuildActionExecuter.execute(BuildSessionLifecycleBuildActionExecuter.java:62)	at org.gradle.tooling.internal.provider.BuildSessionLifecycleBuildActionExecuter.execute(BuildSessionLifecycleBuildActionExecuter.java:41)	at org.gradle.tooling.internal.provider.StartParamsValidatingActionExecuter.execute(StartParamsValidatingActionExecuter.java:63)	at org.gradle.tooling.internal.provider.StartParamsValidatingActionExecuter.execute(StartParamsValidatingActionExecuter.java:31)	at org.gradle.tooling.internal.provider.SessionFailureReportingActionExecuter.execute(SessionFailureReportingActionExecuter.java:50)	at org.gradle.tooling.internal.provider.SessionFailureReportingActionExecuter.execute(SessionFailureReportingActionExecuter.java:38)	at org.gradle.tooling.internal.provider.SetupLoggingActionExecuter.execute(SetupLoggingActionExecuter.java:47)	at org.gradle.tooling.internal.provider.SetupLoggingActionExecuter.execute(SetupLoggingActionExecuter.java:31)	at org.gradle.launcher.daemon.server.exec.ExecuteBuild.doBuild(ExecuteBuild.java:65)	at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:37)	at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)	at org.gradle.launcher.daemon.server.exec.WatchForDisconnection.execute(WatchForDisconnection.java:39)	at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)	at org.gradle.launcher.daemon.server.exec.ResetDeprecationLogger.execute(ResetDeprecationLogger.java:29)	at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)	at org.gradle.launcher.daemon.server.exec.RequestStopIfSingleUsedDaemon.execute(RequestStopIfSingleUsedDaemon.java:35)	at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)	at org.gradle.launcher.daemon.server.exec.ForwardClientInput$2.create(ForwardClientInput.java:78)	at org.gradle.launcher.daemon.server.exec.ForwardClientInput$2.create(ForwardClientInput.java:75)	at org.gradle.util.internal.Swapper.swap(Swapper.java:38)	at org.gradle.launcher.daemon.server.exec.ForwardClientInput.execute(ForwardClientInput.java:75)	at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)	at org.gradle.launcher.daemon.server.exec.LogAndCheckHealth.execute(LogAndCheckHealth.java:55)	at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)	at org.gradle.launcher.daemon.server.exec.LogToClient.doBuild(LogToClient.java:63)	at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:37)	at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)	at org.gradle.launcher.daemon.server.exec.EstablishBuildEnvironment.doBuild(EstablishBuildEnvironment.java:84)	at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:37)	at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)	at org.gradle.launcher.daemon.server.exec.StartBuildOrRespondWithBusy$1.run(StartBuildOrRespondWithBusy.java:52)	at org.gradle.launcher.daemon.server.DaemonStateCoordinator$1.run(DaemonStateCoordinator.java:297)	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:49)	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)	at java.base/java.lang.Thread.run(Thread.java:833)```</details>### Initial investigationThe issue is only reproducible in the IDE import and not in an ordinary build.This issue appeared after the introduction of inherited property access checks in dynamic calls by https://github.com/gradle/gradle/pull/21838. During the IDE import, the `DefaultProject`'s implementation of `hasProperty` that calls the `dynamicLookupRoutine.hasProperty(...)` is substituted by some other code that directly calls the `ExtensibleDynamicObject`, which results in a lost ""enter"" event in dynamic calls tracking done within the dynamic objects.### Steps to Reproduce * Create a Gradle project using the Gradle 8.0 Nightly build specified below;* Add `org.gradle.unsafe.isolated-projects=true` to `gradle.properties` to enable Project Isolation* Make sure that at least one subproject does not apply the `java` plugin* Import (or re-import) the project into the IDE### Your Environment* IntelliJ IDEA 2022.2.4 or 2022.3* Gradle Nightly distribution URL: `https://services.gradle.org/distributions-snapshots/gradle-8.0-20221130035948+0000-bin.zip`
"
22944,0,1866,52,0,0,elihart,0,"title:HashMap$Node cannot be cast to class java.util.HashMap$TreeNode description:We had an AGP task fail spuriously with the following root cause:```Caused by: java.lang.ClassCastException: class java.util.HashMap$Node cannot be cast to class java.util.HashMap$TreeNode (java.util.HashMap$Node and java.util.HashMap$TreeNode are in module java.base of loader 'bootstrap')	at java.base/java.util.HashMap$TreeNode.moveRootToFront(HashMap.java:1986)	at java.base/java.util.HashMap$TreeNode.putTreeVal(HashMap.java:2165)	at java.base/java.util.HashMap.putVal(HashMap.java:636)	at java.base/java.util.HashMap.put(HashMap.java:610)	at org.gradle.api.internal.artifacts.ivyservice.resolveengine.result.ResolvedVariantResultSerializer.write(ResolvedVariantResultSerializer.java:90)	at org.gradle.api.internal.artifacts.ivyservice.resolveengine.result.ResolvedVariantResultSerializer.write(ResolvedVariantResultSerializer.java:35)	at org.gradle.api.internal.artifacts.ivyservice.resolveengine.result.ResolvedComponentResultSerializer.writeComponent(ResolvedComponentResultSerializer.java:92)	at org.gradle.api.internal.artifacts.ivyservice.resolveengine.result.ResolvedComponentResultSerializer.writeComponent(ResolvedComponentResultSerializer.java:103)	at org.gradle.api.internal.artifacts.ivyservice.resolveengine.result.ResolvedComponentResultSerializer.writeComponent(ResolvedComponentResultSerializer.java:103)	at org.gradle.api.internal.artifacts.ivyservice.resolveengine.result.ResolvedComponentResultSerializer.writeComponent(ResolvedComponentResultSerializer.java:103)	at org.gradle.api.internal.artifacts.ivyservice.resolveengine.result.ResolvedComponentResultSerializer.write(ResolvedComponentResultSerializer.java:71)	at org.gradle.api.internal.artifacts.ivyservice.resolveengine.result.ResolvedComponentResultSerializer.write(ResolvedComponentResultSerializer.java:41)	at org.gradle.internal.snapshot.impl.AbstractValueProcessor.gradleSerialization(AbstractValueProcessor.java:164)```This seems to be an internal gradle exception, and from what I found at https://stackoverflow.com/questions/29967401/strange-hashmap-exception-hashmapnode-cannot-be-cast-to-hashmaptreenode it seems like it may be a concurrency related issue### Expected BehaviorThe task should consistently run without encountering this internal crash. It seems to be quite rare so far.### Current BehaviorAGP task occasionally fails with exception### ContextCauses spurious failures for us on CI### Steps to Reproduce It seems to be a rare spurious issue that happens in one of the Android Gradle Plugin tasks (collecting dependencies)### Your EnvironmentGradle 7.6Android GP 7.3Java 17
"
22921,0,2110,61,0,1,tkrah,0,"title:Gradle complains about invalid tool chain - picking up the source package location - it should just ignore them description:### Expected BehaviorHaving a current debian / ubuntu LTS (22.x) distribution with e.g. the package:openjdk-17-sourceopenjdk-11-sourceinstalled.This will result in the sources installed in:/usr/lib/jvm/openjdk-17/usr/lib/jvm/openjdk-11It should ignore those directories for the toolchains and not complain about invalid JDKs - because I can't fix that, that's the valid package maintainers choice and gradle assumes something here which is wrong.### Current BehaviorGradle 7.6 complains about an invalid toolchain when running gradle tasks (where 7.5.1 does not do that):```Invalid Java installation found at '/usr/lib/jvm/openjdk-17' (Common Linux Locations). It will be re-checked in the next build. This might have performance impact if it keeps failing. Run the 'javaToolchains' task for more details.Invalid Java installation found at '/usr/lib/jvm/openjdk-11' (Common Linux Locations). It will be re-checked in the next build. This might have performance impact if it keeps failing. Run the 'javaToolchains' task for more details.```But it just assumes that there should be a JDK there which of cause it is not and never was in the past years for the source packages.gradle javaToolChains output:``` + Invalid toolchains     + /usr/lib/jvm/openjdk-11       | Error:              A problem occurred starting process 'command '/usr/lib/jvm/openjdk-11/bin/java''       |     Caused by:      Could not start '/usr/lib/jvm/openjdk-11/bin/java'       |     Caused by:      Cannot run program ""/usr/lib/jvm/openjdk-11/bin/java"" (in directory ""/home/user/.gradle/.tmp/tmp-jvm15962250427739945112probe""): error=2, Datei oder Verzeichnis nicht gefunden       |     Caused by:      error=2, Datei oder Verzeichnis nicht gefunden     + /usr/lib/jvm/openjdk-17       | Error:              A problem occurred starting process 'command '/usr/lib/jvm/openjdk-17/bin/java''       |     Caused by:      Could not start '/usr/lib/jvm/openjdk-17/bin/java'       |     Caused by:      Cannot run program ""/usr/lib/jvm/openjdk-17/bin/java"" (in directory ""/home/user/.gradle/.tmp/tmp-jvm18195840401229065181probe""): error=2, Datei oder Verzeichnis nicht gefunden       |     Caused by:      error=2, Datei oder Verzeichnis nicht gefunden```The correct toolchains which matches those are detected too:``` + Private Build JDK 17.0.5+8-Ubuntu-2ubuntu122.04     | Location:           /usr/lib/jvm/java-17-openjdk-amd64     | Language Version:   17     | Vendor:             Private Build     | Architecture:       amd64     | Is JDK:             true     | Detected by:        Current JVM + Ubuntu JDK 11.0.17+8-post-Ubuntu-1ubuntu222.04     | Location:           /usr/lib/jvm/java-11-openjdk-amd64     | Language Version:   11     | Vendor:             Ubuntu     | Architecture:       amd64     | Is JDK:             true     | Detected by:        Common Linux Locations```### ContextJust run gradle and have the packages:openjdk-17-sourceopenjdk-11-sourceinstalled on a current ubuntu LTS.### Steps to Reproduce Just run:gradle javaToolchains
"
22918,0,0,19,0,0,Toldry,0,"title:JacocoReportAggregationPlugin doesn't work with lockfiles description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues--><!--- Provide a brief summary of the issue in the title above -->`JacocoReportAggregationPlugin` doesn't work with lockfiles; attempting to use both causes a failure.### Expected BehaviorRunning `gradle resolveAndLockAll --write-locks` should create lockfiles and result in a succesful build.### Current BehaviorBuild fails. Full error can be seen [here](https://github.com/Toldry/jacoco-aggregation-lockfiles-bug-replicator#expected-output).### Context<!--- How has this issue affected you? What are you trying to accomplish? --><!--- Providing context helps us come up with a solution that is most useful in the real world -->I am trying to use `JacocoReportAggregationPlugin` and lockfiles concurrently in my build.### Steps to Reproduce Here is a reproducer. Instructions how to reproduce in the README:https://github.com/Toldry/jacoco-aggregation-lockfiles-bug-replicator<!---Provide a self-contained example project as an attached archive or a Github project.You can use the following template with a Gradle GitHub action set up to showcase your problem: https://github.com/gradle/gradle-issue-reproducerIn the rare cases where this is infeasible, we will also accept a detailed set of instructions.-->### Your Environment<!--- Include as many relevant details about the environment you experienced the bug in --><!--- A build scan https://scans.gradle.com/get-started is ideal -->Gradle 7.5.1macOS  Monterey Version 12.6.1Build scan URL:I am unable to provide a build scan.
"
22887,1,1640,300,0,0,Flowdalic,0,"title:Gradle does not put traditional non-modular libaries in --class-path, but uses --module-path instead description:The gradle manual states that libraries without a module-info.class are put in the class path, instead of the module path. However in [this](https://github.com/Flowdalic/beanstalk/tree/gradle-scala-predef-not-found-2) minimal non-working example, gradle's application plugin constructs the command line to invoke the JVM in order to run the application with traditional non-modular libraries in the module path.### Expected BehaviorInvoke Java with traditional non-modular libraries (Scala's runtime libraries in this case) in class path:```/opt/openjdk-bin-19.0.1_p10/bin/java \    --enable-preview \    --add-reads eu.geekplace.beanstalk.core=ALL-UNNAMED \    -Dfile.encoding=UTF-8 -Duser.country=US -Duser.language=en -Duser.variant \    --module-path /home/flo/repos/beanstalk/beanstalk-app/build/libs/beanstalk-app.jar:/home/flo/repos/beanstalk/beanstalk-core/build/libs/beanstalk-core.jar \    --class-path /home/flo/.gradle/caches/modules-2/files-2.1/org.scala-lang/scala3-library_3/3.2.1/ddc77e1f365f0a5202dda84eefede515feb93784/scala3-library_3-3.2.1.jar:/home/flo/.gradle/caches/modules-2/files-2.1/org.scala-lang/scala-library/2.13.10/67c1afabaea9ba51321159e70a78515647e1b73d/scala-library-2.13.10.jar    --module eu.geekplace.beanstalk.app/eu.geekplace.beanstalk.app.App```### Current BehaviorTraditional non-modular libraries are part of the module path, which means they are not part of the unnamed module:```/opt/openjdk-bin-19.0.1_p10/bin/java \    --enable-preview \    --add-reads eu.geekplace.beanstalk.core=ALL-UNNAMED \    -Dfile.encoding=UTF-8 -Duser.country=US -Duser.language=en -Duser.variant \    --module-path /home/flo/repos/beanstalk/beanstalk-app/build/libs/beanstalk-app.jar:/home/flo/repos/beanstalk/beanstalk-core/build/libs/beanstalk-core.jar:/home/flo/.gradle/caches/modules-2/files-2.1/org.scala-lang/scala3-library_3/3.2.1/ddc77e1f365f0a5202dda84eefede515feb93784/scala3-library_3-3.2.1.jar:/home/flo/.gradle/caches/modules-2/files-2.1/org.scala-lang/scala-library/2.13.10/67c1afabaea9ba51321159e70a78515647e1b73d/scala-library-2.13.10.jar \    --module eu.geekplace.beanstalk.app/eu.geekplace.beanstalk.app.App```### ContextThis is a project setup with JDK 19, Java preview features, Java module system and Scala 3. The issue prevents the project from calling into Scala 3 code, as the scala runtime libraries are not made part of the unnamed module, so ` --add-reads eu.geekplace.beanstalk.core=ALL-UNNAMED` does not unfold the desired effect.See https://discuss.gradle.org/t/gradle-7-6-jdk-19-and-scala-3-java-lang-classnotfoundexception-scala-predef-even-though-scala-library-2-13-10-jar-is-in-classpath/44352/1### Steps to Reproduce ```git clone https://github.com/Flowdalic/beanstalk.gitcd beanstalkgit checkout gradle-scala-predef-not-found-2./gradew beanstalk-app:run```### Your EnvironmentBuild scan URL:https://gradle.com/s/wvdnvmzv2v7xm
"
22875,0,35689,18,0,0,realdadfish,0,"title:Regression with 7.6: @pom artifact in JVM library project is no longer found description:### Expected BehaviorBuild should run through### Current BehaviorAfter the upgrade of Gradle, the `gradle-license-plugin` fails to locate the `@pom` artifact of a multi-component build dependency, `logging.pom`. This is the stack trace:```FAILURE: Build failed with an exception.* What went wrong:Execution failed for task ':app:licenseDevelopDebugReport'.> Could not resolve all dependencies for configuration ':app:pomsdevelopDebug959b778c-fc52-4062-8485-caf352da000f'.   > Could not select a variant of project :shared-libs:logging that matches the consumer attributes.      > Could not find logging.pom (project :shared-libs:logging).* Try:> Run with --info or --debug option to get more log output.> Run with --scan to get full insights.* Exception is:org.gradle.api.tasks.TaskExecutionException: Execution failed for task ':app:licenseDevelopDebugReport'.        at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.lambda$executeIfValid$1(ExecuteActionsTaskExecuter.java:142)        at org.gradle.internal.Try$Failure.ifSuccessfulOrElse(Try.java:282)        at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeIfValid(ExecuteActionsTaskExecuter.java:140)        at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.execute(ExecuteActionsTaskExecuter.java:128)        at org.gradle.api.internal.tasks.execution.CleanupStaleOutputsExecuter.execute(CleanupStaleOutputsExecuter.java:77)        at org.gradle.api.internal.tasks.execution.FinalizePropertiesTaskExecuter.execute(FinalizePropertiesTaskExecuter.java:46)        at org.gradle.api.internal.tasks.execution.ResolveTaskExecutionModeExecuter.execute(ResolveTaskExecutionModeExecuter.java:51)        at org.gradle.api.internal.tasks.execution.SkipTaskWithNoActionsExecuter.execute(SkipTaskWithNoActionsExecuter.java:57)        at org.gradle.api.internal.tasks.execution.SkipOnlyIfTaskExecuter.execute(SkipOnlyIfTaskExecuter.java:57)        at org.gradle.api.internal.tasks.execution.CatchExceptionTaskExecuter.execute(CatchExceptionTaskExecuter.java:36)        at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.executeTask(EventFiringTaskExecuter.java:77)        at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.call(EventFiringTaskExecuter.java:55)        at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.call(EventFiringTaskExecuter.java:52)        at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)        at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)        at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)        at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)        at org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)        at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter.execute(EventFiringTaskExecuter.java:52)        at org.gradle.execution.plan.LocalTaskNodeExecutor.execute(LocalTaskNodeExecutor.java:69)        at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$InvokeNodeExecutorsAction.execute(DefaultTaskExecutionGraph.java:322)        at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$InvokeNodeExecutorsAction.execute(DefaultTaskExecutionGraph.java:309)        at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$BuildOperationAwareExecutionAction.execute(DefaultTaskExecutionGraph.java:302)        at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$BuildOperationAwareExecutionAction.execute(DefaultTaskExecutionGraph.java:288)        at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.execute(DefaultPlanExecutor.java:462)        at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.run(DefaultPlanExecutor.java:379)        at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)        at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:49)        at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)        at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)        at java.base/java.lang.Thread.run(Thread.java:829)Caused by: org.gradle.api.artifacts.ResolveException: Could not resolve all dependencies for configuration ':app:pomsdevelopDebug959b778c-fc52-4062-8485-caf352da000f'.        at org.gradle.api.internal.artifacts.ivyservice.ErrorHandlingConfigurationResolver.wrapException(ErrorHandlingConfigurationResolver.java:107)        at org.gradle.api.internal.artifacts.ivyservice.ErrorHandlingConfigurationResolver$ErrorHandlingLenientConfiguration.getArtifacts(ErrorHandlingConfigurationResolver.java:132)        at com.jaredsburrows.license.LicenseReportTask.generatePOMInfo(LicenseReportTask.kt:152)        at com.jaredsburrows.license.LicenseReportTask.licenseReport(LicenseReportTask.kt:41)        at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)        at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)        at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)        at java.base/java.lang.reflect.Method.invoke(Method.java:566)        at org.gradle.internal.reflect.JavaMethod.invoke(JavaMethod.java:125)        at org.gradle.api.internal.project.taskfactory.StandardTaskAction.doExecute(StandardTaskAction.java:58)        at org.gradle.api.internal.project.taskfactory.StandardTaskAction.execute(StandardTaskAction.java:51)        at org.gradle.api.internal.project.taskfactory.StandardTaskAction.execute(StandardTaskAction.java:29)        at org.gradle.api.internal.tasks.execution.TaskExecution$3.run(TaskExecution.java:236)        at org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:29)        at org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:26)        at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)        at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)        at org.gradle.internal.operations.DefaultBuildOperationRunner.run(DefaultBuildOperationRunner.java:47)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:68)        at org.gradle.api.internal.tasks.execution.TaskExecution.executeAction(TaskExecution.java:221)        at org.gradle.api.internal.tasks.execution.TaskExecution.executeActions(TaskExecution.java:204)        at org.gradle.api.internal.tasks.execution.TaskExecution.executeWithPreviousOutputFiles(TaskExecution.java:187)        at org.gradle.api.internal.tasks.execution.TaskExecution.execute(TaskExecution.java:165)        at org.gradle.internal.execution.steps.ExecuteStep.executeInternal(ExecuteStep.java:89)        at org.gradle.internal.execution.steps.ExecuteStep.access$000(ExecuteStep.java:40)        at org.gradle.internal.execution.steps.ExecuteStep$1.call(ExecuteStep.java:53)        at org.gradle.internal.execution.steps.ExecuteStep$1.call(ExecuteStep.java:50)        at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)        at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)        at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)        at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)        at org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)        at org.gradle.internal.execution.steps.ExecuteStep.execute(ExecuteStep.java:50)        at org.gradle.internal.execution.steps.ExecuteStep.execute(ExecuteStep.java:40)        at org.gradle.internal.execution.steps.RemovePreviousOutputsStep.execute(RemovePreviousOutputsStep.java:68)        at org.gradle.internal.execution.steps.RemovePreviousOutputsStep.execute(RemovePreviousOutputsStep.java:38)        at org.gradle.internal.execution.steps.CancelExecutionStep.execute(CancelExecutionStep.java:41)        at org.gradle.internal.execution.steps.TimeoutStep.executeWithoutTimeout(TimeoutStep.java:74)        at org.gradle.internal.execution.steps.TimeoutStep.execute(TimeoutStep.java:55)        at org.gradle.internal.execution.steps.CreateOutputsStep.execute(CreateOutputsStep.java:51)        at org.gradle.internal.execution.steps.CreateOutputsStep.execute(CreateOutputsStep.java:29)        at org.gradle.internal.execution.steps.CaptureStateAfterExecutionStep.executeDelegateBroadcastingChanges(CaptureStateAfterExecutionStep.java:124)        at org.gradle.internal.execution.steps.CaptureStateAfterExecutionStep.execute(CaptureStateAfterExecutionStep.java:80)        at org.gradle.internal.execution.steps.CaptureStateAfterExecutionStep.execute(CaptureStateAfterExecutionStep.java:58)        at org.gradle.internal.execution.steps.ResolveInputChangesStep.execute(ResolveInputChangesStep.java:48)        at org.gradle.internal.execution.steps.ResolveInputChangesStep.execute(ResolveInputChangesStep.java:36)        at org.gradle.internal.execution.steps.BuildCacheStep.executeWithoutCache(BuildCacheStep.java:181)        at org.gradle.internal.execution.steps.BuildCacheStep.lambda$execute$1(BuildCacheStep.java:71)        at org.gradle.internal.Either$Right.fold(Either.java:175)        at org.gradle.internal.execution.caching.CachingState.fold(CachingState.java:59)        at org.gradle.internal.execution.steps.BuildCacheStep.execute(BuildCacheStep.java:69)        at org.gradle.internal.execution.steps.BuildCacheStep.execute(BuildCacheStep.java:47)        at org.gradle.internal.execution.steps.StoreExecutionStateStep.execute(StoreExecutionStateStep.java:36)        at org.gradle.internal.execution.steps.StoreExecutionStateStep.execute(StoreExecutionStateStep.java:25)        at org.gradle.internal.execution.steps.RecordOutputsStep.execute(RecordOutputsStep.java:36)        at org.gradle.internal.execution.steps.RecordOutputsStep.execute(RecordOutputsStep.java:22)        at org.gradle.internal.execution.steps.SkipUpToDateStep.executeBecause(SkipUpToDateStep.java:110)        at org.gradle.internal.execution.steps.SkipUpToDateStep.lambda$execute$2(SkipUpToDateStep.java:56)        at java.base/java.util.Optional.orElseGet(Optional.java:369)        at org.gradle.internal.execution.steps.SkipUpToDateStep.execute(SkipUpToDateStep.java:56)        at org.gradle.internal.execution.steps.SkipUpToDateStep.execute(SkipUpToDateStep.java:38)        at org.gradle.internal.execution.steps.ResolveChangesStep.execute(ResolveChangesStep.java:73)        at org.gradle.internal.execution.steps.ResolveChangesStep.execute(ResolveChangesStep.java:44)        at org.gradle.internal.execution.steps.legacy.MarkSnapshottingInputsFinishedStep.execute(MarkSnapshottingInputsFinishedStep.java:37)        at org.gradle.internal.execution.steps.legacy.MarkSnapshottingInputsFinishedStep.execute(MarkSnapshottingInputsFinishedStep.java:27)        at org.gradle.internal.execution.steps.ResolveCachingStateStep.execute(ResolveCachingStateStep.java:89)        at org.gradle.internal.execution.steps.ResolveCachingStateStep.execute(ResolveCachingStateStep.java:50)        at org.gradle.internal.execution.steps.ValidateStep.execute(ValidateStep.java:102)        at org.gradle.internal.execution.steps.ValidateStep.execute(ValidateStep.java:57)        at org.gradle.internal.execution.steps.CaptureStateBeforeExecutionStep.execute(CaptureStateBeforeExecutionStep.java:76)        at org.gradle.internal.execution.steps.CaptureStateBeforeExecutionStep.execute(CaptureStateBeforeExecutionStep.java:50)        at org.gradle.internal.execution.steps.SkipEmptyWorkStep.executeWithNoEmptySources(SkipEmptyWorkStep.java:254)        at org.gradle.internal.execution.steps.SkipEmptyWorkStep.execute(SkipEmptyWorkStep.java:91)        at org.gradle.internal.execution.steps.SkipEmptyWorkStep.execute(SkipEmptyWorkStep.java:56)        at org.gradle.internal.execution.steps.RemoveUntrackedExecutionStateStep.execute(RemoveUntrackedExecutionStateStep.java:32)        at org.gradle.internal.execution.steps.RemoveUntrackedExecutionStateStep.execute(RemoveUntrackedExecutionStateStep.java:21)        at org.gradle.internal.execution.steps.legacy.MarkSnapshottingInputsStartedStep.execute(MarkSnapshottingInputsStartedStep.java:38)        at org.gradle.internal.execution.steps.LoadPreviousExecutionStateStep.execute(LoadPreviousExecutionStateStep.java:43)        at org.gradle.internal.execution.steps.LoadPreviousExecutionStateStep.execute(LoadPreviousExecutionStateStep.java:31)        at org.gradle.internal.execution.steps.AssignWorkspaceStep.lambda$execute$0(AssignWorkspaceStep.java:40)        at org.gradle.api.internal.tasks.execution.TaskExecution$4.withWorkspace(TaskExecution.java:281)        at org.gradle.internal.execution.steps.AssignWorkspaceStep.execute(AssignWorkspaceStep.java:40)        at org.gradle.internal.execution.steps.AssignWorkspaceStep.execute(AssignWorkspaceStep.java:30)        at org.gradle.internal.execution.steps.IdentityCacheStep.execute(IdentityCacheStep.java:37)        at org.gradle.internal.execution.steps.IdentityCacheStep.execute(IdentityCacheStep.java:27)        at org.gradle.internal.execution.steps.IdentifyStep.execute(IdentifyStep.java:44)        at org.gradle.internal.execution.steps.IdentifyStep.execute(IdentifyStep.java:33)        at org.gradle.internal.execution.impl.DefaultExecutionEngine$1.execute(DefaultExecutionEngine.java:76)        at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeIfValid(ExecuteActionsTaskExecuter.java:139)        at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.execute(ExecuteActionsTaskExecuter.java:128)        at org.gradle.api.internal.tasks.execution.CleanupStaleOutputsExecuter.execute(CleanupStaleOutputsExecuter.java:77)        at org.gradle.api.internal.tasks.execution.FinalizePropertiesTaskExecuter.execute(FinalizePropertiesTaskExecuter.java:46)        at org.gradle.api.internal.tasks.execution.ResolveTaskExecutionModeExecuter.execute(ResolveTaskExecutionModeExecuter.java:51)        at org.gradle.api.internal.tasks.execution.SkipTaskWithNoActionsExecuter.execute(SkipTaskWithNoActionsExecuter.java:57)        at org.gradle.api.internal.tasks.execution.SkipOnlyIfTaskExecuter.execute(SkipOnlyIfTaskExecuter.java:57)        at org.gradle.api.internal.tasks.execution.CatchExceptionTaskExecuter.execute(CatchExceptionTaskExecuter.java:36)        at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.executeTask(EventFiringTaskExecuter.java:77)        at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.call(EventFiringTaskExecuter.java:55)        at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.call(EventFiringTaskExecuter.java:52)        at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)        at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)        at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)        at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)        at org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)        at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter.execute(EventFiringTaskExecuter.java:52)        at org.gradle.execution.plan.LocalTaskNodeExecutor.execute(LocalTaskNodeExecutor.java:69)        at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$InvokeNodeExecutorsAction.execute(DefaultTaskExecutionGraph.java:322)        at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$InvokeNodeExecutorsAction.execute(DefaultTaskExecutionGraph.java:309)        at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$BuildOperationAwareExecutionAction.execute(DefaultTaskExecutionGraph.java:302)        at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$BuildOperationAwareExecutionAction.execute(DefaultTaskExecutionGraph.java:288)        at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.execute(DefaultPlanExecutor.java:462)        at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.run(DefaultPlanExecutor.java:379)        at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)        at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:49)        at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)        at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)        at java.base/java.lang.Thread.run(Thread.java:829)Caused by: org.gradle.internal.component.VariantSelectionException: Could not select a variant of project :shared-libs:logging that matches the consumer attributes.        at org.gradle.internal.component.VariantSelectionException.selectionFailed(VariantSelectionException.java:34)        at org.gradle.api.internal.artifacts.transform.AttributeMatchingVariantSelector.select(AttributeMatchingVariantSelector.java:97)        at org.gradle.api.internal.artifacts.ivyservice.resolveengine.artifact.DefaultArtifactSet.select(DefaultArtifactSet.java:86)        at org.gradle.api.internal.artifacts.ivyservice.resolveengine.artifact.DefaultVisitedArtifactResults.select(DefaultVisitedArtifactResults.java:48)        at org.gradle.api.internal.artifacts.ivyservice.DefaultLenientConfiguration.getSelectedArtifacts(DefaultLenientConfiguration.java:113)        at org.gradle.api.internal.artifacts.ivyservice.DefaultLenientConfiguration.getArtifacts(DefaultLenientConfiguration.java:244)        at org.gradle.api.internal.artifacts.ivyservice.DefaultLenientConfiguration.getArtifacts(DefaultLenientConfiguration.java:235)        at org.gradle.api.internal.artifacts.ivyservice.ErrorHandlingConfigurationResolver$ErrorHandlingLenientConfiguration.getArtifacts(ErrorHandlingConfigurationResolver.java:130)        at com.jaredsburrows.license.LicenseReportTask.generatePOMInfo(LicenseReportTask.kt:152)        at com.jaredsburrows.license.LicenseReportTask.licenseReport(LicenseReportTask.kt:41)        at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)        at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)        at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)        at java.base/java.lang.reflect.Method.invoke(Method.java:566)        at org.gradle.internal.reflect.JavaMethod.invoke(JavaMethod.java:125)        at org.gradle.api.internal.project.taskfactory.StandardTaskAction.doExecute(StandardTaskAction.java:58)        at org.gradle.api.internal.project.taskfactory.StandardTaskAction.execute(StandardTaskAction.java:51)        at org.gradle.api.internal.project.taskfactory.StandardTaskAction.execute(StandardTaskAction.java:29)        at org.gradle.api.internal.tasks.execution.TaskExecution$3.run(TaskExecution.java:236)        at org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:29)        at org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:26)        at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)        at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)        at org.gradle.internal.operations.DefaultBuildOperationRunner.run(DefaultBuildOperationRunner.java:47)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:68)        at org.gradle.api.internal.tasks.execution.TaskExecution.executeAction(TaskExecution.java:221)        at org.gradle.api.internal.tasks.execution.TaskExecution.executeActions(TaskExecution.java:204)        at org.gradle.api.internal.tasks.execution.TaskExecution.executeWithPreviousOutputFiles(TaskExecution.java:187)        at org.gradle.api.internal.tasks.execution.TaskExecution.execute(TaskExecution.java:165)        at org.gradle.internal.execution.steps.ExecuteStep.executeInternal(ExecuteStep.java:89)        at org.gradle.internal.execution.steps.ExecuteStep.access$000(ExecuteStep.java:40)        at org.gradle.internal.execution.steps.ExecuteStep$1.call(ExecuteStep.java:53)        at org.gradle.internal.execution.steps.ExecuteStep$1.call(ExecuteStep.java:50)        at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)        at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)        at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)        at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)        at org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)        at org.gradle.internal.execution.steps.ExecuteStep.execute(ExecuteStep.java:50)        at org.gradle.internal.execution.steps.ExecuteStep.execute(ExecuteStep.java:40)        at org.gradle.internal.execution.steps.RemovePreviousOutputsStep.execute(RemovePreviousOutputsStep.java:68)        at org.gradle.internal.execution.steps.RemovePreviousOutputsStep.execute(RemovePreviousOutputsStep.java:38)        at org.gradle.internal.execution.steps.CancelExecutionStep.execute(CancelExecutionStep.java:41)        at org.gradle.internal.execution.steps.TimeoutStep.executeWithoutTimeout(TimeoutStep.java:74)        at org.gradle.internal.execution.steps.TimeoutStep.execute(TimeoutStep.java:55)        at org.gradle.internal.execution.steps.CreateOutputsStep.execute(CreateOutputsStep.java:51)        at org.gradle.internal.execution.steps.CreateOutputsStep.execute(CreateOutputsStep.java:29)        at org.gradle.internal.execution.steps.CaptureStateAfterExecutionStep.executeDelegateBroadcastingChanges(CaptureStateAfterExecutionStep.java:124)        at org.gradle.internal.execution.steps.CaptureStateAfterExecutionStep.execute(CaptureStateAfterExecutionStep.java:80)        at org.gradle.internal.execution.steps.CaptureStateAfterExecutionStep.execute(CaptureStateAfterExecutionStep.java:58)        at org.gradle.internal.execution.steps.ResolveInputChangesStep.execute(ResolveInputChangesStep.java:48)        at org.gradle.internal.execution.steps.ResolveInputChangesStep.execute(ResolveInputChangesStep.java:36)        at org.gradle.internal.execution.steps.BuildCacheStep.executeWithoutCache(BuildCacheStep.java:181)        at org.gradle.internal.execution.steps.BuildCacheStep.lambda$execute$1(BuildCacheStep.java:71)        at org.gradle.internal.Either$Right.fold(Either.java:175)        at org.gradle.internal.execution.caching.CachingState.fold(CachingState.java:59)        at org.gradle.internal.execution.steps.BuildCacheStep.execute(BuildCacheStep.java:69)        at org.gradle.internal.execution.steps.BuildCacheStep.execute(BuildCacheStep.java:47)        at org.gradle.internal.execution.steps.StoreExecutionStateStep.execute(StoreExecutionStateStep.java:36)        at org.gradle.internal.execution.steps.StoreExecutionStateStep.execute(StoreExecutionStateStep.java:25)        at org.gradle.internal.execution.steps.RecordOutputsStep.execute(RecordOutputsStep.java:36)        at org.gradle.internal.execution.steps.RecordOutputsStep.execute(RecordOutputsStep.java:22)        at org.gradle.internal.execution.steps.SkipUpToDateStep.executeBecause(SkipUpToDateStep.java:110)        at org.gradle.internal.execution.steps.SkipUpToDateStep.lambda$execute$2(SkipUpToDateStep.java:56)        at java.base/java.util.Optional.orElseGet(Optional.java:369)        at org.gradle.internal.execution.steps.SkipUpToDateStep.execute(SkipUpToDateStep.java:56)        at org.gradle.internal.execution.steps.SkipUpToDateStep.execute(SkipUpToDateStep.java:38)        at org.gradle.internal.execution.steps.ResolveChangesStep.execute(ResolveChangesStep.java:73)        at org.gradle.internal.execution.steps.ResolveChangesStep.execute(ResolveChangesStep.java:44)        at org.gradle.internal.execution.steps.legacy.MarkSnapshottingInputsFinishedStep.execute(MarkSnapshottingInputsFinishedStep.java:37)        at org.gradle.internal.execution.steps.legacy.MarkSnapshottingInputsFinishedStep.execute(MarkSnapshottingInputsFinishedStep.java:27)        at org.gradle.internal.execution.steps.ResolveCachingStateStep.execute(ResolveCachingStateStep.java:89)        at org.gradle.internal.execution.steps.ResolveCachingStateStep.execute(ResolveCachingStateStep.java:50)        at org.gradle.internal.execution.steps.ValidateStep.execute(ValidateStep.java:102)        at org.gradle.internal.execution.steps.ValidateStep.execute(ValidateStep.java:57)        at org.gradle.internal.execution.steps.CaptureStateBeforeExecutionStep.execute(CaptureStateBeforeExecutionStep.java:76)        at org.gradle.internal.execution.steps.CaptureStateBeforeExecutionStep.execute(CaptureStateBeforeExecutionStep.java:50)        at org.gradle.internal.execution.steps.SkipEmptyWorkStep.executeWithNoEmptySources(SkipEmptyWorkStep.java:254)        at org.gradle.internal.execution.steps.SkipEmptyWorkStep.execute(SkipEmptyWorkStep.java:91)        at org.gradle.internal.execution.steps.SkipEmptyWorkStep.execute(SkipEmptyWorkStep.java:56)        at org.gradle.internal.execution.steps.RemoveUntrackedExecutionStateStep.execute(RemoveUntrackedExecutionStateStep.java:32)        at org.gradle.internal.execution.steps.RemoveUntrackedExecutionStateStep.execute(RemoveUntrackedExecutionStateStep.java:21)        at org.gradle.internal.execution.steps.legacy.MarkSnapshottingInputsStartedStep.execute(MarkSnapshottingInputsStartedStep.java:38)        at org.gradle.internal.execution.steps.LoadPreviousExecutionStateStep.execute(LoadPreviousExecutionStateStep.java:43)        at org.gradle.internal.execution.steps.LoadPreviousExecutionStateStep.execute(LoadPreviousExecutionStateStep.java:31)        at org.gradle.internal.execution.steps.AssignWorkspaceStep.lambda$execute$0(AssignWorkspaceStep.java:40)        at org.gradle.api.internal.tasks.execution.TaskExecution$4.withWorkspace(TaskExecution.java:281)        at org.gradle.internal.execution.steps.AssignWorkspaceStep.execute(AssignWorkspaceStep.java:40)        at org.gradle.internal.execution.steps.AssignWorkspaceStep.execute(AssignWorkspaceStep.java:30)        at org.gradle.internal.execution.steps.IdentityCacheStep.execute(IdentityCacheStep.java:37)        at org.gradle.internal.execution.steps.IdentityCacheStep.execute(IdentityCacheStep.java:27)        at org.gradle.internal.execution.steps.IdentifyStep.execute(IdentifyStep.java:44)        at org.gradle.internal.execution.steps.IdentifyStep.execute(IdentifyStep.java:33)        at org.gradle.internal.execution.impl.DefaultExecutionEngine$1.execute(DefaultExecutionEngine.java:76)        at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeIfValid(ExecuteActionsTaskExecuter.java:139)        at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.execute(ExecuteActionsTaskExecuter.java:128)        at org.gradle.api.internal.tasks.execution.CleanupStaleOutputsExecuter.execute(CleanupStaleOutputsExecuter.java:77)        at org.gradle.api.internal.tasks.execution.FinalizePropertiesTaskExecuter.execute(FinalizePropertiesTaskExecuter.java:46)        at org.gradle.api.internal.tasks.execution.ResolveTaskExecutionModeExecuter.execute(ResolveTaskExecutionModeExecuter.java:51)        at org.gradle.api.internal.tasks.execution.SkipTaskWithNoActionsExecuter.execute(SkipTaskWithNoActionsExecuter.java:57)        at org.gradle.api.internal.tasks.execution.SkipOnlyIfTaskExecuter.execute(SkipOnlyIfTaskExecuter.java:57)        at org.gradle.api.internal.tasks.execution.CatchExceptionTaskExecuter.execute(CatchExceptionTaskExecuter.java:36)        at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.executeTask(EventFiringTaskExecuter.java:77)        at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.call(EventFiringTaskExecuter.java:55)        at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.call(EventFiringTaskExecuter.java:52)        at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)        at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)        at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)        at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)        at org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)        at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter.execute(EventFiringTaskExecuter.java:52)        at org.gradle.execution.plan.LocalTaskNodeExecutor.execute(LocalTaskNodeExecutor.java:69)        at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$InvokeNodeExecutorsAction.execute(DefaultTaskExecutionGraph.java:322)        at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$InvokeNodeExecutorsAction.execute(DefaultTaskExecutionGraph.java:309)        at org.g"
22862,0,12020,289,0,0,livk-cloud,0,"title:gradle plugin use kotlin jvm an error occurred description:gradle version: 7.6jdk: 17```ktplugins {    id(""java-gradle-plugin"")    kotlin(""jvm"") version (""1.7.21"")}``````shellFAILURE: Build failed with an exception.* What went wrong:A problem occurred configuring project ':buildSrc'.> Could not resolve all files for configuration ':buildSrc:classpath'.   > Could not resolve org.jetbrains.kotlin:kotlin-gradle-plugin-api:1.7.21.     Required by:         project :buildSrc > org.jetbrains.kotlin.jvm:org.jetbrains.kotlin.jvm.gradle.plugin:1.7.21 > org.jetbrains.kotlin:kotlin-gradle-plugin:1.7.21      > Could not resolve org.jetbrains.kotlin:kotlin-gradle-plugin-api:1.7.21.         > Could not get resource 'https://plugins.gradle.org/m2/org/jetbrains/kotlin/kotlin-gradle-plugin-api/1.7.21/kotlin-gradle-plugin-api-1.7.21.pom'.            > Could not GET 'https://jcenter.bintray.com/org/jetbrains/kotlin/kotlin-gradle-plugin-api/1.7.21/kotlin-gradle-plugin-api-1.7.21.pom'.               > PKIX path validation failed: java.security.cert.CertPathValidatorException: validity check failed   > Could not resolve org.jetbrains.kotlin:kotlin-gradle-plugin-api:1.7.21.     Required by:         project :buildSrc > org.jetbrains.kotlin.jvm:org.jetbrains.kotlin.jvm.gradle.plugin:1.7.21 > org.jetbrains.kotlin:kotlin-gradle-plugin:1.7.21      > Could not resolve org.jetbrains.kotlin:kotlin-gradle-plugin-api:1.7.21.         > Could not get resource 'https://plugins.gradle.org/m2/org/jetbrains/kotlin/kotlin-gradle-plugin-api/1.7.21/kotlin-gradle-plugin-api-1.7.21.pom'.            > Could not GET 'https://jcenter.bintray.com/org/jetbrains/kotlin/kotlin-gradle-plugin-api/1.7.21/kotlin-gradle-plugin-api-1.7.21.pom'.               > PKIX path validation failed: java.security.cert.CertPathValidatorException: validity check failed   > Could not resolve org.jetbrains.kotlin:kotlin-gradle-plugin-model:1.7.21.     Required by:         project :buildSrc > org.jetbrains.kotlin.jvm:org.jetbrains.kotlin.jvm.gradle.plugin:1.7.21 > org.jetbrains.kotlin:kotlin-gradle-plugin:1.7.21      > Could not resolve org.jetbrains.kotlin:kotlin-gradle-plugin-model:1.7.21.         > Could not get resource 'https://plugins.gradle.org/m2/org/jetbrains/kotlin/kotlin-gradle-plugin-model/1.7.21/kotlin-gradle-plugin-model-1.7.21.pom'.            > Could not GET 'https://jcenter.bintray.com/org/jetbrains/kotlin/kotlin-gradle-plugin-model/1.7.21/kotlin-gradle-plugin-model-1.7.21.pom'.               > PKIX path validation failed: java.security.cert.CertPathValidatorException: validity check failed   > Could not resolve org.jetbrains.kotlin:kotlin-tooling-core:1.7.21.     Required by:         project :buildSrc > org.jetbrains.kotlin.jvm:org.jetbrains.kotlin.jvm.gradle.plugin:1.7.21 > org.jetbrains.kotlin:kotlin-gradle-plugin:1.7.21      > Could not resolve org.jetbrains.kotlin:kotlin-tooling-core:1.7.21.         > Could not get resource 'https://plugins.gradle.org/m2/org/jetbrains/kotlin/kotlin-tooling-core/1.7.21/kotlin-tooling-core-1.7.21.pom'.            > Could not GET 'https://jcenter.bintray.com/org/jetbrains/kotlin/kotlin-tooling-core/1.7.21/kotlin-tooling-core-1.7.21.pom'.               > PKIX path validation failed: java.security.cert.CertPathValidatorException: validity check failed   > Could not resolve org.jetbrains.kotlin:kotlin-gradle-plugin-idea:1.7.21.     Required by:         project :buildSrc > org.jetbrains.kotlin.jvm:org.jetbrains.kotlin.jvm.gradle.plugin:1.7.21 > org.jetbrains.kotlin:kotlin-gradle-plugin:1.7.21      > Could not resolve org.jetbrains.kotlin:kotlin-gradle-plugin-idea:1.7.21.         > Could not get resource 'https://plugins.gradle.org/m2/org/jetbrains/kotlin/kotlin-gradle-plugin-idea/1.7.21/kotlin-gradle-plugin-idea-1.7.21.pom'.            > Could not GET 'https://jcenter.bintray.com/org/jetbrains/kotlin/kotlin-gradle-plugin-idea/1.7.21/kotlin-gradle-plugin-idea-1.7.21.pom'.               > PKIX path validation failed: java.security.cert.CertPathValidatorException: validity check failed   > Could not resolve org.jetbrains.kotlin:kotlin-gradle-plugin-idea-proto:1.7.21.     Required by:         project :buildSrc > org.jetbrains.kotlin.jvm:org.jetbrains.kotlin.jvm.gradle.plugin:1.7.21 > org.jetbrains.kotlin:kotlin-gradle-plugin:1.7.21      > Could not resolve org.jetbrains.kotlin:kotlin-gradle-plugin-idea-proto:1.7.21.         > Could not get resource 'https://plugins.gradle.org/m2/org/jetbrains/kotlin/kotlin-gradle-plugin-idea-proto/1.7.21/kotlin-gradle-plugin-idea-proto-1.7.21.pom'.            > Could not GET 'https://jcenter.bintray.com/org/jetbrains/kotlin/kotlin-gradle-plugin-idea-proto/1.7.21/kotlin-gradle-plugin-idea-proto-1.7.21.pom'.               > PKIX path validation failed: java.security.cert.CertPathValidatorException: validity check failed   > Could not resolve org.jetbrains.kotlin:kotlin-util-klib:1.7.21.     Required by:         project :buildSrc > org.jetbrains.kotlin.jvm:org.jetbrains.kotlin.jvm.gradle.plugin:1.7.21 > org.jetbrains.kotlin:kotlin-gradle-plugin:1.7.21      > Could not resolve org.jetbrains.kotlin:kotlin-util-klib:1.7.21.         > Could not get resource 'https://plugins.gradle.org/m2/org/jetbrains/kotlin/kotlin-util-klib/1.7.21/kotlin-util-klib-1.7.21.pom'.            > Could not GET 'https://jcenter.bintray.com/org/jetbrains/kotlin/kotlin-util-klib/1.7.21/kotlin-util-klib-1.7.21.pom'.               > PKIX path validation failed: java.security.cert.CertPathValidatorException: validity check failed   > Could not resolve org.jetbrains.kotlin:kotlin-klib-commonizer-api:1.7.21.     Required by:         project :buildSrc > org.jetbrains.kotlin.jvm:org.jetbrains.kotlin.jvm.gradle.plugin:1.7.21 > org.jetbrains.kotlin:kotlin-gradle-plugin:1.7.21      > Could not resolve org.jetbrains.kotlin:kotlin-klib-commonizer-api:1.7.21.         > Could not get resource 'https://plugins.gradle.org/m2/org/jetbrains/kotlin/kotlin-klib-commonizer-api/1.7.21/kotlin-klib-commonizer-api-1.7.21.pom'.            > Could not GET 'https://jcenter.bintray.com/org/jetbrains/kotlin/kotlin-klib-commonizer-api/1.7.21/kotlin-klib-commonizer-api-1.7.21.pom'.               > PKIX path validation failed: java.security.cert.CertPathValidatorException: validity check failed   > Could not resolve org.jetbrains.kotlin:kotlin-project-model:1.7.21.     Required by:         project :buildSrc > org.jetbrains.kotlin.jvm:org.jetbrains.kotlin.jvm.gradle.plugin:1.7.21 > org.jetbrains.kotlin:kotlin-gradle-plugin:1.7.21      > Could not resolve org.jetbrains.kotlin:kotlin-project-model:1.7.21.         > Could not get resource 'https://plugins.gradle.org/m2/org/jetbrains/kotlin/kotlin-project-model/1.7.21/kotlin-project-model-1.7.21.pom'.            > Could not GET 'https://jcenter.bintray.com/org/jetbrains/kotlin/kotlin-project-model/1.7.21/kotlin-project-model-1.7.21.pom'.               > PKIX path validation failed: java.security.cert.CertPathValidatorException: validity check failed   > Could not resolve org.jetbrains.kotlin:kotlin-compiler-embeddable:1.7.21.     Required by:         project :buildSrc > org.jetbrains.kotlin.jvm:org.jetbrains.kotlin.jvm.gradle.plugin:1.7.21 > org.jetbrains.kotlin:kotlin-gradle-plugin:1.7.21      > Could not resolve org.jetbrains.kotlin:kotlin-compiler-embeddable:1.7.21.         > Could not get resource 'https://plugins.gradle.org/m2/org/jetbrains/kotlin/kotlin-compiler-embeddable/1.7.21/kotlin-compiler-embeddable-1.7.21.pom'.            > Could not GET 'https://jcenter.bintray.com/org/jetbrains/kotlin/kotlin-compiler-embeddable/1.7.21/kotlin-compiler-embeddable-1.7.21.pom'.               > PKIX path validation failed: java.security.cert.CertPathValidatorException: validity check failed   > Could not resolve org.jetbrains.kotlin:kotlin-annotation-processing-gradle:1.7.21.     Required by:         project :buildSrc > org.jetbrains.kotlin.jvm:org.jetbrains.kotlin.jvm.gradle.plugin:1.7.21 > org.jetbrains.kotlin:kotlin-gradle-plugin:1.7.21      > Could not resolve org.jetbrains.kotlin:kotlin-annotation-processing-gradle:1.7.21.         > Could not get resource 'https://plugins.gradle.org/m2/org/jetbrains/kotlin/kotlin-annotation-processing-gradle/1.7.21/kotlin-annotation-processing-gradle-1.7.21.pom'.            > Could not GET 'https://jcenter.bintray.com/org/jetbrains/kotlin/kotlin-annotation-processing-gradle/1.7.21/kotlin-annotation-processing-gradle-1.7.21.pom'.               > PKIX path validation failed: java.security.cert.CertPathValidatorException: validity check failed   > Could not resolve org.jetbrains.kotlin:kotlin-android-extensions:1.7.21.     Required by:         project :buildSrc > org.jetbrains.kotlin.jvm:org.jetbrains.kotlin.jvm.gradle.plugin:1.7.21 > org.jetbrains.kotlin:kotlin-gradle-plugin:1.7.21      > Could not resolve org.jetbrains.kotlin:kotlin-android-extensions:1.7.21.         > Could not get resource 'https://plugins.gradle.org/m2/org/jetbrains/kotlin/kotlin-android-extensions/1.7.21/kotlin-android-extensions-1.7.21.pom'.            > Could not GET 'https://jcenter.bintray.com/org/jetbrains/kotlin/kotlin-android-extensions/1.7.21/kotlin-android-extensions-1.7.21.pom'.               > PKIX path validation failed: java.security.cert.CertPathValidatorException: validity check failed   > Could not resolve org.jetbrains.kotlin:kotlin-compiler-runner:1.7.21.     Required by:         project :buildSrc > org.jetbrains.kotlin.jvm:org.jetbrains.kotlin.jvm.gradle.plugin:1.7.21 > org.jetbrains.kotlin:kotlin-gradle-plugin:1.7.21      > Could not resolve org.jetbrains.kotlin:kotlin-compiler-runner:1.7.21.         > Could not get resource 'https://plugins.gradle.org/m2/org/jetbrains/kotlin/kotlin-compiler-runner/1.7.21/kotlin-compiler-runner-1.7.21.pom'.            > Could not GET 'https://jcenter.bintray.com/org/jetbrains/kotlin/kotlin-compiler-runner/1.7.21/kotlin-compiler-runner-1.7.21.pom'.               > PKIX path validation failed: java.security.cert.CertPathValidatorException: validity check failed   > Could not resolve org.jetbrains.kotlin:kotlin-scripting-compiler-embeddable:1.7.21.     Required by:         project :buildSrc > org.jetbrains.kotlin.jvm:org.jetbrains.kotlin.jvm.gradle.plugin:1.7.21 > org.jetbrains.kotlin:kotlin-gradle-plugin:1.7.21      > Could not resolve org.jetbrains.kotlin:kotlin-scripting-compiler-embeddable:1.7.21.         > Could not get resource 'https://plugins.gradle.org/m2/org/jetbrains/kotlin/kotlin-scripting-compiler-embeddable/1.7.21/kotlin-scripting-compiler-embeddable-1.7.21.pom'.            > Could not GET 'https://jcenter.bintray.com/org/jetbrains/kotlin/kotlin-scripting-compiler-embeddable/1.7.21/kotlin-scripting-compiler-embeddable-1.7.21.pom'.               > PKIX path validation failed: java.security.cert.CertPathValidatorException: validity check failed   > Could not resolve org.jetbrains.kotlin:kotlin-scripting-compiler-impl-embeddable:1.7.21.     Required by:         project :buildSrc > org.jetbrains.kotlin.jvm:org.jetbrains.kotlin.jvm.gradle.plugin:1.7.21 > org.jetbrains.kotlin:kotlin-gradle-plugin:1.7.21      > Could not resolve org.jetbrains.kotlin:kotlin-scripting-compiler-impl-embeddable:1.7.21.         > Could not get resource 'https://plugins.gradle.org/m2/org/jetbrains/kotlin/kotlin-scripting-compiler-impl-embeddable/1.7.21/kotlin-scripting-compiler-impl-embeddable-1.7.21.pom'.            > Could not GET 'https://jcenter.bintray.com/org/jetbrains/kotlin/kotlin-scripting-compiler-impl-embeddable/1.7.21/kotlin-scripting-compiler-impl-embeddable-1.7.21.pom'.               > PKIX path validation failed: java.security.cert.CertPathValidatorException: validity check failed* Try:> Run with --stacktrace option to get the stack trace.> Run with --info or --debug option to get more log output.> Run with --scan to get full insights.* Get more help at https://help.gradle.orgCONFIGURE FAILED in 1s```
"
22853,0,1628,256,0,0,eskatos,0,"title:Assertion failed in FinalizerGroup with Kotlin 1.7.21 description:### Expected BehaviorNo failed assertion### Current Behavior```* What went wrong:A problem occurred configuring project ':server-application:app'.> Build completed with 1 failures.   > java.lang.AssertionError (no error message)* Try:> Run with --info or --debug option to get more log output.> Run with --scan to get full insights.* Exception is:org.gradle.api.ProjectConfigurationException: A problem occurred configuring project ':server-application:app'.	at org.gradle.configuration.project.LifecycleProjectEvaluator.wrapException(LifecycleProjectEvaluator.java:84)        ..........Caused by: org.gradle.execution.MultipleBuildFailures: Build completed with 1 failures.	at org.gradle.internal.build.ExecutionResult$Failure.getFailure(ExecutionResult.java:191)        ..........Caused by: java.lang.AssertionError	at org.gradle.execution.plan.FinalizerGroup.removeMember(FinalizerGroup.java:125)	at org.gradle.execution.plan.CompositeNodeGroup.removeMember(CompositeNodeGroup.java:93)	at org.gradle.execution.plan.Node.setGroup(Node.java:120)	at org.gradle.execution.plan.Node.maybeInheritFinalizerGroups(Node.java:159)	at org.gradle.execution.plan.DetermineExecutionPlanAction.updateFinalizerGroups(DetermineExecutionPlanAction.java:131)	at org.gradle.execution.plan.DetermineExecutionPlanAction.run(DetermineExecutionPlanAction.java:92)	at org.gradle.execution.plan.DefaultExecutionPlan.determineExecutionPlan(DefaultExecutionPlan.java:225)	at org.gradle.internal.build.DefaultBuildWorkPreparer.populateWorkGraph(DefaultBuildWorkPreparer.java:43)        ........* Get more help at https://help.gradle.orgBUILD FAILED in 51s```Full stracktrace in the build scan:https://ge.gradle.org/s/zfvlxi4quy2pe/tests/overview### ContextTrying to upgrade the embedded Kotlin from 1.7.20 to 1.7.21.### Steps to Reproduce * `git checkout eskatos/kotlin/embedded-1.7.21`* `./gradlew :docs:docsTest --tests ""*.structuring-software-projects_kotlin_umbrella-build*""`* or `./gradlew :distribution-integ-tests:forkingIntegTest --tests=SrcDistributionIntegrationSpec`
"
22836,0,0,113,0,0,xaviarias,0,"title:Dead Javadoc links in Gradle user guide description:Two Javadoc references from the [user guide](https://docs.gradle.org/7.6-rc-2/userguide/upgrading_version_7.html#updates_to_attribute_disambiguation_rules_related_methods), both in versions 7.6 RC 2 and 3, return `404 Not found`.<img width=""962"" alt=""Screenshot 2022-11-23 at 17 02 28"" src=""https://user-images.githubusercontent.com/876579/203592910-42e46537-75b4-4a15-96e3-e7e6df70e9db.png"">There might be other cases, so it should be good to automate testing for dead links.
"
22803,0,883,229,0,0,jbartok,0,"title:Java Toolchain auto-provisioning fails with permission errors description:```Could not determine the dependencies of null.> Could not resolve all dependencies for configuration ':classpath'.  > Failed to calculate the value of task ':build-logic:lifecycle:compileJava' property 'javaCompiler'.    > Unable to download toolchain matching the requirements ({languageVersion=11, vendor=ADOPTIUM, implementation=vendor-specific}) from 'https://api.adoptium.net/v3/binary/latest/11/ga/mac/aarch64/jdk/hotspot/normal/eclipse'.      > Could not copy file '/Users/guy/.gradle/jdks/OpenJDK11U-jdk_aarch64_mac_hotspot_11/jdk-11.0.17+8/Contents/Home/legal/java.management.rmi/LICENSE' to '/Users/guy/.gradle/jdks/eclipse_adoptium-11-aarch64-os_x/jdk-11.0.17+8/Contents/Home/legal/java.management.rmi/LICENSE'.        > /Users/guy/.gradle/jdks/eclipse_adoptium-11-aarch64-os_x/jdk-11.0.17+8/Contents/Home/legal/java.management.rmi/LICENSE (Permission denied)```Suspicion is that it happens when there is already content in the folder where we attempt to install it.
"
22797,0,0,256,0,1,eskatos,0,"title:Version catalog accessors for plugin aliases shown as errors in IDE kotlin script editor description:### Expected BehaviorNo error should be shown in the IDE kotlin script editor.### Current Behavior![issue](https://user-images.githubusercontent.com/132773/202849389-8b79bbfc-0f00-40d9-8ae3-ec1ae74ee0f6.png)### WorkaroundYou can install the [Gradle Libs Error Suppressor IntelliJ Plugin](https://plugins.jetbrains.com/plugin/18949-gradle-libs-error-suppressor) or add the `@Suppress(""DSL_SCOPE_VIOLATION"")` annotation as follows:![workaround](https://user-images.githubusercontent.com/132773/202849519-9ea31840-400d-4c8f-aa5a-280e3a7e69dd.png)### ContextThis was reported on the Kotlin IntelliJ plugin bug tracker first:* [KTIJ-19369 - False-positive ""can't be called in this context by implicit receiver"" with plugins in Gradle version catalogs as a TOML file](https://youtrack.jetbrains.com/issue/KTIJ-19369)It is in fact a Gradle issue.Version catalog accessors are available as a `Project` extension, e.g. `libs`, outside of the scope of the `plugins {}` block. This is exactly what the IDE correctly reports.It works in the Groovy DSL because there the version catalogs are explicitly made available via `ScriptTarget.getPluginsBlockPermits()`. This was not done for the Kotlin DSL.This was not spotted when adding support for version catalog plugin aliases in the `plugins {}` block because the template class used for the evaluation of the Kotlin DSL plugins block does not restrict access to the `Project` in `CompiledKotlinBuildscriptAndPluginsBlock` (not using the `PluginDependenciesSpecScope` and has `@ImplicitReceiver(Project::class)`). This is asymetrical with `CompiledKotlinSettingsPluginManagementBlock` that correctly applies the limitation using `PluginDependenciesSpecScope` which is annotated with `@GradleDsl` but still it has `@ImplicitReceiver(Settings::class)`. This is an old mistake. This should be fixed. IOW version catalogs in the Kotlin DSL plugins block work by accident.Once fixed it will break usage of version catalog plugin aliases from the `Project` extension in the `plugins {}` block for the Kotlin DSL. In order to make it work again, version catalog accessors should be made available in the `plugins {}` block.There are of course complications because, although the Groovy DSL applies limitations so that only `<catalogName>.plugins.*` is allowed, there's no such limitation on the Kotlin DSL. The Groovy DSL limitations capture the original intent for the feature but adding the same limitation on the Kotlin DSL to a stable feature is a breaking change. That can only happen on a major Gradle version. It could be introduced behind a feature flag in a minor version though.### Steps to Reproduce * clone https://github.com/eskatos/gradle-kotlin-dsl-version-catalog-plugins-issue* open in IDE* open the `build.gradle.kts` file
"
22796,0,976,294,0,0,smowton,0,"title:Building gradle itself fails during toolchain download: permission denied copying a file within `.gradle/jdks` description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues--><!--- Provide a brief summary of the issue in the title above -->### Expected Behavior<!--- Tell us what should happen -->Able to build Gradle### Current Behavior<!--- Tell us what happens instead of the expected behavior -->Building Gradle fails as of roughly September 30th if a JDK11 toolchain needs to be downloaded, failing during unpacking the downloaded JDK with a permission error while copying `.gradle/jdks/OpenJDK11U-jdk_x64_mac_hotspot_11/...some-read-only-file` to `.gradle/jdks/eclipse_adoptium-11-x86_64-os_x/...some-read-only-file`Build works as expected if the needed JDK is found through detection on your local system, or was in `.gradle/jdks` already, including because of a previous failure building this project.### Context<!--- How has this issue affected you? What are you trying to accomplish? --><!--- Providing context helps us come up with a solution that is most useful in the real world -->### Steps to Reproduce <!---Provide a self-contained example project as an attached archive or a Github project.You can use the following template with a Gradle GitHub action set up to showcase your problem: https://github.com/gradle/gradle-issue-reproducerIn the rare cases where this is infeasible, we will also accept a detailed set of instructions.-->1. `git clone https://github.com/gradle/gradle; cd gradle; git checkout 4595851c30a4dc95a68c460e9b95259ca60b8060` (current `master` as of time of writing)2. Clear `$HOME/.gradle/jdks` to ensure the build will try to download a toolchain3. `./gradlew -Dorg.gradle.java.home=/some/jdk11/home/ -Porg.gradle.java.installations.auto-detect=false` (using auto-detect=false to ensure a local JDK isn't picked up)Result:```A problem occurred configuring root project 'gradle'.> Could not determine the dependencies of null.   > Could not resolve all dependencies for configuration ':classpath'.      > Failed to calculate the value of task ':build-logic:lifecycle:compileJava' property 'javaCompiler'.         > Unable to download toolchain matching the requirements ({languageVersion=11, vendor=ADOPTIUM, implementation=vendor-specific}) from 'https://api.adoptium.net/v3/binary/latest/11/ga/mac/x64/jdk/hotspot/normal/eclipse'.            > Could not copy file '/Users/myusername/.gradle/jdks/OpenJDK11U-jdk_x64_mac_hotspot_11/jdk-11.0.17+8/Contents/Home/legal/java.management.rmi/LICENSE' to '/Users/myusername/.gradle/jdks/eclipse_adoptium-11-x86_64-os_x/jdk-11.0.17+8/Contents/Home/legal/java.management.rmi/LICENSE'.               > /Users/myusername/.gradle/jdks/eclipse_adoptium-11-x86_64-os_x/jdk-11.0.17+8/Contents/Home/legal/java.management.rmi/LICENSE (Permission denied)```The specific file varies, and can be any file in the JDK tarball with a read-only mode, e.g. the LICENSE or README files, or various `.md` files in the legal subdirectory. The failure results because we're trying to truncate and overwrite a read-only file. Given the simplicity of `provisionFromArchive` (https://github.com/gradle/gradle/blob/master/subprojects/platform-jvm/src/main/java/org/gradle/jvm/toolchain/internal/install/JdkCacheDirectory.java#L120), I suspect this is a case of mistakenly calling that routine twice without cleaning up the install directory, so the first unpack goes as expected, then the second tries to overwrite the first and fails due to these read-only files.I first noticed this because lgtm.com started failing to build `gradle/gradle` on September 30th; the times of its regular builds allow us to isolate the problem to this commit range: https://github.com/gradle/gradle/compare/764ed77dcea33db8840d0a2afd9ae4f284e1daf4...5eb959671e9d45827b9482e5003c8572410551ab### Your Environment<!--- Include as many relevant details about the environment you experienced the bug in --><!--- A build scan https://scans.gradle.com/get-started is ideal -->This is reproducible on many platforms: lgtm.com's workers as mentioned above are based on Ubuntu 20.04, but I can also reproduce the problem on MacOS Ventura with the same symptoms. Reproducibility can vary based on the JDKs available locally, but clearing `.gradle/jdks` and using `-Porg.gradle.java.installations.auto-detect=false` to insist on a downloaded toolchain seems to reliably reproduce the problem.
"
22795,1,0,289,0,0,Vampire,0,"title:Init task generates deprecated code for plugin in Kotlin language description:If you use the `init` task to generate a Gradle plugin build with Kotlin language, it generates code that is immediately deprecated.The generated plugin registers an ad-hoc task using a Kotlin lambda that is now without further measures compiled to comparable bytecode like a Java lambda and so if you use that plugin, you get a deprecation warning, that Java lambdas as task actions are deprecated.
"
22744,1,0,13,0,0,LarsKaulen,0,"title:Aggregration plugins not working with custom JVM Test Suites description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues--><!--- Provide a brief summary of the issue in the title above -->### Expected Behavior<!--- Tell us what should happen -->When configuring a custom JVM Test Suite in a multi-project-build and applying the `test-report-aggregation` and/or `jacoco-report-aggregation` plugin, the custom suite should be considered for all projects.### Current Behavior<!--- Tell us what happens instead of the expected behavior -->The custom JVM Test Suite is only considered in projects explicitly added to `jacocoAggregation` (standalone project) respectively in the application project (application/distribution project).### Context<!--- How has this issue affected you? What are you trying to accomplish? --><!--- Providing context helps us come up with a solution that is most useful in the real world -->I tried the four samples at https://docs.gradle.org/current/samples/sample_jvm_multi_project_with_code_coverage_standalone.html, https://docs.gradle.org/current/samples/sample_jvm_multi_project_with_code_coverage_distribution.html, https://docs.gradle.org/current/samples/sample_jvm_multi_project_with_test_aggregation_standalone.html and https://docs.gradle.org/current/samples/sample_jvm_multi_project_with_test_aggregation_distribution.html.Each of those use only a `test` test suite. For this the behavior is as expected, as when running the `check` task, `testCodeCoverageReport` is run and therefore also `:utilities:test`, `:list:test` and `:application:test` are executed.I tried to expand these samples using a custom `integrationTest` test suite.But if I do so, when running the `check` task, `integrationTestCodeCoverageReport` is run, but only `:application:integrationTest` is executed, not `utilities:integrationTest` and `:list:integrationTest`.This is the case for all four mentioned samples, in the reproducer below I demonstrate it for the sample https://docs.gradle.org/current/samples/sample_jvm_multi_project_with_code_coverage_standalone.html.### Steps to Reproduce <!---Provide a self-contained example project as an attached archive or a Github project.You can use the following template with a Gradle GitHub action set up to showcase your problem: https://github.com/gradle/gradle-issue-reproducerIn the rare cases where this is infeasible, we will also accept a detailed set of instructions.-->https://github.com/LarsKaulen/gradle-aggregation-reproducer### Your Environment<!--- Include as many relevant details about the environment you experienced the bug in --><!--- A build scan https://scans.gradle.com/get-started is ideal -->Tested with Gradle 7.5.1 and 7.6-rc-3
"
22702,0,77,12,0,1,sourcedelica,0,"title:Typo and ordering problem for org.gradle.welcome property in docs description:The `org.gradle.welcome` property is not formatted correctly in [the docs](https://docs.gradle.org/current/userguide/build_environment.html#sec:gradle_configuration_properties) and it is not in the right position in the alphabetical ordering.  Same with `org.gradle.logging.level`.It is currently````org.gradle.welcome=(never,once)::```It should be````org.gradle.welcome=(never,once)`::```I'll submit a PR to fix.
"
22701,1,262,24,0,0,yogurtearl,0,"title:Breaking API change in 7.6: `MinimalExternalModuleDependency` interface adds lots of methods description:starting with `7.6-rc-1`, `MinimalExternalModuleDependency`  which is a public interface, now extends `ExternalModuleDependency`This adds a lot of methods to the `Minimal` interface... This will fail the build or fail at runtime for implementations of the `MinimalExternalModuleDependency` interface.Build time error would look like this: ```texte: /Users/me/src/MyFile.kt: (129, 9): Object 'MinimalExternalModuleDependencyNullObject' is not abstract and does not implement abstract member public abstract fun getGroup(): String defined in org.gradle.api.artifacts.MinimalExternalModuleDependency```If plugins implement `MinimalExternalModuleDependency` they will fail at runtime. Rather than change the public interface `MinimalExternalModuleDependency`, could you instead make a new `NotVeryMinimalExternalModuleDependency` ? 
"
22688,1,3167,15,1,0,tomasAlabes,0,"title:Increased memory usage (with -p option) description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues--><!--- Provide a brief summary of the issue in the title above -->### Expected BehaviorWe should be able to build a project in the multimodule project by specifying the `-p <project>` option.### Current Behavior~**This isn't reproducible with Gradle 7.5.1, only with 7.6**~:Using [gradle's sample project](https://docs.gradle.org/current/samples/sample_structuring_software_projects.html) and updating gradle with:```shell./gradlew wrapper --gradle-version=7.6-rc-2``````shell./gradlew -p server-application/ build> Task :build-logic:commons:compileKotlin FAILEDFAILURE: Build failed with an exception.* What went wrong:Execution failed for task ':build-logic:commons:compileKotlin'.> A failure occurred while executing org.jetbrains.kotlin.compilerRunner.GradleCompilerRunnerWithWorkers$GradleKotlinCompilerWorkAction   > Could not isolate value org.jetbrains.kotlin.compilerRunner.GradleCompilerRunnerWithWorkers$GradleKotlinCompilerWorkParameters_Decorated@fa8c669 of type GradleCompilerRunnerWithWorkers.GradleKotlinCompilerWorkParameters      > Java heap space* Try:> Run with --stacktrace option to get the stack trace.> Run with --info or --debug option to get more log output.> Run with --scan to get full insights.* Get more help at https://help.gradle.orgDeprecated Gradle features were used in this build, making it incompatible with Gradle 8.0.You can use '--warning-mode all' to show the individual deprecation warnings and determine if they come from your own scripts or plugins.See https://docs.gradle.org/7.6-rc-2/userguide/command_line_interface.html#sec:command_line_warningsBUILD FAILED in 1m 4s6 actionable tasks: 6 executedFAILURE: Build completed with 2 failures.1: Task failed with an exception.-----------* What went wrong:Execution failed for task ':build-logic:commons:compileKotlin'.> A failure occurred while executing org.jetbrains.kotlin.compilerRunner.GradleCompilerRunnerWithWorkers$GradleKotlinCompilerWorkAction   > Could not isolate value org.jetbrains.kotlin.compilerRunner.GradleCompilerRunnerWithWorkers$GradleKotlinCompilerWorkParameters_Decorated@fa8c669 of type GradleCompilerRunnerWithWorkers.GradleKotlinCompilerWorkParameters      > Java heap space* Try:> Run with --stacktrace option to get the stack trace.> Run with --info or --debug option to get more log output.> Run with --scan to get full insights.==============================================================================2: Task failed with an exception.-----------* What went wrong:Java heap space* Try:> Run with --stacktrace option to get the stack trace.> Run with --info or --debug option to get more log output.> Run with --scan to get full insights.==============================================================================* Get more help at https://help.gradle.orgDeprecated Gradle features were used in this build, making it incompatible with Gradle 8.0.You can use '--warning-mode all' to show the individual deprecation warnings and determine if they come from your own scripts or plugins.See https://docs.gradle.org/7.6-rc-2/userguide/command_line_interface.html#sec:command_line_warningsBUILD FAILED in 1m 4sFAILURE: Build failed with an exception.* What went wrong:Could not receive a message from the daemon.* Try:> Run with --stacktrace option to get the stack trace.> Run with --info or --debug option to get more log output.> Run with --scan to get full insights.* Get more help at https://help.gradle.org```### Context<!--- How has this issue affected you? What are you trying to accomplish? --><!--- Providing context helps us come up with a solution that is most useful in the real world -->In my own project, I can't do this either. I stopped all Gradle daemons, but it didn't help. I created a similar bug for 7.6, maybe it is related: https://github.com/gradle/gradle/issues/21708### Steps to Reproduce <!---Provide a self-contained example project as an attached archive or a Github project.You can use the following template with a Gradle GitHub action set up to showcase your problem: https://github.com/gradle/gradle-issue-reproducerIn the rare cases where this is infeasible, we will also accept a detailed set of instructions.-->Download gradle's sample project: https://docs.gradle.org/current/samples/zips/sample_structuring_software_projects-kotlin-dsl.zipAnd run `./gradlew wrapper --gradle-version=7.6-rc-2 && ./gradlew -p server-application/ build`### Your Environment<!--- Include as many relevant details about the environment you experienced the bug in --><!--- A build scan https://scans.gradle.com/get-started is ideal -->Gradle: 7.6-rc2Kotlin: 1.6.21 / 1.7.10OS: MacOS Monterey 12.5 (M1 Pro)
"
22685,0,193,62,0,0,ALikhachev,0,"title:Race condition in org.gradle.api.internal.file.archive.ZipFileTree.DetailsImpl#getFile description:The [`org.gradle.api.internal.file.archive.ZipFileTree.DetailsImpl#getFile`](https://github.com/gradle/gradle/blob/3a78b35de8a1aa2f169dae38006986d89385976f/subprojects/core/src/main/java/org/gradle/api/internal/file/archive/ZipFileTree.java#L161) method contains a race condition problem when it's accessed from two or more concurrent tasks accessing the same archive```mermaidstateDiagram-v2  [*] --> Task1  Task1 --> !fileExists  !fileExists --> expandFile  expandFile --> useFile  [*] --> Task2  Task2 --> fileExists  fileExists --> useFile```### Expected BehaviorAll the accessing tasks should get properly expanded to a temporary directory file from an archive### Current BehaviorWhile the `Task1` doesn't finished to expand the file, `Task2` may decide that the file already exists and read it incorrectly### ContextThe issue causes problems with configuration cache in the [Kotlin project](https://github.com/JetBrains/kotlin/) due to ability to execute tasks from the same project in parallel.https://ge.jetbrains.com/s/g2cmfvr55ckpg/failure#1### Steps to Reproduce 1. Checkout the [Kotlin project](https://github.com/JetBrains/kotlin/) at the b6eb2b362014446b68def84037a1e186f3e81b14 revision2. Invoke `./gradlew install --configuration-cache`3. Make changes to any `.kt` files under the `libraries/tools/kotlin-gradle-statistics/src/common` and `libraries/tools/kotlin-gradle-plugin/src/common` directories4. Invoke `./gradlew install --configuration-cache`5. Repeat steps 3 and 4 until you get a build failure caused by `ArrayIndexOutOfBoundsException`
"
22684,1,1232,1,0,0,Loffe,0,"title:False warning on implicit task dependencies (due to overlapping outputs) description:Building the attached gradle project gives false warnings on implicit task dependencies and reused outputs. The output files are located in the same output directory, but with different names.I'm using a `fileTree()` with a filter to declare the outputs, and the tasks gradle finds conflicting do not have any output file in common.[gradle-overlapping-outputs-warning.zip](https://github.com/gradle/gradle/files/9989922/gradle-overlapping-outputs-warning.zip)### Expected BehaviorI expect no deprecation warning.### Current BehaviorGradle 7.5 gives a warning on implicit task dependency, and recommends adding `dependsOn` or `mustRunAfter` when there is no such interaction.```$ gradle build --console=verbose> Task :somefile> Task :assembleDebug> Task :assembleReleaseExecution optimizations have been disabled for task ':assembleRelease' to ensure correctness due to the following reasons:  - Gradle detected a problem with the following location: 'C:\Projects\scrap\gradle-overlapping-outputs-warning\build'. Reason: Task ':assembleDebug' uses this output of task ':assembleRelease' without declaring an explicit or implicit dependency. This can lead to incorrect results being produced, depending on what order the tasks are executed. Please refer to https://docs.gradle.org/7.5.1/userguide/validation_problems.html#implicit_dependency for more details about this problem.  - Gradle detected a problem with the following location: 'C:\Projects\scrap\gradle-overlapping-outputs-warning\build\somefile.txt'. Reason: Task ':assembleRelease' uses this output of task ':assembleDebug' without declaring an explicit or implicit dependency. This can lead to incorrect results being produced, depending on what order the tasks are executed. Please refer to https://docs.gradle.org/7.5.1/userguide/validation_problems.html#implicit_dependency for more details about this problem.> Task :build```### ContextI have a custom task that uses CMake to compile C++. I have two instances of this task type, one for `Debug` and one for `Release`. In FOr one subproject in a multi-project build, we use call out to a CMake project to compile a C++ library.We have custom tasks for `cmakeGenerate` and `cmakeBuildDebug` and `cmakeBuildRelease`. CMake generates a VisualStudio project in one directory, and the intermediate object files are located within this directory when being built. It is not very easy to separate output directories completely.In Gradle 6.8.3 I saw no warning on this, but after upgrading to Gradle 7.5 it appeared.### Steps to Reproduce See attached gradle project.### Your EnvironmentGradle 7.5, Windows 10, Java 8
"
22681,1,0,1,0,0,szsoftware,0,"title:Error: Unknown Tag @NonNullApi in package-info.java description:Expected behavior:Gradle is building an customized distribution, passing all tests under the following circumstancesBuild-System: Ubuntu 22.04Gradle Version checkout: 7.5.1 (sources to build)Gradle Version BuildTool: 7.5.1JavaVersion: OpenJdk 16 (11 tried too)Current behavior:Build failed with: Error: Unknown Tag @NonNullApi in package-info.java
"
22671,0,63,36,0,0,mathjeff,0,"title:forkOptions.jvmArgs.addAll() silently ignored description:### Expected BehaviorIt would be nice if forkOptions.jvmArgs could be made immutable (so that attempting to modify it fails, prompting us to call `jvmArgs()`) or if modifications to this list could be incorporated into the original list.### Current BehaviorCurrently, modifications to this list appear to do nothing### ContextIn https://issuetracker.google.com/issues/258704137 we discovered some code that was doing this:```forkOptions.jvmArgs?.addAll(executionOptions.get().jvmArgs)```and discovered that this had no effect.This appears to be because [DefaultJavaforkOptions.getJvmArgs](https://github.com/gradle/gradle/blob/7df281862d35b7370845ad484ee26b77713255e2/subprojects/core/src/main/java/org/gradle/process/internal/DefaultJavaForkOptions.java#L77) calls [JvmOptions.getJvmArgs](https://github.com/gradle/gradle/blob/7df281862d35b7370845ad484ee26b77713255e2/subprojects/core/src/main/java/org/gradle/process/internal/JvmOptions.java#L175) which copies the list of arguments before returning them.
"
22666,0,0,256,0,1,eskatos,0,"title:Fix wrong build environment documentation on using -P for Gradle properties description:-P is for project properties onlyThis is a follow up to * https://github.com/gradle/gradle/pull/21006----Rendered result available here https://builds.gradle.org/repository/download/Gradle_Release_Check_BuildDistributions/58007012:id/distributions/gradle-7.6-docs.zip!/gradle-7.6-20221110145135%2B0000/docs/userguide/build_environment.html
"
22645,0,0,13,0,0,Proximyst,0,"title:API: parameter is marked not-null while explicitly allowing null description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues--><!--- Provide a brief summary of the issue in the title above -->### Expected Behavior<!--- Tell us what should happen -->I expect the method to declare `@Nullable` on its parameter, like the super and actual implementation do.### Current Behavior<!--- Tell us what happens instead of the expected behavior -->The method does not declare its parameter as `@Nullable`.### Context<!--- How has this issue affected you? What are you trying to accomplish? --><!--- Providing context helps us come up with a solution that is most useful in the real world -->This method (which is what `DirectoryProperty` inherits from) does not declare its parameter as `@Nullable`. In the implementation, it just calls the parent...https://github.com/gradle/gradle/blob/b354be64009fc84aca19a0b072562b93ae1afe32/subprojects/file-collections/src/main/java/org/gradle/api/internal/file/DefaultFilePropertyFactory.java#L242-L246... which is:https://github.com/gradle/gradle/blob/b354be64009fc84aca19a0b072562b93ae1afe32/subprojects/model-core/src/main/java/org/gradle/api/internal/provider/DefaultProperty.java#L103-L111... and is documented:https://github.com/gradle/gradle/blob/b354be64009fc84aca19a0b072562b93ae1afe32/subprojects/core-api/src/main/java/org/gradle/api/provider/Property.java#L121-L135### Steps to Reproduce <!---Provide a self-contained example project as an attached archive or a Github project.You can use the following template with a Gradle GitHub action set up to showcase your problem: https://github.com/gradle/gradle-issue-reproducerIn the rare cases where this is infeasible, we will also accept a detailed set of instructions.-->See above code; this is an API issue.### Your Environment<!--- Include as many relevant details about the environment you experienced the bug in --><!--- A build scan https://scans.gradle.com/get-started is ideal -->I use Gradle 7.5.1, and this is still present in `master` (as of writing); links to code are above.
"
22622,1,201,81,0,0,tnielens,0,"title:java toolchain greater than `jvm-8` fails with scala 2.12.17 description:scala 2.12.x does not support `-target` > `jvm-1.8`. The option is deprecated in https://github.com/scala/scala/pull/10109 for scala 2.12.17.### Expected BehaviorCompilation should succeed.### Current BehaviorCompilation fails.### ContextI can't upgrade a project to latest scala version with a jvm toolchain.### Steps to Reproduce Compiling some scala code with a toolchain greater than jvm 8 fails with:```> Task :compileScala'jvm-1.11' is not a valid choice for '-target'bad option: '-target:jvm-1.11'```with this toolchain configuration:```gradlejava {    toolchain {        languageVersion = JavaLanguageVersion.of(11)    }}```### Your Environmentgradle 7.5.1scala 2.12.17OpenJDK Runtime Environment Temurin-11.0.15+10 (build 11.0.15+10)
"
22556,0,0,275,0,1,octylFractal,1,"title:Fix adding bundles via DependencyHandler#addProvider description:Fixes #22552
"
22552,0,0,137,0,0,ianbrandt,0,"title:7.6 RC1: UnsupportedNotationException for version catalog dependency bundle description:### Expected Behavior* Project that builds successfully when referencing version catalog dependency bundles with Gradle 7.5.1 should continue to do so with Gradle 7.6. ### Current Behavior* Upon upgrading to Gradle 7.6-rc-1, version catalog dependency bundle references result in an `UnsupportedNotationException`.### Context* I'm unable to upgrade my project to Gradle 7.6-rc-1.### Steps to Reproduce * Reproducer here: https://github.com/sdkotlin/sd-kotlin-talks/tree/7.6-upgrade.### Your EnvironmentGradle 7.6-rc-1Build time:   2022-10-28 07:52:11 UTCRevision:     62973455a8df25d003949f3f573593cd10d083a3Kotlin:       1.7.10Groovy:       3.0.13Ant:          Apache Ant(TM) version 1.10.11 compiled on July 10 2021JVM:          11.0.17 (Eclipse Adoptium 11.0.17+8)OS:           Windows 10 10.0 amd64
"
22550,1,562,142,0,0,C-Otto,0,"title:7.6 RC1: Could not find method implementation() for arguments [project ':application'] on object of type DefaultJvmComponentDependencies description:Building my playground project making use of convention plugins fails using 7.6 RC 1, but builds with 7.5.1.### Expected BehaviorBuilds.### Current Behavior```* Where:Build file '/xxx/playground/application/build.gradle' line: 2* What went wrong:An exception occurred applying plugin request [id: 'playground.java-conventions']> Failed to apply plugin 'playground.java-conventions'.   > Failed to apply plugin 'playground.integration-tests'.      > org.gradle.internal.metaobject.AbstractDynamicObject$CustomMessageMissingMethodException: Could not find method implementation() for arguments [project ':application'] on object of type org.gradle.api.plugins.jvm.internal.DefaultJvmComponentDependencies.```Source for `playground.integration-tests`: https://github.com/C-Otto/playground/blob/main/buildSrc/src/main/groovy/playground.integration-tests.gradleReproduced with e2daa87f614a2d22ae3a8a45ff67220407186837 (https://github.com/C-Otto/playground) and Gradle 7.6 RC1.### Your EnvironmentBuild scan URL: https://gradle.com/s/r4p77nkht6zy4
"
22537,1,156,105,0,0,C2H6O,0,"title:WorkerExecutor.noIsolation() queue executes actions in different ClassLoaders description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues--><!--- Provide a brief summary of the issue in the title above -->### Expected Behavior<!--- Tell us what should happen -->`WorkAction`s submitted to a `WorkQueue` that was generated through `WorkerExecutor.noIsolation()` should run on the same shared ClassLoader ([as it says in the docs](https://docs.gradle.org/current/userguide/worker_api.html#changing_the_isolation_mode)).### Current Behavior<!--- Tell us what happens instead of the expected behavior -->Each `WorkAction` is executed within a different `ClassLoader`.### Context<!--- How has this issue affected you? What are you trying to accomplish? --><!--- Providing context helps us come up with a solution that is most useful in the real world -->We'd like to register our own `java.sql.Driver` with the `DriverManager` (static shared state) before a verification task (which is defined by a [3rd party library](https://github.com/cashapp/sqldelight)) is run so that our driver is used during the task execution.### Steps to Reproduce <!---Provide a self-contained example project as an attached archive or a Github project.You can use the following template with a Gradle GitHub action set up to showcase your problem: https://github.com/gradle/gradle-issue-reproducerIn the rare cases where this is infeasible, we will also accept a detailed set of instructions.-->Follow the example https://docs.gradle.org/current/userguide/worker_api.html#converting_to_the_worker_api and add a log to the `execute()` function of `GenerateMD5` WorkAction:```println(""GenerateMD5 classLoader ${this::class.java.classLoader} ${Integer.toHexString(System.identityHashCode([this](this::class.java.classLoader)))}"")```
"
22531,0,193,259,0,1,asodja,0,"title:Groovy and Java joint compilation failure on Java class private dependency change description:When compiling Groovy and Java in joint compilation incrementally, Groovy compiler can fail with `NoClassDefFoundError`. Error from gradle/gradle: https://ge.gradle.org/s/nchdihafkxkzs.Groovy compiler throws an error through reference:ResolveTestFixture.configurationCacheEnabled -> GradleContextualExecuter -> AbstractDelegatingGradleExecuter -> AbstractGradleExecuter:```:internal-integ-testing:compileGroovy FAILEDstartup failed: General error during conversion: java.lang.NoClassDefFoundError: org.gradle.integtests.fixtures.executer.AbstractGradleExecuter```A simple reproducer can be seen [here](https://github.com/gradle/gradle/blob/69b48824dd62c46530f1606f8901f1bc4166f4a1/subprojects/language-java/src/integTest/groovy/org/gradle/java/compile/incremental/CrossTaskGroovyJavaJointIncrementalCompilationIntegrationTest.groovy#L29-L45).This seems like an old issue that surfaced with latest changes to `ResolveTestFixture`. It happens because we delete `.class` files before we invoke Groovy compiler. But Groovy compiler wants to resolve some types when analyzing Groovy code. And if these types are from Java source, this can fail.
"
22529,1,0,297,0,0,jmatsu,0,"title:As for Gradle 6.7 or lower, org.gradle.api.Action conversion from Groovy may be incompatible with Kotlin DSL. description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues--><!--- Provide a brief summary of the issue in the title above -->`org.gradle.api.Action` calls from Kotlin DSL cause a build failure if the functions are originally written in Groovy.### Expected Behavior<!--- Tell us what should happen -->Builds succeed without any failure. Or personally, I'd be happy if this restiction is noted in the documents.### Current Behavior<!--- Tell us what happens instead of the expected behavior -->Builds fail due to missing lambda's classes.### Context<!--- How has this issue affected you? What are you trying to accomplish? --><!--- Providing context helps us come up with a solution that is most useful in the real world -->I""m writing Gradle plugins in Groovy and wanna support both of Groovy DSL and Kotlin DSL properly. I'm following https://docs.gradle.org/current/userguide/kotlin_dsl.html to fit Kotlin DSL users' usecases but the issue happened.### Steps to Reproduce <!---Provide a self-contained example project as an attached archive or a Github project.You can use the following template with a Gradle GitHub action set up to showcase your problem: https://github.com/gradle/gradle-issue-reproducerIn the rare cases where this is infeasible, we will also accept a detailed set of instructions.-->- Write a plugin and create a function that takes `org.gradle.api.Action` in Groovy- Create a project that uses Gradle 6.7 or lower- Call the function from Kotlin DSLA reproducable project is here. https://github.com/jmatsu/repro-kotlin-dsl-bug-gradle-plugin-written-in-groovyThis happens only when, the all following conditions are met.- The functions are written in Groovy- Gradle at runtime are ver. 6.7 or lessThere is a workaround that is rewriting classes that have functions with `org.gradle.api.Action` from Groovy to Java.### Your Environment<!--- Include as many relevant details about the environment you experienced the bug in --><!--- A build scan https://scans.gradle.com/get-started is ideal -->Build scan URL: N/A
"
22510,1,3539,218,0,0,ljacomet,0,"title:Regression in dependency resolution with conflict resolution and different variants between conflicted versions description:From a quick analysis of the error and reproducer, it seems that Gradle 7.6 incorrectly resolves the variant against `kotlin-gradle-plugin-api:1.7.10` while `1.7.20` is selected. And since `1.7.10` does not have the `gradle71RuntimeElements` variant which was introduced in `1.7.20` only, we end up with a selection of incompatible variants as both `gradle70RuntimeElements` (lifted from 1.7.10) and `gradle71RuntimeElements` end up in the graph.With Gradle 7.5.1, selection succeeds and correctly resolves `gradle71RuntimeElements`.So it looks like something changed in the resolution system that causes unexpected node selection.Error:```* What went wrong:Execution failed for task ':plugin:generatePrecompiledScriptPluginAccessors'.> Could not resolve all files for configuration ':plugin:runtimeClasspath'.   > Could not resolve org.jetbrains.kotlin:kotlin-gradle-plugin-api:1.7.20.     Required by:         project :plugin > org.jetbrains.kotlin:kotlin-gradle-plugin:1.7.20      > Multiple incompatible variants of org.jetbrains.kotlin:kotlin-gradle-plugin-api:1.7.20 were selected:           - Variant org.jetbrains.kotlin:kotlin-gradle-plugin-api:1.7.20 variant gradle70RuntimeElements has attributes {org.gradle.category=library, org.gradle.dependency.bundling=external, org.gradle.jvm.environment=standard-jvm, org.gradle.jvm.version=8, org.gradle.libraryelements=jar, org.gradle.plugin.api-version=7.0, org.gradle.status=release, org.gradle.usage=java-runtime}           - Variant org.jetbrains.kotlin:kotlin-gradle-plugin-api:1.7.20 variant gradle71RuntimeElements has attributes {org.gradle.category=library, org.gradle.dependency.bundling=external, org.gradle.jvm.environment=standard-jvm, org.gradle.jvm.version=8, org.gradle.libraryelements=jar, org.gradle.plugin.api-version=7.1, org.gradle.status=release, org.gradle.usage=java-runtime}   > Could not resolve org.jetbrains.kotlin:kotlin-gradle-plugin-api:1.7.20.     Required by:         project :plugin > org.jetbrains.kotlin:kotlin-gradle-plugin:1.7.20         project :plugin > org.jetbrains.kotlin:kotlin-gradle-plugin:1.7.20 > org.jetbrains.kotlin:kotlin-gradle-plugin-model:1.7.20      > Multiple incompatible variants of org.jetbrains.kotlin:kotlin-gradle-plugin-api:1.7.20 were selected:           - Variant org.jetbrains.kotlin:kotlin-gradle-plugin-api:1.7.20 variant gradle70RuntimeElements has attributes {org.gradle.category=library, org.gradle.dependency.bundling=external, org.gradle.jvm.environment=standard-jvm, org.gradle.jvm.version=8, org.gradle.libraryelements=jar, org.gradle.plugin.api-version=7.0, org.gradle.status=release, org.gradle.usage=java-runtime}           - Variant org.jetbrains.kotlin:kotlin-gradle-plugin-api:1.7.20 variant gradle71RuntimeElements has attributes {org.gradle.category=library, org.gradle.dependency.bundling=external, org.gradle.jvm.environment=standard-jvm, org.gradle.jvm.version=8, org.gradle.libraryelements=jar, org.gradle.plugin.api-version=7.1, org.gradle.status=release, org.gradle.usage=java-runtime}   > Could not resolve org.jetbrains.kotlin:kotlin-gradle-plugin-api:1.7.10.     Required by:         project :plugin > org.gradle.kotlin:gradle-kotlin-dsl-plugins:2.4.1 > org.jetbrains.kotlin:kotlin-sam-with-receiver:1.7.10      > Multiple incompatible variants of org.jetbrains.kotlin:kotlin-gradle-plugin-api:1.7.20 were selected:           - Variant org.jetbrains.kotlin:kotlin-gradle-plugin-api:1.7.20 variant gradle70RuntimeElements has attributes {org.gradle.category=library, org.gradle.dependency.bundling=external, org.gradle.jvm.environment=standard-jvm, org.gradle.jvm.version=8, org.gradle.libraryelements=jar, org.gradle.plugin.api-version=7.0, org.gradle.status=release, org.gradle.usage=java-runtime}           - Variant org.jetbrains.kotlin:kotlin-gradle-plugin-api:1.7.20 variant gradle71RuntimeElements has attributes {org.gradle.category=library, org.gradle.dependency.bundling=external, org.gradle.jvm.environment=standard-jvm, org.gradle.jvm.version=8, org.gradle.libraryelements=jar, org.gradle.plugin.api-version=7.1, org.gradle.status=release, org.gradle.usage=java-runtime}```Reproducer: https://github.com/cesar1000/kotlin_dependency_ambiguity
"
22505,0,0,296,1,1,jvandort,0,"title:Add test worker distribution dependencies to application classpath description:When the junit platform launcher auto-loads `LauncherSessionListener` implementations, it does so in the context of the application classloader. If the classloader does not have junit platform launcher, it fails to load `LauncherSessionListener` even if the the implementation classpath does have the launcher classes.The resolution is to place test framework dependencies on the application classpath if they are loaded from the distribution. This is also more consistent with the way test suites configures these dependencies. Breaks compatibility with the test-retry plugin. But adds a new method which will avoid needing to break compatibility in the future. Fixes https://github.com/gradle/gradle/issues/22333
"
22476,0,0,282,0,0,melix,0,"title:Input snapshotting fails if an input class is removed description:### Expected BehaviorInput snapshotting shouldn't try to load classes which are not present anymore.### Current BehaviorInput snapshotting probably wants to compare inputs from a previous build, where a type existed, with the current build, where it doesn't, failing with a `ClassNotFoundException`.### ContextIn Micronaut Core, we had a branch which showed a suspicious class not found exception: https://ge.micronaut.io/s/gll4myo3ifrry/failure?expanded-stacktrace=WyIwLTEtMi0zIl0#1The class which is mentioned is `io.micronaut.build.internal.japicmp.RemovedPackages` which is _not_ found in [the branch being built](https://github.com/micronaut-projects/micronaut-core/pull/8199).However, that class is present on the ""main"" branch:https://github.com/micronaut-projects/micronaut-core/blob/4.0.x/core/build.gradle#L49-L53So if you build with the `4.0.x` branch first, _then_ switch to the failing branch, the snapshotter tries to compare inputs and on the new branch, the `RemovedPackages` class is _missing_, but it shouldn't fail: it should simply say out of date.### Steps to reproduce1. checkout https://github.com/micronaut-projects/micronaut-core.git2. switch to the `4.0.x` branch3. run `./gradlew :core:japiCmp`, [see the build pass](https://ge.micronaut.io/s/odkzsjngii54g)4. checkout the `deprecate-status` branch, run `./gradlew :core:japiCmp` and [see the build fail](https://ge.micronaut.io/s/ovlybkmxiuatu)5. delete the execution history: rm -Rf .gradle/7.5.1/executionHistory6. run `./gradlew japiCmp` to discard the task execution history, and [see the build pass](https://ge.micronaut.io/s/zp4xtfr7cc7og)### Your environmentGradle 7.5.1
"
22453,1,1897,0,1,0,abelom,0,"title:Module export rules needed with java17 defined via options.compilerArg are not applied to annotation processor description:<!--- Provide a brief summary of the issue in the title above -->### Expected BehaviorThere should be a way to specify module export rules for those to apply to annotation processor### Current Behavioronly able to set module rules via global gradle JVM gradle.properies### ContextWe have a happy codebase which works fine under java 11. JDK17 imposes additional module export requirments around javac internal API usages by our annotation processor, we are unable to set such rules locally just for specific compilation task. As a workaround we set export rules globally. Both problematic and workaround versions are attached.How we believe it export rules should be added does not get the job done see attached project```compileJava {    options.compilerArgs += [""--add-exports=jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED"",                             ""--add-exports=jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED"",                             ""--add-exports=jdk.compiler/com.sun.tools.javac.main=ALL-UNNAMED"",                             ""--add-exports=jdk.compiler/com.sun.tools.javac.model=ALL-UNNAMED"",                             ""--add-exports=jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED"",                             ""--add-exports=jdk.compiler/com.sun.tools.javac.processing=ALL-UNNAMED"",                             ""--add-exports=jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED"",                             ""--add-exports=jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED"",                             ""--add-exports=jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED"",                             ""--add-exports=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED"",                             ""--add-exports=jdk.compiler/sun.nio.ch=ALL-UNNAMED""]   }```how we work around the issue```org.gradle.jvmargs= --add-exports=jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED \  --add-exports=jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED \ --add-exports=jdk.compiler/com.sun.tools.javac.main=ALL-UNNAMED \ --add-exports=jdk.compiler/com.sun.tools.javac.model=ALL-UNNAMED \ --add-exports=jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED \ --add-exports=jdk.compiler/com.sun.tools.javac.processing=ALL-UNNAMED \ --add-exports=jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED \ --add-exports=jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED \ --add-exports=jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED \ --add-exports=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED \ --add-exports=jdk.compiler/sun.nio.ch=ALL-UNNAMED \ --add-exports=java.base/sun.nio.ch=ALL-UNNAMED```[devexperts-17-workaround.zip](https://github.com/gradle/gradle/files/9822041/devexperts-17-workaround.zip)[devexperts-17-issue.zip](https://github.com/gradle/gradle/files/9822042/devexperts-17-issue.zip)This adds steps-to-reproduce for https://github.com/gradle/gradle/issues/21310This is a duplicate of https://github.com/gradle/gradle/issues/22065 where we have failed to express ourselves
"
22438,1,1225,0,0,0,agolubev,0,"title:ResolvableDependencies.artifactView() always returns file dependencies on top description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues-->Created test project to illustrate the idea Dependencies look like following```dependencies {    implementation 'androidx.core:core-ktx:1.7.0'    implementation project(':patch')    implementation 'androidx.appcompat:appcompat:1.4.2'    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'    implementation files('../deps/app-release.aar')    implementation 'com.google.android.material:material:1.6.1'    implementation project(':patch2')....```Following code in custom task print dependencies as return by Gradle API```        Configuration config = configurations.debugRuntimeClasspath {            transitive = false        }        // prints dependencies in declaration order        def rc = config.getAllDependencies()        for (def rs in rc) {            if (rs.resolve().toString() == 'null' || rs.resolve().toString() == ""[]"")                 println(rs) else println(rs.resolve())        }        // prints dependencies with file import on top        def artifactType = Attribute.of('artifactType', String)        config                .incoming                .artifactView {                    attributes {                        it.attribute(artifactType, ""android-res"")                    }                    it.lenient(false)                }.files.each { println ""artifact file: ${it}"" }```<!--- Provide a brief summary of the issue in the title above -->### Expected BehaviorProbably `artifactView` should mimic other APIs and return dependencies in the same order as declared <!--- Tell us what should happen -->### Current BehaviorartifactView returns file dependency always on the top. Repository and module dependencies stays in the declared order.<!--- Tell us what happens instead of the expected behavior -->### ContextExperimented with android project but dependency API is from Gradle<!--- How has this issue affected you? What are you trying to accomplish? --><!--- Providing context helps us come up with a solution that is most useful in the real world -->
"
22423,0,0,282,0,0,melix,0,"title:frequent StackOverflowError in execution plan description:### Expected BehaviorGradle shouldn't fail.### Current BehaviorSometimes, Gradle fails with a stack overflow error: https://ge.micronaut.io/s/v3sn2yfemaw2e/failure?expanded-stacktrace=WyIxIl0&focused-exception-line=1-0#2### ContextWe started seeing issues in August, but didn't notice it yet. The first scan we have showing this error is here: https://ge.micronaut.io/s/4oxwt2b6jvww4/failure?expanded-stacktrace=WyIxIl0&focused-exception-line=1-0#2 but it is possible that the error surfaced before, as all our users don't see this.Since last week, the frequency of those errors increased significantly: https://ge.micronaut.io/scans/failures?failures.failureClassification=all_failures&failures.failureMessage=java.lang.StackOverflowError%20(no%20error%20message)&search.relativeStartTime=P28D&search.timeZoneId=Europe/Paris#### Steps to Reproduce It isn't reproducible directly. The error seems non deterministic and happens on several projects.### Your EnvironmentBuild scan URL: https://ge.micronaut.io/scans/failures?failures.failureClassification=all_failures&failures.failureMessage=java.lang.StackOverflowError%20(no%20error%20message)&search.relativeStartTime=P28D&search.timeZoneId=Europe/Paris#
"
22398,0,196,281,0,0,alllex,0,"title:Misleading toolchain logging when setting executable or java home on compileJava description:Given the following build script:```apply plugin: ""java""// Build JVM is Java 11compileJava {    options.forkOptions.javaHome = file(""<path/to/java8/java_home>"")}```Running Gradle with Java 11, If we execute the `compileJava` task with `--info` logging, the output would contain the following:```Compiling with toolchain '<path/to/java8/java_home>'.```This output implies that the compilation is executed with Java 8. This is not the case, because `compileJava.options.fork` was not set to `true` and therefore the `forkOptions.javaHome` and `forkOptions.executable` were ignored when selecting which compiler to run. As a result the actual compilation executed in-process on the build JVM with Java 11.The desired behavior is for the logging to be consistent with the actual execution. This is particularly important, because many integration tests are relying on the `Compiling with toolchain ...` output.
"
22397,0,282,281,0,0,alllex,0,"title:Task compileJava fails if fork options executable or java home points to older JDK description:If `options.forkOptions.javaHome` or `options.forkOptions.executable` points to a JDK that has a lower language version than the build JVM, then the `compileJava` task fails due to the target/source compatibility requested from the compiler.```apply plugin: ""java""// Build JVM is Java 11compileJava {    options.fork = true    options.forkOptions.javaHome = file(""path/to/java8/java_home"")}```### Expected BehaviorThe task completes successfully and compiles the sources with compatibilty of Java 8, given this is the Java version explicitly set in the `forkOptions.javaHome`.### Current BehaviorThe task fails with an error:```javac: invalid source release: 11Usage: javac <options> <source files>use -help for a list of possible options```
"
22370,0,5076,0,1,0,vodasams57,0,"title:Gradle not honoring Maven exclusions defined in pom.xml description:### Expected BehaviorGradle does not exclude libraries defined in Maven dependencies (pom.xml).### Current BehaviorIn contrast to Maven, Gradle adds excluded dependencies to the dependency tree.### ContextWe use Apache James mailserver and switched from Maven to Gradle build system. We ran into a dependency conflict, because `org.apache.james:apache-mailet:2.4` was also in the runtime classpath in addition to `org.apache.james:apache-mailet-base:3.7.1`. Having `org.apache.james:apache-mailet:2.4` in the runtime classpath caused a runtime error. After investigating we noticed `org.apache.james:apache-mailet:2.4` was excluded in the corresponding [pom.xml](https://search.maven.org/artifact/org.apache.james/james-server-mailet-dkim/3.7.1/jar) of `org.apache.james:james-server-mailet-dkim`. After browsing Gradle issues to gain clarity, we followed the discussion in #12214 and [spring-boot#21350](https://github.com/spring-projects/spring-boot/issues/21350). We accepted the fact that Maven and Gradle use different dependency resolution strategies. However, we filed this bug report to ask for clarity how to tackle such issues:1. It is unclear why the exclusion defined in the [pom.xml](https://search.maven.org/artifact/org.apache.james/james-server-mailet-dkim/3.7.1/jar) lands in the dependency tree when building with Gradle. We distilled the example to a simple build.gradle and pom.xml (see ""Steps to Reproduce""). Can someone explain this behavior? My vague assumption is that the cause is a circular dependency of `org.apache.james:apache-mailet` (see ""Steps to Reproduce"" `dependencyInsight`) or the `<parent />` tag of [pom.xml](https://search.maven.org/artifact/org.apache.james/james-server-mailet-dkim/3.7.1/jar) that references to an additional pom.xml.2. Do you consider this expected behavior?3. This has been discussed before to some extend in [#12214#issuecomment-585888556](https://github.com/gradle/gradle/issues/12214#issuecomment-585888556). Does this also apply to this issue?4. What is the best strategy to handle such dependencies? An alternative would be to switch back to Maven, so exclusions defined by maintainers of Apache James are acknowledged.### Steps to Reproduce simple build.gradle```plugins {    id 'java'}repositories {    mavenCentral()}dependencies {    implementation ""org.apache.james:james-server-mailet-dkim:3.7.1""}group = 'com.example'description = 'gradletest'```Maven counterpart (pom.xml)```<?xml version=""1.0"" encoding=""UTF-8""?><project xmlns=""http://maven.apache.org/POM/4.0.0""  xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""  xsi:schemaLocation=""http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"">  <modelVersion>4.0.0</modelVersion>  <groupId>com.example</groupId>  <artifactId>gradletest</artifactId>  <version>1.0-SNAPSHOT</version>  <dependencies>    <dependency>      <groupId>org.apache.james</groupId>      <artifactId>james-server-mailet-dkim</artifactId>      <version>3.7.1</version>      <scope>runtime</scope>    </dependency>  </dependencies></project>```Dependency tree generated by maven that **does not include** `org.apache.james:apache-mailet:2.4` and other exclusions such as `org.apache.james:apache-mailet-base:1.1`.```> mvn dependency:tree[INFO] com.example:gradletest:jar:1.0-SNAPSHOT[INFO] \- org.apache.james:james-server-mailet-dkim:jar:3.7.1:runtime[INFO]    +- org.apache.james:apache-mailet-api:jar:3.7.1:runtime...[INFO]    +- org.apache.james.jdkim:apache-jdkim-library:jar:0.2:runtime[INFO]    |  +- org.apache.geronimo.specs:geronimo-activation_1.1_spec:jar:1.0.2:runtime[INFO]    |  \- dnsjava:dnsjava:jar:2.1.1:runtime[INFO]    |     \- junit:junit:jar:3.8.2:runtime...```Dependency tree generated by Gradle that **includes** `org.apache.james:apache-mailet:2.4` and `org.apache.james:apache-mailet-base:1.1````> gradle dependencies --configuration runtimeClasspathruntimeClasspath - Runtime classpath of source set 'main'.\--- org.apache.james:james-server-mailet-dkim:3.7.1     +--- org.apache.james:apache-mailet-api:3.7.1...     +--- org.apache.james.jdkim:apache-jdkim-library:0.2     |    +--- org.apache.geronimo.specs:geronimo-activation_1.1_spec:1.0.2     |    +--- org.apache.james:apache-mailet-base:1.1 -> 3.7.1 (*)     |    +--- org.apache.james:apache-mailet:2.4     |    \--- dnsjava:dnsjava:2.1.1     |         \--- junit:junit:3.8.2...```Dependency insight generated by Gradle```> gradle -q dependencyInsight --dependency org.apache.james:apache-mailet --configuration runtimeClasspathorg.apache.james:apache-mailet:2.4   variant ""runtime"" [      org.gradle.status              = release (not requested)      org.gradle.usage               = java-runtime      org.gradle.libraryelements     = jar      org.gradle.category            = library      Requested attributes not found in the selected variant:         org.gradle.dependency.bundling = external         org.gradle.jvm.environment     = standard-jvm         org.gradle.jvm.version         = 8   ]org.apache.james:apache-mailet:2.4\--- org.apache.james.jdkim:apache-jdkim-library:0.2     \--- org.apache.james:james-server-mailet-dkim:3.7.1          \--- runtimeClasspathorg.apache.james:apache-mailet-api:3.7.1   variant ""runtime"" [      org.gradle.status              = release (not requested)      org.gradle.usage               = java-runtime      org.gradle.libraryelements     = jar      org.gradle.category            = library      Requested attributes not found in the selected variant:         org.gradle.dependency.bundling = external         org.gradle.jvm.environment     = standard-jvm         org.gradle.jvm.version         = 8   ]org.apache.james:apache-mailet-api:3.7.1+--- org.apache.james:apache-mailet-base:3.7.1|    +--- org.apache.james:james-server-mailet-dkim:3.7.1|    |    \--- runtimeClasspath|    \--- org.apache.james.jdkim:apache-jdkim-library:0.2 (requested org.apache.james:apache-mailet-base:1.1)|         \--- org.apache.james:james-server-mailet-dkim:3.7.1 (*)\--- org.apache.james:james-server-mailet-dkim:3.7.1 (*)org.apache.james:apache-mailet-base:3.7.1   variant ""runtime"" [      org.gradle.status              = release (not requested)      org.gradle.usage               = java-runtime      org.gradle.libraryelements     = jar      org.gradle.category            = library      Requested attributes not found in the selected variant:         org.gradle.dependency.bundling = external         org.gradle.jvm.environment     = standard-jvm         org.gradle.jvm.version         = 8   ]   Selection reasons:      - By conflict resolution : between versions 3.7.1 and 1.1org.apache.james:apache-mailet-base:3.7.1\--- org.apache.james:james-server-mailet-dkim:3.7.1     \--- runtimeClasspathorg.apache.james:apache-mailet-base:1.1 -> 3.7.1\--- org.apache.james.jdkim:apache-jdkim-library:0.2     \--- org.apache.james:james-server-mailet-dkim:3.7.1          \--- runtimeClasspath(*) - dependencies omitted (listed previously)```### Your Environment```> gradle --version            ------------------------------------------------------------Gradle 7.1------------------------------------------------------------Build time:   2021-06-14 14:47:26 UTCRevision:     989ccc9952b140ee6ab88870e8a12f1b2998369eKotlin:       1.4.31Groovy:       3.0.7Ant:          Apache Ant(TM) version 1.10.9 compiled on September 27 2020JVM:          1.8.0_312 (BellSoft 25.312-b07)OS:           Mac OS X 12.5.1 aarch64```
"
22358,0,0,218,0,0,ljacomet,0,"title:Missing exclude rule merging optimizations description:From larger builds, we have found missed exclude rule merging optimizations. They need to be added.
"
22337,0,7051,226,0,1,mlopatkin,0,"title:Disallow BuildServices to be used as inputs to ValueSources obtained at configuration time description:A `ValueSource` can take parameters in the form of Properties. A `BuildService` is obtained as a `Provider`. This `Provider` can be wired to the input `Property` of the ValueSource. It works well without the configuration cache. However, when the configuration cache is enabled and the ValueSource is obtained at the configuration time, things go wrong. The cache cannot be reused, as the fingerprinting routine cannot restore the `BuildService`; the build fails with a cryptic exception.### Expected BehaviorEither of two options are expected:1. If Gradle is not going to support this use case: provide an error with a clear message that this use is unsupported, preferably when storing the cache2. Otherwise, this should just work, and the service instance should be available for the ValueSource computation.### Current BehaviorThe build fails when trying to check the cache validity:```org.gradle.api.GradleException: Could not load the value of field `__service__` of `ServiceValueSource$Params` bean found in field `parameters` of `org.gradle.api.internal.provider.DefaultValueSourceProviderFactory$DefaultObtainedValue` bean found in field `obtainedValue` of `org.gradle.configurationcache.fingerprint.ConfigurationCacheFingerprint$ValueSource` bean found in Gradle runtime.  	at org.gradle.configurationcache.serialization.beans.BeanPropertyReaderKt.readPropertyValue(BeanPropertyReader.kt:108)  	at org.gradle.configurationcache.serialization.beans.BeanPropertyReader.readStateOf(BeanPropertyReader.kt:67)  	at org.gradle.configurationcache.serialization.codecs.BeanCodec.readBeanOf(BeanCodec.kt:72)  	at org.gradle.configurationcache.serialization.codecs.BeanCodec.decode(BeanCodec.kt:47)  	at org.gradle.configurationcache.serialization.CombinatorsKt$reentrant$1$decodeLoop$1.invokeSuspend(Combinators.kt:165)  	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)  	at kotlin.coroutines.ContinuationKt.startCoroutine(Continuation.kt:115)  	at org.gradle.configurationcache.serialization.CombinatorsKt$reentrant$1.decodeLoop(Combinators.kt:166)  	at org.gradle.configurationcache.serialization.CombinatorsKt$reentrant$1.decode(Combinators.kt:130)  	at org.gradle.configurationcache.serialization.codecs.BindingsBackedCodec.decode(BindingsBackedCodec.kt:59)  	at org.gradle.configurationcache.serialization.DefaultReadContext.read(Contexts.kt:259)  	at org.gradle.configurationcache.fingerprint.ConfigurationCacheFingerprintChecker.checkBuildScopedFingerprint(ConfigurationCacheFingerprintChecker.kt:58)  	at org.gradle.configurationcache.fingerprint.ConfigurationCacheFingerprintController.checkBuildScopedFingerprint(ConfigurationCacheFingerprintController.kt:243)  	at org.gradle.configurationcache.DefaultConfigurationCache$checkBuildScopedFingerprint$1.invokeSuspend(DefaultConfigurationCache.kt:461)  	at org.gradle.configurationcache.DefaultConfigurationCache$readFingerprintFile$1$1.invokeSuspend(DefaultConfigurationCache.kt:480)  	at org.gradle.configurationcache.ConfigurationCacheIO$withReadContextFor$1$1$1$1.invokeSuspend(ConfigurationCacheIO.kt:248)  	at org.gradle.configurationcache.serialization.RunningKt$runReadOperation$2.invokeSuspend(Running.kt:34)  	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)  	at kotlin.coroutines.ContinuationKt.startCoroutine(Continuation.kt:115)  	at org.gradle.configurationcache.serialization.RunningKt.runToCompletion(Running.kt:56)  	at org.gradle.configurationcache.serialization.RunningKt.runReadOperation(Running.kt:33)  	at org.gradle.configurationcache.ConfigurationCacheIO.withReadContextFor$configuration_cache(ConfigurationCacheIO.kt:247)  	at org.gradle.configurationcache.DefaultConfigurationCache.readFingerprintFile(DefaultConfigurationCache.kt:478)  	at org.gradle.configurationcache.DefaultConfigurationCache.checkBuildScopedFingerprint(DefaultConfigurationCache.kt:459)  	at org.gradle.configurationcache.DefaultConfigurationCache.checkFingerprintAgainstLoadedProperties(DefaultConfigurationCache.kt:441)  	at org.gradle.configurationcache.DefaultConfigurationCache.checkFingerprint(DefaultConfigurationCache.kt:429)  	at org.gradle.configurationcache.DefaultConfigurationCache.access$checkFingerprint(DefaultConfigurationCache.kt:53)  	at org.gradle.configurationcache.DefaultConfigurationCache$checkFingerprint$1.invoke(DefaultConfigurationCache.kt:278)  	at org.gradle.configurationcache.DefaultConfigurationCache$checkFingerprint$1.invoke(DefaultConfigurationCache.kt:271)  	at org.gradle.configurationcache.ConfigurationCacheRepository$StoreImpl$useForStateLoad$2.invoke(ConfigurationCacheRepository.kt:164)  	at org.gradle.configurationcache.ConfigurationCacheRepository$StoreImpl$useForStateLoad$2.invoke(ConfigurationCacheRepository.kt:163)  	at org.gradle.configurationcache.ConfigurationCacheRepository$withExclusiveAccessToCache$1.create(ConfigurationCacheRepository.kt:244)  	at org.gradle.cache.internal.LockOnDemandCrossProcessCacheAccess.withFileLock(LockOnDemandCrossProcessCacheAccess.java:90)  	at org.gradle.cache.internal.DefaultCacheAccess.withFileLock(DefaultCacheAccess.java:191)  	at org.gradle.cache.internal.DefaultPersistentDirectoryStore.withFileLock(DefaultPersistentDirectoryStore.java:188)  	at org.gradle.cache.internal.DefaultCacheFactory$ReferenceTrackingCache.withFileLock(DefaultCacheFactory.java:209)  	at org.gradle.configurationcache.ConfigurationCacheRepository.withExclusiveAccessToCache(ConfigurationCacheRepository.kt:242)  	at org.gradle.configurationcache.ConfigurationCacheRepository.access$withExclusiveAccessToCache(ConfigurationCacheRepository.kt:46)  	at org.gradle.configurationcache.ConfigurationCacheRepository$StoreImpl.useForStateLoad(ConfigurationCacheRepository.kt:163)  	at org.gradle.configurationcache.DefaultConfigurationCache.checkFingerprint(DefaultConfigurationCache.kt:271)  	at org.gradle.configurationcache.DefaultConfigurationCache.determineCacheAction(DefaultConfigurationCache.kt:221)  	at org.gradle.configurationcache.DefaultConfigurationCache.initializeCacheEntry(DefaultConfigurationCache.kt:114)  	at org.gradle.configurationcache.ConfigurationCacheBuildTreeLifecycleControllerFactory.createRootBuildController(ConfigurationCacheBuildTreeLifecycleControllerFactory.kt:54)  	at org.gradle.composite.internal.DefaultRootBuildState.<init>(DefaultRootBuildState.java:73)  	at org.gradle.composite.internal.BuildStateFactory.createRootBuild(BuildStateFactory.java:66)  	at org.gradle.composite.internal.DefaultIncludedBuildRegistry.createRootBuild(DefaultIncludedBuildRegistry.java:91)...Caused by: java.lang.IllegalArgumentException: Could not find build ':'  	at org.gradle.composite.internal.DefaultIncludedBuildRegistry.getBuild(DefaultIncludedBuildRegistry.java:147)  	at org.gradle.configurationcache.serialization.codecs.BuildServiceProviderCodec.buildServiceRegistryOf(ProviderCodecs.kt:188)  	at org.gradle.configurationcache.serialization.codecs.BuildServiceProviderCodec.decode(ProviderCodecs.kt:183)  	at org.gradle.configurationcache.serialization.codecs.BindingsBackedCodec.decode(BindingsBackedCodec.kt:59)  	at org.gradle.configurationcache.serialization.codecs.FixedValueReplacingProviderCodec.decodeValue(ProviderCodecs.kt:134)  	at org.gradle.configurationcache.serialization.codecs.FixedValueReplacingProviderCodec.decodeProvider(ProviderCodecs.kt:116)  	at org.gradle.configurationcache.serialization.codecs.PropertyCodec.decode(ProviderCodecs.kt:269)  	at org.gradle.configurationcache.serialization.codecs.BindingsBackedCodec.decode(BindingsBackedCodec.kt:59)  	at org.gradle.configurationcache.serialization.DefaultReadContext.read(Contexts.kt:259)  	at org.gradle.configurationcache.serialization.beans.BeanPropertyReaderKt.readPropertyValue(BeanPropertyReader.kt:102)```### ContextMy goal was to invalidate the configuration cache with the value obtained through the BuildService (with a side effect): the service is starting a web server on a random port, the URL of the server is used to configure some tasks. The build service then stops the server when closed.The use case is not very compelling, as the lifecycle of the service is unclear in case the cache is actually invalidated - is the service used at fingerprint check time going to be discarded?### Steps to Reproduce See #22338.
"
22327,1,627,14,0,0,pantherdd,0,"title:`Configuration.extendsFrom` throws `ClassCastException` if I pass in a custom implementation of the `Configuration` interface description:If I pass a custom implementation of the `Configuration` interface to `Configuration.extendsFrom`, the build fails with the following `ClassCastException` as the root cause:```Caused by: java.lang.ClassCastException: Build_gradle$MyConfiguration cannot be cast to org.gradle.api.internal.artifacts.configurations.ConfigurationInternal	at org.gradle.api.internal.artifacts.configurations.DefaultConfiguration.extendsFrom(DefaultConfiguration.java:412)	...```### Expected BehaviorAccording to its signature, `Configuration.extendsFrom(Configuration... extendsFrom)` should be able to handle any input object as long as it implements the `Configuration` interface.### Current BehaviorGradle's built-in implementation of the `Configuration` interface, `DefaultConfiguration` throws a `ClassCastException` when its `extendsFrom` method is called with a custom `Configuration` implementation, because it tries to [cast it to `ConfigurationInternal`](https://github.com/gradle/gradle/blob/v7.5.1/subprojects/dependency-management/src/main/java/org/gradle/api/internal/artifacts/configurations/DefaultConfiguration.java#L412). The only user-side solution to this would be to implement `ConfigurationInternal`, but the fact that it's both in a package named ""internal"" and is itself called ""internal"" tells me this would be against the intentions of the Gradle development team.### ContextThis is probably irrelevant to the issue itself, but I'll give you some context on why I was trying to call `Configuration.extendsFrom` with a custom `Configuration` class.I created a `Configuration` decorator class that I wanted to use in a plugin as a means to track the configurations added to `configA`'s ""extends"" list by the plugin, and to be able to distinguish those from the ones added by the user manually. I am hoping it will also allow proper handling of use-cases where the plugin adds `configB` to the ""extends"" list, then the user may or may not add `configB` as well, then the plugin tries to remove the `configB` it has added. Without the decorator class, I have no way of knowing at the time the plugin needs to remove its own addition whether `configB` was also added by the user or not.  To make the plugin intuitive to use, it should not remove anything that the user has added manually.### Steps to ReproduceI created a `Configuration` decorator like so (Kotlin):```ktsclass MyConfiguration(private val configuration: Configuration) : Configuration by configuration {    override fun toString(): String {        return ""my-"" + super.toString()    }}```Then I tried to add a decorated `Configuration` to the ""extends"" list of another:```ktsval baseConfig by configurations.creatingval extendedConfig by configurations.creating {    extendsFrom(MyConfiguration(baseConfig))}```This results in `ClassCastException: MyConfiguration cannot be cast to ConfigurationInternal`.Reproduction available at: https://github.com/PantherDD/gradle-issue-22327### Your EnvironmentTested with Gradle `6.0` and `7.5.1`.
"
22320,0,31583,18,0,0,realdadfish,0,"title:java.lang.ClassCastException: class org.gradle.execution.plan.CompositeNodeGroup cannot be cast to class org.gradle.execution.plan.OrdinalGroup  description:During configuration phase I receive the following configuration exception:```java.lang.ClassCastException: class org.gradle.execution.plan.CompositeNodeGroup cannot be cast to class org.gradle.execution.plan.OrdinalGroup (org.gradle.execution.plan.CompositeNodeGroup and org.gradle.execution.plan.OrdinalGroup are in unnamed module of loader org.gradle.internal.classloader.VisitableURLClassLoader @39c0f4a)        at org.gradle.execution.plan.Node.maybeInheritOrdinalAsDependency(Node.java:150)        at org.gradle.execution.plan.DefaultExecutionPlan.doAddNodes(DefaultExecutionPlan.java:211)        at org.gradle.execution.plan.DefaultExecutionPlan.addEntryTasks(DefaultExecutionPlan.java:174)        at org.gradle.execution.plan.DefaultExecutionPlan.addEntryTasks(DefaultExecutionPlan.java:158)        at org.gradle.internal.build.DefaultBuildLifecycleController$DefaultWorkGraphBuilder.addEntryTasks(DefaultBuildLifecycleController.java:248)        at org.gradle.internal.build.DefaultBuildWorkGraphController$DefaultBuildWorkGraph.lambda$schedule$0(DefaultBuildWorkGraphController.java:117)        at org.gradle.internal.build.DefaultBuildLifecycleController.lambda$populateWorkGraph$4(DefaultBuildLifecycleController.java:143)        at org.gradle.internal.build.DefaultBuildWorkPreparer.populateWorkGraph(DefaultBuildWorkPreparer.java:41)        at org.gradle.internal.build.BuildOperationFiringBuildWorkPreparer$PopulateWorkGraph.populateTaskGraph(BuildOperationFiringBuildWorkPreparer.java:138)        at org.gradle.internal.build.BuildOperationFiringBuildWorkPreparer$PopulateWorkGraph.run(BuildOperationFiringBuildWorkPreparer.java:89)        at org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:29)        at org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:26)        at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)        at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)        at org.gradle.internal.operations.DefaultBuildOperationRunner.run(DefaultBuildOperationRunner.java:47)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:68)        at org.gradle.internal.build.BuildOperationFiringBuildWorkPreparer.populateWorkGraph(BuildOperationFiringBuildWorkPreparer.java:66)        at org.gradle.internal.build.DefaultBuildLifecycleController.lambda$populateWorkGraph$5(DefaultBuildLifecycleController.java:143)        at org.gradle.internal.model.StateTransitionController.lambda$inState$1(StateTransitionController.java:110)        at org.gradle.internal.model.StateTransitionController.lambda$inState$2(StateTransitionController.java:125)        at org.gradle.internal.work.DefaultSynchronizer.withLock(DefaultSynchronizer.java:44)        at org.gradle.internal.model.StateTransitionController.inState(StateTransitionController.java:121)        at org.gradle.internal.model.StateTransitionController.inState(StateTransitionController.java:109)        at org.gradle.internal.build.DefaultBuildLifecycleController.populateWorkGraph(DefaultBuildLifecycleController.java:143)        at org.gradle.internal.build.DefaultBuildWorkGraphController$DefaultBuildWorkGraph.lambda$schedule$1(DefaultBuildWorkGraphController.java:117)        at org.gradle.internal.Factories$1.create(Factories.java:31)        at org.gradle.internal.work.DefaultWorkerLeaseService.withReplacedLocks(DefaultWorkerLeaseService.java:345)        at org.gradle.api.internal.project.DefaultProjectStateRegistry$DefaultBuildProjectRegistry.withMutableStateOfAllProjects(DefaultProjectStateRegistry.java:197)        at org.gradle.api.internal.project.DefaultProjectStateRegistry$DefaultBuildProjectRegistry.withMutableStateOfAllProjects(DefaultProjectStateRegistry.java:190)        at org.gradle.internal.build.DefaultBuildWorkGraphController$DefaultBuildWorkGraph.schedule(DefaultBuildWorkGraphController.java:115)        at org.gradle.composite.internal.DefaultBuildController.scheduleQueuedTasks(DefaultBuildController.java:83)        at org.gradle.composite.internal.DefaultBuildControllers.populateWorkGraphs(DefaultBuildControllers.java:73)        at org.gradle.composite.internal.DefaultIncludedBuildTaskGraph$DefaultBuildTreeWorkGraph$1.run(DefaultIncludedBuildTaskGraph.java:171)        at org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:29)        at org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:26)        at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)        at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)        at org.gradle.internal.operations.DefaultBuildOperationRunner.run(DefaultBuildOperationRunner.java:47)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:68)        at org.gradle.composite.internal.DefaultIncludedBuildTaskGraph$DefaultBuildTreeWorkGraph.scheduleWork(DefaultIncludedBuildTaskGraph.java:167)        at org.gradle.composite.internal.CompositeBuildClassPathInitializer.lambda$execute$1(CompositeBuildClassPathInitializer.java:51)        at org.gradle.composite.internal.DefaultIncludedBuildTaskGraph.withNewWorkGraph(DefaultIncludedBuildTaskGraph.java:101)        at org.gradle.composite.internal.CompositeBuildClassPathInitializer.execute(CompositeBuildClassPathInitializer.java:50)        at org.gradle.composite.internal.CompositeBuildClassPathInitializer.execute(CompositeBuildClassPathInitializer.java:28)        at org.gradle.api.internal.initialization.DefaultScriptClassPathResolver.resolveClassPath(DefaultScriptClassPathResolver.java:40)        at org.gradle.api.internal.initialization.DefaultScriptHandler.getNonInstrumentedScriptClassPath(DefaultScriptHandler.java:96)        at org.gradle.plugin.use.internal.DefaultPluginRequestApplicator.defineScriptHandlerClassScope(DefaultPluginRequestApplicator.java:177)        at org.gradle.plugin.use.internal.DefaultPluginRequestApplicator.applyPlugins(DefaultPluginRequestApplicator.java:142)        at org.gradle.kotlin.dsl.provider.PluginRequestsHandler.handle(PluginRequestsHandler.kt:48)        at org.gradle.kotlin.dsl.provider.StandardKotlinScriptEvaluator$InterpreterHost.applyPluginsTo(KotlinScriptEvaluator.kt:195)        at org.gradle.kotlin.dsl.execution.Interpreter$ProgramHost.applyPluginsTo(Interpreter.kt:398)        at Program.execute(Unknown Source)        at org.gradle.kotlin.dsl.execution.Interpreter$ProgramHost.eval(Interpreter.kt:532)        at org.gradle.kotlin.dsl.execution.Interpreter.eval(Interpreter.kt:184)        at org.gradle.kotlin.dsl.provider.StandardKotlinScriptEvaluator.evaluate(KotlinScriptEvaluator.kt:115)        at org.gradle.kotlin.dsl.provider.KotlinScriptPluginFactory$create$1.invoke(KotlinScriptPluginFactory.kt:51)        at org.gradle.kotlin.dsl.provider.KotlinScriptPluginFactory$create$1.invoke(KotlinScriptPluginFactory.kt:36)        at org.gradle.kotlin.dsl.provider.KotlinScriptPlugin.apply(KotlinScriptPlugin.kt:34)        at org.gradle.configuration.BuildOperationScriptPlugin$1.run(BuildOperationScriptPlugin.java:65)        at org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:29)        at org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:26)        at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)        at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)        at org.gradle.internal.operations.DefaultBuildOperationRunner.run(DefaultBuildOperationRunner.java:47)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:68)        at org.gradle.configuration.BuildOperationScriptPlugin.lambda$apply$0(BuildOperationScriptPlugin.java:62)        at org.gradle.configuration.internal.DefaultUserCodeApplicationContext.apply(DefaultUserCodeApplicationContext.java:44)        at org.gradle.configuration.BuildOperationScriptPlugin.apply(BuildOperationScriptPlugin.java:62)        at org.gradle.api.internal.project.DefaultProjectStateRegistry$ProjectStateImpl.lambda$applyToMutableState$0(DefaultProjectStateRegistry.java:351)        at org.gradle.api.internal.project.DefaultProjectStateRegistry$ProjectStateImpl.fromMutableState(DefaultProjectStateRegistry.java:369)        at org.gradle.api.internal.project.DefaultProjectStateRegistry$ProjectStateImpl.applyToMutableState(DefaultProjectStateRegistry.java:350)        at org.gradle.configuration.project.BuildScriptProcessor.execute(BuildScriptProcessor.java:42)        at org.gradle.configuration.project.BuildScriptProcessor.execute(BuildScriptProcessor.java:26)        at org.gradle.configuration.project.ConfigureActionsProjectEvaluator.evaluate(ConfigureActionsProjectEvaluator.java:35)        at org.gradle.configuration.project.LifecycleProjectEvaluator$EvaluateProject.lambda$run$0(LifecycleProjectEvaluator.java:109)        at org.gradle.api.internal.project.DefaultProjectStateRegistry$ProjectStateImpl.lambda$applyToMutableState$0(DefaultProjectStateRegistry.java:351)        at org.gradle.api.internal.project.DefaultProjectStateRegistry$ProjectStateImpl.lambda$fromMutableState$1(DefaultProjectStateRegistry.java:374)        at org.gradle.internal.work.DefaultWorkerLeaseService.withReplacedLocks(DefaultWorkerLeaseService.java:345)        at org.gradle.api.internal.project.DefaultProjectStateRegistry$ProjectStateImpl.fromMutableState(DefaultProjectStateRegistry.java:374)        at org.gradle.api.internal.project.DefaultProjectStateRegistry$ProjectStateImpl.applyToMutableState(DefaultProjectStateRegistry.java:350)        at org.gradle.configuration.project.LifecycleProjectEvaluator$EvaluateProject.run(LifecycleProjectEvaluator.java:100)        at org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:29)        at org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:26)        at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)        at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)        at org.gradle.internal.operations.DefaultBuildOperationRunner.run(DefaultBuildOperationRunner.java:47)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:68)        at org.gradle.configuration.project.LifecycleProjectEvaluator.evaluate(LifecycleProjectEvaluator.java:72)        at org.gradle.api.internal.project.DefaultProject.evaluate(DefaultProject.java:761)        at org.gradle.api.internal.project.DefaultProject.evaluate(DefaultProject.java:152)        at org.gradle.api.internal.project.ProjectLifecycleController.lambda$ensureSelfConfigured$1(ProjectLifecycleController.java:63)        at org.gradle.internal.model.StateTransitionController.lambda$doTransition$12(StateTransitionController.java:236)        at org.gradle.internal.model.StateTransitionController.doTransition(StateTransitionController.java:247)        at org.gradle.internal.model.StateTransitionController.doTransition(StateTransitionController.java:235)        at org.gradle.internal.model.StateTransitionController.lambda$maybeTransitionIfNotCurrentlyTransitioning$9(StateTransitionController.java:196)        at org.gradle.internal.work.DefaultSynchronizer.withLock(DefaultSynchronizer.java:34)        at org.gradle.internal.model.StateTransitionController.maybeTransitionIfNotCurrentlyTransitioning(StateTransitionController.java:192)        at org.gradle.api.internal.project.ProjectLifecycleController.ensureSelfConfigured(ProjectLifecycleController.java:63)        at org.gradle.api.internal.project.DefaultProjectStateRegistry$ProjectStateImpl.ensureConfigured(DefaultProjectStateRegistry.java:325)        at org.gradle.execution.TaskPathProjectEvaluator.configure(TaskPathProjectEvaluator.java:33)        at org.gradle.execution.TaskPathProjectEvaluator.configureHierarchy(TaskPathProjectEvaluator.java:49)        at org.gradle.configuration.DefaultProjectsPreparer.prepareProjects(DefaultProjectsPreparer.java:50)        at org.gradle.configuration.BuildTreePreparingProjectsPreparer.prepareProjects(BuildTreePreparingProjectsPreparer.java:64)        at org.gradle.configuration.BuildOperationFiringProjectsPreparer$ConfigureBuild.run(BuildOperationFiringProjectsPreparer.java:52)        at org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:29)        at org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:26)        at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)        at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)        at org.gradle.internal.operations.DefaultBuildOperationRunner.run(DefaultBuildOperationRunner.java:47)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:68)        at org.gradle.configuration.BuildOperationFiringProjectsPreparer.prepareProjects(BuildOperationFiringProjectsPreparer.java:40)        at org.gradle.initialization.VintageBuildModelController.lambda$prepareProjects$3(VintageBuildModelController.java:89)        at org.gradle.internal.model.StateTransitionController.lambda$doTransition$12(StateTransitionController.java:236)        at org.gradle.internal.model.StateTransitionController.doTransition(StateTransitionController.java:247)        at org.gradle.internal.model.StateTransitionController.doTransition(StateTransitionController.java:235)        at org.gradle.internal.model.StateTransitionController.lambda$transitionIfNotPreviously$10(StateTransitionController.java:210)        at org.gradle.internal.work.DefaultSynchronizer.withLock(DefaultSynchronizer.java:34)        at org.gradle.internal.model.StateTransitionController.transitionIfNotPreviously(StateTransitionController.java:206)        at org.gradle.initialization.VintageBuildModelController.prepareProjects(VintageBuildModelController.java:89)        at org.gradle.initialization.VintageBuildModelController.getConfiguredModel(VintageBuildModelController.java:64)        at org.gradle.internal.model.StateTransitionController.lambda$notInState$3(StateTransitionController.java:143)        at org.gradle.internal.work.DefaultSynchronizer.withLock(DefaultSynchronizer.java:44)        at org.gradle.internal.model.StateTransitionController.notInState(StateTransitionController.java:139)        at org.gradle.internal.build.DefaultBuildLifecycleController.configureProjects(DefaultBuildLifecycleController.java:109)        at org.gradle.internal.build.AbstractBuildState.ensureProjectsConfigured(AbstractBuildState.java:103)        at org.gradle.composite.internal.AbstractCompositeParticipantBuildState.ensureChildBuildConfigured(AbstractCompositeParticipantBuildState.java:61)        at org.gradle.composite.internal.AbstractCompositeParticipantBuildState.getAvailableModules(AbstractCompositeParticipantBuildState.java:51)        at org.gradle.composite.internal.IncludedBuildDependencySubstitutionsBuilder.build(IncludedBuildDependencySubstitutionsBuilder.java:72)        at org.gradle.composite.internal.DefaultIncludedBuildRegistry.registerSubstitutionsFor(DefaultIncludedBuildRegistry.java:170)        at org.gradle.internal.buildtree.BuildInclusionCoordinator.registerGlobalLibrarySubstitutions(BuildInclusionCoordinator.java:55)        at org.gradle.configuration.BuildTreePreparingProjectsPreparer.prepareProjects(BuildTreePreparingProjectsPreparer.java:59)        at org.gradle.configuration.BuildOperationFiringProjectsPreparer$ConfigureBuild.run(BuildOperationFiringProjectsPreparer.java:52)        at org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:29)        at org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:26)        at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)        at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)        at org.gradle.internal.operations.DefaultBuildOperationRunner.run(DefaultBuildOperationRunner.java:47)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:68)        at org.gradle.configuration.BuildOperationFiringProjectsPreparer.prepareProjects(BuildOperationFiringProjectsPreparer.java:40)        at org.gradle.initialization.VintageBuildModelController.lambda$prepareProjects$3(VintageBuildModelController.java:89)        at org.gradle.internal.model.StateTransitionController.lambda$doTransition$12(StateTransitionController.java:236)        at org.gradle.internal.model.StateTransitionController.doTransition(StateTransitionController.java:247)        at org.gradle.internal.model.StateTransitionController.doTransition(StateTransitionController.java:235)        at org.gradle.internal.model.StateTransitionController.lambda$transitionIfNotPreviously$10(StateTransitionController.java:210)        at org.gradle.internal.work.DefaultSynchronizer.withLock(DefaultSynchronizer.java:34)        at org.gradle.internal.model.StateTransitionController.transitionIfNotPreviously(StateTransitionController.java:206)        at org.gradle.initialization.VintageBuildModelController.prepareProjects(VintageBuildModelController.java:89)        at org.gradle.initialization.VintageBuildModelController.prepareToScheduleTasks(VintageBuildModelController.java:71)        at org.gradle.internal.build.DefaultBuildLifecycleController.lambda$prepareToScheduleTasks$2(DefaultBuildLifecycleController.java:127)        at org.gradle.internal.model.StateTransitionController.lambda$doTransition$12(StateTransitionController.java:236)        at org.gradle.internal.model.StateTransitionController.doTransition(StateTransitionController.java:247)        at org.gradle.internal.model.StateTransitionController.doTransition(StateTransitionController.java:235)        at org.gradle.internal.model.StateTransitionController.lambda$maybeTransition$8(StateTransitionController.java:187)        at org.gradle.internal.work.DefaultSynchronizer.withLock(DefaultSynchronizer.java:34)        at org.gradle.internal.model.StateTransitionController.maybeTransition(StateTransitionController.java:183)        at org.gradle.internal.build.DefaultBuildLifecycleController.prepareToScheduleTasks(DefaultBuildLifecycleController.java:125)        at org.gradle.internal.buildtree.DefaultBuildTreeWorkPreparer.scheduleRequestedTasks(DefaultBuildTreeWorkPreparer.java:33)        at org.gradle.internal.buildtree.DefaultBuildTreeLifecycleController.lambda$doScheduleAndRunTasks$2(DefaultBuildTreeLifecycleController.java:89)        at org.gradle.composite.internal.DefaultIncludedBuildTaskGraph.withNewWorkGraph(DefaultIncludedBuildTaskGraph.java:101)        at org.gradle.internal.buildtree.DefaultBuildTreeLifecycleController.doScheduleAndRunTasks(DefaultBuildTreeLifecycleController.java:88)        at org.gradle.internal.buildtree.DefaultBuildTreeLifecycleController.lambda$runBuild$4(DefaultBuildTreeLifecycleController.java:106)        at org.gradle.internal.model.StateTransitionController.lambda$transition$5(StateTransitionController.java:166)        at org.gradle.internal.model.StateTransitionController.doTransition(StateTransitionController.java:247)        at org.gradle.internal.model.StateTransitionController.lambda$transition$6(StateTransitionController.java:166)        at org.gradle.internal.work.DefaultSynchronizer.withLock(DefaultSynchronizer.java:44)        at org.gradle.internal.model.StateTransitionController.transition(StateTransitionController.java:166)        at org.gradle.internal.buildtree.DefaultBuildTreeLifecycleController.runBuild(DefaultBuildTreeLifecycleController.java:103)        at org.gradle.internal.buildtree.DefaultBuildTreeLifecycleController.scheduleAndRunTasks(DefaultBuildTreeLifecycleController.java:69)        at org.gradle.tooling.internal.provider.ExecuteBuildActionRunner.run(ExecuteBuildActionRunner.java:31)        at org.gradle.launcher.exec.ChainingBuildActionRunner.run(ChainingBuildActionRunner.java:35)        at org.gradle.internal.buildtree.ProblemReportingBuildActionRunner.run(ProblemReportingBuildActionRunner.java:49)        at org.gradle.launcher.exec.BuildOutcomeReportingBuildActionRunner.run(BuildOutcomeReportingBuildActionRunner.java:65)        at org.gradle.tooling.internal.provider.FileSystemWatchingBuildActionRunner.run(FileSystemWatchingBuildActionRunner.java:136)        at org.gradle.launcher.exec.BuildCompletionNotifyingBuildActionRunner.run(BuildCompletionNotifyingBuildActionRunner.java:41)        at org.gradle.launcher.exec.RootBuildLifecycleBuildActionExecutor.lambda$execute$0(RootBuildLifecycleBuildActionExecutor.java:40)        at org.gradle.composite.internal.DefaultRootBuildState.run(DefaultRootBuildState.java:122)        at org.gradle.launcher.exec.RootBuildLifecycleBuildActionExecutor.execute(RootBuildLifecycleBuildActionExecutor.java:40)        at org.gradle.internal.buildtree.DefaultBuildTreeContext.execute(DefaultBuildTreeContext.java:40)        at org.gradle.launcher.exec.BuildTreeLifecycleBuildActionExecutor.lambda$execute$0(BuildTreeLifecycleBuildActionExecutor.java:65)        at org.gradle.internal.buildtree.BuildTreeState.run(BuildTreeState.java:53)        at org.gradle.launcher.exec.BuildTreeLifecycleBuildActionExecutor.execute(BuildTreeLifecycleBuildActionExecutor.java:65)        at org.gradle.launcher.exec.RunAsBuildOperationBuildActionExecutor$3.call(RunAsBuildOperationBuildActionExecutor.java:61)        at org.gradle.launcher.exec.RunAsBuildOperationBuildActionExecutor$3.call(RunAsBuildOperationBuildActionExecutor.java:57)        at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)        at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)        at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)        at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)        at org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)        at org.gradle.launcher.exec.RunAsBuildOperationBuildActionExecutor.execute(RunAsBuildOperationBuildActionExecutor.java:57)        at org.gradle.launcher.exec.RunAsWorkerThreadBuildActionExecutor.lambda$execute$0(RunAsWorkerThreadBuildActionExecutor.java:36)        at org.gradle.internal.work.DefaultWorkerLeaseService.withLocks(DefaultWorkerLeaseService.java:249)        at org.gradle.internal.work.DefaultWorkerLeaseService.runAsWorkerThread(DefaultWorkerLeaseService.java:109)        at org.gradle.launcher.exec.RunAsWorkerThreadBuildActionExecutor.execute(RunAsWorkerThreadBuildActionExecutor.java:36)        at org.gradle.tooling.internal.provider.continuous.ContinuousBuildActionExecutor.execute(ContinuousBuildActionExecutor.java:110)        at org.gradle.tooling.internal.provider.SubscribableBuildActionExecutor.execute(SubscribableBuildActionExecutor.java:64)        at org.gradle.internal.session.DefaultBuildSessionContext.execute(DefaultBuildSessionContext.java:46)        at org.gradle.tooling.internal.provider.BuildSessionLifecycleBuildActionExecuter$ActionImpl.apply(BuildSessionLifecycleBuildActionExecuter.java:100)        at org.gradle.tooling.internal.provider.BuildSessionLifecycleBuildActionExecuter$ActionImpl.apply(BuildSessionLifecycleBuildActionExecuter.java:88)        at org.gradle.internal.session.BuildSessionState.run(BuildSessionState.java:69)        at org.gradle.tooling.internal.provider.BuildSessionLifecycleBuildActionExecuter.execute(BuildSessionLifecycleBuildActionExecuter.java:62)        at org.gradle.tooling.internal.provider.BuildSessionLifecycleBuildActionExecuter.execute(BuildSessionLifecycleBuildActionExecuter.java:41)        at org.gradle.tooling.internal.provider.StartParamsValidatingActionExecuter.execute(StartParamsValidatingActionExecuter.java:63)        at org.gradle.tooling.internal.provider.StartParamsValidatingActionExecuter.execute(StartParamsValidatingActionExecuter.java:31)        at org.gradle.tooling.internal.provider.SessionFailureReportingActionExecuter.execute(SessionFailureReportingActionExecuter.java:52)        at org.gradle.tooling.internal.provider.SessionFailureReportingActionExecuter.execute(SessionFailureReportingActionExecuter.java:40)        at org.gradle.tooling.internal.provider.SetupLoggingActionExecuter.execute(SetupLoggingActionExecuter.java:47)        at org.gradle.tooling.internal.provider.SetupLoggingActionExecuter.execute(SetupLoggingActionExecuter.java:31)        at org.gradle.launcher.daemon.server.exec.ExecuteBuild.doBuild(ExecuteBuild.java:65)        at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:37)        at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)        at org.gradle.launcher.daemon.server.exec.WatchForDisconnection.execute(WatchForDisconnection.java:39)        at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)        at org.gradle.launcher.daemon.server.exec.ResetDeprecationLogger.execute(ResetDeprecationLogger.java:29)        at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)        at org.gradle.launcher.daemon.server.exec.RequestStopIfSingleUsedDaemon.execute(RequestStopIfSingleUsedDaemon.java:35)        at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)        at org.gradle.launcher.daemon.server.exec.ForwardClientInput$2.create(ForwardClientInput.java:78)        at org.gradle.launcher.daemon.server.exec.ForwardClientInput$2.create(ForwardClientInput.java:75)        at org.gradle.util.internal.Swapper.swap(Swapper.java:38)        at org.gradle.launcher.daemon.server.exec.ForwardClientInput.execute(ForwardClientInput.java:75)        at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)        at org.gradle.launcher.daemon.server.exec.LogAndCheckHealth.execute(LogAndCheckHealth.java:55)        at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)        at org.gradle.launcher.daemon.server.exec.LogToClient.doBuild(LogToClient.java:63)        at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:37)        at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)        at org.gradle.launcher.daemon.server.exec.EstablishBuildEnvironment.doBuild(EstablishBuildEnvironment.java:84)        at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:37)        at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)        at org.gradle.launcher.daemon.server.exec.StartBuildOrRespondWithBusy$1.run(StartBuildOrRespondWithBusy.java:52)        at org.gradle.launcher.daemon.server.DaemonStateCoordinator$1.run(DaemonStateCoordinator.java:297)        at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)        at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)        at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)        at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)        at java.base/java.lang.Thread.run(Thread.java:829)```Looking at the implementation here:```public void maybeInheritOrdinalAsDependency(NodeGroup candidate) {        // This is called prior to updating the groups of finalizers and their dependencies. So both this node and the candidate can be:        // - in the ""default"" group (ie not-a-group) -> use the candidate        // - in an ordinal group -> use the group with the lowest ordinal        //        if (group == candidate || candidate == NodeGroup.DEFAULT_GROUP) {            return;        }        if (group == NodeGroup.DEFAULT_GROUP) {            setGroup(candidate);            return;        }        OrdinalGroup candidateOrdinal = (OrdinalGroup) candidate;        // ^^^crash        OrdinalGroup currentOrdinal = (OrdinalGroup) group;        if (candidateOrdinal.getOrdinal() < currentOrdinal.getOrdinal()) {            setGroup(candidate);        }    }```the crash occurs because a  `CompositeNodeGroup` is tried to be processed as `candidate`, and this class only inherits from `HasFinalizers`, which inherits from `NodeGroup`, but _not_ from `OrdinalGroup`. ### Your EnvironmentmacOS 12.6Gradle 7.5.1Kotlin 1.7.20Jetpack Compose Compiler 1.3.2
"
22305,1,0,58,0,0,cloudshiftchris,0,"title:Custom ValueSource erroneously tracks files etc used in obtain() when ValueSource parameters are passed in description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues-->When creating a custom ValueSource with parameters, and using other ValueSource instances for those parameters, the inputs are erroneously tracked.### Expected BehaviorAs documented, ValueSource implementations should not track files, environment variables, etc.### Current BehaviorGradle erroneously tracks ValueSource inputs, resulting in unexpectedly dirty configuration caches.### ContextThis causes the configuration cache to miss 100% of the time.  This is due to a collision of events:     - Gradle fingerprints the input parameters to the ValueSource;     - this results in beforeValueObtained() event being fired, which DISABLES input tracking     - ...and then afterValueObtained() is fired, which ENABLES input tracking, just in time to drop into the obtain()       method of our custom ValueSource### Steps to Reproduce Reproduced [here](https://github.com/cloudshiftinc/repro-gradle-configuration-cache-value-source).  Consistently reproducible in configurations where a ValueSource is used as a parameter to a ValueSource### Your EnvironmentMacOS, Gradle 7.5.1, Java 17
"
22298,1,0,0,0,0,sjillidimudi,0,"title:gradle deamon hangs periodically and has no clue whats happening  description:Gradle build hangs indefinitely some times . Either from the Idea or from outside , it hangs . When the thread dump is taken , it always pointed out to below suspicious stack as this stack is common in every thread dump when it hanged.`""Daemon worker Thread 2"" #429 prio=5 os_prio=0 tid=0x272a6800 nid=0xe28c runnable [0x279fd000]   java.lang.Thread.State: RUNNABLE        at net.rubygrapefruit.platform.internal.jni.PosixFileSystemFunctions.listFileSystems(Native Method)        at net.rubygrapefruit.platform.internal.PosixFileSystems.getFileSystems(PosixFileSystems.java:30)        at org.gradle.internal.watch.vfs.impl.DefaultWatchableFileSystemDetector.detectUnsupportedFileSystems(DefaultWatchableFileSystemDetector.java:60)        at org.gradle.internal.watch.registry.impl.WatchableHierarchies.invalidateUnsupportedFileSystems(WatchableHierarchies.java:125)        at org.gradle.internal.watch.registry.impl.WatchableHierarchies.removeUnwatchableFileSystems(WatchableHierarchies.java:114)        at org.gradle.internal.watch.registry.impl.WatchableHierarchies.removeUnwatchableContent(WatchableHierarchies.java:83)        at org.gradle.internal.watch.registry.impl.HierarchicalFileWatcherUpdater.buildFinished(HierarchicalFileWatcherUpdater.java:114)        at org.gradle.internal.watch.registry.impl.DefaultFileWatcherRegistry.buildFinished(DefaultFileWatcherRegistry.java:157)        at org.gradle.internal.watch.vfs.impl.WatchingVirtualFileSystem$2.lambda$call$0(WatchingVirtualFileSystem.java:199)        at org.gradle.internal.watch.vfs.impl.WatchingVirtualFileSystem$2$$Lambda$1032/10747500.get(Unknown Source)        at org.gradle.internal.watch.vfs.impl.WatchingVirtualFileSystem.withWatcherChangeErrorHandling(WatchingVirtualFileSystem.java:320)        at org.gradle.internal.watch.vfs.impl.WatchingVirtualFileSystem.access$1000(WatchingVirtualFileSystem.java:53)        at org.gradle.internal.watch.vfs.impl.WatchingVirtualFileSystem$2.call(WatchingVirtualFileSystem.java:199)        at org.gradle.internal.watch.vfs.impl.WatchingVirtualFileSystem$2.call(WatchingVirtualFileSystem.java:179)        at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:200)        at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:195)        at org.gradle.internal.operations.DefaultBuildOperationRunner$3.execute(DefaultBuildOperationRunner.java:75)        at org.gradle.internal.operations.DefaultBuildOperationRunner$3.execute(DefaultBuildOperationRunner.java:68)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:153)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:68)        at org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:62)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.lambda$call$2(DefaultBuildOperationExecutor.java:79)        at org.gradle.internal.operations.DefaultBuildOperationExecutor$$Lambda$24/11226545.apply(Unknown Source)        at org.gradle.internal.operations.UnmanagedBuildOperationWrapper.callWithUnmanagedSupport(UnmanagedBuildOperationWrapper.java:54)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:79)        at org.gradle.internal.watch.vfs.impl.WatchingVirtualFileSystem.lambda$beforeBuildFinished$5(WatchingVirtualFileSystem.java:179)        at org.gradle.internal.watch.vfs.impl.WatchingVirtualFileSystem$$Lambda$1031/30090470.apply(Unknown Source)        at org.gradle.internal.vfs.impl.VfsRootReference.update(VfsRootReference.java:40)        at org.gradle.internal.watch.vfs.impl.WatchingVirtualFileSystem.beforeBuildFinished(WatchingVirtualFileSystem.java:179)        at org.gradle.tooling.internal.provider.FileSystemWatchingBuildActionRunner.run(FileSystemWatchingBuildActionRunner.java:94)        at org.gradle.launcher.exec.BuildCompletionNotifyingBuildActionRunner.run(BuildCompletionNotifyingBuildActionRunner.java:41)        at org.gradle.launcher.exec.RootBuildLifecycleBuildActionExecutor.lambda$execute$0(RootBuildLifecycleBuildActionExecutor.java:40)        at org.gradle.launcher.exec.RootBuildLifecycleBuildActionExecutor$$Lambda$74/16828419.apply(Unknown Source)        at org.gradle.composite.internal.DefaultRootBuildState.run(DefaultRootBuildState.java:154)        at org.gradle.launcher.exec.RootBuildLifecycleBuildActionExecutor.execute(RootBuildLifecycleBuildActionExecutor.java:40)        at org.gradle.internal.buildtree.DefaultBuildTreeContext.execute(DefaultBuildTreeContext.java:40)        at org.gradle.launcher.exec.BuildTreeLifecycleBuildActionExecutor.lambda$execute$0(BuildTreeLifecycleBuildActionExecutor.java:56)        at org.gradle.launcher.exec.BuildTreeLifecycleBuildActionExecutor$$Lambda$25/3230554.apply(Unknown Source)        at org.gradle.internal.buildtree.BuildTreeState.run(BuildTreeState.java:53)        at org.gradle.launcher.exec.BuildTreeLifecycleBuildActionExecutor.execute(BuildTreeLifecycleBuildActionExecutor.java:56)        at org.gradle.launcher.exec.RunAsBuildOperationBuildActionExecutor$3.call(RunAsBuildOperationBuildActionExecutor.java:61)        at org.gradle.launcher.exec.RunAsBuildOperationBuildActionExecutor$3.call(RunAsBuildOperationBuildActionExecutor.java:57)        at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:200)        at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:195)        at org.gradle.internal.operations.DefaultBuildOperationRunner$3.execute(DefaultBuildOperationRunner.java:75)        at org.gradle.internal.operations.DefaultBuildOperationRunner$3.execute(DefaultBuildOperationRunner.java:68)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:153)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:68)        at org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:62)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.lambda$call$2(DefaultBuildOperationExecutor.java:79)        at org.gradle.internal.operations.DefaultBuildOperationExecutor$$Lambda$24/11226545.apply(Unknown Source)        at org.gradle.internal.operations.UnmanagedBuildOperationWrapper.callWithUnmanagedSupport(UnmanagedBuildOperationWrapper.java:54)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:79)        at org.gradle.launcher.exec.RunAsBuild`### Expected Behaviorgradle should build the project with out any issues . ### Current BehaviorCurrently it just hangs ### ContextGradle any action hangs at that time . Either from the intellij or from command line . ### Steps to Reproduce It happens sporadically . Once it starts , there is no way to make it work until it starts working again . I dont have steps to reproduce ,### Your Environmentgradle : 7.2Operating System : Windows 10.
"
22260,1,3313,7,0,0,ChurikiTenna,0,"title:Exception in thread ""main"" java.io.FileNotFoundException: https://downloads.gradle-dn.com/distributions/gradle-7.3.0-bin.zip description:### Expected Behaviorable to run `react-native run-android` with gradle 7.3### Current Behavior% react-native run-androidCan gradle 7.3.0 not be used in this context??If so, which version can I use?ErrorException in thread ""main"" java.io.FileNotFoundException: https://downloads.gradle-dn.com/distributions/gradle-7.3.0-bin.zipFull log:```warn Package react-native-navigation contains invalid configuration: ""dependency.assets"" is not allowed,""dependency.hooks"" is not allowed. Please verify it's properly linked using ""react-native config"" command and contact the package maintainers about this.(node:17439) Warning: Accessing non-existent property 'padLevels' of module exports inside circular dependency(Use `node --trace-warnings ...` to show where the warning was created)info JS server already running.info Installing the app...Downloading https://services.gradle.org/distributions/gradle-7.3.0-bin.zipException in thread ""main"" java.io.FileNotFoundException: https://downloads.gradle-dn.com/distributions/gradle-7.3.0-bin.zip	at java.base/sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1993)	at java.base/sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1589)	at java.base/sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:224)	at org.gradle.wrapper.Download.downloadInternal(Download.java:66)	at org.gradle.wrapper.Download.download(Download.java:51)	at org.gradle.wrapper.Install$1.call(Install.java:62)	at org.gradle.wrapper.Install$1.call(Install.java:48)	at org.gradle.wrapper.ExclusiveFileAccessManager.access(ExclusiveFileAccessManager.java:69)	at org.gradle.wrapper.Install.createDist(Install.java:48)	at org.gradle.wrapper.WrapperExecutor.execute(WrapperExecutor.java:107)	at org.gradle.wrapper.GradleWrapperMain.main(GradleWrapperMain.java:61)error Failed to install the app. Make sure you have the Android development environment set up: https://reactnative.dev/docs/environment-setup.Error: Command failed: ./gradlew app:installDebug -PreactNativeDevServerPort=8081Exception in thread ""main"" java.io.FileNotFoundException: https://downloads.gradle-dn.com/distributions/gradle-7.3.0-bin.zip	at java.base/sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1993)	at java.base/sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1589)	at java.base/sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:224)	at org.gradle.wrapper.Download.downloadInternal(Download.java:66)	at org.gradle.wrapper.Download.download(Download.java:51)	at org.gradle.wrapper.Install$1.call(Install.java:62)	at org.gradle.wrapper.Install$1.call(Install.java:48)	at org.gradle.wrapper.ExclusiveFileAccessManager.access(ExclusiveFileAccessManager.java:69)	at org.gradle.wrapper.Install.createDist(Install.java:48)	at org.gradle.wrapper.WrapperExecutor.execute(WrapperExecutor.java:107)	at org.gradle.wrapper.GradleWrapperMain.main(GradleWrapperMain.java:61)    at makeError (/Users/tenna/Desktop/aitem/node_modules/execa/index.js:174:9)    at /Users/tenna/Desktop/aitem/node_modules/execa/index.js:278:16    at processTicksAndRejections (node:internal/process/task_queues:96:5)    at async runOnAllDevices (/Users/tenna/Desktop/aitem/node_modules/@react-native-community/cli-platform-android/build/commands/runAndroid/runOnAllDevices.js:109:5)    at async Command.handleAction (/Users/tenna/Desktop/aitem/node_modules/@react-native-community/cli/build/index.js:142:9)```### ContextTrying to build an old project, then it emitted too many errors, so I upgraded yarn and gradle.### Steps to Reproduce add below cradle-wrapper.propertiesdistributionUrl=https\://services.gradle.org/distributions/gradle-7.3.0-bin.zip### Your EnvironmentM1 Mac
"
22255,0,1077,273,0,0,bamboo,1,"title:`finalizeValueOnRead` property value provider shouldn't be evaluated more than once description:## Expected BehaviourA provider given to a `finalizeValueOnRead` property is evaluated only once.## Actual BehaviourA provider given to a `finalizeValueOnRead` property might be evaluated twice, once at serialization time, once at task execution time (or whenever its value is requested _after_ serialization) as demonstrated by the current **failing** test case:```groovy    def ""finalizeValueOnRead property provider is evaluated only once""() {        given:        buildFile << """"""            class Oracle extends DefaultTask {                @Internal final Property<String> answer                Oracle() {                    answer = project.objects.property(String)                    answer.finalizeValueOnRead()                    answer.set(                        project.provider {                            println 'Thinking...'                            '42'                        }                    )                }                @TaskAction                def answer() {                    println('The answer is ' + answer.get())                }            }            tasks.register('oracle', Oracle)        """"""        when:        instantRun 'oracle'        then:        output.count('Thinking...') == 1 // fails here, actual count is 2        when:        instantRun 'oracle'        then:        output.count('Thinking...') == 0    }```The reason is [`PropertyCodec`](https://github.com/gradle/gradle/blob/4bce60394dc9e6171ef73e937a0e91c565fa619d/subprojects/instant-execution/src/main/kotlin/org/gradle/instantexecution/serialization/codecs/ProviderCodecs.kt#L212-L211) might cause the given property provider to be evaluated outside the control of the property.
"
22201,1,1217,24,0,0,yogurtearl,0,"title:Artifact names should be unique for subprojects with the same project name.  description:Consider a set up like below with 3 projects,  and then run `distTar` on this project: `settings.gradle.kts` :```kotlinpluginManagement.repositories.mavenCentral()dependencyResolutionManagement.repositories.mavenCentral()include(""foo:bar:whevs"", ""hello:world:whevs"", ""allendpoints"")````foo/bar/whevs/build.gradle.kts` : ```kotlinplugins {    kotlin(""jvm"")}````foo/bar/whevs/src/main/kotlin/foo/bar/Whevs.kt`: ```kotlinpackage foo.barfun whevs() = ""foo bar""````hello/world/whevs/build.gradle.kts` : ```kotlinplugins {    kotlin(""jvm"")}````hello/world/whevs/src/main/kotlin/hello/world/Whevs.kt` :```kotlinpackage hello.worldfun whevs() = ""hello world""````allendpoints/build.gradle.kts` : ```kotlinplugins {    kotlin(""jvm"")    application}application {    mainClass.set(""foo.AllEndpointsKt"")}dependencies {    implementation(project("":foo:bar:whevs""))    implementation(project("":hello:world:whevs""))}````allendpoints/src/main/kotlin/foo/AllEndpoints.kt` : ```kotlinpackage foo        fun main() = println(hello.world.whevs() + "" "" + foo.bar.whevs())```### Expected Behavior<!--- Tell us what should happen -->`distTar` should ""just work"" in the above project, because the default artifact names should, ideally, always be unique.### Current Behavior<!--- Tell us what happens instead of the expected behavior -->Causes duplicate errors when running  `distTar` task because both ""foo:bar:whevs"" and ""hello:world:whevs"" produce `whevs.jar````FAILURE: Build failed with an exception.* What went wrong:Execution failed for task ':allendpoints:distTar'.> Entry allendpoints/lib/whevs.jar is a duplicate but no duplicate handling strategy has been set.```#### WorkaroundIf you add this in all your `build.gradle.kts` it will work around the issue. ```kotlinplugins {    base}base {    archivesName.set(""${projectPathWithDots(path)}.$name"")}fun projectPathWithDots(projectPath: String) =    // convert project path to use dots ("":foo:baz:whevs"" -> ""foo.baz"")    (projectPath.split(':').drop(1).dropLast(1)).joinToString(""."")```See here: https://docs.gradle.org/current/userguide/base_plugin.html#sec:base_plugin_extension### Your EnvironmentGradle 7.5.1macOS 12.5.1JDK 17
"
22189,0,0,0,0,0,blindpirate,1,"title:Upgrade ArchUnit to support JDK 19 description:We're using `0.20`, but the latest Java19-compatible version is https://github.com/TNG/ArchUnit/releases/tag/v1.0.0-rc1It's not that simple because there're some breaking changes.
"
22188,1,1261,207,0,0,autonomousapps,0,"title:`init` task does nothing in 7.5.1 when configuration cache is enabled description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues--><!--- Provide a brief summary of the issue in the title above -->### Expected BehaviorRunning `gradle init` should work, similar to below:```shell$ sdk u gradle 7.5Using gradle version 7.5 in this shell.$ gradle initStarting a Gradle Daemon (subsequent builds will be faster)Configuration cache is an incubating feature.Reusing configuration cache.Select type of project to generate:  1: basic  2: application  3: library  4: Gradle pluginEnter selection (default: basic) [1..4]```### Current Behavior<!--- Tell us what happens instead of the expected behavior -->In 7.5.1 (but not in 7.5), `gradle init` does nothing for me. Note that I have CC enabled globally in my `~/.gradle/gradle.properties`.```shell$ sdk u gradle 7.5.1Using gradle version 7.5.1 in this shell.$ gradle initConfiguration cache is an incubating feature.Reusing configuration cache.> Task :init SKIPPEDThe settings file 'settings.gradle' already exists. Skipping build initialization.BUILD SUCCESSFUL in 406ms1 actionable task: 1 up-to-dateConfiguration cache entry reused.```Note that the message `""The settings file 'settings.gradle' already exists. Skipping build initialization.""` is not true:```shell$ ls# no output```When configuration cache is disabled, it works as expected:```shellgradle init --no-configuration-cacheSelect type of project to generate:  1: basic  2: application  3: library  4: Gradle pluginEnter selection (default: basic) [1..4]```### Context<!--- How has this issue affected you? What are you trying to accomplish? --><!--- Providing context helps us come up with a solution that is most useful in the real world -->Since I have CC enabled globally (to dogfood it), I was surprised when `gradle init` recently just didn't work. I use that task regularly for creating small sandbox projects to investigate issues in a more manageable context.### Steps to Reproduce <!---Provide a self-contained example project as an attached archive or a Github project.You can use the following template with a Gradle GitHub action set up to showcase your problem: https://github.com/gradle/gradle-issue-reproducerIn the rare cases where this is infeasible, we will also accept a detailed set of instructions.-->Use SDKMAN to manage your gradle installation, and then:1. `sdk install gradle 7.5.1` (or `sdk use gradle 7.5.1`)2. `gradle init --configuration-cache`3. Observe.Although, since in my case I can see gradle reusing the configuration cache, I'm not entirely sure how to get into that state in the first place. My recollection is that I had _just_ installed 7.5.1 globally and that was the first time I was using `gradle init` with that version, but that may not be true.### Your Environment<!--- Include as many relevant details about the environment you experienced the bug in --><!--- A build scan https://scans.gradle.com/get-started is ideal -->I cannot produce a scan for this situation:```$ gradle init --scanConfiguration cache is an incubating feature.Reusing configuration cache.> Task :init SKIPPEDThe settings file 'settings.gradle' already exists. Skipping build initialization.BUILD SUCCESSFUL in 380ms1 actionable task: 1 executedConfiguration cache entry reused.```Note that no build scan URL was published for this.
"
22173,1,0,3,0,0,AntoscencoVladimir,0,"title:403 Forbidden jcenter description:https://jcenter.bintray.com/ andhttps://jcenter.bintray.com/com/google/android/play/core/maven-metadata.xmlnot available 403 Forbidden
"
22104,0,0,256,0,0,eskatos,0,"title:Restore TAPI compatibility with Java 6 and old Gradle versions description:This is required since `DefaultGradleVersion` makes use of deprecation logging facilities. This dragged Apache Commons Lang `StringUtils` which dragged `javax.sql.SQLException` which is not available on Java 6.See https://ge.gradle.org/s/kaqqzlgw332si/tests/:tooling-api:embeddedIntegTest/org.gradle.integtests.tooling.ToolingApiClientCurrentJdkCompatibilityTest/tapi%20client%20can%20run%20build%20action%20with%20Gradle%20and%20Java%20combination%20%5BgradleDaemonJdkVersion:%201.6,%20gradleVersion:%202.14.1,%20%230%5D?focused-execution=1&top-execution=1#L69 for an example failureThis PR is a follow up to https://github.com/gradle/gradle/pull/21843
"
22091,0,50185,17,0,1,Tapchicoma,0,"title:Kotlin-dsl plugin modifies kotlinOptions.freeCompilerArgs in task action description:### Expected BehaviorGradle `kotlin-dsl` plugin should not modify `kotlinOptions.freeCompilerArgs` in task action (Gradle execution phase)### Current BehaviorIn Gradle 7.3 - 7.5.1 versions `freeCompilerArgs` could be modified in `doFirst` `KotlinCompile` task action inside `buildSrc` project by 'kotlin-dsl' plugin.### ContextKotlin Gradle Plugin [was migrated](https://youtrack.jetbrains.com/issue/KT-27301/Expose-compiler-flags-via-Gradle-lazy-properties) to use Gradle Properties API and had to add workaround allowing to modify `kotlinOptions.freeCompilerArgs` on execution phase. Otherwise Gradle build fails with `java.lang.IllegalStateException: The value for property 'freeCompilerArgs' is final and cannot be changed any further.`### Steps to Reproduce Create new project with `buildSrc` module. Inside `buildSrc/build.gradle.kts` add following:```ktplugins {   id(""org.jetbrains.kotlin.jvm"") version ""1.8.0-Beta""   `kotlin-dsl`}```and add any simple convention plugin written in Kotlin. Build will produce a warning from workaround:```kotlinOptions.freeCompilerArgs were changed on task execution phase: -java-parameters, -Xjvm-default=all, -Xjsr305=strict, -XXLanguage:+DisableCompatibilityModeForNewInference, -script-templates, org.gradle.kotlin.dsl.precompile.v1.PrecompiledSettingsScript,org.gradle.kotlin.dsl.precompile.v1.PrecompiledInitScript,org.gradle.kotlin.dsl.precompile.v1.PrecompiledProjectScript, -Xscript-resolver-environment=kotlinDslImplicitImports=""org.gradle.BuildAdapter:org.gradle.BuildListener:org.gradle.BuildResult:org.gradle.StartParameter:org.gradle.TaskExecutionRequest:org.gradle.api.Action:org.gradle.api.ActionConfiguration:org.gradle.api.AntBuilder:org.gradle.api.BuildCancelledException:org.gradle.api.Buildable:org.gradle.api.BuildableComponentSpec:org.gradle.api.CheckableComponentSpec:org.gradle.api.CircularReferenceException:org.gradle.api.DefaultTask:org.gradle.api.Describable:org.gradle.api.DomainObjectCollection:org.gradle.api.DomainObjectSet:org.gradle.api.ExtensiblePolymorphicDomainObjectContainer:org.gradle.api.Generated:org.gradle.api.GradleException:org.gradle.api.GradleScriptException:org.gradle.api.HasImplicitReceiver:org.gradle.api.IllegalDependencyNotation:org.gradle.api.Incubating:org.gradle.api.InvalidActionClosureException:org.gradle.api.InvalidUserCodeException:org.gradle.api.InvalidUserDataException:org.gradle.api.JavaVersion:org.gradle.api.Named:org.gradle.api.NamedDomainObjectCollection:org.gradle.api.NamedDomainObjectCollectionSchema:org.gradle.api.NamedDomainObjectContainer:org.gradle.api.NamedDomainObjectFactory:org.gradle.api.NamedDomainObjectList:org.gradle.api.NamedDomainObjectProvider:org.gradle.api.NamedDomainObjectSet:org.gradle.api.Namer:org.gradle.api.NonExtensible:org.gradle.api.NonNullApi:org.gradle.api.PathValidation:org.gradle.api.Plugin:org.gradle.api.PolymorphicDomainObjectContainer:org.gradle.api.Project:org.gradle.api.ProjectConfigurationException:org.gradle.api.ProjectEvaluationListener:org.gradle.api.ProjectState:org.gradle.api.Rule:org.gradle.api.Script:org.gradle.api.Task:org.gradle.api.Transformer:org.gradle.api.UncheckedIOException:org.gradle.api.UnknownDomainObjectException:org.gradle.api.UnknownProjectException:org.gradle.api.UnknownTaskException:org.gradle.api.XmlProvider:org.gradle.api.artifacts.ArtifactCollection:org.gradle.api.artifacts.ArtifactIdentifier:org.gradle.api.artifacts.ArtifactRepositoryContainer:org.gradle.api.artifacts.ArtifactSelectionDetails:org.gradle.api.artifacts.ArtifactView:org.gradle.api.artifacts.CacheableRule:org.gradle.api.artifacts.CapabilitiesResolution:org.gradle.api.artifacts.CapabilityResolutionDetails:org.gradle.api.artifacts.ClientModule:org.gradle.api.artifacts.ComponentMetadata:org.gradle.api.artifacts.ComponentMetadataBuilder:org.gradle.api.artifacts.ComponentMetadataContext:org.gradle.api.artifacts.ComponentMetadataDetails:org.gradle.api.artifacts.ComponentMetadataListerDetails:org.gradle.api.artifacts.ComponentMetadataRule:org.gradle.api.artifacts.ComponentMetadataSupplier:org.gradle.api.artifacts.ComponentMetadataSupplierDetails:org.gradle.api.artifacts.ComponentMetadataVersionLister:org.gradle.api.artifacts.ComponentModuleMetadata:org.gradle.api.artifacts.ComponentModuleMetadataDetails:org.gradle.api.artifacts.ComponentSelection:org.gradle.api.artifacts.ComponentSelectionRules:org.gradle.api.artifacts.ComponentVariantIdentifier:org.gradle.api.artifacts.ConfigurablePublishArtifact:org.gradle.api.artifacts.Configuration:org.gradle.api.artifacts.ConfigurationContainer:org.gradle.api.artifacts.ConfigurationPublications:org.gradle.api.artifacts.ConfigurationVariant:org.gradle.api.artifacts.DependenciesMetadata:org.gradle.api.artifacts.Dependency:org.gradle.api.artifacts.DependencyArtifact:org.gradle.api.artifacts.DependencyArtifactSelector:org.gradle.api.artifacts.DependencyConstraint:org.gradle.api.artifacts.DependencyConstraintMetadata:org.gradle.api.artifacts.DependencyConstraintSet:org.gradle.api.artifacts.DependencyConstraintsMetadata:org.gradle.api.artifacts.DependencyMetadata:org.gradle.api.artifacts.DependencyResolutionListener:org.gradle.api.artifacts.DependencyResolveDetails:org.gradle.api.artifacts.DependencySet:org.gradle.api.artifacts.DependencySubstitution:org.gradle.api.artifacts.DependencySubstitutions:org.gradle.api.artifacts.DirectDependenciesMetadata:org.gradle.api.artifacts.DirectDependencyMetadata:org.gradle.api.artifacts.ExcludeRule:org.gradle.api.artifacts.ExcludeRuleContainer:org.gradle.api.artifacts.ExternalDependency:org.gradle.api.artifacts.ExternalModuleDependency:org.gradle.api.artifacts.ExternalModuleDependencyBundle:org.gradle.api.artifacts.FileCollectionDependency:org.gradle.api.artifacts.LenientConfiguration:org.gradle.api.artifacts.MinimalExternalModuleDependency:org.gradle.api.artifacts.ModuleDependency:org.gradle.api.artifacts.ModuleDependencyCapabilitiesHandler:org.gradle.api.artifacts.ModuleIdentifier:org.gradle.api.artifacts.ModuleVersionIdentifier:org.gradle.api.artifacts.ModuleVersionSelector:org.gradle.api.artifacts.MutableVariantFilesMetadata:org.gradle.api.artifacts.MutableVersionConstraint:org.gradle.api.artifacts.ProjectDependency:org.gradle.api.artifacts.PublishArtifact:org.gradle.api.artifacts.PublishArtifactSet:org.gradle.api.artifacts.PublishException:org.gradle.api.artifacts.ResolutionStrategy:org.gradle.api.artifacts.ResolvableDependencies:org.gradle.api.artifacts.ResolveException:org.gradle.api.artifacts.ResolvedArtifact:org.gradle.api.artifacts.ResolvedConfiguration:org.gradle.api.artifacts.ResolvedDependency:org.gradle.api.artifacts.ResolvedModuleVersion:org.gradle.api.artifacts.SelfResolvingDependency:org.gradle.api.artifacts.UnknownConfigurationException:org.gradle.api.artifacts.UnknownRepositoryException:org.gradle.api.artifacts.UnresolvedDependency:org.gradle.api.artifacts.VariantFileMetadata:org.gradle.api.artifacts.VariantMetadata:org.gradle.api.artifacts.VariantSelectionDetails:org.gradle.api.artifacts.VersionCatalog:org.gradle.api.artifacts.VersionCatalogsExtension:org.gradle.api.artifacts.VersionConstraint:org.gradle.api.artifacts.component.BuildIdentifier:org.gradle.api.artifacts.component.ComponentArtifactIdentifier:org.gradle.api.artifacts.component.ComponentIdentifier:org.gradle.api.artifacts.component.ComponentSelector:org.gradle.api.artifacts.component.LibraryBinaryIdentifier:org.gradle.api.artifacts.component.LibraryComponentSelector:org.gradle.api.artifacts.component.ModuleComponentIdentifier:org.gradle.api.artifacts.component.ModuleComponentSelector:org.gradle.api.artifacts.component.ProjectComponentIdentifier:org.gradle.api.artifacts.component.ProjectComponentSelector:org.gradle.api.artifacts.dsl.ArtifactHandler:org.gradle.api.artifacts.dsl.ComponentMetadataHandler:org.gradle.api.artifacts.dsl.ComponentModuleMetadataHandler:org.gradle.api.artifacts.dsl.DependencyConstraintHandler:org.gradle.api.artifacts.dsl.DependencyHandler:org.gradle.api.artifacts.dsl.DependencyLockingHandler:org.gradle.api.artifacts.dsl.ExternalModuleDependencyVariantSpec:org.gradle.api.artifacts.dsl.LockMode:org.gradle.api.artifacts.dsl.RepositoryHandler:org.gradle.api.artifacts.ivy.IvyExtraInfo:org.gradle.api.artifacts.ivy.IvyModuleDescriptor:org.gradle.api.artifacts.maven.PomModuleDescriptor:org.gradle.api.artifacts.query.ArtifactResolutionQuery:org.gradle.api.artifacts.repositories.ArtifactRepository:org.gradle.api.artifacts.repositories.AuthenticationContainer:org.gradle.api.artifacts.repositories.AuthenticationSupported:org.gradle.api.artifacts.repositories.ExclusiveContentRepository:org.gradle.api.artifacts.repositories.FlatDirectoryArtifactRepository:org.gradle.api.artifacts.repositories.InclusiveRepositoryContentDescriptor:org.gradle.api.artifacts.repositories.IvyArtifactRepository:org.gradle.api.artifacts.repositories.IvyArtifactRepositoryMetaDataProvider:org.gradle.api.artifacts.repositories.IvyPatternRepositoryLayout:org.gradle.api.artifacts.repositories.MavenArtifactRepository:org.gradle.api.artifacts.repositories.MavenRepositoryContentDescriptor:org.gradle.api.artifacts.repositories.MetadataSupplierAware:org.gradle.api.artifacts.repositories.PasswordCredentials:org.gradle.api.artifacts.repositories.RepositoryContentDescriptor:org.gradle.api.artifacts.repositories.RepositoryLayout:org.gradle.api.artifacts.repositories.RepositoryResourceAccessor:org.gradle.api.artifacts.repositories.UrlArtifactRepository:org.gradle.api.artifacts.result.ArtifactResolutionResult:org.gradle.api.artifacts.result.ArtifactResult:org.gradle.api.artifacts.result.ComponentArtifactsResult:org.gradle.api.artifacts.result.ComponentResult:org.gradle.api.artifacts.result.ComponentSelectionCause:org.gradle.api.artifacts.result.ComponentSelectionDescriptor:org.gradle.api.artifacts.result.ComponentSelectionReason:org.gradle.api.artifacts.result.DependencyResult:org.gradle.api.artifacts.result.ResolutionResult:org.gradle.api.artifacts.result.ResolvedArtifactResult:org.gradle.api.artifacts.result.ResolvedComponentResult:org.gradle.api.artifacts.result.ResolvedDependencyResult:org.gradle.api.artifacts.result.ResolvedVariantResult:org.gradle.api.artifacts.result.UnresolvedArtifactResult:org.gradle.api.artifacts.result.UnresolvedComponentResult:org.gradle.api.artifacts.result.UnresolvedDependencyResult:org.gradle.api.artifacts.transform.ArtifactTransform:org.gradle.api.artifacts.transform.ArtifactTransformException:org.gradle.api.artifacts.transform.CacheableTransform:org.gradle.api.artifacts.transform.InputArtifact:org.gradle.api.artifacts.transform.InputArtifactDependencies:org.gradle.api.artifacts.transform.TransformAction:org.gradle.api.artifacts.transform.TransformOutputs:org.gradle.api.artifacts.transform.TransformParameters:org.gradle.api.artifacts.transform.TransformSpec:org.gradle.api.artifacts.transform.VariantTransform:org.gradle.api.artifacts.transform.VariantTransformConfigurationException:org.gradle.api.artifacts.type.ArtifactTypeContainer:org.gradle.api.artifacts.type.ArtifactTypeDefinition:org.gradle.api.artifacts.verification.DependencyVerificationMode:org.gradle.api.attributes.Attribute:org.gradle.api.attributes.AttributeCompatibilityRule:org.gradle.api.attributes.AttributeContainer:org.gradle.api.attributes.AttributeDisambiguationRule:org.gradle.api.attributes.AttributeMatchingStrategy:org.gradle.api.attributes.AttributesSchema:org.gradle.api.attributes.Bundling:org.gradle.api.attributes.Category:org.gradle.api.attributes.CompatibilityCheckDetails:org.gradle.api.attributes.CompatibilityRuleChain:org.gradle.api.attributes.DisambiguationRuleChain:org.gradle.api.attributes.DocsType:org.gradle.api.attributes.HasAttributes:org.gradle.api.attributes.HasConfigurableAttributes:org.gradle.api.attributes.LibraryElements:org.gradle.api.attributes.MultipleCandidatesDetails:org.gradle.api.attributes.Usage:org.gradle.api.attributes.java.TargetJvmEnvironment:org.gradle.api.attributes.java.TargetJvmVersion:org.gradle.api.attributes.plugin.GradlePluginApiVersion:org.gradle.api.capabilities.CapabilitiesMetadata:org.gradle.api.capabilities.Capability:org.gradle.api.capabilities.MutableCapabilitiesMetadata:org.gradle.api.component.AdhocComponentWithVariants:org.gradle.api.component.Artifact:org.gradle.api.component.BuildableComponent:org.gradle.api.component.Component:org.gradle.api.component.ComponentWithCoordinates:org.gradle.api.component.ComponentWithVariants:org.gradle.api.component.ConfigurationVariantDetails:org.gradle.api.component.PublishableComponent:org.gradle.api.component.SoftwareComponent:org.gradle.api.component.SoftwareComponentContainer:org.gradle.api.component.SoftwareComponentFactory:org.gradle.api.component.SoftwareComponentVariant:org.gradle.api.credentials.AwsCredentials:org.gradle.api.credentials.Credentials:org.gradle.api.credentials.HttpHeaderCredentials:org.gradle.api.distribution.Distribution:org.gradle.api.distribution.DistributionContainer:org.gradle.api.distribution.plugins.DistributionPlugin:org.gradle.api.execution.TaskActionListener:org.gradle.api.execution.TaskExecutionAdapter:org.gradle.api.execution.TaskExecutionGraph:org.gradle.api.execution.TaskExecutionGraphListener:org.gradle.api.execution.TaskExecutionListener:org.gradle.api.file.ArchiveOperations:org.gradle.api.file.ConfigurableFileCollection:org.gradle.api.file.ConfigurableFileTree:org.gradle.api.file.ContentFilterable:org.gradle.api.file.CopyProcessingSpec:org.gradle.api.file.CopySourceSpec:org.gradle.api.file.CopySpec:org.gradle.api.file.DeleteSpec:org.gradle.api.file.Directory:org.gradle.api.file.DirectoryProperty:org.gradle.api.file.DirectoryTree:org.gradle.api.file.DuplicateFileCopyingException:org.gradle.api.file.DuplicatesStrategy:org.gradle.api.file.EmptyFileVisitor:org.gradle.api.file.ExpandDetails:org.gradle.api.file.FileCollection:org.gradle.api.file.FileContents:org.gradle.api.file.FileCopyDetails:org.gradle.api.file.FileSystemLocation:org.gradle.api.file.FileSystemLocationProperty:org.gradle.api.file.FileSystemOperations:org.gradle.api.file.FileTree:org.gradle.api.file.FileTreeElement:org.gradle.api.file.FileType:org.gradle.api.file.FileVisitDetails:org.gradle.api.file.FileVisitor:org.gradle.api.file.ProjectLayout:org.gradle.api.file.RegularFile:org.gradle.api.file.RegularFileProperty:org.gradle.api.file.RelativePath:org.gradle.api.file.ReproducibleFileVisitor:org.gradle.api.file.SourceDirectorySet:org.gradle.api.initialization.ConfigurableIncludedBuild:org.gradle.api.initialization.ConfigurableIncludedPluginBuild:org.gradle.api.initialization.IncludedBuild:org.gradle.api.initialization.ProjectDescriptor:org.gradle.api.initialization.Settings:org.gradle.api.initialization.definition.InjectedPluginDependencies:org.gradle.api.initialization.definition.InjectedPluginDependency:org.gradle.api.initialization.dsl.ScriptHandler:org.gradle.api.initialization.dsl.VersionCatalogBuilder:org.gradle.api.initialization.resolve.DependencyResolutionManagement:org.gradle.api.initialization.resolve.MutableVersionCatalogContainer:org.gradle.api.initialization.resolve.RepositoriesMode:org.gradle.api.initialization.resolve.RulesMode:org.gradle.api.invocation.BuildInvocationDetails:org.gradle.api.invocation.Gradle:org.gradle.api.java.archives.Attributes:org.gradle.api.java.archives.Manifest:org.gradle.api.java.archives.ManifestException:org.gradle.api.java.archives.ManifestMergeDetails:org.gradle.api.java.archives.ManifestMergeSpec:org.gradle.api.jvm.ModularitySpec:org.gradle.api.logging.LogLevel:org.gradle.api.logging.Logger:org.gradle.api.logging.Logging:org.gradle.api.logging.LoggingManager:org.gradle.api.logging.LoggingOutput:org.gradle.api.logging.StandardOutputListener:org.gradle.api.logging.configuration.ConsoleOutput:org.gradle.api.logging.configuration.LoggingConfiguration:org.gradle.api.logging.configuration.ShowStacktrace:org.gradle.api.logging.configuration.WarningMode:org.gradle.api.model.ObjectFactory:org.gradle.api.model.ReplacedBy:org.gradle.api.plugins.ApplicationPlugin:org.gradle.api.plugins.ApplicationPluginConvention:org.gradle.api.plugins.AppliedPlugin:org.gradle.api.plugins.BasePlugin:org.gradle.api.plugins.BasePluginConvention:org.gradle.api.plugins.BasePluginExtension:org.gradle.api.plugins.Convention:org.gradle.api.plugins.ExtensionAware:org.gradle.api.plugins.ExtensionContainer:org.gradle.api.plugins.ExtensionsSchema:org.gradle.api.plugins.ExtraPropertiesExtension:org.gradle.api.plugins.FeatureSpec:org.gradle.api.plugins.GroovyBasePlugin:org.gradle.api.plugins.GroovyPlugin:org.gradle.api.plugins.HelpTasksPlugin:org.gradle.api.plugins.InvalidPluginException:org.gradle.api.plugins.JavaApplication:org.gradle.api.plugins.JavaBasePlugin:org.gradle.api.plugins.JavaLibraryDistributionPlugin:org.gradle.api.plugins.JavaLibraryPlugin:org.gradle.api.plugins.JavaPlatformExtension:org.gradle.api.plugins.JavaPlatformPlugin:org.gradle.api.plugins.JavaPlugin:org.gradle.api.plugins.JavaPluginConvention:org.gradle.api.plugins.JavaPluginExtension:org.gradle.api.plugins.JavaResolutionConsistency:org.gradle.api.plugins.JavaTestFixturesPlugin:org.gradle.api.plugins.JvmEcosystemPlugin:org.gradle.api.plugins.JvmTestSuitePlugin:org.gradle.api.plugins.MavenPlugin:org.gradle.api.plugins.ObjectConfigurationAction:org.gradle.api.plugins.PluginAware:org.gradle.api.plugins.PluginCollection:org.gradle.api.plugins.PluginContainer:org.gradle.api.plugins.PluginInstantiationException:org.gradle.api.plugins.PluginManager:org.gradle.api.plugins.ProjectReportsPlugin:org.gradle.api.plugins.ProjectReportsPluginConvention:org.gradle.api.plugins.ReportingBasePlugin:org.gradle.api.plugins.UnknownPluginException:org.gradle.api.plugins.WarPlugin:org.gradle.api.plugins.WarPluginConvention:org.gradle.api.plugins.antlr.AntlrPlugin:org.gradle.api.plugins.antlr.AntlrSourceDirectorySet:org.gradle.api.plugins.antlr.AntlrSourceVirtualDirectory:org.gradle.api.plugins.antlr.AntlrTask:org.gradle.api.plugins.catalog.CatalogPluginExtension:org.gradle.api.plugins.catalog.VersionCatalogPlugin:org.gradle.api.plugins.jvm.JvmComponentDependencies:org.gradle.api.plugins.jvm.JvmTestSuite:org.gradle.api.plugins.jvm.JvmTestSuiteTarget:org.gradle.api.plugins.quality.Checkstyle:org.gradle.api.plugins.quality.CheckstyleExtension:org.gradle.api.plugins.quality.CheckstylePlugin:org.gradle.api.plugins.quality.CheckstyleReports:org.gradle.api.plugins.quality.CodeNarc:org.gradle.api.plugins.quality.CodeNarcExtension:org.gradle.api.plugins.quality.CodeNarcPlugin:org.gradle.api.plugins.quality.CodeNarcReports:org.gradle.api.plugins.quality.CodeQualityExtension:org.gradle.api.plugins.quality.Pmd:org.gradle.api.plugins.quality.PmdExtension:org.gradle.api.plugins.quality.PmdPlugin:org.gradle.api.plugins.quality.PmdReports:org.gradle.api.plugins.quality.TargetJdk:org.gradle.api.plugins.scala.ScalaBasePlugin:org.gradle.api.plugins.scala.ScalaPlugin:org.gradle.api.plugins.scala.ScalaPluginExtension:org.gradle.api.provider.HasConfigurableValue:org.gradle.api.provider.HasMultipleValues:org.gradle.api.provider.ListProperty:org.gradle.api.provider.MapProperty:org.gradle.api.provider.Property:org.gradle.api.provider.Provider:org.gradle.api.provider.ProviderConvertible:org.gradle.api.provider.ProviderFactory:org.gradle.api.provider.SetProperty:org.gradle.api.provider.ValueSource:org.gradle.api.provider.ValueSourceParameters:org.gradle.api.provider.ValueSourceSpec:org.gradle.api.publish.Publication:org.gradle.api.publish.PublicationArtifact:org.gradle.api.publish.PublicationContainer:org.gradle.api.publish.PublishingExtension:org.gradle.api.publish.VariantVersionMappingStrategy:org.gradle.api.publish.VersionMappingStrategy:org.gradle.api.publish.ivy.InvalidIvyPublicationException:org.gradle.api.publish.ivy.IvyArtifact:org.gradle.api.publish.ivy.IvyArtifactSet:org.gradle.api.publish.ivy.IvyConfiguration:org.gradle.api.publish.ivy.IvyConfigurationContainer:org.gradle.api.publish.ivy.IvyDependency:org.gradle.api.publish.ivy.IvyExtraInfoSpec:org.gradle.api.publish.ivy.IvyModuleDescriptorAuthor:org.gradle.api.publish.ivy.IvyModuleDescriptorDescription:org.gradle.api.publish.ivy.IvyModuleDescriptorLicense:org.gradle.api.publish.ivy.IvyModuleDescriptorSpec:org.gradle.api.publish.ivy.IvyPublication:org.gradle.api.publish.ivy.plugins.IvyPublishPlugin:org.gradle.api.publish.ivy.tasks.GenerateIvyDescriptor:org.gradle.api.publish.ivy.tasks.PublishToIvyRepository:org.gradle.api.publish.maven.InvalidMavenPublicationException:org.gradle.api.publish.maven.MavenArtifact:org.gradle.api.publish.maven.MavenArtifactSet:org.gradle.api.publish.maven.MavenDependency:org.gradle.api.publish.maven.MavenPom:org.gradle.api.publish.maven.MavenPomCiManagement:org.gradle.api.publish.maven.MavenPomContributor:org.gradle.api.publish.maven.MavenPomContributorSpec:org.gradle.api.publish.maven.MavenPomDeveloper:org.gradle.api.publish.maven.MavenPomDeveloperSpec:org.gradle.api.publish.maven.MavenPomDistributionManagement:org.gradle.api.publish.maven.MavenPomIssueManagement:org.gradle.api.publish.maven.MavenPomLicense:org.gradle.api.publish.maven.MavenPomLicenseSpec:org.gradle.api.publish.maven.MavenPomMailingList:org.gradle.api.publish.maven.MavenPomMailingListSpec:org.gradle.api.publish.maven.MavenPomOrganization:org.gradle.api.publish.maven.MavenPomRelocation:org.gradle.api.publish.maven.MavenPomScm:org.gradle.api.publish.maven.MavenPublication:org.gradle.api.publish.maven.plugins.MavenPublishPlugin:org.gradle.api.publish.maven.tasks.AbstractPublishToMaven:org.gradle.api.publish.maven.tasks.GenerateMavenPom:org.gradle.api.publish.maven.tasks.PublishToMavenLocal:org.gradle.api.publish.maven.tasks.PublishToMavenRepository:org.gradle.api.publish.plugins.PublishingPlugin:org.gradle.api.publish.plugins.PublishingPluginRules:org.gradle.api.publish.tasks.GenerateModuleMetadata:org.gradle.api.reflect.HasPublicType:org.gradle.api.reflect.InjectionPointQualifier:org.gradle.api.reflect.ObjectInstantiationException:org.gradle.api.reflect.TypeOf:org.gradle.api.reporting.BuildDashboardReports:org.gradle.api.reporting.ConfigurableReport:org.gradle.api.reporting.CustomizableHtmlReport:org.gradle.api.reporting.DirectoryReport:org.gradle.api.reporting.GenerateBuildDashboard:org.gradle.api.reporting.Report:org.gradle.api.reporting.ReportContainer:org.gradle.api.reporting.Reporting:org.gradle.api.reporting.ReportingExtension:org.gradle.api.reporting.SingleFileReport:org.gradle.api.reporting.components.ComponentReport:org.gradle.api.reporting.dependencies.DependencyReportContainer:org.gradle.api.reporting.dependencies.HtmlDependencyReportTask:org.gradle.api.reporting.dependents.DependentComponentsReport:org.gradle.api.reporting.model.ModelReport:org.gradle.api.reporting.plugins.BuildDashboardPlugin:org.gradle.api.resources.MissingResourceException:org.gradle.api.resources.ReadableResource:org.gradle.api.resources.Resource:org.gradle.api.resources.ResourceException:org.gradle.api.resources.ResourceHandler:org.gradle.api.resources.TextResource:org.gradle.api.resources.TextResourceFactory:org.gradle.api.services.BuildService:org.gradle.api.services.BuildServiceParameters:org.gradle.api.services.BuildServiceRegistration:org.gradle.api.services.BuildServiceRegistry:org.gradle.api.services.BuildServiceSpec:org.gradle.api.specs.AndSpec:org.gradle.api.specs.CompositeSpec:org.gradle.api.specs.NotSpec:org.gradle.api.specs.OrSpec:org.gradle.api.specs.Spec:org.gradle.api.specs.Specs:org.gradle.api.tasks.AbstractCopyTask:org.gradle.api.tasks.AbstractExecTask:org.gradle.api.tasks.AntBuilderAware:org.gradle.api.tasks.CacheableTask:org.gradle.api.tasks.Classpath:org.gradle.api.tasks.ClasspathNormalizer:org.gradle.api.tasks.CompileClasspath:org.gradle.api.tasks.CompileClasspathNormalizer:org.gradle.api.tasks.Console:org.gradle.api.tasks.Copy:org.gradle.api.tasks.Delete:org.gradle.api.tasks.Destroys:org.gradle.api.tasks.Exec:org.gradle.api.tasks.FileNormalizer:org.gradle.api.tasks.GradleBuild:org.gradle.api.tasks.GroovyRuntime:org.gradle.api.tasks.GroovySourceDirectorySet:org.gradle.api.tasks.GroovySourceSet:org.gradle.api.tasks.IgnoreEmptyDirectories:org.gradle.api.tasks.Input:org.gradle.api.tasks.InputDirectory:org.gradle.api.tasks.InputFile:org.gradle.api.tasks.InputFiles:org.gradle.api.tasks.Internal:org.gradle.api.tasks.JavaExec:org.gradle.api.tasks.LocalState:org.gradle.api.tasks.Nested:org.gradle.api.tasks.Optional:org.gradle.api.tasks.OutputDirectories:org.gradle.api.tasks.OutputDirectory:org.gradle.api.tasks.OutputFile:org.gradle.api.tasks.OutputFiles:org.gradle.api.tasks.PathSensitive:org.gradle.api.tasks.PathSensitivity:org.gradle.api.tasks.ScalaRuntime:org.gradle.api.tasks.ScalaSourceDirectorySet:org.gradle.api.tasks.ScalaSourceSet:org.gradle.api.tasks.SkipWhenEmpty:org.gradle.api.tasks.SourceSet:org.gradle.api.tasks.SourceSetContainer:org.gradle.api.tasks.SourceSetOutput:org.gradle.api.tasks.SourceTask:org.gradle.api.tasks.StopActionException:org.gradle.api.tasks.StopExecutionException:org.gradle.api.tasks.Sync:org.gradle.api.tasks.TaskAction:org.gradle.api.tasks.TaskCollection:org.gradle.api.tasks.TaskContainer:org.gradle.api.tasks.TaskDependency:org.gradle.api.tasks.TaskDestroyables:org.gradle.api.tasks.TaskExecutionException:org.gradle.api.tasks.TaskFilePropertyBuilder:org.gradle.api.tasks.TaskInputFilePropertyBuilder:org.gradle.api.tasks.TaskInputPropertyBuilder:org.gradle.api.tasks.TaskInputs:org.gradle.api.tasks.TaskInstantiationException:org.gradle.api.tasks.TaskLocalState:org.gradle.api.tasks.TaskOutputFilePropertyBuilder:org.gradle.api.tasks.TaskOutputs:org.gradle.api.tasks.TaskPropertyBuilder:org.gradle.api.tasks.TaskProvider:org.gradle.api.tasks.TaskReference:org.gradle.api.tasks.TaskState:org.gradle.api.tasks.UntrackedTask:org.gradle.api.tasks.Upload:org.gradle.api.tasks.VerificationTask:org.gradle.api.tasks.WorkResult:org.gradle.api.tasks.WorkResults:org.gradle.api.tasks.WriteProperties:org.gradle.api.tasks.ant.AntTarget:org.gradle.api.tasks.application.CreateStartScripts:org.gradle.api.tasks.bundling.AbstractArchiveTask:org.gradle.api.tasks.bundling.Compression:org.gradle.api.tasks.bundling.Jar:org.gradle.api.tasks.bundling.Tar:org.gradle.api.tasks.bundling.War:org.gradle.api.tasks.bundling.Zip:org.gradle.api.tasks.bundling.ZipEntryCompression:org.gradle.api.tasks.compile.AbstractCompile:org.gradle.api.tasks.compile.AbstractOptions:org.gradle.api.tasks.compile.BaseForkOptions:org.gradle.api.tasks.compile.CompileOptions:org.gradle.api.tasks.compile.DebugOptions:org.gradle.api.tasks.compile.ForkOptions:org.gradle.api.tasks.compile.GroovyCompile:org.gradle.api.tasks.compile.GroovyCompileOptions:org.gradle.api.tasks.compile.GroovyForkOptions:org.gradle.api.tasks.compile.JavaCompile:org.gradle.api.tasks.compile.ProviderAwareCompilerDaemonForkOptions:org.gradle.api.tasks.diagnostics.AbstractDependencyReportTask:org.gradle.api.tasks.diagnostics.AbstractReportTask:org.gradle.api.tasks.diagnostics.BuildEnvironmentReportTask:org.gradle.api.tasks.diagnostics.ConventionReportTask:org.gradle.api.tasks.diagnostics.DependencyInsightReportTask:org.gradle.api.tasks.diagnostics.DependencyReportTask:org.gradle.api.tasks.diagnostics.OutgoingVariantsReportTask:org.gradle.api.tasks.diagnostics.ProjectBasedReportTask:org.gradle.api.tasks.diagnostics.ProjectReportTask:org.gradle.api.tasks.diagnostics.PropertyReportTask:org.gradle.api.tasks.diagnostics.ResolutionErrorRenderer:org.gradle.api.tasks.diagnostics.TaskReportTask:org.gradle.api.tasks.incremental.IncrementalTaskInputs:org.gradle.api.tasks.incremental.InputFileDetails:org.gradle.api.tasks.javadoc.Groovydoc:org.gradle.api.tasks.javadoc.Javadoc:org.gradle.api.tasks.options.Option:org.gradle.api.tasks.options.OptionValues:org.gradle.api.tasks.scala.IncrementalCompileOptions:org.gradle.api.tasks.scala.ScalaCompile:org.gradle.api.tasks.scala.ScalaCompileOptions:org.gradle.api.tasks.scala.ScalaDoc:org.gradle.api.tasks.scala.ScalaDocOptions:org.gradle.api.tasks.scala.ScalaForkOptions:org.gradle.api.tasks.testing.AbstractTestTask:org.gradle.api.tasks.testing.JUnitXmlReport:org.gradle.api.tasks.testing.Test:org.gradle.api.tasks.testing.TestDescriptor:org.gradle.api.tasks.testing.TestExecutionException:org.gradle.api.tasks.testing.TestFilter:org.gradle.api.tasks.testing.TestFrameworkOptions:org.gradle.api.tasks.testing.TestListener:org.gradle.api.tasks.testing.TestOutputEvent:org.gradle.api.tasks.testing.TestOutputListener:org.gradle.api.tasks.testing.TestReport:org.gradle.api.tasks.testing.TestResult:org.gradle.api.tasks.testing.TestTaskReports:org.gradle.api.tasks.testing.junit.JUnitOptions:org.gradle.api.tasks.testing.junitplatform.JUnitPlatformOptions:org.gradle.api.tasks.testing.testng.TestNGOptions:org.gradle.api.tasks.util.PatternFilterable:org.gradle.api.tasks.util.PatternSet:org.gradle.api.tasks.wrapper.Wrapper:org.gradle.authentication.Authentication:org.gradle.authentication.aws.AwsImAuthentication:org.gradle.authentication.http.BasicAuthentication:org.gradle.authentication.http.DigestAuthentication:org.gradle.authentication.http.HttpHeaderAuthentication:org.gradle.build.event.BuildEventsListenerRegistry:org.gradle.buildinit.InsecureProtocolOption:org.gradle.buildinit.plugins.BuildInitPlugin:org.gradle.buildinit.plugins.WrapperPlugin:org.gradle.buildinit.tasks.InitBuild:org.gradle.caching.BuildCacheEntryReader:org.gradle.caching.BuildCacheEntryWriter:org.gradle.caching.BuildCacheException:org.gradle.caching.BuildCacheKey:org.gradle.caching.BuildCacheService:org.gradle.caching.BuildCacheServiceFactory:org.gradle.caching.MapBasedBuildCacheService:org.gradle.caching.configuration.AbstractBuildCache:org.gradle.caching.configuration.BuildCache:org.gradle.caching.configuration.BuildCacheConfiguration:org.gradle.caching.http.HttpBuildCache:org.gradle.caching.http.HttpBuildCacheCredentials:org.gradle.caching.local.DirectoryBuildCache:org.gradle.concurrent.ParallelismConfiguration:org.gradle.external.javadoc.CoreJavadocOptions:org.gradle.external.javadoc.JavadocMemberLevel:org.gradle.external.javadoc.JavadocOfflineLink:org.gradle.external.javadoc.JavadocOptionFileOption:org.gradle.external.javadoc.JavadocOutputLevel:org.gradle.external.javadoc.MinimalJavadocOptions:org.gradle.external.javadoc.OptionLessJavadocOptionFileOption:org.gradle.external.javadoc.StandardJavadocDocletOptions:org.gradle.ide.visualstudio.ConfigFile:org.gradle.ide.visualstudio.TextConfigFile:org.gradle.ide.visualstudio.TextProvider:org.gradle.ide.visualstudio.VisualStudioExtension:org.gradle.ide.visualstudio.VisualStudioProject:org.gradle.ide.visualstudio.VisualStudioRootExtension:org.gradle.ide.visualstudio.VisualStudioSolution:org.gradle.ide.visualstudio.XmlConfigFile:org.gradle.ide.visualstudio.plugins.VisualStudioPlugin:org.gradle.ide.visualstudio.plugins.VisualStudioPluginRules:org.gradle.ide.visualstudio.tasks.GenerateFiltersFileTask:org.gradle.ide.visualstudio.tasks.GenerateProjectFileTask:org.gradle.ide.visualstudio.tasks.GenerateSolutionFileTask:org.gradle.ide.xcode.XcodeExtension:org.gradle.ide.xcode.XcodeProject:org.gradle.ide.xcode.XcodeRootExtension:org.gradle.ide.xcode.XcodeWorkspace:org.gradle.ide.xcode.plugins.XcodePlugin:org.gradle.ide.xcode.tasks.GenerateSchemeFileTask:org.gradle.ide.xcode.tasks.GenerateWorkspaceSettingsFileTask:org.gradle.ide.xcode.tasks.GenerateXcodeProjectFileTask:org.gradle.ide.xcode.tasks.GenerateXcodeWorkspaceFileTask:org.gradle.ivy.IvyDescriptorArtifact:org.gradle.ivy.IvyModule:org.gradle.jvm.JvmLibrary:org.gradle.jvm.application.scripts.JavaAppStartScriptGenerationDetails:org.gradle.jvm.application.scripts.ScriptGenerator:org.gradle.jvm.application.scripts.TemplateBasedScriptGenerator:org.gradle.jvm.toolchain.JavaCompiler:org.gradle.jvm.toolchain.JavaInstallationMetadata:org.gradle.jvm.toolchain.JavaLanguageVersion:org.gradle.jvm.toolchain.JavaLauncher:org.gradle.jvm.toolchain.JavaToolchainService:org.gradle.jvm.toolchain.JavaToolchainSpec:org.gradle.jvm.toolchain.JavadocTool:org.gradle.jvm.toolchain.JvmImplementation:org.gradle.jvm.toolchain.JvmVendorSpec:org.gradle.language.BinaryCollection:org.gradle.language.BinaryProvider:org.gradle.language.ComponentDependencies:org.gradle.language.ComponentWithBinaries:org.gradle.language.ComponentWithDependencies:org.gradle.language.ComponentWithOutputs:org.gradle.language.ComponentWithTargetMachines:org.gradle.language.LibraryDependencies:org.gradle.language.ProductionComponent:org.gradle.language.assembler.AssemblerSourceSet:org.gradle.language.assembler.plugins.AssemblerLangPlugin:org.gradle.language.assembler.plugins.AssemblerPlugin:org.gradle.language.assembler.tasks.Assemble:org.gradle.language.base.DependentSourceSet:org.gradle.language.base.FunctionalSourceS"
22013,0,0,29,0,0,DPUkyle,1,"title:`test-report-aggregation` docs are missing mention of `--continue` flag description:As evidenced by #21966, our docs are completely missing any mention of the `--continue` flag, which is necessary to allow aggregation to proceed despite broken tests.We should update these two pages:* https://docs.gradle.org/7.5.1/userguide/test_report_aggregation_plugin.html* https://docs.gradle.org/7.5.1/userguide/jacoco_report_aggregation_plugin.html
"
22012,1,0,273,0,0,bigdaz,1,"title:TestKit does not pass environment variables for older Gradle versions when running on M1 mac description:When executing a build using Gradle TestKit, the `withEnvironment()` method can be used to set environment variables for the target build. On an M1 mac, the environment is only correctly setup when targeting a Gradle version >= 6.9. (These are also the versions that have native support for Mac `aarch64`).On another operating system (non-M1 mac), the environment is correctly set up for all target versions of Gradle >= 3.5.### Expected BehaviorTestKit `withEnvironment()` will set environment variables when targeting all supported Gradle versions.### Current BehaviorTestKit `withEnvironment()` does not set environment variables when targeting Gradle < 6.9 on M1 macs.### Steps to Reproduce Clone this repository and follow the simple instructions in the README: https://github.com/bigdaz/test-kit-env-varSuccessful run on Intel Mac: https://ge.solutions-team.gradle.com/s/iv5rbzfxausbi/tests/overviewFailing run on M1 Mac: https://ge.solutions-team.gradle.com/s/vmjwxo7dv3kle/tests/overview
"
22002,1,9206,125,0,1,deiruch,0,"title:""Changes are not tracked, unable determine incremental changes."" error when using Gradle in a OneDrive-synced folder description:### Expected BehaviorGradle should work reliably when a project is stored in a OneDrive-synced folder. Perhaps, if incremental changes cannot be detected, Gradle could fall-back to a non-incremental mode?### Current BehaviorAfter working for a while, I can no longer start the Java application. It seems that the problem is that I store the source code in a folder synced with OneDrive. Others have reported a very similar problem on StackOverflow: [Gradle - ""Changes are not tracked, unable determine incremental changes.""](https://stackoverflow.com/q/71803147/742404).This is the stacktrace:```Caused by: java.lang.IllegalStateException: Changes are not tracked, unable determine incremental changes.        at org.gradle.internal.execution.steps.ResolveInputChangesStep.lambda$determineInputChanges$0(ResolveInputChangesStep.java:116)        at org.gradle.internal.execution.steps.ResolveInputChangesStep.determineInputChanges(ResolveInputChangesStep.java:116)        at org.gradle.internal.execution.steps.ResolveInputChangesStep.execute(ResolveInputChangesStep.java:47)        at org.gradle.internal.execution.steps.ResolveInputChangesStep.execute(ResolveInputChangesStep.java:36)        at org.gradle.internal.execution.steps.BuildCacheStep.executeWithoutCache(BuildCacheStep.java:181)        at org.gradle.internal.execution.steps.BuildCacheStep.lambda$execute$1(BuildCacheStep.java:71)        at org.gradle.internal.Either$Right.fold(Either.java:175)        at org.gradle.internal.execution.caching.CachingState.fold(CachingState.java:59)        at org.gradle.internal.execution.steps.BuildCacheStep.execute(BuildCacheStep.java:69)        at org.gradle.internal.execution.steps.BuildCacheStep.execute(BuildCacheStep.java:47)        at org.gradle.internal.execution.steps.StoreExecutionStateStep.execute(StoreExecutionStateStep.java:36)        at org.gradle.internal.execution.steps.StoreExecutionStateStep.execute(StoreExecutionStateStep.java:25)        at org.gradle.internal.execution.steps.RecordOutputsStep.execute(RecordOutputsStep.java:36)        at org.gradle.internal.execution.steps.RecordOutputsStep.execute(RecordOutputsStep.java:22)        at org.gradle.internal.execution.steps.SkipUpToDateStep.executeBecause(SkipUpToDateStep.java:110)        at org.gradle.internal.execution.steps.SkipUpToDateStep.lambda$execute$2(SkipUpToDateStep.java:56)        at org.gradle.internal.execution.steps.SkipUpToDateStep.execute(SkipUpToDateStep.java:56)        at org.gradle.internal.execution.steps.SkipUpToDateStep.execute(SkipUpToDateStep.java:38)        at org.gradle.internal.execution.steps.ResolveChangesStep.execute(ResolveChangesStep.java:73)        at org.gradle.internal.execution.steps.ResolveChangesStep.execute(ResolveChangesStep.java:44)        at org.gradle.internal.execution.steps.legacy.MarkSnapshottingInputsFinishedStep.execute(MarkSnapshottingInputsFinishedStep.java:37)        at org.gradle.internal.execution.steps.legacy.MarkSnapshottingInputsFinishedStep.execute(MarkSnapshottingInputsFinishedStep.java:27)        at org.gradle.internal.execution.steps.ResolveCachingStateStep.execute(ResolveCachingStateStep.java:89)        at org.gradle.internal.execution.steps.ResolveCachingStateStep.execute(ResolveCachingStateStep.java:50)        at org.gradle.internal.execution.steps.ValidateStep.execute(ValidateStep.java:114)        at org.gradle.internal.execution.steps.ValidateStep.execute(ValidateStep.java:57)        at org.gradle.internal.execution.steps.CaptureStateBeforeExecutionStep.execute(CaptureStateBeforeExecutionStep.java:76)        at org.gradle.internal.execution.steps.CaptureStateBeforeExecutionStep.execute(CaptureStateBeforeExecutionStep.java:50)        at org.gradle.internal.execution.steps.SkipEmptyWorkStep.executeWithNoEmptySources(SkipEmptyWorkStep.java:254)        at org.gradle.internal.execution.steps.SkipEmptyWorkStep.executeWithNoEmptySources(SkipEmptyWorkStep.java:209)        at org.gradle.internal.execution.steps.SkipEmptyWorkStep.execute(SkipEmptyWorkStep.java:88)        at org.gradle.internal.execution.steps.SkipEmptyWorkStep.execute(SkipEmptyWorkStep.java:56)        at org.gradle.internal.execution.steps.RemoveUntrackedExecutionStateStep.execute(RemoveUntrackedExecutionStateStep.java:32)        at org.gradle.internal.execution.steps.RemoveUntrackedExecutionStateStep.execute(RemoveUntrackedExecutionStateStep.java:21)        at org.gradle.internal.execution.steps.legacy.MarkSnapshottingInputsStartedStep.execute(MarkSnapshottingInputsStartedStep.java:38)        at org.gradle.internal.execution.steps.LoadPreviousExecutionStateStep.execute(LoadPreviousExecutionStateStep.java:43)        at org.gradle.internal.execution.steps.LoadPreviousExecutionStateStep.execute(LoadPreviousExecutionStateStep.java:31)        at org.gradle.internal.execution.steps.AssignWorkspaceStep.lambda$execute$0(AssignWorkspaceStep.java:40)        at org.gradle.api.internal.tasks.execution.TaskExecution$4.withWorkspace(TaskExecution.java:281)        at org.gradle.internal.execution.steps.AssignWorkspaceStep.execute(AssignWorkspaceStep.java:40)        at org.gradle.internal.execution.steps.AssignWorkspaceStep.execute(AssignWorkspaceStep.java:30)        at org.gradle.internal.execution.steps.IdentityCacheStep.execute(IdentityCacheStep.java:37)        at org.gradle.internal.execution.steps.IdentityCacheStep.execute(IdentityCacheStep.java:27)        at org.gradle.internal.execution.steps.IdentifyStep.execute(IdentifyStep.java:44)        at org.gradle.internal.execution.steps.IdentifyStep.execute(IdentifyStep.java:33)        at org.gradle.internal.execution.impl.DefaultExecutionEngine$1.execute(DefaultExecutionEngine.java:76)        at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeIfValid(ExecuteActionsTaskExecuter.java:139)        at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.execute(ExecuteActionsTaskExecuter.java:128)        at org.gradle.api.internal.tasks.execution.CleanupStaleOutputsExecuter.execute(CleanupStaleOutputsExecuter.java:77)        at org.gradle.api.internal.tasks.execution.FinalizePropertiesTaskExecuter.execute(FinalizePropertiesTaskExecuter.java:46)        at org.gradle.api.internal.tasks.execution.ResolveTaskExecutionModeExecuter.execute(ResolveTaskExecutionModeExecuter.java:51)        at org.gradle.api.internal.tasks.execution.SkipTaskWithNoActionsExecuter.execute(SkipTaskWithNoActionsExecuter.java:57)        at org.gradle.api.internal.tasks.execution.SkipOnlyIfTaskExecuter.execute(SkipOnlyIfTaskExecuter.java:56)        at org.gradle.api.internal.tasks.execution.CatchExceptionTaskExecuter.execute(CatchExceptionTaskExecuter.java:36)        at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.executeTask(EventFiringTaskExecuter.java:77)        at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.call(EventFiringTaskExecuter.java:55)        at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.call(EventFiringTaskExecuter.java:52)        at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)        at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)        at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)        at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)        at org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)        at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter.execute(EventFiringTaskExecuter.java:52)        at org.gradle.execution.plan.LocalTaskNodeExecutor.execute(LocalTaskNodeExecutor.java:69)        at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$InvokeNodeExecutorsAction.execute(DefaultTaskExecutionGraph.java:327)        at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$InvokeNodeExecutorsAction.execute(DefaultTaskExecutionGraph.java:314)        at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$BuildOperationAwareExecutionAction.execute(DefaultTaskExecutionGraph.java:307)        at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$BuildOperationAwareExecutionAction.execute(DefaultTaskExecutionGraph.java:293)        at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.execute(DefaultPlanExecutor.java:420)        at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.run(DefaultPlanExecutor.java:342)        at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)        at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)```### ContextThis is annoying, because OneDrive is my go-to backup solution. It's nice to have all my stuff stored in backed-up folders. Running `gradle build --scan` fixes the problem temporarily.### Steps to Reproduce 1. Use IntelliJ IDEA to clone a Gradle-project into a OneDrive synced folder2. Use IntelliJ IDEA for 20 minutes, writing code### Your Environment* Windows 11 22000.978 x64* OneDrive 22.171.0814.0004 (64-bit)```------------------------------------------------------------Gradle 7.5.1------------------------------------------------------------Build time:   2022-08-05 21:17:56 UTCRevision:     d1daa0cbf1a0103000b71484e1dbfe096e095918Kotlin:       1.6.21Groovy:       3.0.10Ant:          Apache Ant(TM) version 1.10.11 compiled on July 10 2021JVM:          17 (Azul Systems, Inc. 17+35-LTS)OS:           Windows 10 10.0 amd64```
"
21990,1,491,19,0,0,Toldry,0,"title:JacocoReportAggregationPlugin doesn't work with JvmTestSuitePlugin description:Applying `JacocoReportAggregationPlugin` and `JvmTestSuitePlugin` in concert does not create the `testCodeCoverageReport` task.This is opposed to what is described [in the documentation](https://github.com/gradle/gradle/blob/e28e728ec79d2c6289358001b04c5c6ed900825d/subprojects/docs/src/docs/userguide/jvm/jacoco_report_aggregation_plugin.adoc#automatic-report-creation): > Automatic report creation> When the project also applies the jvm-test-suite plugin, the following reporting objects are added for each test suite:> > testSuiteCodeCoverageReport 闂?[JacocoCoverageReport](https://github.com/gradle/gradle/blob/e28e728ec79d2c6289358001b04c5c6ed900825d/subprojects/docs/src/docs/userguide/jvm/%7BjavadocPath%7D/org/gradle/testing/jacoco/plugins/JacocoCoverageReport.html)> Creates a container to parameterize the [TestSuiteType](https://github.com/gradle/gradle/blob/e28e728ec79d2c6289358001b04c5c6ed900825d/subprojects/docs/src/docs/userguide/jvm/%7BjavadocPath%7D/org/gradle/api/attributes/TestSuiteType.html) value.### Expected BehaviorThe `testCodeCoverageReport` task is created.### Current BehaviorThe `testCodeCoverageReport` task is missing.### ContextI was trying to follow the documentation and encountered this bug which caused some confusion.### Steps to Reproduce Here is a bug replicator I made:https://github.com/Toldry/jacoco-aggregator-plugin-bug-replicatorTo reproduce the bug :```git clone https://github.com/Toldry/jacoco-aggregator-plugin-bug-replicatorcd jacoco-aggregator-plugin-bug-replicator./gradlew test```You will see the following output:```> Task :plugin:testJacocoAggregatorPluginBugReplicatorPluginTest > pluginAddsTestCodeCoverageReport(String) > jacoco.aggregator.plugin.bug.replicator.JacocoAggregatorPluginBugReplicatorPluginTest.pluginAddsTestCodeCoverageReport(String)[2] FAILED    org.opentest4j.AssertionFailedError at JacocoAggregatorPluginBugReplicatorPluginTest.java:22```### Your EnvironmentmacOS 12.5.1Java SDK 8.0.322-librcaBuild scan URL:I cannot provide a build scan.
"
21983,0,0,0,0,1,Syedasifajaz,0,"title:Gradle build package has snakeyaml dependency for plugins has a CVE with high base score description:Gradle all versions includes snakeyaml dependency for plugins has CVE with high base scorehttps://nvd.nist.gov/vuln/detail/CVE-2022-25857Due to this dependency docker image which we build containing gradle is flagged as vulnerable image.Can we expect a patch or rc to fix this security vulnerability.
"
21970,1,281,3,0,0,alessandroToninelli,0,"title:Catalog from a TOML file not available for buildSrc common-conventions description:importing the toml file into the settings gradle using the following script in the settings.gradle.kts of buildSrc```dependencyResolutionManagement {    versionCatalogs {        create(""libs"") {            from(files(""path to toml file""))        }    }}```dependencies are not seen from the common-convention.gradle.kts file which resides inside ``buildSrc / src / kotlin / common-conventions-gradle.kts.``Toml File```[versions]ktor = ""2.1.1""[libraries]ktor-server-core = {module = ""io.ktor:ktor-server-core"", version.ref = ""ktor""}```Is there any way to make it possible?
"
21966,0,173,0,0,0,hutchiko,0,"title:testAggregateTestReport task is not run when tests fail description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues-->The Test Report Aggregation Plugin does not generate an aggregated report if any of the dependent Test tasks fail. ### Expected BehaviorAggregate test report should be generated regardless of success or failure of test runs. This would mirror the behavior of the reports generated by the individual Test tasks.It very helpful to see the test report for failed test runs.### Current Behavior<!--- Tell us what happens instead of the expected behavior -->No Aggregate test report generated when dependent Test tasks fail. ### Steps to Reproduce <!---Provide a self-contained example project as an attached archive or a Github project.You can use the following template with a Gradle GitHub action set up to showcase your problem: https://github.com/gradle/gradle-issue-reproducerIn the rare cases where this is infeasible, we will also accept a detailed set of instructions.-->https://github.com/hutchiko/testAggregateTestReport-bug-reportTo reproduce the issue run:```./gradlew clean testAggregateTestReport ```Note that there is no aggregated report generated: ```find build/reports/tests -type f -name index.html | grep aggregated  ```However there is a non aggregated report:``` find build/reports/tests -type f -name index.html  ```Both an aggregated and non-aggregated report should be generated. These reports are most helpful when tests fail so it's vital that the aggregated report is still generated on test failure.
"
21926,1,817,298,0,0,chachako,0,"title:The `GenerateMavenPom` task seems to be incompatible with the configuration cache description:### Current Behavior```61 problems were found storing the configuration cache, 20 of which seem unique.- Task `:generatePomFileForMyPluginPluginMarkerMavenPublication` of type `org.gradle.api.publish.maven.tasks.GenerateMavenPom`: cannot serialize object of type 'org.gradle.api.internal.project.DefaultProject', a subtype of 'org.gradle.api.Project', as these are not supported with the configuration cache.  See https://docs.gradle.org/7.6-20220906160000+0000/userguide/configuration_cache.html#config_cache:requirements:disallowed_types- Task `:generatePomFileForPluginMavenPublication` of type `org.gradle.api.publish.maven.tasks.GenerateMavenPom`: cannot serialize object of type 'org.gradle.api.internal.project.DefaultProject', a subtype of 'org.gradle.api.Project', as these are not supported with the configuration cache.```### ContextJust want to use https://github.com/vanniktech/gradle-maven-publish-plugin to publish a plugin.### Steps to Reproduce Run the `:publishToMavenLocal` task### Your Environment- Gradle publishing plugin: com.gradle.plugin-publish:0.21.0- Gradle version compiled from: <https://github.com/gradle/gradle/tree/release>---To my confusion, I see that <https://github.com/gradle/gradle/pull/13391> seems to be supported, so is this related to <https://github.com/gradle/plugin-portal-requests/issues/155>?
"
21872,0,576,288,1,0,Marcono1234,0,"title:`JavaToolchainFactory#newInstance` silently discards original exception description:### Expected BehaviorWhen an issue with the configured toolchain is detected, Gradle should provide all available information about the failure.### Current Behavior`JavaToolchainFactory#newInstance` discards the metadata information if it is not a valid installation:https://github.com/gradle/gradle/blob/c4e3c1a39051e97349f870da54fdd66eb8810bec/subprojects/platform-jvm/src/main/java/org/gradle/jvm/toolchain/internal/JavaToolchainFactory.java#L52-L56This causes the original exception which is stored in the metadata to not be reported.### ContextIt makes debugging toolchain issues more difficult. For example in my case #20520 seems to have occurred because Gradle is downloading the wrong JDK for Alpine (for other users the cause might be a different one). However, Gradle just reports:```Provisioned toolchain '/root/.gradle/jdks/adoptium-17-x64-hotspot-linux/jdk-17.0.4.1+1' could not be probed.```Whereas the original exception, included in the metadata which is discarded by `JavaToolchainFactory`, would have been:```A problem occurred starting process 'command '/root/.gradle/jdks/adoptium-17-x64-hotspot-linux/jdk-17.0.4.1+1/bin/java''  Could not start '/root/.gradle/jdks/adoptium-17-x64-hotspot-linux/jdk-17.0.4.1+1/bin/java'    Cannot run program ""/root/.gradle/jdks/adoptium-17-x64-hotspot-linux/jdk-17.0.4.1+1/bin/java"" (in directory ""/root/.gradle/.tmp/tmp-jvm14264294632786197088probe""): error=2, No such file or directory      error=2, No such file or directory```(the error message from Alpine is not that expressive, but it might have helped debugging this)### Steps to Reproduce Use for example the Dockerfile from https://github.com/gradle/gradle/issues/20520#issuecomment-1118007534### Your EnvironmentWith the above Docker setup: WSL 2, Docker
"
21857,0,1346,300,0,0,gabrielittner,0,"title:Signing plugin: sign(publications) should be idempotent description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues--><!--- Provide a brief summary of the issue in the title above -->### Expected Behavior<!--- Tell us what should happen -->Calling `sign(publications)` ([docs](https://docs.gradle.org/current/javadoc/org/gradle/plugins/signing/SigningExtension.html#sign-org.gradle.api.publish.Publication...-)) multiple times should work### Current Behavior<!--- Tell us what happens instead of the expected behavior -->Calling it a second time will throw an exception because the signing task already exists:```* Exception is:org.gradle.api.ProjectConfigurationException: A problem occurred configuring root project 'dexcount-gradle-plugin'.	at org.gradle.configuration.project.LifecycleProjectEvaluator.wrapException(LifecycleProjectEvaluator.java:84)	at org.gradle.configuration.project.LifecycleProjectEvaluator.addConfigurationFailure(LifecycleProjectEvaluator.java:77)	...Caused by: org.gradle.api.internal.tasks.DefaultTaskContainer$DuplicateTaskException: Cannot add task 'signDexcountPluginMarkerMavenPublication' as a task with that name already exists.	at org.gradle.api.internal.tasks.DefaultTaskContainer.failOnDuplicateTask(DefaultTaskContainer.java:257)	...	at org.gradle.plugins.signing.SigningExtension.sign(SigningExtension.java:395)	at com.vanniktech.maven.publish.MavenPublishBaseExtension.signAllPublications(MavenPublishBaseExtension.kt:114)	at com.vanniktech.maven.publish.MavenPublishPlugin.apply$lambda-0(MavenPublishPlugin.kt:65)        ...```### Context<!--- How has this issue affected you? What are you trying to accomplish? --><!--- Providing context helps us come up with a solution that is most useful in the real world -->Multiple plugins follow the convention over configuration approach and automatically apply the signing plugin. One of these is the official `com.gradle.plugin-publish` which internally will check if the task already exists before calling `sign` for a `publication`. This is what the code looks like```private void wireInSigningTask(Project project, SigningExtension signing, Publication publication) {    String signTaskName = determineSignTaskNameForPublication(publication);    Task signTask = project.getTasks().findByName(signTaskName);    if (signTask == null) {        signTask = signing.sign(publication).get(0);    }    dependsOn(signTask);}```Currently other plugins would need to apply the same logic to check if the task already exists and only call `sign` conditionally. This has 2 issues however:- `tasks.findByName` does not have a lazy version so the siging task would get created/configured- `determineSignTaskNameForPublication` relies on the implementation of the signing plugin, in fact that method inside `PublishTask` of the plugin publish plugin looks like it is a direct copy of the method with the same name inside `SigningExtension`I don't think it should be the goal to have this logic duplicated everywhere and the best way to solve it would be to make `sign` idempotent.### Steps to Reproduce <!---Provide a self-contained example project as an attached archive or a Github project.You can use the following template with a Gradle GitHub action set up to showcase your problem: https://github.com/gradle/gradle-issue-reproducerIn the rare cases where this is infeasible, we will also accept a detailed set of instructions.-->1. apply `com.gradle.plugin-publish` 1.0.02. apply `com.vanniktech.maven.publish` 0.21.0(order needs to be kept ### Your Environment<!--- Include as many relevant details about the environment you experienced the bug in --><!--- A build scan https://scans.gradle.com/get-started is ideal -->Can provide a build scan if needed.
"
21848,0,0,89,0,0,liutikas,0,"title:Gradle distribution jar is not reproducible due to fastutil minification transform description:Gradle distribution jar is not reproducible due to fastutil minification transform.Run `JAVA_HOME=~/.sdkman/candidates/java/11.0.13-zulu/ ./gradlew :distributions-full:binDistributionZip -PfinalRelease` twice### Expected Behavior`lib/fastutil-*.jar` inside the gradle distribution zip is identical between the two builds### Current Behavior`lib/fastutil-*.jar` inside the gradle distribution zip are different between the two builds. The difference is caused by the fact that this jar is using Minify transform that keeps the timestamps for all the entries in this jar.### ContextAttempting to reproduce gradle distribution zips to compare what Gradle has shipped and what it built when using the same commit.### Steps to Reproduce Run `JAVA_HOME=~/.sdkman/candidates/java/11.0.13-zulu/ ./gradlew :distributions-full:binDistributionZip -PfinalRelease` twice in gradle checkout.### Your EnvironmentN/A
"
21825,0,600,222,0,1,h0tk3y,0,"title:CCH22-28: Adjust the `snippets/tutorial/configureTaskUsingProjectProperty` sample for configuration cache description:The sample project located under [`subprojects/docs/src/snippets/tutorial/configureTaskUsingProjectProperty`](https://github.com/gradle/gradle/tree/master/subprojects/docs/src/snippets/tutorial/configureTaskUsingProjectProperty) does not meet [the configuration cache requirements](https://docs.gradle.org/nightly/userguide/configuration_cache.html#config_cache:requirements).The build scripts in the `groovy` and `kotlin` parts of the sample project need to be adjusted to follow the requirements.### ContextThis issue is a part of the [Gradle Configuration Cache Hackathon 2022](https://github.com/gradle/cc-hackathon-2022).If you wish to participate and contribute the fix, please follow [the suggested workflow](https://github.com/gradle/cc-hackathon-2022/blob/main/workflow.md).### Expected behavior- The sample project is fixed so that the related documentation tests pass with configuration cache enabled.- The tests related to this sample project are removed from the `testsToBeFixedForConfigurationCache` list in `subprojects/docs/build.gradle`. You can find the test IDs below.- The doc pages that include the snippets from this sample project might need to be updated to be consistent with the sample. Feel free to ask the team for help with this! You can find the pages listed below.### Test failure detailsThese tests running in `:docs:docsTest` check the sample project and are failing with configuration cache enabled:* `snippet-tutorial-configure-task-using-project-property_groovy_configureTaskUsingProjectProperty.sample`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket1SnippetsTest/snippet-tutorial-configure-task-using-project-property_groovy_configureTaskUsingProjectProperty.sample)    ```    Build file 'build.gradle': invocation of 'Task.project' at execution time is unsupported.    ```* `snippet-tutorial-configure-task-using-project-property_kotlin_configureTaskUsingProjectProperty.sample`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket1SnippetsTest/snippet-tutorial-configure-task-using-project-property_kotlin_configureTaskUsingProjectProperty.sample)    ```    Task `:performRelease` of type `org.gradle.api.DefaultTask`: invocation of 'Task.project' at execution time is unsupported.    ```### How to reproduceTo reproduce the failure in the Gradle documentation tests, run the following in the `gradle/gradle`repository:```sh./gradlew :docs:docsTest \    -PrunBrokenConfigurationCacheDocsTests=true \    -PenableConfigurationCacheForDocsTests=true \    --tests ""*snippet-tutorial-configure-task-using-project-property_groovy_configureTaskUsingProjectProperty.sample"" \    --tests ""*snippet-tutorial-configure-task-using-project-property_kotlin_configureTaskUsingProjectProperty.sample""```In the test build outputs, which you can find in the test report, the configuration cache problems are listed along with the URL pointing to the detailed HTML problems report that can help investigating the violation. You can find more instructions on working with the sample projects in the [FAQ](https://github.com/gradle/cc-hackathon-2022/blob/main/faq.md).### Docs including the snippets from this sample projectThe following doc pages include the snippets from this sample project: - `subprojects/docs/src/docs/userguide/running-builds/build_environment.adoc`;
"
21824,0,349,222,0,1,h0tk3y,0,"title:CCH22-27: Adjust the `snippets/testing/test-suite-multi-configure-each-matching` sample for configuration cache description:The sample project located under [`subprojects/docs/src/snippets/testing/test-suite-multi-configure-each-matching`](https://github.com/gradle/gradle/tree/master/subprojects/docs/src/snippets/testing/test-suite-multi-configure-each-matching) does not meet [the configuration cache requirements](https://docs.gradle.org/nightly/userguide/configuration_cache.html#config_cache:requirements).The build script in the `groovy` part of the sample project needs to be adjusted to follow the requirements.### ContextThis issue is a part of the [Gradle Configuration Cache Hackathon 2022](https://github.com/gradle/cc-hackathon-2022).If you wish to participate and contribute the fix, please follow [the suggested workflow](https://github.com/gradle/cc-hackathon-2022/blob/main/workflow.md).### Expected behavior- The sample project is fixed so that the related documentation tests pass with configuration cache enabled.- The tests related to this sample project are removed from the `testsToBeFixedForConfigurationCache` list in `subprojects/docs/build.gradle`. You can find the test IDs below.- The doc pages that include the snippets from this sample project might need to be updated to be consistent with the sample. Feel free to ask the team for help with this! You can find the pages listed below.### Test failure detailsThese tests running in `:docs:docsTest` check the sample project and are failing with configuration cache enabled:* `snippet-testing-test-suite-multi-configure-each-matching_groovy_checkTask.sample`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket1SnippetsTest/snippet-testing-test-suite-multi-configure-each-matching_groovy_checkTask.sample)    ```    Could not get unknown property 'configurations' for task ':checkDependencies' of type org.gradle.api.DefaultTask.    ```### How to reproduceTo reproduce the failure in the Gradle documentation tests, run the following in the `gradle/gradle`repository:```sh./gradlew :docs:docsTest \    -PrunBrokenConfigurationCacheDocsTests=true \    -PenableConfigurationCacheForDocsTests=true \    --tests ""*snippet-testing-test-suite-multi-configure-each-matching_groovy_checkTask.sample""```In the test build outputs, which you can find in the test report, the configuration cache problems are listed along with the URL pointing to the detailed HTML problems report that can help investigating the violation. You can find more instructions on working with the sample projects in the [FAQ](https://github.com/gradle/cc-hackathon-2022/blob/main/faq.md).### Docs including the snippets from this sample projectThe following doc pages include the snippets from this sample project: - `subprojects/docs/src/docs/userguide/jvm/jvm_test_suite_plugin.adoc`;
"
21823,0,340,222,0,1,h0tk3y,0,"title:CCH22-26: Adjust the `snippets/testing/test-suite-multi-configure-each` sample for configuration cache description:The sample project located under [`subprojects/docs/src/snippets/testing/test-suite-multi-configure-each`](https://github.com/gradle/gradle/tree/master/subprojects/docs/src/snippets/testing/test-suite-multi-configure-each) does not meet [the configuration cache requirements](https://docs.gradle.org/nightly/userguide/configuration_cache.html#config_cache:requirements).The build script in the `groovy` part of the sample project needs to be adjusted to follow the requirements.### ContextThis issue is a part of the [Gradle Configuration Cache Hackathon 2022](https://github.com/gradle/cc-hackathon-2022).If you wish to participate and contribute the fix, please follow [the suggested workflow](https://github.com/gradle/cc-hackathon-2022/blob/main/workflow.md).### Expected behavior- The sample project is fixed so that the related documentation tests pass with configuration cache enabled.- The tests related to this sample project are removed from the `testsToBeFixedForConfigurationCache` list in `subprojects/docs/build.gradle`. You can find the test IDs below.- The doc pages that include the snippets from this sample project might need to be updated to be consistent with the sample. Feel free to ask the team for help with this! You can find the pages listed below.### Test failure detailsThese tests running in `:docs:docsTest` check the sample project and are failing with configuration cache enabled:* `snippet-testing-test-suite-multi-configure-each_groovy_checkTask.sample`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket1SnippetsTest/snippet-testing-test-suite-multi-configure-each_groovy_checkTask.sample)    ```    Could not get unknown property 'configurations' for task ':checkDependencies' of type org.gradle.api.DefaultTask.    ```### How to reproduceTo reproduce the failure in the Gradle documentation tests, run the following in the `gradle/gradle`repository:```sh./gradlew :docs:docsTest \    -PrunBrokenConfigurationCacheDocsTests=true \    -PenableConfigurationCacheForDocsTests=true \    --tests ""*snippet-testing-test-suite-multi-configure-each_groovy_checkTask.sample""```In the test build outputs, which you can find in the test report, the configuration cache problems are listed along with the URL pointing to the detailed HTML problems report that can help investigating the violation. You can find more instructions on working with the sample projects in the [FAQ](https://github.com/gradle/cc-hackathon-2022/blob/main/faq.md).### Docs including the snippets from this sample projectThe following doc pages include the snippets from this sample project: - `subprojects/docs/src/docs/userguide/jvm/jvm_test_suite_plugin.adoc`;
"
21822,0,350,222,0,1,h0tk3y,0,"title:CCH22-25: Adjust the `snippets/testing/test-suite-multi-configure-each-extracted` sample for configuration cache description:The sample project located under [`subprojects/docs/src/snippets/testing/test-suite-multi-configure-each-extracted`](https://github.com/gradle/gradle/tree/master/subprojects/docs/src/snippets/testing/test-suite-multi-configure-each-extracted) does not meet [the configuration cache requirements](https://docs.gradle.org/nightly/userguide/configuration_cache.html#config_cache:requirements).The build script in the `groovy` part of the sample project needs to be adjusted to follow the requirements.### ContextThis issue is a part of the [Gradle Configuration Cache Hackathon 2022](https://github.com/gradle/cc-hackathon-2022).If you wish to participate and contribute the fix, please follow [the suggested workflow](https://github.com/gradle/cc-hackathon-2022/blob/main/workflow.md).### Expected behavior- The sample project is fixed so that the related documentation tests pass with configuration cache enabled.- The tests related to this sample project are removed from the `testsToBeFixedForConfigurationCache` list in `subprojects/docs/build.gradle`. You can find the test IDs below.- The doc pages that include the snippets from this sample project might need to be updated to be consistent with the sample. Feel free to ask the team for help with this! You can find the pages listed below.### Test failure detailsThese tests running in `:docs:docsTest` check the sample project and are failing with configuration cache enabled:* `snippet-testing-test-suite-multi-configure-each-extracted_groovy_checkTask.sample`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket1SnippetsTest/snippet-testing-test-suite-multi-configure-each-extracted_groovy_checkTask.sample)    ```    Could not get unknown property 'configurations' for task ':checkDependencies' of type org.gradle.api.DefaultTask.    ```### How to reproduceTo reproduce the failure in the Gradle documentation tests, run the following in the `gradle/gradle`repository:```sh./gradlew :docs:docsTest \    -PrunBrokenConfigurationCacheDocsTests=true \    -PenableConfigurationCacheForDocsTests=true \    --tests ""*snippet-testing-test-suite-multi-configure-each-extracted_groovy_checkTask.sample""```In the test build outputs, which you can find in the test report, the configuration cache problems are listed along with the URL pointing to the detailed HTML problems report that can help investigating the violation. You can find more instructions on working with the sample projects in the [FAQ](https://github.com/gradle/cc-hackathon-2022/blob/main/faq.md).### Docs including the snippets from this sample projectThe following doc pages include the snippets from this sample project: - `subprojects/docs/src/docs/userguide/jvm/jvm_test_suite_plugin.adoc`;
"
21821,0,2996,222,0,1,h0tk3y,0,"title:CCH22-24: Adjust the `snippets/tasks/incrementalTask` sample for configuration cache description:The sample project located under [`subprojects/docs/src/snippets/tasks/incrementalTask`](https://github.com/gradle/gradle/tree/master/subprojects/docs/src/snippets/tasks/incrementalTask) does not meet [the configuration cache requirements](https://docs.gradle.org/nightly/userguide/configuration_cache.html#config_cache:requirements).The build scripts in the `groovy` and `kotlin` parts of the sample project need to be adjusted to follow the requirements.### ContextThis issue is a part of the [Gradle Configuration Cache Hackathon 2022](https://github.com/gradle/cc-hackathon-2022).If you wish to participate and contribute the fix, please follow [the suggested workflow](https://github.com/gradle/cc-hackathon-2022/blob/main/workflow.md).### Expected behavior- The sample project is fixed so that the related documentation tests pass with configuration cache enabled.- The tests related to this sample project are removed from the `testsToBeFixedForConfigurationCache` list in `subprojects/docs/build.gradle`. You can find the test IDs below.- The doc pages that include the snippets from this sample project might need to be updated to be consistent with the sample. Feel free to ask the team for help with this! You can find the pages listed below.### Test failure detailsThese tests running in `:docs:docsTest` check the sample project and are failing with configuration cache enabled:* `snippet-tasks-incremental-task_groovy_incrementalTaskChangedProperty.sample`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket2SnippetsTest/snippet-tasks-incremental-task_groovy_incrementalTaskChangedProperty.sample)    ```    Could not find method file() for arguments [inputs] on task ':originalInputs' of type org.gradle.api.DefaultTask.    ```* `snippet-tasks-incremental-task_groovy_incrementalTaskFirstRun.sample`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket2SnippetsTest/snippet-tasks-incremental-task_groovy_incrementalTaskFirstRun.sample)    ```    Could not find method file() for arguments [inputs] on task ':originalInputs' of type org.gradle.api.DefaultTask.    ```* `snippet-tasks-incremental-task_groovy_incrementalTaskNoChange.sample`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket2SnippetsTest/snippet-tasks-incremental-task_groovy_incrementalTaskNoChange.sample)    ```    Could not find method file() for arguments [inputs] on task ':originalInputs' of type org.gradle.api.DefaultTask.    ```* `snippet-tasks-incremental-task_groovy_incrementalTaskRemovedInput.sample`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket2SnippetsTest/snippet-tasks-incremental-task_groovy_incrementalTaskRemovedInput.sample)    ```    Could not find method file() for arguments [inputs] on task ':originalInputs' of type org.gradle.api.DefaultTask.    ```* `snippet-tasks-incremental-task_groovy_incrementalTaskRemovedOutput.sample`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket2SnippetsTest/snippet-tasks-incremental-task_groovy_incrementalTaskRemovedOutput.sample)    ```    Could not find method file() for arguments [inputs] on task ':originalInputs' of type org.gradle.api.DefaultTask.    ```* `snippet-tasks-incremental-task_groovy_incrementalTaskUpdatedInputs.sample`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket2SnippetsTest/snippet-tasks-incremental-task_groovy_incrementalTaskUpdatedInputs.sample)    ```    Could not find method file() for arguments [inputs] on task ':originalInputs' of type org.gradle.api.DefaultTask.    ```* `snippet-tasks-incremental-task_kotlin_incrementalTaskChangedProperty.sample`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket2SnippetsTest/snippet-tasks-incremental-task_kotlin_incrementalTaskChangedProperty.sample)    ```    Task `:originalInputs` of type `org.gradle.api.DefaultTask`: cannot serialize Gradle script object references as these are not supported with the configuration cache.    ```* `snippet-tasks-incremental-task_kotlin_incrementalTaskFirstRun.sample`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket2SnippetsTest/snippet-tasks-incremental-task_kotlin_incrementalTaskFirstRun.sample)    ```    Task `:originalInputs` of type `org.gradle.api.DefaultTask`: cannot serialize Gradle script object references as these are not supported with the configuration cache.    ```* `snippet-tasks-incremental-task_kotlin_incrementalTaskNoChange.sample`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket2SnippetsTest/snippet-tasks-incremental-task_kotlin_incrementalTaskNoChange.sample)    ```    Task `:originalInputs` of type `org.gradle.api.DefaultTask`: cannot serialize Gradle script object references as these are not supported with the configuration cache.    ```* `snippet-tasks-incremental-task_kotlin_incrementalTaskRemovedInput.sample`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket2SnippetsTest/snippet-tasks-incremental-task_kotlin_incrementalTaskRemovedInput.sample)    ```    Task `:originalInputs` of type `org.gradle.api.DefaultTask`: cannot serialize Gradle script object references as these are not supported with the configuration cache.    ```* `snippet-tasks-incremental-task_kotlin_incrementalTaskRemovedOutput.sample`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket2SnippetsTest/snippet-tasks-incremental-task_kotlin_incrementalTaskRemovedOutput.sample)    ```    Task `:originalInputs` of type `org.gradle.api.DefaultTask`: cannot serialize Gradle script object references as these are not supported with the configuration cache.    ```* `snippet-tasks-incremental-task_kotlin_incrementalTaskUpdatedInputs.sample`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket2SnippetsTest/snippet-tasks-incremental-task_kotlin_incrementalTaskUpdatedInputs.sample)    ```    Task `:originalInputs` of type `org.gradle.api.DefaultTask`: cannot serialize Gradle script object references as these are not supported with the configuration cache.    ```### How to reproduceTo reproduce the failure in the Gradle documentation tests, run the following in the `gradle/gradle`repository:```sh./gradlew :docs:docsTest \    -PrunBrokenConfigurationCacheDocsTests=true \    -PenableConfigurationCacheForDocsTests=true \    --tests ""*snippet-tasks-incremental-task_groovy_incrementalTaskChangedProperty.sample"" \    --tests ""*snippet-tasks-incremental-task_groovy_incrementalTaskFirstRun.sample"" \    --tests ""*snippet-tasks-incremental-task_groovy_incrementalTaskNoChange.sample"" \    --tests ""*snippet-tasks-incremental-task_groovy_incrementalTaskRemovedInput.sample"" \    --tests ""*snippet-tasks-incremental-task_groovy_incrementalTaskRemovedOutput.sample"" \    --tests ""*snippet-tasks-incremental-task_groovy_incrementalTaskUpdatedInputs.sample"" \    --tests ""*snippet-tasks-incremental-task_kotlin_incrementalTaskChangedProperty.sample"" \    --tests ""*snippet-tasks-incremental-task_kotlin_incrementalTaskFirstRun.sample"" \    --tests ""*snippet-tasks-incremental-task_kotlin_incrementalTaskNoChange.sample"" \    --tests ""*snippet-tasks-incremental-task_kotlin_incrementalTaskRemovedInput.sample"" \    --tests ""*snippet-tasks-incremental-task_kotlin_incrementalTaskRemovedOutput.sample"" \    --tests ""*snippet-tasks-incremental-task_kotlin_incrementalTaskUpdatedInputs.sample""```In the test build outputs, which you can find in the test report, the configuration cache problems are listed along with the URL pointing to the detailed HTML problems report that can help investigating the violation. You can find more instructions on working with the sample projects in the [FAQ](https://github.com/gradle/cc-hackathon-2022/blob/main/faq.md).### Docs including the snippets from this sample projectThe following doc pages include the snippets from this sample project: - `subprojects/docs/src/docs/userguide/extending-gradle/custom_tasks.adoc`;
"
21820,0,2932,222,0,1,h0tk3y,0,"title:CCH22-23: Adjust the `snippets/tasks/incrementalBuild-customTaskClass` sample for configuration cache description:The sample project located under [`subprojects/docs/src/snippets/tasks/incrementalBuild-customTaskClass`](https://github.com/gradle/gradle/tree/master/subprojects/docs/src/snippets/tasks/incrementalBuild-customTaskClass) does not meet [the configuration cache requirements](https://docs.gradle.org/nightly/userguide/configuration_cache.html#config_cache:requirements).The build scripts in the `groovy` and `kotlin` parts of the sample project need to be adjusted to follow the requirements.### ContextThis issue is a part of the [Gradle Configuration Cache Hackathon 2022](https://github.com/gradle/cc-hackathon-2022).If you wish to participate and contribute the fix, please follow [the suggested workflow](https://github.com/gradle/cc-hackathon-2022/blob/main/workflow.md).### Expected behavior- The sample project is fixed so that the related documentation tests pass with configuration cache enabled.- The tests related to this sample project are removed from the `testsToBeFixedForConfigurationCache` list in `subprojects/docs/build.gradle`. You can find the test IDs below.- The doc pages that include the snippets from this sample project might need to be updated to be consistent with the sample. Feel free to ask the team for help with this! You can find the pages listed below.### Test failure detailsThese tests running in `:docs:docsTest` check the sample project and are failing with configuration cache enabled:* `snippet-tasks-incremental-build-custom-task-class_groovy_customTaskClassWithInputOutputAnnotations.sample`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket2SnippetsTest/snippet-tasks-incremental-build-custom-task-class_groovy_customTaskClassWithInputOutputAnnotations.sample)    ```    Task `:processTemplates` of type `org.example.ProcessTemplates`: invocation of 'Task.project' at execution time is unsupported.    ```* `snippet-tasks-incremental-build-custom-task-class_groovy_incrementalAdHocTask.sample`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket2SnippetsTest/snippet-tasks-incremental-build-custom-task-class_groovy_incrementalAdHocTask.sample)    ```    Could not find method copy() for arguments [build_5yks5tcxomo6e692nd30tvva1$_run_closure2$_closure9$_closure10@2b7489cb] on task ':processTemplatesAdHoc' of type org.gradle.api.DefaultTask.    ```* `snippet-tasks-incremental-build-custom-task-class_groovy_inferredTaskDep2.sample`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket2SnippetsTest/snippet-tasks-incremental-build-custom-task-class_groovy_inferredTaskDep2.sample)    ```    Task `:processTemplates` of type `org.example.ProcessTemplates`: invocation of 'Task.project' at execution time is unsupported.    ```* `snippet-tasks-incremental-build-custom-task-class_groovy_inferredTaskDep.sample`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket2SnippetsTest/snippet-tasks-incremental-build-custom-task-class_groovy_inferredTaskDep.sample)    ```    Task `:packageFiles` of type `org.gradle.api.tasks.bundling.Zip`: cannot serialize object of type 'org.example.ProcessTemplates', a subtype of 'org.gradle.api.Task', as these are not supported with the configuration cache.    Task `:processTemplates` of type `org.example.ProcessTemplates`: invocation of 'Task.project' at execution time is unsupported.    ```* `snippet-tasks-incremental-build-custom-task-class_kotlin_customTaskClassWithInputOutputAnnotations.sample`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket2SnippetsTest/snippet-tasks-incremental-build-custom-task-class_kotlin_customTaskClassWithInputOutputAnnotations.sample)    ```    Task `:processTemplates` of type `org.example.ProcessTemplates`: invocation of 'Task.project' at execution time is unsupported.    ```* `snippet-tasks-incremental-build-custom-task-class_kotlin_incrementalAdHocTaskNoSource.sample`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket2SnippetsTest/snippet-tasks-incremental-build-custom-task-class_kotlin_incrementalAdHocTaskNoSource.sample)    ```    Task `:processTemplatesAdHocSkipWhenEmpty` of type `org.gradle.api.DefaultTask`: cannot serialize Gradle script object references as these are not supported with the configuration cache.    ```* `snippet-tasks-incremental-build-custom-task-class_kotlin_incrementalAdHocTask.sample`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket2SnippetsTest/snippet-tasks-incremental-build-custom-task-class_kotlin_incrementalAdHocTask.sample)    ```    Task `:processTemplatesAdHoc` of type `org.gradle.api.DefaultTask`: cannot serialize Gradle script object references as these are not supported with the configuration cache.    ```* `snippet-tasks-incremental-build-custom-task-class_kotlin_inferredTaskDep2.sample`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket2SnippetsTest/snippet-tasks-incremental-build-custom-task-class_kotlin_inferredTaskDep2.sample)    ```    Task `:processTemplates` of type `org.example.ProcessTemplates`: invocation of 'Task.project' at execution time is unsupported.    ```* `snippet-tasks-incremental-build-custom-task-class_kotlin_inferredTaskDep.sample`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket2SnippetsTest/snippet-tasks-incremental-build-custom-task-class_kotlin_inferredTaskDep.sample)    ```    Task `:packageFiles` of type `org.gradle.api.tasks.bundling.Zip`: cannot serialize object of type 'org.example.ProcessTemplates', a subtype of 'org.gradle.api.Task', as these are not supported with the configuration cache.    Task `:processTemplates` of type `org.example.ProcessTemplates`: invocation of 'Task.project' at execution time is unsupported.    ```### How to reproduceTo reproduce the failure in the Gradle documentation tests, run the following in the `gradle/gradle`repository:```sh./gradlew :docs:docsTest \    -PrunBrokenConfigurationCacheDocsTests=true \    -PenableConfigurationCacheForDocsTests=true \    --tests ""*snippet-tasks-incremental-build-custom-task-class_groovy_customTaskClassWithInputOutputAnnotations.sample"" \    --tests ""*snippet-tasks-incremental-build-custom-task-class_groovy_incrementalAdHocTask.sample"" \    --tests ""*snippet-tasks-incremental-build-custom-task-class_groovy_inferredTaskDep2.sample"" \    --tests ""*snippet-tasks-incremental-build-custom-task-class_groovy_inferredTaskDep.sample"" \    --tests ""*snippet-tasks-incremental-build-custom-task-class_kotlin_customTaskClassWithInputOutputAnnotations.sample"" \    --tests ""*snippet-tasks-incremental-build-custom-task-class_kotlin_incrementalAdHocTaskNoSource.sample"" \    --tests ""*snippet-tasks-incremental-build-custom-task-class_kotlin_incrementalAdHocTask.sample"" \    --tests ""*snippet-tasks-incremental-build-custom-task-class_kotlin_inferredTaskDep2.sample"" \    --tests ""*snippet-tasks-incremental-build-custom-task-class_kotlin_inferredTaskDep.sample""```In the test build outputs, which you can find in the test report, the configuration cache problems are listed along with the URL pointing to the detailed HTML problems report that can help investigating the violation. You can find more instructions on working with the sample projects in the [FAQ](https://github.com/gradle/cc-hackathon-2022/blob/main/faq.md).### Docs including the snippets from this sample projectThe following doc pages include the snippets from this sample project: - `subprojects/docs/src/docs/userguide/running-builds/performance.adoc`;- `subprojects/docs/src/docs/userguide/authoring-builds/more_about_tasks.adoc`;
"
21819,0,573,222,0,1,h0tk3y,0,"title:CCH22-22: Adjust the `snippets/providers/propertyConvention` sample for configuration cache description:The sample project located under [`subprojects/docs/src/snippets/providers/propertyConvention`](https://github.com/gradle/gradle/tree/master/subprojects/docs/src/snippets/providers/propertyConvention) does not meet [the configuration cache requirements](https://docs.gradle.org/nightly/userguide/configuration_cache.html#config_cache:requirements).The build scripts in the `groovy` and `kotlin` parts of the sample project need to be adjusted to follow the requirements.### ContextThis issue is a part of the [Gradle Configuration Cache Hackathon 2022](https://github.com/gradle/cc-hackathon-2022).If you wish to participate and contribute the fix, please follow [the suggested workflow](https://github.com/gradle/cc-hackathon-2022/blob/main/workflow.md).### Expected behavior- The sample project is fixed so that the related documentation tests pass with configuration cache enabled.- The tests related to this sample project are removed from the `testsToBeFixedForConfigurationCache` list in `subprojects/docs/build.gradle`. You can find the test IDs below.- The doc pages that include the snippets from this sample project might need to be updated to be consistent with the sample. Feel free to ask the team for help with this! You can find the pages listed below.### Test failure detailsThese tests running in `:docs:docsTest` check the sample project and are failing with configuration cache enabled:* `snippet-providers-property-convention_groovy_propertyConvention.sample`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket3SnippetsTest/snippet-providers-property-convention_groovy_propertyConvention.sample)    ```    Could not get unknown property 'objects' for task ':show' of type org.gradle.api.DefaultTask.    ```* `snippet-providers-property-convention_kotlin_propertyConvention.sample`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket3SnippetsTest/snippet-providers-property-convention_kotlin_propertyConvention.sample)    ```    Task `:show` of type `org.gradle.api.DefaultTask`: cannot serialize Gradle script object references as these are not supported with the configuration cache.    ```### How to reproduceTo reproduce the failure in the Gradle documentation tests, run the following in the `gradle/gradle`repository:```sh./gradlew :docs:docsTest \    -PrunBrokenConfigurationCacheDocsTests=true \    -PenableConfigurationCacheForDocsTests=true \    --tests ""*snippet-providers-property-convention_groovy_propertyConvention.sample"" \    --tests ""*snippet-providers-property-convention_kotlin_propertyConvention.sample""```In the test build outputs, which you can find in the test report, the configuration cache problems are listed along with the URL pointing to the detailed HTML problems report that can help investigating the violation. You can find more instructions on working with the sample projects in the [FAQ](https://github.com/gradle/cc-hackathon-2022/blob/main/faq.md).### Docs including the snippets from this sample projectThe following doc pages include the snippets from this sample project: - `subprojects/docs/src/docs/userguide/extending-gradle/lazy_configuration.adoc`;
"
21818,0,287,222,0,1,h0tk3y,0,"title:CCH22-21: Adjust the `snippets/kotlinDsl/multiProjectBuild` sample for configuration cache description:The sample project located under [`subprojects/docs/src/snippets/kotlinDsl/multiProjectBuild`](https://github.com/gradle/gradle/tree/master/subprojects/docs/src/snippets/kotlinDsl/multiProjectBuild) does not meet [the configuration cache requirements](https://docs.gradle.org/nightly/userguide/configuration_cache.html#config_cache:requirements).The build script in the `kotlin` part of the sample project needs to be adjusted to follow the requirements.### ContextThis issue is a part of the [Gradle Configuration Cache Hackathon 2022](https://github.com/gradle/cc-hackathon-2022).If you wish to participate and contribute the fix, please follow [the suggested workflow](https://github.com/gradle/cc-hackathon-2022/blob/main/workflow.md).### Expected behavior- The sample project is fixed so that the related documentation tests pass with configuration cache enabled.- The tests related to this sample project are removed from the `testsToBeFixedForConfigurationCache` list in `subprojects/docs/build.gradle`. You can find the test IDs below.- The doc pages that include the snippets from this sample project might need to be updated to be consistent with the sample. Feel free to ask the team for help with this! You can find the pages listed below.### Test failure detailsThese tests running in `:docs:docsTest` check the sample project and are failing with configuration cache enabled:* `snippet-kotlin-dsl-multi-project-build_kotlin_build.sample`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket1SnippetsTest/snippet-kotlin-dsl-multi-project-build_kotlin_build.sample)    ```    Could not resolve all files for configuration ':domain:compileClasspath'.    ```### How to reproduceTo reproduce the failure in the Gradle documentation tests, run the following in the `gradle/gradle`repository:```sh./gradlew :docs:docsTest \    -PrunBrokenConfigurationCacheDocsTests=true \    -PenableConfigurationCacheForDocsTests=true \    --tests ""*snippet-kotlin-dsl-multi-project-build_kotlin_build.sample""```In the test build outputs, which you can find in the test report, the configuration cache problems are listed along with the URL pointing to the detailed HTML problems report that can help investigating the violation. You can find more instructions on working with the sample projects in the [FAQ](https://github.com/gradle/cc-hackathon-2022/blob/main/faq.md).### Docs including the snippets from this sample projectThe following doc pages include the snippets from this sample project: - `subprojects/docs/src/docs/userguide/api/kotlin_dsl.adoc`;
"
21817,0,552,222,0,1,h0tk3y,0,"title:CCH22-20: Adjust the `snippets/java/fixtures` sample for configuration cache description:The sample project located under [`subprojects/docs/src/snippets/java/fixtures`](https://github.com/gradle/gradle/tree/master/subprojects/docs/src/snippets/java/fixtures) does not meet [the configuration cache requirements](https://docs.gradle.org/nightly/userguide/configuration_cache.html#config_cache:requirements).The build scripts in the `groovy` and `kotlin` parts of the sample project need to be adjusted to follow the requirements.### ContextThis issue is a part of the [Gradle Configuration Cache Hackathon 2022](https://github.com/gradle/cc-hackathon-2022).If you wish to participate and contribute the fix, please follow [the suggested workflow](https://github.com/gradle/cc-hackathon-2022/blob/main/workflow.md).### Expected behavior- The sample project is fixed so that the related documentation tests pass with configuration cache enabled.- The tests related to this sample project are removed from the `testsToBeFixedForConfigurationCache` list in `subprojects/docs/build.gradle`. You can find the test IDs below.- The doc pages that include the snippets from this sample project might need to be updated to be consistent with the sample. Feel free to ask the team for help with this! You can find the pages listed below.### Test failure detailsThese tests running in `:docs:docsTest` check the sample project and are failing with configuration cache enabled:* `snippet-java-fixtures_groovy_javaTestFixtures.sample`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket2SnippetsTest/snippet-java-fixtures_groovy_javaTestFixtures.sample)    ```    Could not get unknown property 'components' for task ':lib:usages' of type org.gradle.api.DefaultTask.    ```* `snippet-java-fixtures_kotlin_javaTestFixtures.sample`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket2SnippetsTest/snippet-java-fixtures_kotlin_javaTestFixtures.sample)    ```    Task `:lib:usages` of type `org.gradle.api.DefaultTask`: cannot serialize Gradle script object references as these are not supported with the configuration cache.    ```### How to reproduceTo reproduce the failure in the Gradle documentation tests, run the following in the `gradle/gradle`repository:```sh./gradlew :docs:docsTest \    -PrunBrokenConfigurationCacheDocsTests=true \    -PenableConfigurationCacheForDocsTests=true \    --tests ""*snippet-java-fixtures_groovy_javaTestFixtures.sample"" \    --tests ""*snippet-java-fixtures_kotlin_javaTestFixtures.sample""```In the test build outputs, which you can find in the test report, the configuration cache problems are listed along with the URL pointing to the detailed HTML problems report that can help investigating the violation. You can find more instructions on working with the sample projects in the [FAQ](https://github.com/gradle/cc-hackathon-2022/blob/main/faq.md).### Docs including the snippets from this sample projectThe following doc pages include the snippets from this sample project: - `subprojects/docs/src/docs/userguide/jvm/java_testing.adoc`;
"
21816,0,673,222,0,1,h0tk3y,0,"title:CCH22-19: Adjust the `snippets/java/customDirs` sample for configuration cache description:The sample project located under [`subprojects/docs/src/snippets/java/customDirs`](https://github.com/gradle/gradle/tree/master/subprojects/docs/src/snippets/java/customDirs) does not meet [the configuration cache requirements](https://docs.gradle.org/nightly/userguide/configuration_cache.html#config_cache:requirements).The build scripts in the `groovy` and `kotlin` parts of the sample project need to be adjusted to follow the requirements.### ContextThis issue is a part of the [Gradle Configuration Cache Hackathon 2022](https://github.com/gradle/cc-hackathon-2022).If you wish to participate and contribute the fix, please follow [the suggested workflow](https://github.com/gradle/cc-hackathon-2022/blob/main/workflow.md).### Expected behavior- The sample project is fixed so that the related documentation tests pass with configuration cache enabled.- The tests related to this sample project are removed from the `testsToBeFixedForConfigurationCache` list in `subprojects/docs/build.gradle`. You can find the test IDs below.- The doc pages that include the snippets from this sample project might need to be updated to be consistent with the sample. Feel free to ask the team for help with this! You can find the pages listed below.### Test failure detailsThese tests running in `:docs:docsTest` check the sample project and are failing with configuration cache enabled:* `snippet-java-custom-dirs_groovy_javaCustomReportDirs.sample`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket2SnippetsTest/snippet-java-custom-dirs_groovy_javaCustomReportDirs.sample)    ```    Build file 'build.gradle': invocation of 'Task.project' at execution time is unsupported.    ```* `snippet-java-custom-dirs_kotlin_javaCustomReportDirs.sample`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket2SnippetsTest/snippet-java-custom-dirs_kotlin_javaCustomReportDirs.sample)    ```    Task `:showDirs` of type `org.gradle.api.DefaultTask`: cannot serialize Gradle script object references as these are not supported with the configuration cache.    Task `:showDirs` of type `org.gradle.api.DefaultTask`: invocation of 'Task.project' at execution time is unsupported.    ```### How to reproduceTo reproduce the failure in the Gradle documentation tests, run the following in the `gradle/gradle`repository:```sh./gradlew :docs:docsTest \    -PrunBrokenConfigurationCacheDocsTests=true \    -PenableConfigurationCacheForDocsTests=true \    --tests ""*snippet-java-custom-dirs_groovy_javaCustomReportDirs.sample"" \    --tests ""*snippet-java-custom-dirs_kotlin_javaCustomReportDirs.sample""```In the test build outputs, which you can find in the test report, the configuration cache problems are listed along with the URL pointing to the detailed HTML problems report that can help investigating the violation. You can find more instructions on working with the sample projects in the [FAQ](https://github.com/gradle/cc-hackathon-2022/blob/main/faq.md).### Docs including the snippets from this sample projectThe following doc pages include the snippets from this sample project: - `subprojects/docs/src/docs/userguide/jvm/building_java_projects.adoc`;- `subprojects/docs/src/docs/userguide/jvm/java_testing.adoc`;
"
21815,0,550,222,0,1,h0tk3y,0,"title:CCH22-18: Adjust the `snippets/java/crossCompilation` sample for configuration cache description:The sample project located under [`subprojects/docs/src/snippets/java/crossCompilation`](https://github.com/gradle/gradle/tree/master/subprojects/docs/src/snippets/java/crossCompilation) does not meet [the configuration cache requirements](https://docs.gradle.org/nightly/userguide/configuration_cache.html#config_cache:requirements).The build scripts in the `groovy` and `kotlin` parts of the sample project need to be adjusted to follow the requirements.### ContextThis issue is a part of the [Gradle Configuration Cache Hackathon 2022](https://github.com/gradle/cc-hackathon-2022).If you wish to participate and contribute the fix, please follow [the suggested workflow](https://github.com/gradle/cc-hackathon-2022/blob/main/workflow.md).### Expected behavior- The sample project is fixed so that the related documentation tests pass with configuration cache enabled.- The tests related to this sample project are removed from the `testsToBeFixedForConfigurationCache` list in `subprojects/docs/build.gradle`. You can find the test IDs below.- The doc pages that include the snippets from this sample project might need to be updated to be consistent with the sample. Feel free to ask the team for help with this! You can find the pages listed below.### Test failure detailsThese tests running in `:docs:docsTest` check the sample project and are failing with configuration cache enabled:* `snippet-java-cross-compilation_groovy_java7CrossCompilation.sample`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket2SnippetsTest/snippet-java-cross-compilation_groovy_java7CrossCompilation.sample)    ```    Could not get unknown property 'docsDir' for task ':checkJavadocOutput' of type org.gradle.api.DefaultTask.    ```* `snippet-java-cross-compilation_kotlin_java7CrossCompilation.sample`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket2SnippetsTest/snippet-java-cross-compilation_kotlin_java7CrossCompilation.sample)    ```    Task `:checkJavadocOutput` of type `org.gradle.api.DefaultTask`: invocation of 'Task.project' at execution time is unsupported.    ```### How to reproduceTo reproduce the failure in the Gradle documentation tests, run the following in the `gradle/gradle`repository:```sh./gradlew :docs:docsTest \    -PrunBrokenConfigurationCacheDocsTests=true \    -PenableConfigurationCacheForDocsTests=true \    --tests ""*snippet-java-cross-compilation_groovy_java7CrossCompilation.sample"" \    --tests ""*snippet-java-cross-compilation_kotlin_java7CrossCompilation.sample""```In the test build outputs, which you can find in the test report, the configuration cache problems are listed along with the URL pointing to the detailed HTML problems report that can help investigating the violation. You can find more instructions on working with the sample projects in the [FAQ](https://github.com/gradle/cc-hackathon-2022/blob/main/faq.md).### Docs including the snippets from this sample projectThe following doc pages include the snippets from this sample project: - `subprojects/docs/src/docs/userguide/jvm/building_java_projects.adoc`;
"
21814,0,1600,222,0,1,h0tk3y,0,"title:CCH22-17: Adjust the `snippets/files/fileCollections` sample for configuration cache description:The sample project located under [`subprojects/docs/src/snippets/files/fileCollections`](https://github.com/gradle/gradle/tree/master/subprojects/docs/src/snippets/files/fileCollections) does not meet [the configuration cache requirements](https://docs.gradle.org/nightly/userguide/configuration_cache.html#config_cache:requirements).The build scripts in the `groovy` and `kotlin` parts of the sample project need to be adjusted to follow the requirements.### ContextThis issue is a part of the [Gradle Configuration Cache Hackathon 2022](https://github.com/gradle/cc-hackathon-2022).If you wish to participate and contribute the fix, please follow [the suggested workflow](https://github.com/gradle/cc-hackathon-2022/blob/main/workflow.md).### Expected behavior- The sample project is fixed so that the related documentation tests pass with configuration cache enabled.- The tests related to this sample project are removed from the `testsToBeFixedForConfigurationCache` list in `subprojects/docs/build.gradle`. You can find the test IDs below.- The doc pages that include the snippets from this sample project might need to be updated to be consistent with the sample. Feel free to ask the team for help with this! You can find the pages listed below.### Test failure detailsThese tests running in `:docs:docsTest` check the sample project and are failing with configuration cache enabled:* `snippet-files-file-collections_groovy_fileCollectionsFiltering.sample`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket2SnippetsTest/snippet-files-file-collections_groovy_fileCollectionsFiltering.sample)    ```    Could not find method relativePath() for arguments [/tmp/junit7906531372354674558/snippet-files-file-collections_groovy_fileCollectionsFiltering.sample/src/file1.txt] on task ':filterTextFiles' of type org.gradle.api.DefaultTask.    ```* `snippet-files-file-collections_groovy_fileCollectionsUsage.sample`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket2SnippetsTest/snippet-files-file-collections_groovy_fileCollectionsUsage.sample)    ```    Could not get unknown property 'layout' for task ':usage' of type org.gradle.api.DefaultTask.    ```* `snippet-files-file-collections_groovy_fileCollectionsWithClosure.sample`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket2SnippetsTest/snippet-files-file-collections_groovy_fileCollectionsWithClosure.sample)    ```    Could not get unknown property 'layout' for task ':list' of type org.gradle.api.DefaultTask.    ```* `snippet-files-file-collections_kotlin_fileCollectionsFiltering.sample`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket2SnippetsTest/snippet-files-file-collections_kotlin_fileCollectionsFiltering.sample)    ```    Task `:filterTextFiles` of type `org.gradle.api.DefaultTask`: cannot serialize Gradle script object references as these are not supported with the configuration cache.    ```* `snippet-files-file-collections_kotlin_fileCollectionsUsage.sample`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket2SnippetsTest/snippet-files-file-collections_kotlin_fileCollectionsUsage.sample)    ```    Task `:usage` of type `org.gradle.api.DefaultTask`: cannot serialize Gradle script object references as these are not supported with the configuration cache.    ```* `snippet-files-file-collections_kotlin_fileCollectionsWithClosure.sample`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket2SnippetsTest/snippet-files-file-collections_kotlin_fileCollectionsWithClosure.sample)    ```    Task `:list` of type `org.gradle.api.DefaultTask`: cannot serialize Gradle script object references as these are not supported with the configuration cache.    ```### How to reproduceTo reproduce the failure in the Gradle documentation tests, run the following in the `gradle/gradle`repository:```sh./gradlew :docs:docsTest \    -PrunBrokenConfigurationCacheDocsTests=true \    -PenableConfigurationCacheForDocsTests=true \    --tests ""*snippet-files-file-collections_groovy_fileCollectionsFiltering.sample"" \    --tests ""*snippet-files-file-collections_groovy_fileCollectionsUsage.sample"" \    --tests ""*snippet-files-file-collections_groovy_fileCollectionsWithClosure.sample"" \    --tests ""*snippet-files-file-collections_kotlin_fileCollectionsFiltering.sample"" \    --tests ""*snippet-files-file-collections_kotlin_fileCollectionsUsage.sample"" \    --tests ""*snippet-files-file-collections_kotlin_fileCollectionsWithClosure.sample""```In the test build outputs, which you can find in the test report, the configuration cache problems are listed along with the URL pointing to the detailed HTML problems report that can help investigating the violation. You can find more instructions on working with the sample projects in the [FAQ](https://github.com/gradle/cc-hackathon-2022/blob/main/faq.md).### Docs including the snippets from this sample projectThe following doc pages include the snippets from this sample project: - `subprojects/docs/src/docs/userguide/authoring-builds/working_with_files.adoc`;
"
21813,0,713,222,0,1,h0tk3y,0,"title:CCH22-16: Adjust the `snippets/files/archivesChangedBaseName` sample for configuration cache description:The sample project located under [`subprojects/docs/src/snippets/files/archivesChangedBaseName`](https://github.com/gradle/gradle/tree/master/subprojects/docs/src/snippets/files/archivesChangedBaseName) does not meet [the configuration cache requirements](https://docs.gradle.org/nightly/userguide/configuration_cache.html#config_cache:requirements).The build scripts in the `groovy` and `kotlin` parts of the sample project need to be adjusted to follow the requirements.### ContextThis issue is a part of the [Gradle Configuration Cache Hackathon 2022](https://github.com/gradle/cc-hackathon-2022).If you wish to participate and contribute the fix, please follow [the suggested workflow](https://github.com/gradle/cc-hackathon-2022/blob/main/workflow.md).### Expected behavior- The sample project is fixed so that the related documentation tests pass with configuration cache enabled.- The tests related to this sample project are removed from the `testsToBeFixedForConfigurationCache` list in `subprojects/docs/build.gradle`. You can find the test IDs below.- The doc pages that include the snippets from this sample project might need to be updated to be consistent with the sample. Feel free to ask the team for help with this! You can find the pages listed below.### Test failure detailsThese tests running in `:docs:docsTest` check the sample project and are failing with configuration cache enabled:* `snippet-files-archives-changed-base-name_groovy_zipWithArchivesBaseName.sample`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket2SnippetsTest/snippet-files-archives-changed-base-name_groovy_zipWithArchivesBaseName.sample)    ```    Build file 'build.gradle': invocation of 'Task.project' at execution time is unsupported.    ```* `snippet-files-archives-changed-base-name_kotlin_zipWithArchivesBaseName.sample`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket2SnippetsTest/snippet-files-archives-changed-base-name_kotlin_zipWithArchivesBaseName.sample)    ```    Task `:echoNames` of type `org.gradle.api.DefaultTask`: cannot serialize Gradle script object references as these are not supported with the configuration cache.    Task `:echoNames` of type `org.gradle.api.DefaultTask`: invocation of 'Task.project' at execution time is unsupported.    ```### How to reproduceTo reproduce the failure in the Gradle documentation tests, run the following in the `gradle/gradle`repository:```sh./gradlew :docs:docsTest \    -PrunBrokenConfigurationCacheDocsTests=true \    -PenableConfigurationCacheForDocsTests=true \    --tests ""*snippet-files-archives-changed-base-name_groovy_zipWithArchivesBaseName.sample"" \    --tests ""*snippet-files-archives-changed-base-name_kotlin_zipWithArchivesBaseName.sample""```In the test build outputs, which you can find in the test report, the configuration cache problems are listed along with the URL pointing to the detailed HTML problems report that can help investigating the violation. You can find more instructions on working with the sample projects in the [FAQ](https://github.com/gradle/cc-hackathon-2022/blob/main/faq.md).### Docs including the snippets from this sample projectThe following doc pages include the snippets from this sample project: - `subprojects/docs/src/docs/userguide/core-plugins/base_plugin.adoc`;- `subprojects/docs/src/docs/userguide/authoring-builds/working_with_files.adoc`;
"
21812,0,618,222,0,1,h0tk3y,0,"title:CCH22-15: Adjust the `snippets/files/archiveNaming` sample for configuration cache description:The sample project located under [`subprojects/docs/src/snippets/files/archiveNaming`](https://github.com/gradle/gradle/tree/master/subprojects/docs/src/snippets/files/archiveNaming) does not meet [the configuration cache requirements](https://docs.gradle.org/nightly/userguide/configuration_cache.html#config_cache:requirements).The build scripts in the `groovy` and `kotlin` parts of the sample project need to be adjusted to follow the requirements.### ContextThis issue is a part of the [Gradle Configuration Cache Hackathon 2022](https://github.com/gradle/cc-hackathon-2022).If you wish to participate and contribute the fix, please follow [the suggested workflow](https://github.com/gradle/cc-hackathon-2022/blob/main/workflow.md).### Expected behavior- The sample project is fixed so that the related documentation tests pass with configuration cache enabled.- The tests related to this sample project are removed from the `testsToBeFixedForConfigurationCache` list in `subprojects/docs/build.gradle`. You can find the test IDs below.- The doc pages that include the snippets from this sample project might need to be updated to be consistent with the sample. Feel free to ask the team for help with this! You can find the pages listed below.### Test failure detailsThese tests running in `:docs:docsTest` check the sample project and are failing with configuration cache enabled:* `snippet-files-archive-naming_groovy_archiveNaming.sample`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket2SnippetsTest/snippet-files-archive-naming_groovy_archiveNaming.sample)    ```    Could not find method relativePath() for arguments [task ':myZip' property 'destinationDirectory'] on task ':myZip' of type org.gradle.api.tasks.bundling.Zip.    ```* `snippet-files-archive-naming_kotlin_archiveNaming.sample`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket2SnippetsTest/snippet-files-archive-naming_kotlin_archiveNaming.sample)    ```    Task `:myZip` of type `org.gradle.api.tasks.bundling.Zip`: cannot serialize Gradle script object references as these are not supported with the configuration cache.    ```### How to reproduceTo reproduce the failure in the Gradle documentation tests, run the following in the `gradle/gradle`repository:```sh./gradlew :docs:docsTest \    -PrunBrokenConfigurationCacheDocsTests=true \    -PenableConfigurationCacheForDocsTests=true \    --tests ""*snippet-files-archive-naming_groovy_archiveNaming.sample"" \    --tests ""*snippet-files-archive-naming_kotlin_archiveNaming.sample""```In the test build outputs, which you can find in the test report, the configuration cache problems are listed along with the URL pointing to the detailed HTML problems report that can help investigating the violation. You can find more instructions on working with the sample projects in the [FAQ](https://github.com/gradle/cc-hackathon-2022/blob/main/faq.md).### Docs including the snippets from this sample projectThe following doc pages include the snippets from this sample project: - `subprojects/docs/src/docs/userguide/authoring-builds/working_with_files.adoc`;
"
21811,0,726,222,0,1,h0tk3y,0,"title:CCH22-14: Adjust the `snippets/dependencyManagement/managingTransitiveDependencies-excludeForDependency` sample for configuration cache description:The sample project located under [`subprojects/docs/src/snippets/dependencyManagement/managingTransitiveDependencies-excludeForDependency`](https://github.com/gradle/gradle/tree/master/subprojects/docs/src/snippets/dependencyManagement/managingTransitiveDependencies-excludeForDependency) does not meet [the configuration cache requirements](https://docs.gradle.org/nightly/userguide/configuration_cache.html#config_cache:requirements).The build scripts in the `groovy` and `kotlin` parts of the sample project need to be adjusted to follow the requirements.### ContextThis issue is a part of the [Gradle Configuration Cache Hackathon 2022](https://github.com/gradle/cc-hackathon-2022).If you wish to participate and contribute the fix, please follow [the suggested workflow](https://github.com/gradle/cc-hackathon-2022/blob/main/workflow.md).### Expected behavior- The sample project is fixed so that the related documentation tests pass with configuration cache enabled.- The tests related to this sample project are removed from the `testsToBeFixedForConfigurationCache` list in `subprojects/docs/build.gradle`. You can find the test IDs below.- The doc pages that include the snippets from this sample project might need to be updated to be consistent with the sample. Feel free to ask the team for help with this! You can find the pages listed below.### Test failure detailsThese tests running in `:docs:docsTest` check the sample project and are failing with configuration cache enabled:* `snippet-dependency-management-managing-transitive-dependencies-exclude-for-dependency_groovy_exclude-transitive-for-dependency.sample`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket1SnippetsTest/snippet-dependency-management-managing-transitive-dependencies-exclude-for-dependency_groovy_exclude-transitive-for-dependency.sample)    ```    Could not get unknown property 'configurations' for task ':printArtifacts' of type org.gradle.api.DefaultTask.    ```* `snippet-dependency-management-managing-transitive-dependencies-exclude-for-dependency_kotlin_exclude-transitive-for-dependency.sample`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket1SnippetsTest/snippet-dependency-management-managing-transitive-dependencies-exclude-for-dependency_kotlin_exclude-transitive-for-dependency.sample)    ```    Task `:printArtifacts` of type `org.gradle.api.DefaultTask`: cannot serialize Gradle script object references as these are not supported with the configuration cache.    ```### How to reproduceTo reproduce the failure in the Gradle documentation tests, run the following in the `gradle/gradle`repository:```sh./gradlew :docs:docsTest \    -PrunBrokenConfigurationCacheDocsTests=true \    -PenableConfigurationCacheForDocsTests=true \    --tests ""*snippet-dependency-management-managing-transitive-dependencies-exclude-for-dependency_groovy_exclude-transitive-for-dependency.sample"" \    --tests ""*snippet-dependency-management-managing-transitive-dependencies-exclude-for-dependency_kotlin_exclude-transitive-for-dependency.sample""```In the test build outputs, which you can find in the test report, the configuration cache problems are listed along with the URL pointing to the detailed HTML problems report that can help investigating the violation. You can find more instructions on working with the sample projects in the [FAQ](https://github.com/gradle/cc-hackathon-2022/blob/main/faq.md).### Docs including the snippets from this sample projectThe following doc pages include the snippets from this sample project: - `subprojects/docs/src/docs/userguide/dep-man/03-controlling-transitive-dependencies/dependency_downgrade_and_exclude.adoc`;
"
21810,0,738,222,0,1,h0tk3y,0,"title:CCH22-13: Adjust the `snippets/dependencyManagement/managingTransitiveDependencies-excludeForConfiguration` sample for configuration cache description:The sample project located under [`subprojects/docs/src/snippets/dependencyManagement/managingTransitiveDependencies-excludeForConfiguration`](https://github.com/gradle/gradle/tree/master/subprojects/docs/src/snippets/dependencyManagement/managingTransitiveDependencies-excludeForConfiguration) does not meet [the configuration cache requirements](https://docs.gradle.org/nightly/userguide/configuration_cache.html#config_cache:requirements).The build scripts in the `groovy` and `kotlin` parts of the sample project need to be adjusted to follow the requirements.### ContextThis issue is a part of the [Gradle Configuration Cache Hackathon 2022](https://github.com/gradle/cc-hackathon-2022).If you wish to participate and contribute the fix, please follow [the suggested workflow](https://github.com/gradle/cc-hackathon-2022/blob/main/workflow.md).### Expected behavior- The sample project is fixed so that the related documentation tests pass with configuration cache enabled.- The tests related to this sample project are removed from the `testsToBeFixedForConfigurationCache` list in `subprojects/docs/build.gradle`. You can find the test IDs below.- The doc pages that include the snippets from this sample project might need to be updated to be consistent with the sample. Feel free to ask the team for help with this! You can find the pages listed below.### Test failure detailsThese tests running in `:docs:docsTest` check the sample project and are failing with configuration cache enabled:* `snippet-dependency-management-managing-transitive-dependencies-exclude-for-configuration_groovy_exclude-transitive-for-configuration.sample`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket1SnippetsTest/snippet-dependency-management-managing-transitive-dependencies-exclude-for-configuration_groovy_exclude-transitive-for-configuration.sample)    ```    Could not get unknown property 'configurations' for task ':printArtifacts' of type org.gradle.api.DefaultTask.    ```* `snippet-dependency-management-managing-transitive-dependencies-exclude-for-configuration_kotlin_exclude-transitive-for-configuration.sample`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket1SnippetsTest/snippet-dependency-management-managing-transitive-dependencies-exclude-for-configuration_kotlin_exclude-transitive-for-configuration.sample)    ```    Task `:printArtifacts` of type `org.gradle.api.DefaultTask`: cannot serialize Gradle script object references as these are not supported with the configuration cache.    ```### How to reproduceTo reproduce the failure in the Gradle documentation tests, run the following in the `gradle/gradle`repository:```sh./gradlew :docs:docsTest \    -PrunBrokenConfigurationCacheDocsTests=true \    -PenableConfigurationCacheForDocsTests=true \    --tests ""*snippet-dependency-management-managing-transitive-dependencies-exclude-for-configuration_groovy_exclude-transitive-for-configuration.sample"" \    --tests ""*snippet-dependency-management-managing-transitive-dependencies-exclude-for-configuration_kotlin_exclude-transitive-for-configuration.sample""```In the test build outputs, which you can find in the test report, the configuration cache problems are listed along with the URL pointing to the detailed HTML problems report that can help investigating the violation. You can find more instructions on working with the sample projects in the [FAQ](https://github.com/gradle/cc-hackathon-2022/blob/main/faq.md).### Docs including the snippets from this sample projectThe following doc pages include the snippets from this sample project: - `subprojects/docs/src/docs/userguide/dep-man/03-controlling-transitive-dependencies/resolution_rules.adoc`;
"
21809,0,652,222,0,1,h0tk3y,0,"title:CCH22-12: Adjust the `snippets/dependencyManagement/dependencyVerification-disablingVerification` sample for configuration cache description:The sample project located under [`subprojects/docs/src/snippets/dependencyManagement/dependencyVerification-disablingVerification`](https://github.com/gradle/gradle/tree/master/subprojects/docs/src/snippets/dependencyManagement/dependencyVerification-disablingVerification) does not meet [the configuration cache requirements](https://docs.gradle.org/nightly/userguide/configuration_cache.html#config_cache:requirements).The build scripts in the `groovy` and `kotlin` parts of the sample project need to be adjusted to follow the requirements.### ContextThis issue is a part of the [Gradle Configuration Cache Hackathon 2022](https://github.com/gradle/cc-hackathon-2022).If you wish to participate and contribute the fix, please follow [the suggested workflow](https://github.com/gradle/cc-hackathon-2022/blob/main/workflow.md).### Expected behavior- The sample project is fixed so that the related documentation tests pass with configuration cache enabled.- The tests related to this sample project are removed from the `testsToBeFixedForConfigurationCache` list in `subprojects/docs/build.gradle`. You can find the test IDs below.- The doc pages that include the snippets from this sample project might need to be updated to be consistent with the sample. Feel free to ask the team for help with this! You can find the pages listed below.### Test failure detailsThese tests running in `:docs:docsTest` check the sample project and are failing with configuration cache enabled:* `snippet-dependency-management-dependency-verification-disabling-verification_groovy_disabling`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket1SnippetsTest/snippet-dependency-management-dependency-verification-disabling-verification_groovy_disabling_verification.sample)    ```    Could not get unknown property 'configurations' for task ':checkDependencies' of type org.gradle.api.DefaultTask.    ```* `snippet-dependency-management-dependency-verification-disabling-verification_kotlin_disabling`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket1SnippetsTest/snippet-dependency-management-dependency-verification-disabling-verification_kotlin_disabling_verification.sample)    ```    Task `:checkDependencies` of type `org.gradle.api.DefaultTask`: cannot serialize Gradle script object references as these are not supported with the configuration cache.    ```### How to reproduceTo reproduce the failure in the Gradle documentation tests, run the following in the `gradle/gradle`repository:```sh./gradlew :docs:docsTest \    -PrunBrokenConfigurationCacheDocsTests=true \    -PenableConfigurationCacheForDocsTests=true \    --tests ""*snippet-dependency-management-dependency-verification-disabling-verification_groovy_disabling"" \    --tests ""*snippet-dependency-management-dependency-verification-disabling-verification_kotlin_disabling""```In the test build outputs, which you can find in the test report, the configuration cache problems are listed along with the URL pointing to the detailed HTML problems report that can help investigating the violation. You can find more instructions on working with the sample projects in the [FAQ](https://github.com/gradle/cc-hackathon-2022/blob/main/faq.md).### Docs including the snippets from this sample projectThe following doc pages include the snippets from this sample project: - `subprojects/docs/src/docs/userguide/dep-man/01-core-dependency-management/dependency_verification.adoc`;
"
21808,0,662,222,0,1,h0tk3y,0,"title:CCH22-11: Adjust the `snippets/dependencyManagement/definingUsingConfigurations-custom` sample for configuration cache description:The sample project located under [`subprojects/docs/src/snippets/dependencyManagement/definingUsingConfigurations-custom`](https://github.com/gradle/gradle/tree/master/subprojects/docs/src/snippets/dependencyManagement/definingUsingConfigurations-custom) does not meet [the configuration cache requirements](https://docs.gradle.org/nightly/userguide/configuration_cache.html#config_cache:requirements).The build scripts in the `groovy` and `kotlin` parts of the sample project need to be adjusted to follow the requirements.### ContextThis issue is a part of the [Gradle Configuration Cache Hackathon 2022](https://github.com/gradle/cc-hackathon-2022).If you wish to participate and contribute the fix, please follow [the suggested workflow](https://github.com/gradle/cc-hackathon-2022/blob/main/workflow.md).### Expected behavior- The sample project is fixed so that the related documentation tests pass with configuration cache enabled.- The tests related to this sample project are removed from the `testsToBeFixedForConfigurationCache` list in `subprojects/docs/build.gradle`. You can find the test IDs below.- The doc pages that include the snippets from this sample project might need to be updated to be consistent with the sample. Feel free to ask the team for help with this! You can find the pages listed below.### Test failure detailsThese tests running in `:docs:docsTest` check the sample project and are failing with configuration cache enabled:* `snippet-dependency-management-defining-using-configurations-custom_groovy_custom-configuration.sample`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket1SnippetsTest/snippet-dependency-management-defining-using-configurations-custom_groovy_custom-configuration.sample)    ```    Could not get unknown property 'configurations' for task ':preCompileJsps' of type org.gradle.api.DefaultTask.    ```* `snippet-dependency-management-defining-using-configurations-custom_kotlin_custom-configuration.sample`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket1SnippetsTest/snippet-dependency-management-defining-using-configurations-custom_kotlin_custom-configuration.sample)    ```    Task `:preCompileJsps` of type `org.gradle.api.DefaultTask`: cannot serialize Gradle script object references as these are not supported with the configuration cache.    ```### How to reproduceTo reproduce the failure in the Gradle documentation tests, run the following in the `gradle/gradle`repository:```sh./gradlew :docs:docsTest \    -PrunBrokenConfigurationCacheDocsTests=true \    -PenableConfigurationCacheForDocsTests=true \    --tests ""*snippet-dependency-management-defining-using-configurations-custom_groovy_custom-configuration.sample"" \    --tests ""*snippet-dependency-management-defining-using-configurations-custom_kotlin_custom-configuration.sample""```In the test build outputs, which you can find in the test report, the configuration cache problems are listed along with the URL pointing to the detailed HTML problems report that can help investigating the violation. You can find more instructions on working with the sample projects in the [FAQ](https://github.com/gradle/cc-hackathon-2022/blob/main/faq.md).### Docs including the snippets from this sample projectThe following doc pages include the snippets from this sample project: - `subprojects/docs/src/docs/userguide/dep-man/01-core-dependency-management/declaring_dependencies.adoc`;
"
21807,0,686,222,0,1,h0tk3y,0,"title:CCH22-10: Adjust the `snippets/dependencyManagement/customizingResolution-metadataRule` sample for configuration cache description:The sample project located under [`subprojects/docs/src/snippets/dependencyManagement/customizingResolution-metadataRule`](https://github.com/gradle/gradle/tree/master/subprojects/docs/src/snippets/dependencyManagement/customizingResolution-metadataRule) does not meet [the configuration cache requirements](https://docs.gradle.org/nightly/userguide/configuration_cache.html#config_cache:requirements).The build scripts in the `groovy` and `kotlin` parts of the sample project need to be adjusted to follow the requirements.### ContextThis issue is a part of the [Gradle Configuration Cache Hackathon 2022](https://github.com/gradle/cc-hackathon-2022).If you wish to participate and contribute the fix, please follow [the suggested workflow](https://github.com/gradle/cc-hackathon-2022/blob/main/workflow.md).### Expected behavior- The sample project is fixed so that the related documentation tests pass with configuration cache enabled.- The tests related to this sample project are removed from the `testsToBeFixedForConfigurationCache` list in `subprojects/docs/build.gradle`. You can find the test IDs below.- The doc pages that include the snippets from this sample project might need to be updated to be consistent with the sample. Feel free to ask the team for help with this! You can find the pages listed below.### Test failure detailsThese tests running in `:docs:docsTest` check the sample project and are failing with configuration cache enabled:* `snippet-dependency-management-customizing-resolution-metadata-rule_groovy_comonentMetadataRules.sample`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket1SnippetsTest/snippet-dependency-management-customizing-resolution-metadata-rule_groovy_comonentMetadataRules.sample)    ```    Could not get unknown property 'configurations' for task ':compileClasspathArtifacts' of type org.gradle.api.DefaultTask.    ```* `snippet-dependency-management-customizing-resolution-metadata-rule_kotlin_comonentMetadataRules.sample`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket1SnippetsTest/snippet-dependency-management-customizing-resolution-metadata-rule_kotlin_comonentMetadataRules.sample)    ```    Task `:compileClasspathArtifacts` of type `org.gradle.api.DefaultTask`: cannot serialize Gradle script object references as these are not supported with the configuration cache.    ```### How to reproduceTo reproduce the failure in the Gradle documentation tests, run the following in the `gradle/gradle`repository:```sh./gradlew :docs:docsTest \    -PrunBrokenConfigurationCacheDocsTests=true \    -PenableConfigurationCacheForDocsTests=true \    --tests ""*snippet-dependency-management-customizing-resolution-metadata-rule_groovy_comonentMetadataRules.sample"" \    --tests ""*snippet-dependency-management-customizing-resolution-metadata-rule_kotlin_comonentMetadataRules.sample""```In the test build outputs, which you can find in the test report, the configuration cache problems are listed along with the URL pointing to the detailed HTML problems report that can help investigating the violation. You can find more instructions on working with the sample projects in the [FAQ](https://github.com/gradle/cc-hackathon-2022/blob/main/faq.md).### Docs including the snippets from this sample projectThe following doc pages include the snippets from this sample project: - `subprojects/docs/src/docs/userguide/dep-man/03-controlling-transitive-dependencies/component_metadata_rules.adoc`;
"
21806,0,698,222,0,1,h0tk3y,0,"title:CCH22-9: Adjust the `snippets/dependencyManagement/customizingResolution-ivyMetadataRule` sample for configuration cache description:The sample project located under [`subprojects/docs/src/snippets/dependencyManagement/customizingResolution-ivyMetadataRule`](https://github.com/gradle/gradle/tree/master/subprojects/docs/src/snippets/dependencyManagement/customizingResolution-ivyMetadataRule) does not meet [the configuration cache requirements](https://docs.gradle.org/nightly/userguide/configuration_cache.html#config_cache:requirements).The build scripts in the `groovy` and `kotlin` parts of the sample project need to be adjusted to follow the requirements.### ContextThis issue is a part of the [Gradle Configuration Cache Hackathon 2022](https://github.com/gradle/cc-hackathon-2022).If you wish to participate and contribute the fix, please follow [the suggested workflow](https://github.com/gradle/cc-hackathon-2022/blob/main/workflow.md).### Expected behavior- The sample project is fixed so that the related documentation tests pass with configuration cache enabled.- The tests related to this sample project are removed from the `testsToBeFixedForConfigurationCache` list in `subprojects/docs/build.gradle`. You can find the test IDs below.- The doc pages that include the snippets from this sample project might need to be updated to be consistent with the sample. Feel free to ask the team for help with this! You can find the pages listed below.### Test failure detailsThese tests running in `:docs:docsTest` check the sample project and are failing with configuration cache enabled:* `snippet-dependency-management-customizing-resolution-ivy-metadata-rule_groovy_ivyComonentMetadataRule.sample`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket1SnippetsTest/snippet-dependency-management-customizing-resolution-ivy-metadata-rule_groovy_ivyComonentMetadataRule.sample)    ```    Could not get unknown property 'configurations' for task ':compileClasspathArtifacts' of type org.gradle.api.DefaultTask.    ```* `snippet-dependency-management-customizing-resolution-ivy-metadata-rule_kotlin_ivyComonentMetadataRule.sample`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket1SnippetsTest/snippet-dependency-management-customizing-resolution-ivy-metadata-rule_kotlin_ivyComonentMetadataRule.sample)    ```    Task `:compileClasspathArtifacts` of type `org.gradle.api.DefaultTask`: cannot serialize Gradle script object references as these are not supported with the configuration cache.    ```### How to reproduceTo reproduce the failure in the Gradle documentation tests, run the following in the `gradle/gradle`repository:```sh./gradlew :docs:docsTest \    -PrunBrokenConfigurationCacheDocsTests=true \    -PenableConfigurationCacheForDocsTests=true \    --tests ""*snippet-dependency-management-customizing-resolution-ivy-metadata-rule_groovy_ivyComonentMetadataRule.sample"" \    --tests ""*snippet-dependency-management-customizing-resolution-ivy-metadata-rule_kotlin_ivyComonentMetadataRule.sample""```In the test build outputs, which you can find in the test report, the configuration cache problems are listed along with the URL pointing to the detailed HTML problems report that can help investigating the violation. You can find more instructions on working with the sample projects in the [FAQ](https://github.com/gradle/cc-hackathon-2022/blob/main/faq.md).### Docs including the snippets from this sample projectThe following doc pages include the snippets from this sample project: - `subprojects/docs/src/docs/userguide/dep-man/04-modeling-features/variant_model.adoc`;
"
21805,0,1266,222,0,1,h0tk3y,0,"title:CCH22-8: Adjust the `snippets/dependencyManagement/customizingResolution-conditionalSubstitutionRule` sample for configuration cache description:The sample project located under [`subprojects/docs/src/snippets/dependencyManagement/customizingResolution-conditionalSubstitutionRule`](https://github.com/gradle/gradle/tree/master/subprojects/docs/src/snippets/dependencyManagement/customizingResolution-conditionalSubstitutionRule) does not meet [the configuration cache requirements](https://docs.gradle.org/nightly/userguide/configuration_cache.html#config_cache:requirements).The build scripts in the `groovy` and `kotlin` parts of the sample project need to be adjusted to follow the requirements.### ContextThis issue is a part of the [Gradle Configuration Cache Hackathon 2022](https://github.com/gradle/cc-hackathon-2022).If you wish to participate and contribute the fix, please follow [the suggested workflow](https://github.com/gradle/cc-hackathon-2022/blob/main/workflow.md).### Expected behavior- The sample project is fixed so that the related documentation tests pass with configuration cache enabled.- The tests related to this sample project are removed from the `testsToBeFixedForConfigurationCache` list in `subprojects/docs/build.gradle`. You can find the test IDs below.- The doc pages that include the snippets from this sample project might need to be updated to be consistent with the sample. Feel free to ask the team for help with this! You can find the pages listed below.### Test failure detailsThese tests running in `:docs:docsTest` check the sample project and are failing with configuration cache enabled:* `snippet-dependency-management-customizing-resolution-conditional-substitution-rule_groovy_showJarFilesLocal.sample`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket1SnippetsTest/snippet-dependency-management-customizing-resolution-conditional-substitution-rule_groovy_showJarFilesLocal.sample)    ```    Could not get unknown property 'configurations' for task ':consumer:showJarFiles' of type org.gradle.api.DefaultTask.    ```* `snippet-dependency-management-customizing-resolution-conditional-substitution-rule_groovy_showJarFiles.sample`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket1SnippetsTest/snippet-dependency-management-customizing-resolution-conditional-substitution-rule_groovy_showJarFiles.sample)    ```    Could not get unknown property 'configurations' for task ':consumer:showJarFiles' of type org.gradle.api.DefaultTask.    ```* `snippet-dependency-management-customizing-resolution-conditional-substitution-rule_kotlin_showJarFilesLocal.sample`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket1SnippetsTest/snippet-dependency-management-customizing-resolution-conditional-substitution-rule_kotlin_showJarFilesLocal.sample)    ```    Task `:consumer:showJarFiles` of type `org.gradle.api.DefaultTask`: cannot serialize Gradle script object references as these are not supported with the configuration cache.    ```* `snippet-dependency-management-customizing-resolution-conditional-substitution-rule_kotlin_showJarFiles.sample`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket1SnippetsTest/snippet-dependency-management-customizing-resolution-conditional-substitution-rule_kotlin_showJarFiles.sample)    ```    Task `:consumer:showJarFiles` of type `org.gradle.api.DefaultTask`: cannot serialize Gradle script object references as these are not supported with the configuration cache.    ```### How to reproduceTo reproduce the failure in the Gradle documentation tests, run the following in the `gradle/gradle`repository:```sh./gradlew :docs:docsTest \    -PrunBrokenConfigurationCacheDocsTests=true \    -PenableConfigurationCacheForDocsTests=true \    --tests ""*snippet-dependency-management-customizing-resolution-conditional-substitution-rule_groovy_showJarFilesLocal.sample"" \    --tests ""*snippet-dependency-management-customizing-resolution-conditional-substitution-rule_groovy_showJarFiles.sample"" \    --tests ""*snippet-dependency-management-customizing-resolution-conditional-substitution-rule_kotlin_showJarFilesLocal.sample"" \    --tests ""*snippet-dependency-management-customizing-resolution-conditional-substitution-rule_kotlin_showJarFiles.sample""```In the test build outputs, which you can find in the test report, the configuration cache problems are listed along with the URL pointing to the detailed HTML problems report that can help investigating the violation. You can find more instructions on working with the sample projects in the [FAQ](https://github.com/gradle/cc-hackathon-2022/blob/main/faq.md).### Docs including the snippets from this sample projectThe following doc pages include the snippets from this sample project: - `subprojects/docs/src/docs/userguide/dep-man/03-controlling-transitive-dependencies/resolution_rules.adoc`;
"
21804,0,504,222,0,1,h0tk3y,0,"title:CCH22-7: Adjust the `snippets/dependencyManagement/customizingResolution-classifierSubstitutionRule` sample for configuration cache description:The sample project located under [`subprojects/docs/src/snippets/dependencyManagement/customizingResolution-classifierSubstitutionRule`](https://github.com/gradle/gradle/tree/master/subprojects/docs/src/snippets/dependencyManagement/customizingResolution-classifierSubstitutionRule) does not meet [the configuration cache requirements](https://docs.gradle.org/nightly/userguide/configuration_cache.html#config_cache:requirements).The build scripts in the `groovy` and `kotlin` parts of the sample project need to be adjusted to follow the requirements.### ContextThis issue is a part of the [Gradle Configuration Cache Hackathon 2022](https://github.com/gradle/cc-hackathon-2022).If you wish to participate and contribute the fix, please follow [the suggested workflow](https://github.com/gradle/cc-hackathon-2022/blob/main/workflow.md).### Expected behavior- The sample project is fixed so that the related documentation tests pass with configuration cache enabled.- The tests related to this sample project are removed from the `testsToBeFixedForConfigurationCache` list in `subprojects/docs/build.gradle`. You can find the test IDs below.- The doc pages that include the snippets from this sample project might need to be updated to be consistent with the sample. Feel free to ask the team for help with this! You can find the pages listed below.### Test failure detailsThese tests running in `:docs:docsTest` check the sample project and are failing with configuration cache enabled:* `snippet-dependency-management-customizing-resolution-classifier-substitution-rule_groovy_resolve.sample`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket1SnippetsTest/snippet-dependency-management-customizing-resolution-classifier-substitution-rule_groovy_resolve.sample)    ```    Could not find co.paralleluniverse:quasar-core:0.7.12_r3.    ```* `snippet-dependency-management-customizing-resolution-classifier-substitution-rule_kotlin_resolve.sample`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket1SnippetsTest/snippet-dependency-management-customizing-resolution-classifier-substitution-rule_kotlin_resolve.sample)    ```    Could not find co.paralleluniverse:quasar-core:0.7.12_r3.    ```### How to reproduceTo reproduce the failure in the Gradle documentation tests, run the following in the `gradle/gradle`repository:```sh./gradlew :docs:docsTest \    -PrunBrokenConfigurationCacheDocsTests=true \    -PenableConfigurationCacheForDocsTests=true \    --tests ""*snippet-dependency-management-customizing-resolution-classifier-substitution-rule_groovy_resolve.sample"" \    --tests ""*snippet-dependency-management-customizing-resolution-classifier-substitution-rule_kotlin_resolve.sample""```In the test build outputs, which you can find in the test report, the configuration cache problems are listed along with the URL pointing to the detailed HTML problems report that can help investigating the violation. You can find more instructions on working with the sample projects in the [FAQ](https://github.com/gradle/cc-hackathon-2022/blob/main/faq.md).### Docs including the snippets from this sample projectThe following doc pages include the snippets from this sample project: - `subprojects/docs/src/docs/userguide/dep-man/03-controlling-transitive-dependencies/resolution_rules.adoc`;
"
21803,0,694,222,0,1,h0tk3y,0,"title:CCH22-6: Adjust the `snippets/dependencyManagement/customizingResolution-capabilitySubstitutionRule` sample for configuration cache description:The sample project located under [`subprojects/docs/src/snippets/dependencyManagement/customizingResolution-capabilitySubstitutionRule`](https://github.com/gradle/gradle/tree/master/subprojects/docs/src/snippets/dependencyManagement/customizingResolution-capabilitySubstitutionRule) does not meet [the configuration cache requirements](https://docs.gradle.org/nightly/userguide/configuration_cache.html#config_cache:requirements).The build scripts in the `groovy` and `kotlin` parts of the sample project need to be adjusted to follow the requirements.### ContextThis issue is a part of the [Gradle Configuration Cache Hackathon 2022](https://github.com/gradle/cc-hackathon-2022).If you wish to participate and contribute the fix, please follow [the suggested workflow](https://github.com/gradle/cc-hackathon-2022/blob/main/workflow.md).### Expected behavior- The sample project is fixed so that the related documentation tests pass with configuration cache enabled.- The tests related to this sample project are removed from the `testsToBeFixedForConfigurationCache` list in `subprojects/docs/build.gradle`. You can find the test IDs below.- The doc pages that include the snippets from this sample project might need to be updated to be consistent with the sample. Feel free to ask the team for help with this! You can find the pages listed below.### Test failure detailsThese tests running in `:docs:docsTest` check the sample project and are failing with configuration cache enabled:* `snippet-dependency-management-customizing-resolution-capability-substitution-rule_groovy_capability`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket1SnippetsTest/snippet-dependency-management-customizing-resolution-capability-substitution-rule_groovy_capability_substitution.sample)    ```    Could not get unknown property 'configurations' for task ':resolve' of type org.gradle.api.DefaultTask.    ```* `snippet-dependency-management-customizing-resolution-capability-substitution-rule_kotlin_capability`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket1SnippetsTest/snippet-dependency-management-customizing-resolution-capability-substitution-rule_kotlin_capability_substitution.sample)    ```    Task `:resolve` of type `org.gradle.api.DefaultTask`: cannot serialize Gradle script object references as these are not supported with the configuration cache.    ```### How to reproduceTo reproduce the failure in the Gradle documentation tests, run the following in the `gradle/gradle`repository:```sh./gradlew :docs:docsTest \    -PrunBrokenConfigurationCacheDocsTests=true \    -PenableConfigurationCacheForDocsTests=true \    --tests ""*snippet-dependency-management-customizing-resolution-capability-substitution-rule_groovy_capability_substitution.sample"" \    --tests ""*snippet-dependency-management-customizing-resolution-capability-substitution-rule_kotlin_capability_substitution.sample""```In the test build outputs, which you can find in the test report, the configuration cache problems are listed along with the URL pointing to the detailed HTML problems report that can help investigating the violation. You can find more instructions on working with the sample projects in the [FAQ](https://github.com/gradle/cc-hackathon-2022/blob/main/faq.md).### Docs including the snippets from this sample projectThe following doc pages include the snippets from this sample project: - `subprojects/docs/src/docs/userguide/dep-man/03-controlling-transitive-dependencies/resolution_rules.adoc`;
"
21802,0,717,222,0,1,h0tk3y,0,"title:CCH22-5: Adjust the `snippets/buildlifecycle/projectEvaluateEvents` sample for configuration cache description:The sample project located under [`subprojects/docs/src/snippets/buildlifecycle/projectEvaluateEvents`](https://github.com/gradle/gradle/tree/master/subprojects/docs/src/snippets/buildlifecycle/projectEvaluateEvents) does not meet [the configuration cache requirements](https://docs.gradle.org/nightly/userguide/configuration_cache.html#config_cache:requirements).The build scripts in the `groovy` and `kotlin` parts of the sample project need to be adjusted to follow the requirements.### ContextThis issue is a part of the [Gradle Configuration Cache Hackathon 2022](https://github.com/gradle/cc-hackathon-2022).If you wish to participate and contribute the fix, please follow [the suggested workflow](https://github.com/gradle/cc-hackathon-2022/blob/main/workflow.md).### Expected behavior- The sample project is fixed so that the related documentation tests pass with configuration cache enabled.- The tests related to this sample project are removed from the `testsToBeFixedForConfigurationCache` list in `subprojects/docs/build.gradle`. You can find the test IDs below.- The doc pages that include the snippets from this sample project might need to be updated to be consistent with the sample. Feel free to ask the team for help with this! You can find the pages listed below.### Test failure detailsThese tests running in `:docs:docsTest` check the sample project and are failing with configuration cache enabled:* `snippet-buildlifecycle-project-evaluate-events_groovy_projectEvaluateEvents.sample`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket3SnippetsTest/snippet-buildlifecycle-project-evaluate-events_groovy_projectEvaluateEvents.sample)    ```    Task `:project-a:test` of type `org.gradle.api.DefaultTask`: cannot serialize object of type 'org.gradle.api.internal.project.DefaultProject', a subtype of 'org.gradle.api.Project', as these are not supported with the configuration cache.            ```* `snippet-buildlifecycle-project-evaluate-events_kotlin_projectEvaluateEvents.sample`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket3SnippetsTest/snippet-buildlifecycle-project-evaluate-events_kotlin_projectEvaluateEvents.sample)    ```    Task `:project-a:test` of type `org.gradle.api.DefaultTask`: invocation of 'Task.project' at execution time is unsupported.    ```### How to reproduceTo reproduce the failure in the Gradle documentation tests, run the following in the `gradle/gradle`repository:```sh./gradlew :docs:docsTest \    -PrunBrokenConfigurationCacheDocsTests=true \    -PenableConfigurationCacheForDocsTests=true \    --tests ""*snippet-buildlifecycle-project-evaluate-events_groovy_projectEvaluateEvents.sample"" \    --tests ""*snippet-buildlifecycle-project-evaluate-events_kotlin_projectEvaluateEvents.sample""```In the test build outputs, which you can find in the test report, the configuration cache problems are listed along with the URL pointing to the detailed HTML problems report that can help investigating the violation. You can find more instructions on working with the sample projects in the [FAQ](https://github.com/gradle/cc-hackathon-2022/blob/main/faq.md).### Docs including the snippets from this sample projectThe following doc pages include the snippets from this sample project: - `subprojects/docs/src/docs/userguide/authoring-builds/build_lifecycle.adoc`;
"
21801,0,546,222,0,1,h0tk3y,0,"title:CCH22-4: Adjust the `snippets/buildCache/cacheable-bundle-task` sample for configuration cache description:The sample project located under [`subprojects/docs/src/snippets/buildCache/cacheable-bundle-task`](https://github.com/gradle/gradle/tree/master/subprojects/docs/src/snippets/buildCache/cacheable-bundle-task) does not meet [the configuration cache requirements](https://docs.gradle.org/nightly/userguide/configuration_cache.html#config_cache:requirements).The build scripts in the `groovy` and `kotlin` parts of the sample project need to be adjusted to follow the requirements.### ContextThis issue is a part of the [Gradle Configuration Cache Hackathon 2022](https://github.com/gradle/cc-hackathon-2022).If you wish to participate and contribute the fix, please follow [the suggested workflow](https://github.com/gradle/cc-hackathon-2022/blob/main/workflow.md).### Expected behavior- The sample project is fixed so that the related documentation tests pass with configuration cache enabled.- The tests related to this sample project are removed from the `testsToBeFixedForConfigurationCache` list in `subprojects/docs/build.gradle`. You can find the test IDs below.- The doc pages that include the snippets from this sample project might need to be updated to be consistent with the sample. Feel free to ask the team for help with this! You can find the pages listed below.### Test failure detailsThese tests running in `:docs:docsTest` check the sample project and are failing with configuration cache enabled:* `snippet-build-cache-cacheable-bundle-task_groovy_cacheableBundleTask.sample`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket3SnippetsTest/snippet-build-cache-cacheable-bundle-task_groovy_cacheableBundleTask.sample)    ```    Task `:bundle` of type `BundleTask`: invocation of 'Task.project' at execution time is unsupported.    ```* `snippet-build-cache-cacheable-bundle-task_kotlin_cacheableBundleTask.sample`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket3SnippetsTest/snippet-build-cache-cacheable-bundle-task_kotlin_cacheableBundleTask.sample)    ```    Task `:bundle` of type `Build_gradle$BundleTask`: invocation of 'Task.project' at execution time is unsupported.	    ```### How to reproduceTo reproduce the failure in the Gradle documentation tests, run the following in the `gradle/gradle`repository:```sh./gradlew :docs:docsTest \    -PrunBrokenConfigurationCacheDocsTests=true \    -PenableConfigurationCacheForDocsTests=true \    --tests ""*snippet-build-cache-cacheable-bundle-task_groovy_cacheableBundleTask.sample"" \    --tests ""*snippet-build-cache-cacheable-bundle-task_kotlin_cacheableBundleTask.sample""```In the test build outputs, which you can find in the test report, the configuration cache problems are listed along with the URL pointing to the detailed HTML problems report that can help investigating the violation. You can find more instructions on working with the sample projects in the [FAQ](https://github.com/gradle/cc-hackathon-2022/blob/main/faq.md).### Docs including the snippets from this sample projectThe following doc pages include the snippets from this sample project: - `subprojects/docs/src/docs/userguide/build-cache/build_cache.adoc`;
"
21800,0,1098,222,0,1,h0tk3y,0,"title:CCH22-3: Adjust the `snippets/buildCache/cacheable-bundle` sample for configuration cache description:The sample project located under [`subprojects/docs/src/snippets/buildCache/cacheable-bundle`](https://github.com/gradle/gradle/tree/master/subprojects/docs/src/snippets/buildCache/cacheable-bundle) does not meet [the configuration cache requirements](https://docs.gradle.org/nightly/userguide/configuration_cache.html#config_cache:requirements).The build scripts in the `groovy` and `kotlin` parts of the sample project need to be adjusted to follow the requirements.### ContextThis issue is a part of the [Gradle Configuration Cache Hackathon 2022](https://github.com/gradle/cc-hackathon-2022).If you wish to participate and contribute the fix, please follow [the suggested workflow](https://github.com/gradle/cc-hackathon-2022/blob/main/workflow.md).### Expected behavior- The sample project is fixed so that the related documentation tests pass with configuration cache enabled.- The tests related to this sample project are removed from the `testsToBeFixedForConfigurationCache` list in `subprojects/docs/build.gradle`. You can find the test IDs below.- The doc pages that include the snippets from this sample project might need to be updated to be consistent with the sample. Feel free to ask the team for help with this! You can find the pages listed below.### Test failure detailsThese tests running in `:docs:docsTest` check the sample project and are failing with configuration cache enabled:* `snippet-build-cache-cacheable-bundle_groovy_cacheableBundle-caching.sample`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket3SnippetsTest/snippet-build-cache-cacheable-bundle_groovy_cacheableBundle-caching.sample)    ```    Task `:bundle` of type `NpmTask`: invocation of 'Task.project' at execution time is unsupported.    ```* `snippet-build-cache-cacheable-bundle_groovy_cacheableBundle.sample`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket3SnippetsTest/snippet-build-cache-cacheable-bundle_groovy_cacheableBundle.sample)    ```    Task `:bundle` of type `NpmTask`: invocation of 'Task.project' at execution time is unsupported.    ```* `snippet-build-cache-cacheable-bundle_kotlin_cacheableBundle-caching.sample`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket3SnippetsTest/snippet-build-cache-cacheable-bundle_kotlin_cacheableBundle-caching.sample)    ```    Task `:bundle` of type `Build_gradle$NpmTask`: invocation of 'Task.project' at execution time is unsupported.    ```* `snippet-build-cache-cacheable-bundle_kotlin_cacheableBundle.sample`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket3SnippetsTest/snippet-build-cache-cacheable-bundle_kotlin_cacheableBundle.sample)    ```    Task `:bundle` of type `Build_gradle$NpmTask`: invocation of 'Task.project' at execution time is unsupported.    Task `:printBundle` of type `org.gradle.api.DefaultTask`: cannot serialize Gradle script object references as these are not supported with the configuration cache.    ```### How to reproduceTo reproduce the failure in the Gradle documentation tests, run the following in the `gradle/gradle`repository:```sh./gradlew :docs:docsTest \    -PrunBrokenConfigurationCacheDocsTests=true \    -PenableConfigurationCacheForDocsTests=true \    --tests ""*snippet-build-cache-cacheable-bundle_groovy_cacheableBundle-caching.sample"" \    --tests ""*snippet-build-cache-cacheable-bundle_groovy_cacheableBundle.sample"" \    --tests ""*snippet-build-cache-cacheable-bundle_kotlin_cacheableBundle-caching.sample"" \    --tests ""*snippet-build-cache-cacheable-bundle_kotlin_cacheableBundle.sample""```In the test build outputs, which you can find in the test report, the configuration cache problems are listed along with the URL pointing to the detailed HTML problems report that can help investigating the violation. You can find more instructions on working with the sample projects in the [FAQ](https://github.com/gradle/cc-hackathon-2022/blob/main/faq.md).### Docs including the snippets from this sample projectThe following doc pages include the snippets from this sample project: - `subprojects/docs/src/docs/userguide/build-cache/build_cache.adoc`;
"
21799,0,610,222,0,1,h0tk3y,0,"title:CCH22-2: Adjust the `snippets/artifacts/generatedFileDependencies` sample for configuration cache description:The sample project located under [`subprojects/docs/src/snippets/artifacts/generatedFileDependencies`](https://github.com/gradle/gradle/tree/master/subprojects/docs/src/snippets/artifacts/generatedFileDependencies) does not meet [the configuration cache requirements](https://docs.gradle.org/nightly/userguide/configuration_cache.html#config_cache:requirements).The build scripts in the `groovy` and `kotlin` parts of the sample project need to be adjusted to follow the requirements.### ContextThis issue is a part of the [Gradle Configuration Cache Hackathon 2022](https://github.com/gradle/cc-hackathon-2022).If you wish to participate and contribute the fix, please follow [the suggested workflow](https://github.com/gradle/cc-hackathon-2022/blob/main/workflow.md).### Expected behavior- The sample project is fixed so that the related documentation tests pass with configuration cache enabled.- The tests related to this sample project are removed from the `testsToBeFixedForConfigurationCache` list in `subprojects/docs/build.gradle`. You can find the test IDs below.- The doc pages that include the snippets from this sample project might need to be updated to be consistent with the sample. Feel free to ask the team for help with this! You can find the pages listed below.### Test failure detailsThese tests running in `:docs:docsTest` check the sample project and are failing with configuration cache enabled:* `snippet-artifacts-generated-file-dependencies_groovy_generatedFileDependencies.sample`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket3SnippetsTest/snippet-artifacts-generated-file-dependencies_groovy_generatedFileDependencies.sample)    ```    Could not get unknown property 'configurations' for task ':list' of type org.gradle.api.DefaultTask.    ```* `snippet-artifacts-generated-file-dependencies_kotlin_generatedFileDependencies.sample`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket3SnippetsTest/snippet-artifacts-generated-file-dependencies_kotlin_generatedFileDependencies.sample)    ```    Task `:list` of type `org.gradle.api.DefaultTask`: cannot serialize Gradle script object references as these are not supported with the configuration cache.    ```### How to reproduceTo reproduce the failure in the Gradle documentation tests, run the following in the `gradle/gradle`repository:```sh./gradlew :docs:docsTest \    -PrunBrokenConfigurationCacheDocsTests=true \    -PenableConfigurationCacheForDocsTests=true \    --tests ""*snippet-artifacts-generated-file-dependencies_groovy_generatedFileDependencies.sample"" \    --tests ""*snippet-artifacts-generated-file-dependencies_kotlin_generatedFileDependencies.sample""```In the test build outputs, which you can find in the test report, the configuration cache problems are listed along with the URL pointing to the detailed HTML problems report that can help investigating the violation. You can find more instructions on working with the sample projects in the [FAQ](https://github.com/gradle/cc-hackathon-2022/blob/main/faq.md).### Docs including the snippets from this sample projectThe following doc pages include the snippets from this sample project: - `subprojects/docs/src/docs/userguide/dep-man/01-core-dependency-management/declaring_dependencies.adoc`;
"
21798,0,324,222,0,1,h0tk3y,0,"title:CCH22-1: Adjust the `snippets/artifacts/defineRepository` sample for configuration cache description:The sample project located under [`subprojects/docs/src/snippets/artifacts/defineRepository`](https://github.com/gradle/gradle/tree/master/subprojects/docs/src/snippets/artifacts/defineRepository) does not meet [the configuration cache requirements](https://docs.gradle.org/nightly/userguide/configuration_cache.html#config_cache:requirements).The build script in the `groovy` part of the sample project needs to be adjusted to follow the requirements.### ContextThis issue is a part of the [Gradle Configuration Cache Hackathon 2022](https://github.com/gradle/cc-hackathon-2022).If you wish to participate and contribute the fix, please follow [the suggested workflow](https://github.com/gradle/cc-hackathon-2022/blob/main/workflow.md).### Expected behavior- The sample project is fixed so that the related documentation tests pass with configuration cache enabled.- The tests related to this sample project are removed from the `testsToBeFixedForConfigurationCache` list in `subprojects/docs/build.gradle`. You can find the test IDs below.- The doc pages that include the snippets from this sample project might need to be updated to be consistent with the sample. Feel free to ask the team for help with this! You can find the pages listed below.### Test failure detailsThese tests running in `:docs:docsTest` check the sample project and are failing with configuration cache enabled:* `snippet-artifacts-define-repository_groovy_defineMavenCentral.sample`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket3SnippetsTest/snippet-artifacts-define-repository_groovy_defineMavenCentral.sample)    ```    Could not get unknown property 'repositories' for task ':lookup' of type org.gradle.api.DefaultTask.    ```### How to reproduceTo reproduce the failure in the Gradle documentation tests, run the following in the `gradle/gradle`repository:```sh./gradlew :docs:docsTest \    -PrunBrokenConfigurationCacheDocsTests=true \    -PenableConfigurationCacheForDocsTests=true \    --tests ""*snippet-artifacts-define-repository_groovy_defineMavenCentral.sample""```In the test build outputs, which you can find in the test report, the configuration cache problems are listed along with the URL pointing to the detailed HTML problems report that can help investigating the violation. You can find more instructions on working with the sample projects in the [FAQ](https://github.com/gradle/cc-hackathon-2022/blob/main/faq.md).### Docs including the snippets from this sample projectThe following doc pages include the snippets from this sample project: - `subprojects/docs/src/docs/userguide/jvm/dependency_management_for_java_projects.adoc`;- `subprojects/docs/src/docs/userguide/dep-man/01-core-dependency-management/declaring_repositories.adoc`;
"
21783,0,31195,7,0,1,bingranl,0,"title:dependency resolution error should be thrown in the same way regardless of whether config caching is enabled or not description:### Expected Behavior<!--- Tell us what should happen -->Regardless of whether config caching is enabled or not, users should see a same error message if there is a dependency resolution failure.For example, we expected to see the error like below when dependency resolution fails```Execution failed for task ':app:javaPreCompileDebug'.> Could not resolve all files for configuration ':app:debugAnnotationProcessorClasspath'.   > Could not find android.arch.persistence.room:compiler:2.0.0.     Searched in the following locations:       - file:/usr/local/google/home/bingran/studio-main/out/repo/android/arch/persistence/room/compiler/2.0.0/compiler-2.0.0.pom       - file:/usr/local/google/home/bingran/studio-main/out/repo/android/arch/persistence/room/compiler/2.0.0/compiler-2.0.0.jar       - file:/usr/local/google/home/bingran/studio-main/prebuilts/tools/common/m2/repository/android/arch/persistence/room/compiler/2.0.0/compiler-2.0.0.pom```### Current Behavior<!--- Tell us what happens instead of the expected behavior -->However, with 7.6-20220822144040+0000 users would see error message like below. The error message is misleading and makes users think there is something wrong with the config caching rather than the dependency resolution. ```com.android.build.gradle.integration.application.JetifierTest > test invalid android_arch dependencies are not replaced[withKotlin_false] FAILED    org.gradle.tooling.BuildException: Could not execute build using connection to Gradle distribution 'file:/usr/local/google/home/bingran/studio-main/tools/external/gradle/gradle-7.6-20220822144040+0000-bin.zip'.        at org.gradle.tooling.internal.consumer.ExceptionTransformer.transform(ExceptionTransformer.java:51)        at org.gradle.tooling.internal.consumer.ExceptionTransformer.transform(ExceptionTransformer.java:29)        at org.gradle.tooling.internal.consumer.ResultHandlerAdapter.onFailure(ResultHandlerAdapter.java:43)        at org.gradle.tooling.internal.consumer.async.DefaultAsyncConsumerActionExecutor$1$1.run(DefaultAsyncConsumerActionExecutor.java:69)        at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)        at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)        at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)        at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)        at java.base/java.lang.Thread.run(Thread.java:833)        Caused by:        org.gradle.internal.exceptions.LocationAwareException: Configuration cache state could not be cached: field 'spec' from type 'org.gradle.api.internal.tasks.execution.SelfDescribingSpec': error writing value of type 'org.gradle.api.internal.tasks.compile.CompilerForkUtils$$Lambda$965/0x0000000801b40a38'            at org.gradle.initialization.exception.DefaultExceptionAnalyser.transform(DefaultExceptionAnalyser.java:103)            at org.gradle.initialization.exception.DefaultExceptionAnalyser.collectFailures(DefaultExceptionAnalyser.java:67)            at org.gradle.initialization.exception.MultipleBuildFailuresExceptionAnalyser.transform(MultipleBuildFailuresExceptionAnalyser.java:55)            at org.gradle.initialization.exception.StackTraceSanitizingExceptionAnalyser.transform(StackTraceSanitizingExceptionAnalyser.java:39)            at org.gradle.internal.buildtree.DefaultBuildTreeFinishExecutor.finishBuildTree(DefaultBuildTreeFinishExecutor.java:54)            at org.gradle.configurationcache.ConfigurationCacheAwareFinishExecutor.finishBuildTree(ConfigurationCacheAwareFinishExecutor.kt:28)            at org.gradle.internal.buildtree.DefaultBuildTreeLifecycleController.lambda$runBuild$4(DefaultBuildTreeLifecycleController.java:111)            at org.gradle.internal.model.StateTransitionController.lambda$transition$5(StateTransitionController.java:166)            at org.gradle.internal.model.StateTransitionController.doTransition(StateTransitionController.java:247)            at org.gradle.internal.model.StateTransitionController.lambda$transition$6(StateTransitionController.java:166)            at org.gradle.internal.work.DefaultSynchronizer.withLock(DefaultSynchronizer.java:44)            at org.gradle.internal.model.StateTransitionController.transition(StateTransitionController.java:166)            at org.gradle.internal.buildtree.DefaultBuildTreeLifecycleController.runBuild(DefaultBuildTreeLifecycleController.java:103)            at org.gradle.internal.buildtree.DefaultBuildTreeLifecycleController.scheduleAndRunTasks(DefaultBuildTreeLifecycleController.java:69)            at org.gradle.tooling.internal.provider.runner.BuildModelActionRunner.run(BuildModelActionRunner.java:53)            at org.gradle.launcher.exec.ChainingBuildActionRunner.run(ChainingBuildActionRunner.java:35)            at org.gradle.internal.buildtree.ProblemReportingBuildActionRunner.run(ProblemReportingBuildActionRunner.java:49)            at org.gradle.launcher.exec.BuildOutcomeReportingBuildActionRunner.run(BuildOutcomeReportingBuildActionRunner.java:65)            at org.gradle.tooling.internal.provider.FileSystemWatchingBuildActionRunner.run(FileSystemWatchingBuildActionRunner.java:136)            at org.gradle.launcher.exec.BuildCompletionNotifyingBuildActionRunner.run(BuildCompletionNotifyingBuildActionRunner.java:41)            at org.gradle.launcher.exec.RootBuildLifecycleBuildActionExecutor.lambda$execute$0(RootBuildLifecycleBuildActionExecutor.java:40)            at org.gradle.composite.internal.DefaultRootBuildState.run(DefaultRootBuildState.java:127)            at org.gradle.launcher.exec.RootBuildLifecycleBuildActionExecutor.execute(RootBuildLifecycleBuildActionExecutor.java:40)            at org.gradle.internal.buildtree.DefaultBuildTreeContext.execute(DefaultBuildTreeContext.java:40)            at org.gradle.launcher.exec.BuildTreeLifecycleBuildActionExecutor.lambda$execute$0(BuildTreeLifecycleBuildActionExecutor.java:65)            at org.gradle.internal.buildtree.BuildTreeState.run(BuildTreeState.java:53)            at org.gradle.launcher.exec.BuildTreeLifecycleBuildActionExecutor.execute(BuildTreeLifecycleBuildActionExecutor.java:65)            at org.gradle.launcher.exec.RunAsBuildOperationBuildActionExecutor$3.call(RunAsBuildOperationBuildActionExecutor.java:61)            at org.gradle.launcher.exec.RunAsBuildOperationBuildActionExecutor$3.call(RunAsBuildOperationBuildActionExecutor.java:57)            at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)            at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)            at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)            at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)            at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)            at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)            at org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)            at org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)            at org.gradle.launcher.exec.RunAsBuildOperationBuildActionExecutor.execute(RunAsBuildOperationBuildActionExecutor.java:57)            at org.gradle.launcher.exec.RunAsWorkerThreadBuildActionExecutor.lambda$execute$0(RunAsWorkerThreadBuildActionExecutor.java:36)            at org.gradle.internal.work.DefaultWorkerLeaseService.withLocks(DefaultWorkerLeaseService.java:249)            at org.gradle.internal.work.DefaultWorkerLeaseService.runAsWorkerThread(DefaultWorkerLeaseService.java:109)            at org.gradle.launcher.exec.RunAsWorkerThreadBuildActionExecutor.execute(RunAsWorkerThreadBuildActionExecutor.java:36)            at org.gradle.tooling.internal.provider.continuous.ContinuousBuildActionExecutor.execute(ContinuousBuildActionExecutor.java:110)            at org.gradle.tooling.internal.provider.SubscribableBuildActionExecutor.execute(SubscribableBuildActionExecutor.java:64)            at org.gradle.internal.session.DefaultBuildSessionContext.execute(DefaultBuildSessionContext.java:46)            at org.gradle.tooling.internal.provider.BuildSessionLifecycleBuildActionExecuter$ActionImpl.apply(BuildSessionLifecycleBuildActionExecuter.java:100)            at org.gradle.tooling.internal.provider.BuildSessionLifecycleBuildActionExecuter$ActionImpl.apply(BuildSessionLifecycleBuildActionExecuter.java:88)            at org.gradle.internal.session.BuildSessionState.run(BuildSessionState.java:69)            at org.gradle.tooling.internal.provider.BuildSessionLifecycleBuildActionExecuter.execute(BuildSessionLifecycleBuildActionExecuter.java:62)            at org.gradle.tooling.internal.provider.BuildSessionLifecycleBuildActionExecuter.execute(BuildSessionLifecycleBuildActionExecuter.java:41)            at org.gradle.tooling.internal.provider.StartParamsValidatingActionExecuter.execute(StartParamsValidatingActionExecuter.java:63)            at org.gradle.tooling.internal.provider.StartParamsValidatingActionExecuter.execute(StartParamsValidatingActionExecuter.java:31)            at org.gradle.tooling.internal.provider.SessionFailureReportingActionExecuter.execute(SessionFailureReportingActionExecuter.java:52)            at org.gradle.tooling.internal.provider.SessionFailureReportingActionExecuter.execute(SessionFailureReportingActionExecuter.java:40)            at org.gradle.tooling.internal.provider.SetupLoggingActionExecuter.execute(SetupLoggingActionExecuter.java:47)            at org.gradle.tooling.internal.provider.SetupLoggingActionExecuter.execute(SetupLoggingActionExecuter.java:31)            at org.gradle.launcher.daemon.server.exec.ExecuteBuild.doBuild(ExecuteBuild.java:65)            at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:37)            at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)            at org.gradle.launcher.daemon.server.exec.WatchForDisconnection.execute(WatchForDisconnection.java:39)            at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)            at org.gradle.launcher.daemon.server.exec.ResetDeprecationLogger.execute(ResetDeprecationLogger.java:29)            at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)            at org.gradle.launcher.daemon.server.exec.RequestStopIfSingleUsedDaemon.execute(RequestStopIfSingleUsedDaemon.java:35)            at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)            at org.gradle.launcher.daemon.server.exec.ForwardClientInput$2.create(ForwardClientInput.java:78)            at org.gradle.launcher.daemon.server.exec.ForwardClientInput$2.create(ForwardClientInput.java:75)            at org.gradle.util.internal.Swapper.swap(Swapper.java:38)            at org.gradle.launcher.daemon.server.exec.ForwardClientInput.execute(ForwardClientInput.java:75)            at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)            at org.gradle.launcher.daemon.server.exec.LogAndCheckHealth.execute(LogAndCheckHealth.java:55)            at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)            at org.gradle.launcher.daemon.server.exec.LogToClient.doBuild(LogToClient.java:63)            at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:37)            at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)            at org.gradle.launcher.daemon.server.exec.EstablishBuildEnvironment.doBuild(EstablishBuildEnvironment.java:84)            at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:37)            at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)            at org.gradle.launcher.daemon.server.exec.StartBuildOrRespondWithBusy$1.run(StartBuildOrRespondWithBusy.java:52)            at org.gradle.launcher.daemon.server.DaemonStateCoordinator$1.run(DaemonStateCoordinator.java:297)            at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)            at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)            Caused by:            org.gradle.configurationcache.ConfigurationCacheError: Configuration cache state could not be cached: field 'spec' from type 'org.gradle.api.internal.tasks.execution.SelfDescribingSpec': error writing value of type 'org.gradle.api.internal.tasks.compile.CompilerForkUtils$$Lambda$965/0x0000000801b40a38'                at org.gradle.configurationcache.problems.ProblemsListener$DefaultImpls.onError(ProblemsListener.kt:31)                at org.gradle.configurationcache.problems.ConfigurationCacheProblems.onError(ConfigurationCacheProblems.kt:37)                at org.gradle.configurationcache.serialization.AbstractIsolateContext.onError(Contexts.kt:399)                at org.gradle.configurationcache.serialization.beans.BeanPropertyWriterKt.writeNextProperty(BeanPropertyWriter.kt:102)                at org.gradle.configurationcache.serialization.beans.BeanPropertyWriterKt$writeNextProperty$1.invokeSuspend(BeanPropertyWriter.kt)                at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)                at kotlin.coroutines.SafeContinuation.resumeWith(SafeContinuationJvm.kt:41)                at org.gradle.configurationcache.serialization.CombinatorsKt$reentrant$1$encodeLoop$$inlined$Continuation$1.resumeWith(Continuation.kt:167)                at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:46)                at kotlin.coroutines.SafeContinuation.resumeWith(SafeContinuationJvm.kt:41)                at org.gradle.configurationcache.serialization.CombinatorsKt$reentrant$1$encodeLoop$$inlined$Continuation$1.resumeWith(Continuation.kt:167)                at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:46)                at kotlin.coroutines.SafeContinuation.resumeWith(SafeContinuationJvm.kt:41)                at org.gradle.configurationcache.serialization.CombinatorsKt$reentrant$1$encodeLoop$$inlined$Continuation$1.resumeWith(Continuation.kt:167)                at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:46)                at kotlin.coroutines.ContinuationKt.startCoroutine(Continuation.kt:115)                at org.gradle.configurationcache.serialization.CombinatorsKt$reentrant$1.encodeLoop(Combinators.kt:145)                at org.gradle.configurationcache.serialization.CombinatorsKt$reentrant$1.encode(Combinators.kt:115)                at org.gradle.configurationcache.serialization.codecs.BindingsBackedCodec.encode(BindingsBackedCodec.kt:52)                at org.gradle.configurationcache.serialization.DefaultWriteContext.write(Contexts.kt:85)                at org.gradle.configurationcache.serialization.CombinatorsKt.writeCollection(Combinators.kt:232)                at org.gradle.configurationcache.serialization.codecs.TaskNodeCodec$writeTask$3$2$1.invokeSuspend(TaskNodeCodec.kt:96)                at org.gradle.configurationcache.serialization.codecs.TaskNodeCodec$writeTask$3$2$1.invoke(TaskNodeCodec.kt)                at org.gradle.configurationcache.serialization.codecs.TaskNodeCodec$writeTask$3$2$1.invoke(TaskNodeCodec.kt)                at org.gradle.configurationcache.serialization.codecs.TaskNodeCodecKt.withTaskOf(TaskNodeCodec.kt:230)                at org.gradle.configurationcache.serialization.codecs.TaskNodeCodecKt.access$withTaskOf(TaskNodeCodec.kt:1)                at org.gradle.configurationcache.serialization.codecs.TaskNodeCodec.writeTask(TaskNodeCodec.kt:93)                at org.gradle.configurationcache.serialization.codecs.TaskNodeCodec.encode(TaskNodeCodec.kt:71)                at org.gradle.configurationcache.serialization.codecs.TaskNodeCodec.encode(TaskNodeCodec.kt:64)                at org.gradle.configurationcache.serialization.codecs.BindingsBackedCodec.encode(BindingsBackedCodec.kt:52)                at org.gradle.configurationcache.serialization.DefaultWriteContext.write(Contexts.kt:85)                at org.gradle.configurationcache.serialization.codecs.WorkNodeCodec.writeNodes(WorkNodeCodec.kt:68)                at org.gradle.configurationcache.serialization.codecs.WorkNodeCodec.writeWork(WorkNodeCodec.kt:53)                at org.gradle.configurationcache.ConfigurationCacheState.writeWorkGraphOf(ConfigurationCacheState.kt:255)                at org.gradle.configurationcache.ConfigurationCacheState.writeBuildState$configuration_cache(ConfigurationCacheState.kt:208)                at org.gradle.configurationcache.ConfigurationCacheState.writeRootBuild(ConfigurationCacheState.kt:170)                at org.gradle.configurationcache.ConfigurationCacheState.writeRootBuildState(ConfigurationCacheState.kt:114)                at org.gradle.configurationcache.ConfigurationCacheIO$writeRootBuildStateTo$1.invokeSuspend(ConfigurationCacheIO.kt:133)                at org.gradle.configurationcache.ConfigurationCacheIO$writeRootBuildStateTo$1.invoke(ConfigurationCacheIO.kt)                at org.gradle.configurationcache.ConfigurationCacheIO$writeRootBuildStateTo$1.invoke(ConfigurationCacheIO.kt)                at org.gradle.configurationcache.ConfigurationCacheIO$writeConfigurationCacheState$1$1.invokeSuspend(ConfigurationCacheIO.kt:184)                at org.gradle.configurationcache.ConfigurationCacheIO$writeConfigurationCacheState$1$1.invoke(ConfigurationCacheIO.kt)                at org.gradle.configurationcache.ConfigurationCacheIO$writeConfigurationCacheState$1$1.invoke(ConfigurationCacheIO.kt)                at org.gradle.configurationcache.serialization.RunningKt$runWriteOperation$1.invokeSuspend(Running.kt:45)                at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)                at kotlin.coroutines.ContinuationKt.startCoroutine(Continuation.kt:115)                at org.gradle.configurationcache.serialization.RunningKt.runToCompletion(Running.kt:56)                at org.gradle.configurationcache.serialization.RunningKt.runWriteOperation(Running.kt:44)                at org.gradle.configurationcache.ConfigurationCacheIO.writeConfigurationCacheState(ConfigurationCacheIO.kt:183)                at org.gradle.configurationcache.ConfigurationCacheIO.writeRootBuildStateTo$configuration_cache(ConfigurationCacheIO.kt:131)                at org.gradle.configurationcache.DefaultConfigurationCache$writeConfigurationCacheState$1.run(DefaultConfigurationCache.kt:378)                at org.gradle.internal.Factories$1.create(Factories.java:31)                at org.gradle.internal.work.DefaultWorkerLeaseService.withReplacedLocks(DefaultWorkerLeaseService.java:345)                at org.gradle.api.internal.project.DefaultProjectStateRegistry$DefaultBuildProjectRegistry.withMutableStateOfAllProjects(DefaultProjectStateRegistry.java:197)                at org.gradle.api.internal.project.DefaultProjectStateRegistry$DefaultBuildProjectRegistry.withMutableStateOfAllProjects(DefaultProjectStateRegistry.java:190)                at org.gradle.configurationcache.DefaultConfigurationCache.writeConfigurationCacheState(DefaultConfigurationCache.kt:377)                at org.gradle.configurationcache.DefaultConfigurationCache.access$writeConfigurationCacheState(DefaultConfigurationCache.kt:54)                at org.gradle.configurationcache.DefaultConfigurationCache$saveWorkGraph$1.invoke(DefaultConfigurationCache.kt:304)                at org.gradle.configurationcache.DefaultConfigurationCache$saveWorkGraph$1.invoke(DefaultConfigurationCache.kt:304)                at org.gradle.configurationcache.DefaultConfigurationCache$saveToCache$1$1.invoke(DefaultConfigurationCache.kt:319)                at org.gradle.configurationcache.DefaultConfigurationCache$saveToCache$1$1.invoke(DefaultConfigurationCache.kt:317)                at org.gradle.configurationcache.ConfigurationCacheRepository$StoreImpl$useForStore$1.invoke(ConfigurationCacheRepository.kt:177)                at org.gradle.configurationcache.ConfigurationCacheRepository$StoreImpl$useForStore$1.invoke(ConfigurationCacheRepository.kt:169)                at org.gradle.configurationcache.ConfigurationCacheRepository$withExclusiveAccessToCache$1.create(ConfigurationCacheRepository.kt:244)                at org.gradle.cache.internal.LockOnDemandCrossProcessCacheAccess.withFileLock(LockOnDemandCrossProcessCacheAccess.java:90)                at org.gradle.cache.internal.DefaultCacheAccess.withFileLock(DefaultCacheAccess.java:191)                at org.gradle.cache.internal.DefaultPersistentDirectoryStore.withFileLock(DefaultPersistentDirectoryStore.java:188)                at org.gradle.cache.internal.DefaultCacheFactory$ReferenceTrackingCache.withFileLock(DefaultCacheFactory.java:209)                at org.gradle.configurationcache.ConfigurationCacheRepository.withExclusiveAccessToCache(ConfigurationCacheRepository.kt:242)                at org.gradle.configurationcache.ConfigurationCacheRepository.access$withExclusiveAccessToCache(ConfigurationCacheRepository.kt:46)                at org.gradle.configurationcache.ConfigurationCacheRepository$StoreImpl.useForStore(ConfigurationCacheRepository.kt:169)                at org.gradle.configurationcache.DefaultConfigurationCache$saveToCache$1.invoke(DefaultConfigurationCache.kt:317)                at org.gradle.configurationcache.DefaultConfigurationCache$saveToCache$1.invoke(DefaultConfigurationCache.kt:316)                at org.gradle.configurationcache.ConfigurationCacheBuildOperationsKt$withOperation$1.call(ConfigurationCacheBuildOperations.kt:60)                at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)                at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)                at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)                at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)                at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)                at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)                at org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)                at org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)                at org.gradle.configurationcache.ConfigurationCacheBuildOperationsKt.withOperation(ConfigurationCacheBuildOperations.kt:55)                at org.gradle.configurationcache.ConfigurationCacheBuildOperationsKt.withStoreOperation(ConfigurationCacheBuildOperations.kt:34)                at org.gradle.configurationcache.DefaultConfigurationCache.saveToCache(DefaultConfigurationCache.kt:316)                at org.gradle.configurationcache.DefaultConfigurationCache.saveWorkGraph(DefaultConfigurationCache.kt:304)                at org.gradle.configurationcache.DefaultConfigurationCache.access$saveWorkGraph(DefaultConfigurationCache.kt:54)                at org.gradle.configurationcache.DefaultConfigurationCache$loadOrScheduleRequestedTasks$1.invoke(DefaultConfigurationCache.kt:134)                at org.gradle.configurationcache.DefaultConfigurationCache$loadOrScheduleRequestedTasks$1.invoke(DefaultConfigurationCache.kt:132)                at org.gradle.configurationcache.DefaultConfigurationCache.runWorkThatContributesToCacheEntry(DefaultConfigurationCache.kt:276)                at org.gradle.configurationcache.DefaultConfigurationCache.loadOrScheduleRequestedTasks(DefaultConfigurationCache.kt:132)                at org.gradle.configurationcache.ConfigurationCacheAwareBuildTreeWorkPreparer.scheduleRequestedTasks(ConfigurationCacheAwareBuildTreeWorkPreparer.kt:28)                at org.gradle.internal.buildtree.DefaultBuildTreeLifecycleController.lambda$doScheduleAndRunTasks$2(DefaultBuildTreeLifecycleController.java:89)                at org.gradle.composite.internal.DefaultIncludedBuildTaskGraph.withNewWorkGraph(DefaultIncludedBuildTaskGraph.java:101)                at org.gradle.internal.buildtree.DefaultBuildTreeLifecycleController.doScheduleAndRunTasks(DefaultBuildTreeLifecycleController.java:88)                at org.gradle.internal.buildtree.DefaultBuildTreeLifecycleController.lambda$runBuild$4(DefaultBuildTreeLifecycleController.java:106)                ... 75 more                Caused by:                org.gradle.configurationcache.ConfigurationCacheError: Configuration cache state could not be cached: field 'capturedArgs' from type 'java.lang.invoke.SerializedLambda': error writing value of type '[Ljava.lang.Object;'                    at org.gradle.configurationcache.problems.ProblemsListener$DefaultImpls.onError(ProblemsListener.kt:31)                    ... 170 more                    Caused by:                    org.gradle.configurationcache.ConfigurationCacheError: Configuration cache state could not be cached: field 'annotationProcessorPath' from type 'org.gradle.api.tasks.compile.CompileOptions': error writing value of type 'org.gradle.api.internal.file.UnionFileCollection'                        at org.gradle.configurationcache.problems.ProblemsListener$DefaultImpls.onError(ProblemsListener.kt:31)                        at org.gradle.configurationcache.problems.ConfigurationCacheProblems.onError(ConfigurationCacheProblems.kt:37)                        at org.gradle.configurationcache.serialization.AbstractIsolateContext.onError(Contexts.kt:399)                        at org.gradle.configurationcache.serialization.beans.BeanPropertyWriterKt.writeNextProperty(BeanPropertyWriter.kt:102)                        at org.gradle.configurationcache.serialization.beans.BeanPropertyWriter.writeStateOf(BeanPropertyWriter.kt:55)                        at org.gradle.configurationcache.serialization.beans.BeanPropertyWriter$writeStateOf$1.invokeSuspend(BeanPropertyWriter.kt)                        at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)                        ... 162 more                        Caused by:                        org.gradle.api.internal.artifacts.ivyservice.DefaultLenientConfiguration$ArtifactResolveException: Could not resolve all files for configuration ':app:debugAnnotationProcessorClasspath'.                            at org.gradle.api.internal.artifacts.configurations.DefaultConfiguration.mapFailure(DefaultConfiguration.java:1528)                            at org.gradle.api.internal.artifacts.configurations.DefaultConfiguration.access$3700(DefaultConfiguration.java:159)                            at org.gradle.api.internal.artifacts.configurations.DefaultConfiguration$DefaultResolutionHost.mapFailure(DefaultConfiguration.java:2178)                            at org.gradle.api.internal.artifacts.configurations.DefaultConfiguration$DefaultResolutionHost.rethrowFailure(DefaultConfiguration.java:2183)                            at org.gradle.api.internal.artifacts.configurations.DefaultConfiguration$ConfigurationFileCollection.visitContents(DefaultConfiguration.java:1496)                            at org.gradle.api.internal.file.AbstractFileCollection.visitStructure(AbstractFileCollection.java:375)                            at org.gradle.api.internal.file.CompositeFileCollection.lambda$visitContents$0(CompositeFileCollection.java:119)                            at org.gradle.api.internal.file.UnionFileCollection.visitChildren(UnionFileCollection.java:78)                            at org.gradle.api.internal.file.CompositeFileCollection.visitContents(CompositeFileCollection.java:119)                            at org.gradle.api.internal.file.AbstractFileCollection.visitStructure(AbstractFileCollection.java:375)                            at org.gradle.configurationcache.serialization.codecs.FileCollectionCodec.encode(FileCollectionCodec.kt:57)                            at org.gradle.configurationcache.serialization.codecs.FileCollectionCodec.encode(FileCollectionCodec.kt:48)                            at org.gradle.configurationcache.serialization.codecs.BindingsBackedCodec.encode(BindingsBackedCodec.kt:52)                            at org.gradle.configurationcache.serialization.DefaultWriteContext.write(Contexts.kt:85)                            at org.gradle.configurationcache.serialization.beans.BeanPropertyWriterKt.writeNextProperty(BeanPropertyWriter.kt:96)                            ... 165 more                            Caused by:                            org.gradle.internal.resolve.ModuleVersionNotFoundException: Could not find android.arch.persistence.room:compiler:2.0.0.                            Searched in the following locations:                              - file:/usr/local/google/home/bingran/studio-main/out/repo/android/arch/persistence/room/compiler/2.0.0/compiler-2.0.0.pom                              - file:/usr/local/google/home/bingran/studio-main/out/repo/android/arch/persistence/room/compiler/2.0.0/compiler-2.0.0.jar                              - file:/usr/local/google/home/bingran/studio-main/prebuilts/tools/common/m2/repository/android/arch/persistence/room/compiler/2.0.0/compiler-2.0.0.pom                              - file:/usr/local/google/home/bingran/studio-main/prebuilts/tools/common/m2/repository/android/arch/persistence/room/compiler/2.0.0/compiler-2.0.0.jar                              - file:/usr/local/google/home/bingran/studio-main/out/build/base/build-system/integration-test/application/build/tests/JetifierTest/test_invalid_android_arch_dependencies_are_not_replaced_withKotlin_false_/jetifier/localRepo/android/arch/persistence/room/compiler/2.0.0/compiler-2.0.0.pom                              - file:/usr/local/google/home/bingran/studio-main/out/build/base/build-system/integration-test/application/build/tests/JetifierTest/test_invalid_android_arch_dependencies_are_not_replaced_withKotlin_false_/jetifier/localRepo/android/arch/persistence/room/compiler/2.0.0/compiler-2.0.0.jar                            Required by:                                project :app```### Context<!--- How has this issue affected you? What are you trying to accomplish? --><!--- Providing context helps us come up with a solution that is most useful in the real world -->I am from android gradle plugin team and we are upgrading minimal jdk version to 17. There is a fix in 7.6 for jdk17 so I was trying Gradle 7.6 and then this issue is spotted. But I am getting the same error with jdk11 so I don't think it is an issue related to jdk17.### Steps to Reproduce <!---Provide a self-contained example project as an attached archive or a Github project.You can use the following template with a Gradle GitHub action set up to showcase your problem: https://github.com/gradle/gradle-issue-reproducerIn the rare cases where this is infeasible, we will also accept a detailed set of instructions.-->
"
21781,0,0,7,0,0,bingranl,0,"title:""withVariantReselection"" API broken description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues--><!--- Provide a brief summary of the issue in the title above -->### Expected Behavior<!--- Tell us what should happen -->The[ ""withVariantReselection"" API](https://docs.gradle.org/current/javadoc/org/gradle/api/artifacts/ArtifactView.ViewConfiguration.html) should work and the [demo project](https://github.com/gradle/source-resolution-demo) should work.### Current Behavior<!--- Tell us what happens instead of the expected behavior -->The demo project doesn't work and the API is broken.### Context<!--- How has this issue affected you? What are you trying to accomplish? --><!--- Providing context helps us come up with a solution that is most useful in the real world -->Android Gradle Plugin is trying to integrate that API to have better support of reading javadoc and source from Android Studio.### Steps to Reproduce <!---Provide a self-contained example project as an attached archive or a Github project.You can use the following template with a Gradle GitHub action set up to showcase your problem: https://github.com/gradle/gradle-issue-reproducerIn the rare cases where this is infeasible, we will also accept a detailed set of instructions.-->It can be easily reproduced with the demo project.
"
21767,0,3260,222,0,1,h0tk3y,0,"title:CCH22-Example-2: Adjust the `snippets/tasks/incrementalBuild-incrementalBuildAdvanced` sample for configuration cache description:The sample project located under `subprojects/docs/src/snippets/tasks/incrementalBuild-incrementalBuildAdvanced` does not meet [the configuration cache requirements](https://docs.gradle.org/nightly/userguide/configuration_cache.html#config_cache:requirements).The build scripts in the `groovy` and `kotlin` parts of the sample project need to be adjusted to follow the requirements.### ContextThis issue is a part of the [Gradle Configuration Cache Hackathon 2022](https://github.com/gradle/cc-hackathon-2022).If you wish to participate and contribute the fix, please follow [the suggested workflow](https://github.com/gradle/cc-hackathon-2022/blob/main/workflow.md).### Expected behavior- The sample project is fixed so that the related documentation tests pass with configuration cache enabled.- The tests related to this sample project are removed from the `testsToBeFixedForConfigurationCache` list in `subprojects/docs/build.gradle`. You can find the test IDs below.- The doc pages that include the snippets from this sample project might need to be updated to be consistent with the sample. Feel free to ask the team for help with this! You can find the pages listed below.### Test failure detailsThese tests running in `:docs:docsTest` check the sample project and are failing with configuration cache enabled:* `snippet-tasks-incremental-build-incremental-build-advanced_groovy_incrementalBuildCustomMethods.sample`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket2SnippetsTest/snippet-tasks-incremental-build-incremental-build-advanced_groovy_incrementalBuildCustomMethods.sample)    ```    Task `:processTemplates` of type `org.example.ProcessTemplates`: invocation of 'Task.project' at execution time is unsupported.    ```* `snippet-tasks-incremental-build-incremental-build-advanced_groovy_incrementalBuildCustomMethodsWithTaskArg.sample`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket2SnippetsTest/snippet-tasks-incremental-build-incremental-build-advanced_groovy_incrementalBuildCustomMethodsWithTaskArg.sample)    ```    Task `:processTemplates2` of type `org.example.ProcessTemplates`: invocation of 'Task.project' at execution time is unsupported.    ```* `snippet-tasks-incremental-build-incremental-build-advanced_groovy_incrementalBuildInputFilesConfig.sample`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket2SnippetsTest/snippet-tasks-incremental-build-incremental-build-advanced_groovy_incrementalBuildInputFilesConfig.sample)    ```    Task `:instrumentClasses` of type `org.example.Instrument`: invocation of 'Task.project' at execution time is unsupported.    ```* `snippet-tasks-incremental-build-incremental-build-advanced_groovy_incrementalBuildInputFilesConfigUsingTask.sample`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket2SnippetsTest/snippet-tasks-incremental-build-incremental-build-advanced_groovy_incrementalBuildInputFilesConfigUsingTask.sample)    ```    Task `:instrumentClasses2` of type `org.example.Instrument`: invocation of 'Task.project' at execution time is unsupported.    ```* `snippet-tasks-incremental-build-incremental-build-advanced_groovy_incrementalBuildUpToDateWhen.sample`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket2SnippetsTest/snippet-tasks-incremental-build-incremental-build-advanced_groovy_incrementalBuildUpToDateWhen.sample)    ```    Task `:alwaysInstrumentClasses` of type `org.example.Instrument`: invocation of 'Task.project' at execution time is unsupported.    ```* `snippet-tasks-incremental-build-incremental-build-advanced_groovy_inferredTaskDependencyWithBuiltBy.sample`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket2SnippetsTest/snippet-tasks-incremental-build-incremental-build-advanced_groovy_inferredTaskDependencyWithBuiltBy.sample)    ```    Task `:instrumentClassesBuiltBy` of type `org.example.Instrument`: invocation of 'Task.project' at execution time is unsupported.    ```* `snippet-tasks-incremental-build-incremental-build-advanced_kotlin_incrementalBuildCustomMethods.sample`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket2SnippetsTest/snippet-tasks-incremental-build-incremental-build-advanced_kotlin_incrementalBuildCustomMethods.sample)    ```    Task `:processTemplates` of type `org.example.ProcessTemplates`: invocation of 'Task.project' at execution time is unsupported.    ```* `snippet-tasks-incremental-build-incremental-build-advanced_kotlin_incrementalBuildCustomMethodsWithTaskArg.sample`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket2SnippetsTest/snippet-tasks-incremental-build-incremental-build-advanced_kotlin_incrementalBuildCustomMethodsWithTaskArg.sample)    ```    Task `:processTemplates2` of type `org.example.ProcessTemplates`: invocation of 'Task.project' at execution time is unsupported.    ```* `snippet-tasks-incremental-build-incremental-build-advanced_kotlin_incrementalBuildInputFilesConfig.sample`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket2SnippetsTest/snippet-tasks-incremental-build-incremental-build-advanced_kotlin_incrementalBuildInputFilesConfig.sample)    ```    Task `:instrumentClasses` of type `org.example.Instrument`: invocation of 'Task.project' at execution time is unsupported.    ```* `snippet-tasks-incremental-build-incremental-build-advanced_kotlin_incrementalBuildInputFilesConfigUsingTask.sample`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket2SnippetsTest/snippet-tasks-incremental-build-incremental-build-advanced_kotlin_incrementalBuildInputFilesConfigUsingTask.sample)    ```    Task `:instrumentClasses2` of type `org.example.Instrument`: invocation of 'Task.project' at execution time is unsupported.    ```* `snippet-tasks-incremental-build-incremental-build-advanced_kotlin_incrementalBuildUpToDateWhen.sample`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket2SnippetsTest/snippet-tasks-incremental-build-incremental-build-advanced_kotlin_incrementalBuildUpToDateWhen.sample)    ```    Task `:alwaysInstrumentClasses` of type `org.example.Instrument`: invocation of 'Task.project' at execution time is unsupported.    ```* `snippet-tasks-incremental-build-incremental-build-advanced_kotlin_inferredTaskDependencyWithBuiltBy.sample`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket2SnippetsTest/snippet-tasks-incremental-build-incremental-build-advanced_kotlin_inferredTaskDependencyWithBuiltBy.sample)    ```    Task `:instrumentClassesBuiltBy` of type `org.example.Instrument`: invocation of 'Task.project' at execution time is unsupported.    ```### How to reproduceTo reproduce the failure in the Gradle documentation tests, run the following in the `gradle/gradle`repository:```sh./gradlew :docs:docsTest \    -PrunBrokenConfigurationCacheDocsTests=true \    -PenableConfigurationCacheForDocsTests=true \    --tests ""*snippet-tasks-incremental-build-incremental-build-advanced_groovy_incrementalBuildCustomMethods.sample"" \    --tests ""*snippet-tasks-incremental-build-incremental-build-advanced_groovy_incrementalBuildCustomMethodsWithTaskArg.sample"" \    --tests ""*snippet-tasks-incremental-build-incremental-build-advanced_groovy_incrementalBuildInputFilesConfig.sample"" \    --tests ""*snippet-tasks-incremental-build-incremental-build-advanced_groovy_incrementalBuildInputFilesConfigUsingTask.sample"" \    --tests ""*snippet-tasks-incremental-build-incremental-build-advanced_groovy_incrementalBuildUpToDateWhen.sample"" \    --tests ""*snippet-tasks-incremental-build-incremental-build-advanced_groovy_inferredTaskDependencyWithBuiltBy.sample"" \    --tests ""*snippet-tasks-incremental-build-incremental-build-advanced_kotlin_incrementalBuildCustomMethods.sample"" \    --tests ""*snippet-tasks-incremental-build-incremental-build-advanced_kotlin_incrementalBuildCustomMethodsWithTaskArg.sample"" \    --tests ""*snippet-tasks-incremental-build-incremental-build-advanced_kotlin_incrementalBuildInputFilesConfig.sample"" \    --tests ""*snippet-tasks-incremental-build-incremental-build-advanced_kotlin_incrementalBuildInputFilesConfigUsingTask.sample"" \    --tests ""*snippet-tasks-incremental-build-incremental-build-advanced_kotlin_incrementalBuildUpToDateWhen.sample"" \    --tests ""*snippet-tasks-incremental-build-incremental-build-advanced_kotlin_inferredTaskDependencyWithBuiltBy.sample""```In the test build outputs, which you can find in the test report, the configuration cache problems are listed along with the URL pointing to the detailed HTML problems report that can help investigating the violation. You can find more instructions on working with the sample projects in the [FAQ](https://github.com/gradle/cc-hackathon-2022/blob/main/faq.md).### Docs including the snippets from this sample projectThe following doc pages include the snippets from this sample project: - `subprojects/docs/src/docs/userguide/authoring-builds/more_about_tasks.adoc`;
"
21766,0,668,222,0,1,h0tk3y,0,"title:CCH22-Example-1: Adjust the `snippets/dependencyManagement/customizingResolution-attributeSubstitutionRule` sample for configuration cache description:The sample project located under `subprojects/docs/src/snippets/dependencyManagement/customizingResolution-attributeSubstitutionRule` does not meet [the configuration cache requirements](https://docs.gradle.org/nightly/userguide/configuration_cache.html#config_cache:requirements).The build scripts in the `groovy` and `kotlin` parts of the sample project need to be adjusted to follow the requirements.### ContextThis issue is a part of the [Gradle Configuration Cache Hackathon 2022](https://github.com/gradle/cc-hackathon-2022).If you wish to participate and contribute the fix, please follow [the suggested workflow](https://github.com/gradle/cc-hackathon-2022/blob/main/workflow.md).### Expected behavior- The sample project is fixed so that the related documentation tests pass with configuration cache enabled.- The tests related to this sample project are removed from the `testsToBeFixedForConfigurationCache` list in `subprojects/docs/build.gradle`. You can find the test IDs below.- The doc pages that include the snippets from this sample project might need to be updated to be consistent with the sample. Feel free to ask the team for help with this! You can find the pages listed below.### Test failure detailsThese tests running in `:docs:docsTest` check the sample project and are failing with configuration cache enabled:* `snippet-dependency-management-customizing-resolution-attribute-substitution-rule_groovy_resolve.sample`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket1SnippetsTest/snippet-dependency-management-customizing-resolution-attribute-substitution-rule_groovy_resolve.sample)    ```    Could not get unknown property 'configurations' for task ':consumer:resolve' of type org.gradle.api.DefaultTask.    ```* `snippet-dependency-management-customizing-resolution-attribute-substitution-rule_kotlin_resolve.sample`[(Build Scan)](https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket1SnippetsTest/snippet-dependency-management-customizing-resolution-attribute-substitution-rule_kotlin_resolve.sample)    ```    Task `:consumer:resolve` of type `org.gradle.api.DefaultTask`: cannot serialize Gradle script object references as these are not supported with the configuration cache.    ```### How to reproduceTo reproduce the failure in the Gradle documentation tests, run the following in the `gradle/gradle`repository:```sh./gradlew :docs:docsTest \    -PrunBrokenConfigurationCacheDocsTests=true \    -PenableConfigurationCacheForDocsTests=true \    --tests ""*snippet-dependency-management-customizing-resolution-attribute-substitution-rule_groovy_resolve.sample"" \    --tests ""*snippet-dependency-management-customizing-resolution-attribute-substitution-rule_kotlin_resolve.sample""```In the test build outputs, which you can find in the test report, the configuration cache problems are listed along with the URL pointing to the detailed HTML problems report that can help investigating the violation. You can find more instructions on working with the sample projects in the [FAQ](https://github.com/gradle/cc-hackathon-2022/blob/main/faq.md).### Docs including the snippets from this sample projectThe following doc pages include the snippets from this sample project: - `subprojects/docs/src/docs/userguide/dep-man/03-controlling-transitive-dependencies/resolution_rules.adoc`;
"
21758,0,0,281,0,0,alllex,0,"title:JavaCompile and Test tasks silently ignore explicit executable if it does not exist description:When resolving which toolchain to use for the java compiler in the `JavaCompile` task or for the launcher in the `Test` task, there is a priority that is given to an executable path explicitly set via fork options. However, if a user makes a mistake by providing a wrong path, then the provided value is silently ignored and the current toolchain is used to execute the work.At the very least, the user should be warned about this. However, being strict about this may be better, as this can be overlooked when tasks are running on CI and for some reason it was required to use an explicit path, rather than resolving a toolchain.https://github.com/gradle/gradle/blob/c1e31d68033e434313cf7838480c6a69a41e9707/subprojects/language-java/src/main/java/org/gradle/api/tasks/compile/JavaCompile.java#L254-L262
"
21748,0,3824,263,1,0,abstratt,0,"title:<task> --rerun fails on configuration cache hit description:### Expected BehaviorNo error produced when using the --rerun option with configuration cache enabled. ### Current BehaviorRunning a Gradle task with the new  `--rerun` option will break on a configuration cache hit.### ContextThe new `--rerun` option implemented in 7.6 (by yours truly) was not tested with configuration cache enabled, but it clearly does not work. This seems similar to #20296 (in a sense that could benefit from a similar workaround - using using a non-anonymous type implementing a SAM interface instance instead of a lambda, as per [docs](https://docs.gradle.org/nightly/userguide/configuration_cache.html#config_cache:not_yet_implemented:storing_lambdas)) or https://github.com/gradle/gradle/issues/21109, more specifically for [this lambda](https://github.com/gradle/gradle/blob/1be77421d6ed55eb684eeaa6cecdaf6104fed52b/subprojects/core/src/main/java/org/gradle/api/internal/tasks/options/OptionReader.java#L57) in `OptionReader` BUILT_IN_OPTIONS.### Steps to Reproduce 1. Make sure you are using a more or less recent 7.6 snapshot build. I used:distributionUrl=https\://services.gradle.org/distributions-snapshots/gradle-7.6-20220830021557+0000-bin.zip2. Issue the following command:`./gradlew help   --configuration-cache --rerun`which succeeds. But a second call (configuration cache hit) fails:3. Issue the same command again:`./gradlew help   --configuration-cache --rerun`results in:```Configuration cache is an incubating feature.Reusing configuration cache.FAILURE: Build failed with an exception.* What went wrong:Could not load the value of field `specs` of `org.gradle.api.specs.AndSpec` bean found in task `:help` of type `org.gradle.configuration.Help`.> org.gradle.api.internal.tasks.options.OptionReader$$Lambda$1125/0x000000080095b440* Try:> Run with --stacktrace option to get the stack trace.> Run with --info or --debug option to get more log output.* Get more help at https://help.gradle.orgCONFIGURE FAILED in 397msPublishing build scan...https://e.grdev.net/s/nmvg6nbfsqkg2Configuration cache entry reused.```Stacktrace:```Caused by: java.lang.ClassNotFoundException: org.gradle.api.internal.tasks.options.OptionReader$$Lambda$1125/0x000000080095b440	at org.gradle.configurationcache.serialization.DefaultReadContext.readClass(Contexts.kt:285)	at org.gradle.configurationcache.serialization.codecs.BeanCodec.decode(BeanCodec.kt:44)	at org.gradle.configurationcache.serialization.CombinatorsKt$reentrant$1$decodeLoop$1.invokeSuspend(Combinators.kt:165)	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)	at kotlin.coroutines.ContinuationKt.startCoroutine(Continuation.kt:115)	at org.gradle.configurationcache.serialization.CombinatorsKt$reentrant$1.decodeLoop(Combinators.kt:166)	at org.gradle.configurationcache.serialization.CombinatorsKt$reentrant$1.decode(Combinators.kt:130)	at org.gradle.configurationcache.serialization.codecs.BindingsBackedCodec.decode(BindingsBackedCodec.kt:59)	at org.gradle.configurationcache.serialization.DefaultReadContext.read(Contexts.kt:259)	at org.gradle.configurationcache.serialization.CodecKt.readNonNull(Codec.kt:96)	at org.gradle.configurationcache.serialization.codecs.TaskNodeCodec.readUpToDateSpec(TaskNodeCodec.kt:153)	at org.gradle.configurationcache.serialization.codecs.TaskNodeCodec.access$readUpToDateSpec(TaskNodeCodec.kt:64)	at org.gradle.configurationcache.serialization.codecs.TaskNodeCodec$readTask$2.invokeSuspend(TaskNodeCodec.kt:123)	at org.gradle.configurationcache.serialization.codecs.TaskNodeCodec$readTask$2.invoke(TaskNodeCodec.kt)	at org.gradle.configurationcache.serialization.codecs.TaskNodeCodec$readTask$2.invoke(TaskNodeCodec.kt)	at org.gradle.configurationcache.serialization.codecs.TaskNodeCodecKt.withTaskOf(TaskNodeCodec.kt:230)	at org.gradle.configurationcache.serialization.codecs.TaskNodeCodecKt.access$withTaskOf(TaskNodeCodec.kt:1)	at org.gradle.configurationcache.serialization.codecs.TaskNodeCodec.readTask(TaskNodeCodec.kt:122)	at org.gradle.configurationcache.serialization.codecs.TaskNodeCodec.decode(TaskNodeCodec.kt:75)	at org.gradle.configurationcache.serialization.codecs.BindingsBackedCodec.decode(BindingsBackedCodec.kt:59)	at org.gradle.configurationcache.serialization.DefaultReadContext.read(Contexts.kt:259)	at org.gradle.configurationcache.serialization.CodecKt.readNonNull(Codec.kt:96)	at org.gradle.configurationcache.serialization.codecs.WorkNodeCodec.readNode(WorkNodeCodec.kt:96)	at org.gradle.configurationcache.serialization.codecs.WorkNodeCodec.readNodes(WorkNodeCodec.kt:83)	at org.gradle.configurationcache.serialization.codecs.WorkNodeCodec.readWork(WorkNodeCodec.kt:59)	at org.gradle.configurationcache.ConfigurationCacheState.readWorkGraph(ConfigurationCacheState.kt:262)	at org.gradle.configurationcache.ConfigurationCacheState.readBuildState$configuration_cache(ConfigurationCacheState.kt:234)	at org.gradle.configurationcache.ConfigurationCacheState.readRootBuild(ConfigurationCacheState.kt:191)	at org.gradle.configurationcache.ConfigurationCacheState.readRootBuildState(ConfigurationCacheState.kt:119)...```A similar issue happens with any other task, for instance:```./gradlew tasks --configuration-cache --rerun```### Your EnvironmentMacOSGradle 7.6 and 7.7Build scan URL:https://e.grdev.net/s/nmvg6nbfsqkg2
"
21742,0,535,226,0,0,mlopatkin,0,"title:Configuration cache should report Task.getProject access inside Task.onlyIf, TaskOutputs.cacheIf, and TasksOutputs.upToDateWhen predicates description:Currently, the configuration cache forbids calling `Task.getProject`, but at execution time only. This means that the restriction only applies to code inside task actions (`@TaskAction` and `doFirst`/`doLast` callbacks). The motivation is that the returned `Project` is not completely functional when restoring the build from the cache entry. However, task actions aren't the only user code that is executed when running from the cache. `onlyIf` predicates are also executed before running the task to determine if it should be skipped. The predicate has access to the `Task` instance and may invoke `getProject` on it. Consider the following snippet:```gradleproject.ext.skipTaskIfSet = truetasks.register(""myTask"") {  onlyIf { task ->    !task.project.hasProperty(""skipTaskIfSet"")  }}```and run `myTask` it twice with the configuration cache enabled.### Expected BehaviorThe first build fails because of illegal `Task.getProject` access. Alternatively, both builds skip the task.### Current BehaviorThe first build skips the task, stores the configuration cache. ```Configuration cache is an incubating feature.Calculating task graph as no configuration cache is available for tasks: myTask> Task :myTask SKIPPEDBUILD SUCCESSFUL in 1sConfiguration cache entry stored.```The second build reuses the cache, but runs the task.```Configuration cache is an incubating feature.Reusing configuration cache.> Task :myTask UP-TO-DATEBUILD SUCCESSFUL in 796msConfiguration cache entry reused.```### Steps to Reproduce 1. Run `gradle --configuration-cache --console=plain myTask` with the build file provided above. 2. Run `gradle --configuration-cache --console=plain myTask` one more time.
"
21730,1,1368,5,0,0,ddivin-sc,0,"title:Sub modules are not included in the project if these modules end with the same name description:I have the following multiproject structure```<root> | +- app |  | |  +- src/java/Main.java |  | |  +- build.gralde | +-libs |  | |  +- lib |  |   | |  |   +- module |  |        | |  |        +- src/java/A.java |  |        | |  |        +- build.gradle |  | |  +- lib2 |      | |      +- module |           | |           +- src/java/B.java |           | |           +- build.gradle | +- build.gradle | +- settings.gradle```app depends on the following submoudles```implementation project("":libs:lib2:module"")implementation project("":libs:lib:module"")```I get the following compilation error when I can trying to build subproject```> Task :app:compileJava FAILED~/sources/gradle-test/test/app/src/main/java/Main.java:5: error: cannot find symbol      A a = new A();      ^  symbol:   class A  location: class Main~/sources/gradle-test/test/app/src/main/java/Main.java:5: error: cannot find symbol      A a = new A();                ^  symbol:   class A  location: class Main2 errors```But If I swap these sub modules dependencies in the application build script```implementation project("":libs:lib:module"")implementation project("":libs:lib2:module"")```I get another compilation error```> Task :app:compileJava FAILED~/sources/gradle-test/test/app/src/main/java/Main.java:4: error: cannot find symbol      B b = new B();      ^  symbol:   class B  location: class Main~/sources/gradle-test/test/app/src/main/java/Main.java:4: error: cannot find symbol      B b = new B();                ^  symbol:   class B  location: class Main2 errors```I have the following assumption: if two or more submodules are included with the same name at the end, then only the last one is included### Expected BehaviorI expect the project to build successfully### Current BehaviorCompilation failed### Steps to Reproduce - Unzip attached example [test.zip](https://github.com/gradle/gradle/files/9450005/test.zip)- Trying to build the multiproject### Your Environment- java version ""17.0.4"" 2022-07-19 LTS- Gradle 7.5.1- macOS Monterey 12.4Build scan URL: https://gradle.com/s/xvbeoxfgo6fqs
"
21718,0,0,226,0,0,mlopatkin,0,"title:Snippet ""snippet-init-scripts-configuration-injection"" and ""snippet-init-scripts-plugins"" are not compatible with the configuration cache description:The snippets contain a ""showRepos"" task that iterates over the defined repositories at the execution time. This information is not available when running from the cache.It is possible to store the repository data in some `List<String>` variables, but the code is included into the doc pages, where it seems artificial.Build scan URL:* https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket3SnippetsTest/snippet-init-scripts-configuration-injection_groovy_initScriptConfiguration.groovy.sample* https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket3SnippetsTest/snippet-init-scripts-configuration-injection_kotlin_initScriptConfiguration.kotlin.sample* https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket3SnippetsTest/snippet-init-scripts-plugins_groovy_usePluginsInInitScripts.groovy.sample* https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket3SnippetsTest/snippet-init-scripts-plugins_kotlin_usePluginsInInitScripts.kotlin.sample
"
21717,0,0,226,0,1,mlopatkin,0,"title:Snippet ""snippet-java-toolchain-filters"" is not compatible with the configuration cache description:The snippet references the unavailable toolchain (IBM Semeru OpenJ9) but has no sources. Without CC, the toolchain is never actually resolved and everything works. With CC enabled, it tries to resolve and cache the toolchain, and fails to do that, with rather cryptic error message.The snippet itself is fine, it is the environment that isn't really suitable, so the actual fix is not obvious.Build scan URL:* https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket2SnippetsTest/snippet-java-toolchain-filters_groovy_toolchainFilters.sample* https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket2SnippetsTest/snippet-java-toolchain-filters_kotlin_toolchainFilters.sample
"
21714,0,298,226,0,0,mlopatkin,0,"title:Snippet ""snippet-groovy-compilation-avoidance"" is not compatible with the configuration cache description:The snippet works fine without CC but with CC the compilation fails when running from cache:```startup failed:/tmp/junit12037034537601836968/snippet-groovy-compilation-avoidance_kotlin_groovyCompilationAvoidance.sample/ast-transformation-consumer/src/main/groovy/Main.groovy: 1: unable to resolve class MyAnnotation for annotation @ line 1, column 1.   @MyAnnotation   ^1 error```Build scan URL:* https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket3SnippetsTest/snippet-groovy-compilation-avoidance_groovy_groovyCompilationAvoidance.sample?top-execution=1* https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket3SnippetsTest/snippet-groovy-compilation-avoidance_kotlin_groovyCompilationAvoidance.sample?top-execution=1
"
21712,0,0,218,0,0,ljacomet,0,"title:Off-by-one error on Windows path length checks description:`LongCommandLineDetectionUtil` has an off-by-one error for Windows checks.The Windows documentation says:> The maximum length of this string is 32,767 characters, including the Unicode terminating null character.So the value of 32,767 encoded in Java is wrong, as the Java String _will not include_ the terminating line character.The value should be updated to account for this, by using 32,766.
"
21711,0,0,226,0,0,mlopatkin,0,"title:Snippet ""snippet-tutorial-configure-object-using-script"" is not compatible with the configuration cache description:The snippet fails because it uses `Project.apply` to configure an object at execution time. Build scan URL: https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket1SnippetsTest/snippet-tutorial-configure-object-using-script_groovy_configureObjectUsingScript.sample?top-execution=1
"
21708,0,737,15,0,0,tomasAlabes,0,"title:Can't exclude composite build tasks description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues--><!--- Provide a brief summary of the issue in the title above -->### Expected BehaviorWe should be able to exclude a composite build task, as stated in [the docs](https://docs.gradle.org/current/userguide/composite_builds.html#interacting_with_composite_builds)### Current BehaviorUsing [gradle's sample project](https://docs.gradle.org/current/samples/sample_structuring_software_projects.html) (without touching anything):```shell闂?./gradlew :server-application:build -x :server-application:testFAILURE: Build failed with an exception.* What went wrong:A problem occurred configuring project ':domain-model:release'.> A problem occurred configuring project ':server-application:app'.   > This build's work graph is currently in use by another thread.* Try:> Run with --stacktrace option to get the stack trace.> Run with --info or --debug option to get more log output.> Run with --scan to get full insights.* Get more help at https://help.gradle.orgBUILD FAILED in 5s```### Context<!--- How has this issue affected you? What are you trying to accomplish? --><!--- Providing context helps us come up with a solution that is most useful in the real world -->In my own project I can't do this either, either because of the above error or because of:```shell> Expected vintage state of build 'spring-app' to be in state SettingsLoaded or later but is in state SettingsLoaded and transitioning to Configured.```I stopped all gradle daemons but it didn't help.### Steps to Reproduce <!---Provide a self-contained example project as an attached archive or a Github project.You can use the following template with a Gradle GitHub action set up to showcase your problem: https://github.com/gradle/gradle-issue-reproducerIn the rare cases where this is infeasible, we will also accept a detailed set of instructions.-->Download gradle's sample project: https://docs.gradle.org/current/samples/zips/sample_structuring_software_projects-kotlin-dsl.zipAnd run `./gradlew :server-application:build -x :server-application:test`### Your Environment<!--- Include as many relevant details about the environment you experienced the bug in --><!--- A build scan https://scans.gradle.com/get-started is ideal -->Gradle: 7.5.1Kotlin: 1.6.21OS: MacOS Monterey 12.5 (M1 Pro)
"
21694,1,0,300,0,1,JT122406,0,"title:18.0.2 coming up as incompatible with 7.5.1 description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. <!--- Provide a brief summary of the issue in the title above -->IntellIJ Keeps saying that JDK 18.0.2 isn't compatible with Gradle 7.5.1(JDK 18.0.2 isn't compatible with Gradle 7.5.1. Please fix JAVA_HOME environment variable.)### Expected Behavior<!--- Tell us what should happen -->Based on 7.5/7.5.1 Change log 18.0.x should be supported no issues### Current Behavior<!--- Tell us what happens instead of the expected behavior -->JDK 18.0.2 isn't compatible with Gradle 7.5.1. Please fix JAVA_HOME environment variable.### Context<!--- How has this issue affected you? What are you trying to accomplish? --><!--- Providing context helps us come up with a solution that is most useful in the real world -->Is just very annoying as it then defaults to JDK 11 which doesn't work for my project that requires newer JDK Versions### Steps to Reproduce <!---Provide a self-contained example project as an attached archive or a Github project.You can use the following template with a Gradle GitHub action set up to showcase your problem: https://github.com/gradle/gradle-issue-reproducerIn the rare cases where this is infeasible, we will also accept a detailed set of instructions.-->Load Gradle 7.5.1 with JDK 18### Your Environment<!--- Include as many relevant details about the environment you experienced the bug in --><!--- A build scan https://scans.gradle.com/get-started is ideal -->Build scan URL:
"
21671,0,2880,294,0,0,TimvdLippe,0,"title:Configuration cache report misses implicit usages of project methods, resulting to a crash when reusing the cache description:### Expected BehaviorThe configuration cache report includes the violation of the (implicit) runtime usage of `project`. If there are implicit usages of the `project` methods, the report should list them and the build should fail.### Current BehaviorGradle doesn't warn you on the first invocation. On the second invocation with the configuration cache, it fails as it can't find the `exec` method:```./gradlew :broken-with-configuration-cacheConfiguration cache is an incubating feature.Calculating task graph as no configuration cache is available for tasks: :broken-with-configuration-cache> Task :broken-with-configuration-cachetask executedBUILD SUCCESSFUL in 648ms1 actionable task: 1 executedConfiguration cache entry stored../gradlew :broken-with-configuration-cacheConfiguration cache is an incubating feature.Reusing configuration cache.> Task :broken-with-configuration-cache FAILEDFAILURE: Build failed with an exception.* What went wrong:Execution failed for task ':broken-with-configuration-cache'.> Could not find method exec() for arguments [build_7aih72w7tlo707xqlss3tj1se$_run_closure1$_closure2$_closure3@284d3ec2] on task ':broken-with-configuration-cache' of type org.gradle.api.DefaultTask.* Try:> Run with --stacktrace option to get the stack trace.> Run with --info or --debug option to get more log output.> Run with --scan to get full insights.* Get more help at https://help.gradle.orgBUILD FAILED in 335ms1 actionable task: 1 executedConfiguration cache entry reused.```### ContextWe enabled the configuration cache and we have several tasks that have these implicit usages. While we were able to verify that most tasks were working by running them once (as Gradle includes the report and fails the build if it can find any), for these implicit usages we are unable to track them. These leads to a whack-a-mole situation, where even new tasks we write and thought they would work, would sometimes start failing on the second invocation. This breaks workflows of our engineers, which we would like to prevent from happening### Steps to Reproduce See attached archive for the project: [gradle-bug.zip](https://github.com/gradle/gradle/files/9423656/gradle-bug.zip)1. Define a task which uses an implicit property of `project` during execution, for example `exec` in a `doLast` (`:broken-with-configuration-cache` in the reproduction project)2. Run the task once3. Run the task againIn step 2, I expect the task to fail, as it is incompatible with the configuration, similar to what `:correct-report-with-configuration-cache` would show on the first run:```./gradlew :correct-report-with-configuration-cacheConfiguration cache is an incubating feature.Calculating task graph as no configuration cache is available for tasks: :correct-report-with-configuration-cache> Task :correct-report-with-configuration-cachetask executedFAILURE: Build failed with an exception.* Where:Build file '/Users/timvand/Projects/gradle-bug/build.gradle' line: 11* What went wrong:Configuration cache problems found in this build.1 problem was found storing the configuration cache.- Build file 'build.gradle': invocation of 'Task.project' at execution time is unsupported.  See https://docs.gradle.org/7.4.2/userguide/configuration_cache.html#config_cache:requirements:use_project_during_executionSee the complete report at file:///Users/timvand/Projects/gradle-bug/build/reports/configuration-cache/5gzym0itzjfat8q69crlpr29o/ag6eq5yzqogrsnzzk4fhugh04/configuration-cache-report.html> Invocation of 'Task.project' by task ':correct-report-with-configuration-cache' at execution time is unsupported.* Try:> Run with --stacktrace option to get the stack trace.> Run with --info or --debug option to get more log output.> Run with --scan to get full insights.* Get more help at https://help.gradle.orgBUILD FAILED in 397ms1 actionable task: 1 executedConfiguration cache entry discarded with 1 problem.```For posterity, here are the definitions without needing to download the attached archive:```groovytasks.register('broken-with-configuration-cache') {    doLast {        exec {            commandLine ""echo"", ""task executed""        }    }}tasks.register('correct-report-with-configuration-cache') {    doLast {        project.exec {            commandLine ""echo"", ""task executed""        }    }}```
"
21666,1,0,6,0,0,PossibleReference,0,"title:Could not create service of type PluginResolutionStrategyInternal using BuildScopeServices.createPluginResolutionStrategy() description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues-->Error Could not create service of type PluginResolutionStrategyInternal using BuildScopeServices.createPluginResolutionStrategy() is received.<!--- Provide a brief summary of the issue in the title above -->### Expected Behavior<!--- Tell us what should happen -->The gradle workspace should be decompiled.### Current Behavior<!--- Tell us what happens instead of the expected behavior -->Could not create service of type PluginResolutionStrategyInternal using BuildScopeServices.createPluginResolutionStrategy()### Context<!--- How has this issue affected you? What are you trying to accomplish? -->Trying to decompile the workspace of a custom minecraft build<!--- Providing context helps us come up with a solution that is most useful in the real world -->### Steps to Reproduce <!---Provide a self-contained example project as an attached archive or a Github project.You can use the following template with a Gradle GitHub action set up to showcase your problem: https://github.com/gradle/gradle-issue-reproducerIn the rare cases where this is infeasible, we will also accept a detailed set of instructions.-->### Your Environment<!--- Include as many relevant details about the environment you experienced the bug in -->GitHub project: https://github.com/Sol-Client/Client/tree/1.8.5<!--- A build scan https://scans.gradle.com/get-started is ideal -->Build scan URL:
"
21656,0,0,226,0,0,mlopatkin,0,"title:Snippet ""snippet-tutorial-extra-properties"" is not compatible with the configuration cache description:The snippet enumerates sourceSets at execution time. SourceSets are only available through the project which isn't available at execution timeBuild scan URL:* https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket1SnippetsTest/snippet-tutorial-extra-properties_groovy_extraProperties.sample?top-execution=1* https://ge.gradle.org/s/wkszl3ueqiln2/tests/:docs:docsTest/org.gradle.docs.samples.Bucket1SnippetsTest/snippet-tutorial-extra-properties_kotlin_extraProperties.sample?top-execution=1
"
21642,0,258,226,0,0,mlopatkin,0,"title:Sample ""credentials-handling/publishing-credentials"" is not compatible with the configuration cache description:```tasks.withType(PublishToMavenRepository).configureEach {    doFirst {        def address = com.example.MavenRepositoryStub.start()        getRepository().setUrl(address)    }    doLast {        com.example.MavenRepositoryStub.stop()    }}```The value of `PublishToMavenRepository.getRepository` is not available upon restoring from the configuration cache, as the underlying field is transient.Build scan URL: * https://ge.gradle.org/s/whlsysck4qbjq/tests/:docs:docsTest/org.gradle.docs.samples.SamplesTest/publishing-credentials_kotlin_publishCommandLineCredentials.sample?top-execution=1* https://ge.gradle.org/s/whlsysck4qbjq/tests/:docs:docsTest/org.gradle.docs.samples.SamplesTest/publishing-credentials_groovy_publishCommandLineCredentials.sample?top-execution=1
"
21640,0,420,226,0,0,mlopatkin,0,"title:Snippet ""snippet-maven-publish-conditional-publishing"" is not compatible with the configuration cache description:The filtering code for the tasks is not compatible with the configuration cache. The evaluation of `onlyIf` clauses fails:```gradletasks.withType(PublishToMavenRepository) {    onlyIf(""publishing binary to the external repository, or binary and sources to the internal one"") {        (repository == publishing.repositories.external &&            publication == publishing.publications.binary) ||        (repository == publishing.repositories.internal &&            publication == publishing.publications.binaryAndSources)    }}```Build scan URL:https://ge.gradle.org/s/whlsysck4qbjq/tests/:docs:docsTest/org.gradle.docs.samples.Bucket2SnippetsTest/snippet-maven-publish-conditional-publishing_kotlin_publishingMavenConditionally.sample?top-execution=1https://ge.gradle.org/s/whlsysck4qbjq/tests/:docs:docsTest/org.gradle.docs.samples.Bucket2SnippetsTest/snippet-maven-publish-conditional-publishing_groovy_publishingMavenConditionally.sample?top-execution=1
"
21624,0,80,0,0,0,payneChen,0,"title:Could not set system property in the new Checkstyle task and finally failed by NPE when using ""ENTITY"" feature in configuration files description:### Expected Behavior```checkstyle {  systemProperty 'checkstyle.enableExternalDtdLoad', 'true'}```### Current BehaviorNo way to set system property since new checkstyle task would create new processes on its own, finally checkstyle would fail when using ""ENTITY"" feature.> Caused by: org.apache.tools.ant.BuildException: java.lang.NullPointerException: Cannot invoke ""java.util.Map.entrySet()"" because ""this.fTableOfNOTATIONAttributeNames"" is null--### Context & Steps to Reproduce Here is the example:https://checkstyle.sourceforge.io/config_system_properties.html#Enable_External_DTD_loadWhen setting up checkstyle configuration xml files as the example, checkstyle would be failed by NPE since no way to set system properties ""checkstyle.enableExternalDtdLoad=true"" for the isolated processes.### Your Environment------------------------------------------------------------Gradle 7.5.1------------------------------------------------------------Build time:   2022-08-05 21:17:56 UTCRevision:     d1daa0cbf1a0103000b71484e1dbfe096e095918Kotlin:       1.6.21Groovy:       3.0.10Ant:          Apache Ant(TM) version 1.10.11 compiled on July 10 2021JVM:          11.0.14 (SAP SE 11.0.14+9-LTS-sapmachine)OS:           Mac OS X 12.5.1 x86_64
"
21616,0,3446,32,0,1,jskov-jyskebank-dk,0,"title:Toolchain probing cannot cope with warnings from java description:### Expected BehaviorGradle should be able to handle ""java -version"" output that contains warnings:```console$ java -version[0.056s][warning][os,container] Duplicate cpuset controllers detected. Picking /sys/fs/cgroup/cpuset, skipping /sys/fs/cgroup/cpuset.[0.056s][warning][os,container] Duplicate cpuset controllers detected. Picking /sys/fs/cgroup/cpuset, skipping /sys/fs/cgroup/cpuset.[0.056s][warning][os,container] Duplicate cpuset controllers detected. Picking /sys/fs/cgroup/cpuset, skipping /sys/fs/cgroup/cpuset.openjdk version ""17.0.4"" 2022-07-19 LTSOpenJDK Runtime Environment (Red_Hat-17.0.4.0.8-2.el9_0) (build 17.0.4+8-LTS)OpenJDK 64-Bit Server VM (Red_Hat-17.0.4.0.8-2.el9_0) (build 17.0.4+8-LTS, mixed mode, sharing)```### Current BehaviorGradle (7.5.1) `javaToolchains` task fails with:```(14:47:50)  + Options(14:47:50)      | Auto-detection:     Enabled(14:47:50)      | Auto-download:      Enabled(14:47:50) (14:47:50)  + Red Hat, Inc. JDK 17.0.4+8-LTS(14:47:50)      | Location:           /usr/lib/jvm/java-17-openjdk-17.0.4.0.8-2.el8_6.x86_64(14:47:50)      | Language Version:   17(14:47:50)      | Vendor:             Red Hat, Inc.(14:47:50)      | Architecture:       amd64(14:47:50)      | Is JDK:             true(14:47:50)      | Detected by:        Common Linux Locations(14:47:50) (14:47:50)  + Invalid toolchains(14:47:50)      + /usr/lib/jvm/java-11-openjdk-11.0.16.0.8-1.el8_6.x86_64(14:47:50)        | Error:              Unexpected command output: (14:47:50) [0.015s][warning][os,container] Duplicate cpuset controllers detected. Picking /sys/fs/cgroup/cpuset, skipping /sys/fs/cgroup/cpuset.(14:47:50) [0.015s][warning][os,container] Duplicate cpuset controllers detected. Picking /sys/fs/cgroup/cpuset, skipping /sys/fs/cgroup/cpuset.(14:47:50) [0.015s][warning][os,container] Duplicate cpuset controllers detected. Picking /sys/fs/cgroup/cpuset, skipping /sys/fs/cgroup/cpuset.(14:47:50) /usr/lib/jvm/java-11-openjdk-11.0.16.0.8-1.el8_6.x86_64(14:47:50) 11.0.16(14:47:50) Red Hat, Inc.(14:47:50) amd64(14:47:50) OpenJDK 64-Bit Server VM(14:47:50) 11.0.16+8-LTS(14:47:50) OpenJDK Runtime Environment(14:47:50) 11.0.16+8-LTS```### ContextThis happens when we run Podman containers on OpenShift - Podman runs as non-root. And Gradle inside of this.So this is a two-layer deep container context (on top of core OS).Lots of interesting OCP/Podman/Kernel magic is in play that I cannot possibly describe fully.But I suspect that the JDK warns about the fact that it runs in a container - or some aspect of this, which it is surprised about.### Steps to Reproduce It is not easy to reproduce (as per Context). But I will be super happy to help test a fix!I can provide you with this output, which I hope is enough for you to accept the issue.The output is from running `java -version` (showing what is stdout and what is stderr):```STEP 2/4: RUN java -version[0.056s][warning][os,container] Duplicate cpuset controllers detected. Picking /sys/fs/cgroup/cpuset, skipping /sys/fs/cgroup/cpuset.[0.056s][warning][os,container] Duplicate cpuset controllers detected. Picking /sys/fs/cgroup/cpuset, skipping /sys/fs/cgroup/cpuset.[0.056s][warning][os,container] Duplicate cpuset controllers detected. Picking /sys/fs/cgroup/cpuset, skipping /sys/fs/cgroup/cpuset.openjdk version ""17.0.4"" 2022-07-19 LTSOpenJDK Runtime Environment (Red_Hat-17.0.4.0.8-2.el9_0) (build 17.0.4+8-LTS)OpenJDK 64-Bit Server VM (Red_Hat-17.0.4.0.8-2.el9_0) (build 17.0.4+8-LTS, mixed mode, sharing)--> c52c806705fSTEP 3/4: RUN java -version >/dev/nullopenjdk version ""17.0.4"" 2022-07-19 LTSOpenJDK Runtime Environment (Red_Hat-17.0.4.0.8-2.el9_0) (build 17.0.4+8-LTS)OpenJDK 64-Bit Server VM (Red_Hat-17.0.4.0.8-2.el9_0) (build 17.0.4+8-LTS, mixed mode, sharing)--> 955548f0dccSTEP 4/4: RUN java -version 2>/dev/null[0.004s][warning][os,container] Duplicate cpuset controllers detected. Picking /sys/fs/cgroup/cpuset, skipping /sys/fs/cgroup/cpuset.[0.004s][warning][os,container] Duplicate cpuset controllers detected. Picking /sys/fs/cgroup/cpuset, skipping /sys/fs/cgroup/cpuset.[0.004s][warning][os,container] Duplicate cpuset controllers detected. Picking /sys/fs/cgroup/cpuset, skipping /sys/fs/cgroup/cpuset.```### Other hintsThe only other (relevant) reference to this problem with java that I could find is: https://github.com/NixOS/nixpkgs/issues/163164#issuecomment-1122582269Without knowing all the intricacies of parsing output from all the possible variants and versions of java, I would suggest using only the stderr output from 'java -version'. But that may of course break other stuff.Or maybe strip out lines beginning with [ if that is a standard for warnings used in all java variants/versions.
"
21598,0,0,281,0,0,alllex,0,"title:Java toolchains caching uses mutable objects as keys description:`JavaToolchainQueryService` uses values of `JavaToolchainSpec` directly as keys for caching the resolved toolchain. However, at least `DefaultToolchainSpec` is based on a set of mutable `Property` fields. This could potentially lead to corruption of the cache if the toolchain specs are mutated externally.
"
21594,0,398,282,0,0,aSemy,0,"title:Update docs for adhoc-task property builder runtime API to describe equivalent for all annotations description:It seems like several of the annotations can't be described using the runtime API.* `@Classpath`* `@CompileClasspath`* `@LocalState`* `@Nested` (already documented as unavailable)* `@ReplacedBy`* `@Internal`### Expected BehaviourThe docs are updated * Unavailable annotations are documented* Examples for all available annotations are provided### Current BehaviourI am confused by the Gradle documentation, so I have to spend a lot of time researching and trying to find out what I should do.### ContextI want to add an `@Internal` API property for an existing task. The docs indicate that this should be possible with the `TaskPropertyBuilder` runtime API> In fact, the runtime API has almost feature parity with the annotations. All it lacks is an equivalent for [`@Nested`](https://docs.gradle.org/7.5.1/javadoc/org/gradle/api/tasks/Nested.html).https://docs.gradle.org/7.5.1/userguide/more_about_tasks.html#sec:task_input_output_runtime_apihttps://github.com/gradle/gradle/blob/65f74264f52ac0dcc14110c95977830cf7327da8/subprojects/docs/src/docs/userguide/authoring-builds/more_about_tasks.adoc#using-it-for-ad-hoc-tasksHowever, it seems this was removed:https://github.com/gradle/gradle/pull/18662/files#diff-a51bccf29febee74ae20fa3fde1fa0c3cdccadae38914bca2cf48b67ab98f9b5### Steps to Reproduce ```kotlin// build.gradle.ktstasks.register(""someTask"") {    inputs.property(""internalProperty"", ""value"")    .internal() // error    outputs.file(""$temporaryDir/internalOutputFile"")    .withPropertyName(""internalOutputFile"")    .internal() // error    inputs.file(""$temporaryDir/internalInputFile"")    .withPropertyName(""internalInputFile"")    .classpath() // error  }```### Your Environment* Gradle 7.5.1
"
21591,0,791,297,0,0,big-guy,0,"title:NullPointerException when using convention mapping and a Property for the same name description:@tresat was removing some APIs for 8.0 in https://github.com/gradle/gradle/pull/17123One of the tests affected was in `ConfigurationCacheConventionMappingIntegrationTest`:https://github.com/gradle/gradle/blob/2b14de7de061f508d3db11a223400f5b7b2c4cc0/subprojects/configuration-cache/src/integTest/groovy/org/gradle/configurationcache/ConfigurationCacheConventionMappingIntegrationTest.groovyThis test relies on the java-library plugin and the Jar task. The Jar task has a property named `archiveName` of type `String` and a _field_ named `archiveName` of type `Property<String>`. I believe this test is checking that the convention mapping for archiveName does not try to set the _field_ archiveName because they're different types when the configuration cache is enabled.In Tom's PR, we're removing the property named `archiveName`, so there's no longer any conflict. To keep this test doing something sensible, we tried to rewrite it to not use Jar.### Expected Behavior[The new test fails with a NPE.](https://ge.gradle.org/s/jrxsmghkf47lw/tests/:configuration-cache:embeddedIntegTest/org.gradle.configurationcache.ConfigurationCacheConventionMappingIntegrationTest/doesn't%20restore%20convention%20value%20to%20incompatible%20field%20type?focused-exception-line=0-102&top-execution=1)### Current BehaviorThe new test should cover the old bug's scenario.### Steps to Reproduce See here for the changed test: https://github.com/gradle/gradle/pull/17123/files#diff-133b4bdb00fe14faba7d9115798cbcb5a2510d895f92a1e4e0db0160d052fb50R29The build has a task `MyTask` that has a field named `archiveName` and a getter/setter which is also called `archiveName`.```            abstract class MyTask extends org.gradle.api.internal.ConventionTask {                private final Property<String> archiveName = project.objects.property(String)                @Input Property<String> getArchiveFileName() { return this.archiveName }                @Internal String getArchiveName() { return archiveFileName.getOrNull() }                void setArchiveName(String value) { archiveFileName.set(value) }                @TaskAction                void doIt() {                    assert archiveFileName.get() == ""something""                }            }            task myTask(type: MyTask) {                conventionMapping('archiveName') { 'not something' }                archiveFileName.convention(""something"")            }```If I rename the field _or_ remove the convention mapping, this test no longer fails with a NPE. 
"
21573,1,1629,20,1,1,hungvietnguyen,0,"title:`PathSensitivity.RELATIVE` does not ignore order of `InputArtifactDependencies` description:### ContextWhen building Android projects having dynamic features, during the dexing step, the Android Gradle plugin may request Gradle to transform the same [`InputArtifact`](https://docs.gradle.org/current/javadoc/org/gradle/api/artifacts/transform/InputArtifact.html) multiple times, and we expect that only the first transform does the actual work, and subsequent transforms should be UP-TO-DATE. However, as filed at [Gradle issue 21250](https://github.com/gradle/gradle/issues/21250), the order of [`InputArtifactDependencies`](https://docs.gradle.org/current/javadoc/org/gradle/api/artifacts/transform/InputArtifactDependencies.html) can change for the same `InputArtifact`, and therefore the transform is repeated multiple times for *each* `InputArtifact`. This causes a **huge** performance impact for users, as reported at https://issuetracker.google.com/169266011.To provide a workaround for users while the above issue is not yet fixed, we want to use `PathSensitivity.RELATIVE` on `InputArtifactDependencies`, so that the order can be ignored.However, the following sample project shows that the order is still NOT ignored.### Steps to Reproduce1. Open the attached project: [DynamicFeatureProject.zip](https://github.com/gradle/gradle/files/9376061/DynamicFeatureProject.zip)2. Run `rm lib/build/.transforms -rf && ./gradlew --stop && ./gradlew :dynamicfeature:mergeLibDexDebug :dynamicfeature2:mergeLibDexDebug` *twice* (the first one is just a warm-up). Observe the following:```> Transform classes.jar (project :lib) with DexingWithClasspathTransformProcessing classes.jar with classpath: [jetified-core-ktx-1.8.0-runtime.jar, core-1.8.0-runtime.jar, lifecycle-runtime-2.3.1-runtime.jar, core-runtime-2.1.0-runtime.jar, core-common-2.1.0.jar, versionedparcelable-1.1.1-runtime.jar, collection-1.0.0.jar, jetified-concurrent-futures-1.0.0.jar, lifecycle-common-2.3.1.jar, annotation-1.2.0.jar, jetified-kotlin-stdlib-1.7.0.jar, jetified-kotlin-stdlib-common-1.7.0.jar, jetified-annotations-13.0.jar, jetified-annotation-experimental-1.1.0-runtime.jar, jetified-listenablefuture-1.0.jar] > Transform classes.jar (project :lib) with DexingWithClasspathTransformProcessing classes.jar with classpath: [jetified-core-ktx-1.8.0-runtime.jar, core-1.8.0-runtime.jar, versionedparcelable-1.1.1-runtime.jar, collection-1.2.0.jar, lifecycle-runtime-2.3.1-runtime.jar, core-runtime-2.1.0-runtime.jar, core-common-2.1.0.jar, jetified-concurrent-futures-1.0.0.jar, lifecycle-common-2.3.1.jar, annotation-1.2.0.jar, jetified-kotlin-stdlib-1.7.0.jar, jetified-kotlin-stdlib-common-1.7.0.jar, jetified-annotations-13.0.jar, jetified-annotation-experimental-1.1.0-runtime.jar, jetified-listenablefuture-1.0.jar] ```The above log is produced by this code in `buildSrc` that patches the Android Gradle plugin's code:```// In buildSrc/.../DexTransform.kt// Line 112System.err.println(""Processing ${input.name} with classpath: ${computeClasspathFiles().map { it.name }} "")// Line 320@get:PathSensitive(PathSensitivity.RELATIVE) // Workaround for https://github.com/gradle/gradle/issues/21250, previously this was @get:CompileClasspath@get:InputArtifactDependenciesabstract val classpath: FileCollection```The log shows that:  - Even though the input to be transformed (`classes.jar` in `project :lib`) is the same, the `InputArtifactDependencies`'s order has changed -- this is [Gradle issue 21250](https://github.com/gradle/gradle/issues/21250)  - The change in `InputArtifactDependencies`'s order is not ignored by `PathSensitivity.RELATIVE` -- this is this issue### Expected BehaviorWhen `PathSensitivity.RELATIVE` is used on `InputArtifactDependencies`, the change in the `InputArtifactDependencies`'s order should be ignored. (In the above project, it means that the second transform should be UP-TO-DATE.)
"
21568,1,665,17,0,0,qlql489,0,"title:high version gradle can't find  version through BOM in child dependency description:<!--- Please use our bug report template to report problems with something that has never worked.  Regressions reports are greatly appreciated during our RC phase and before a final release.--><!--- Provide a brief summary of the issue in the title above -->zeue-core is a java jar , part of it's  bom like this```<dependencies><dependency>   <groupId>cglib</groupId>   <artifactId>cglib</artifactId>   <scope>runtime</scope><exclusions><exclusion></dependencies><dependencyManagement>   <dependencies>      <dependency>        <groupId>com.wb.zeus</groupId>        <artifactId>zeus-root</artifactId>        <version>1.0-SNAPSHOT</version>       <scope>import</scope>       <type>pom</type>     </dependency>   </dependencies></dependencyManagement>```i use  java-platform build  com.wb.zeus:zeus-rootit constraints   api 'cglib:cglib:3.3.0'another project testSub  implementation zeus-core like```implementation('com.wb.zeus:zeus-core:1.0-SNAPSHOT')```use gradlew 4.10.1 ,it can build success,but when user gradlew 6.9.1,build error:```Could not find cglib:cglib:.     Required by:         project :testSub > com.wb.zeus:zeus-core:1.0-SNAPSHOT:20220816.064812-13```### Expected Behavioruse new gradle version,project can implement com.wb.zeus:zeus-core  not implement  com.wb.zeus:zeus-root
"
21525,1,1395,59,0,0,DenWav,0,"title:Can't inject project services into artifact transforms description:When attempting to inject a service into an artifact transform as you would with a task, such as:```kt@get:Injectabstract val layout: ProjectLayout```### Expected BehaviorI would expect services to be available to artifact transforms in the same manner as they are to tasks.### Current BehaviorGradle will throw an error about not being able to find said service:```         > Could not create an instance of type Filter.            > No service of type interface org.gradle.api.file.ProjectLayout available.```### ContextI have an artifact transform which looks at files in the project, so the `ProjectLayout` service is the easiest option. In this particular instance I can rewrite my logic to collect the file info in the build script and pass it in as a parameter, but that would not handle all of the utilities the different services provide.### Steps to Reproduce Define an artifact transform exactly as shown in [the documentation](https://docs.gradle.org/current/userguide/artifact_transforms.html):```ktval artifactType = Attribute.of(""artifactType"", String::class.java)val filtered = Attribute.of(""minified"", Boolean::class.javaObjectType)dependencies {    attributesSchema {        attribute(filtered)    }    artifactTypes.getByName(""jar"") {        attributes.attribute(filtered, false)    }    registerTransform(Filter::class) {        from.attribute(filtered, false).attribute(artifactType, ""jar"")        to.attribute(filtered, true).attribute(artifactType, ""jar"")    }    implementation(kotlin(""stdlib-jdk8""))}abstract class Filter : TransformAction<TransformParameters.None> {    @get:Inject    abstract val layout: ProjectLayout    override fun transform(outputs: TransformOutputs) {}}```Execute `./gradlew dependencies` to see the error.### Environment```------------------------------------------------------------Gradle 7.5.1------------------------------------------------------------Build time:   2022-08-05 21:17:56 UTCRevision:     d1daa0cbf1a0103000b71484e1dbfe096e095918Kotlin:       1.6.21Groovy:       3.0.10Ant:          Apache Ant(TM) version 1.10.11 compiled on July 10 2021JVM:          11.0.13 (Azul Systems, Inc. 11.0.13+8-LTS)OS:           Mac OS X 13.0 x86_64```
"
21509,0,0,29,0,0,DPUkyle,0,"title:Default to latest version of CodeNarc tool description:At time of writing, CodeNarc v3.1.0 is the most recent.One complication - for Groovy 4 compatibility, the CodeNarc team published an alternate release using the same version number but different coordinates: The CodeNarc plugin should not assume that `localGroovy()` will be compatible with the version of the tool in use.I've opened CodeNarc/CodeNarc#711 to ask the CodeNarc team to consider publishing Spock-style, where the bundled/expected Groovy runtime is indicated by the version string, not the artifact name.
"
21505,0,266,226,0,0,mlopatkin,0,"title:application.defaultJvmArgs aren't applied when running from the configuration cache description:The application plugin's `run` command doesn't respect `defaultJvmArgs` set in the build file when the build reuses the configuration cache.A simple build file:```gradleplugins {    application}group = ""org.example""version = ""1.0-SNAPSHOT""repositories {    mavenCentral()}application {    mainClass.set(""Main"")    applicationDefaultJvmArgs = listOf(        ""-Dconfig.resource=local.conf""    )}```### Expected Behavior`defaultJvmArgs` should be applied to the started JVM regardless of the configuration cache status.### Current Behavior`defaultJvmArgs` are only applied if the configuration cache isn't reused.[app-plugin-cc-problem.zip](https://github.com/gradle/gradle/files/9310217/app-plugin-cc-problem.zip)
"
21503,0,0,29,0,0,DPUkyle,0,"title:Migrate `groovy.util.AntBuilder` 闂?`groovy.ant.AntBuilder` description:Groovy 3 made accommodations for consolidating split packages across libraries, in case they go full modular in the future. This also prepares us for the Groovy 4 upgrade.See [Groovy 3 release notes](http://groovy-lang.org/releasenotes/groovy-3.0.html#Groovy3.0releasenotes-Splitpackages) and [Groovy 4 release notes](https://groovy-lang.org/releasenotes/groovy-4.0.html#Groovy4.0-split-package-renaming).
"
21502,1,15380,293,0,0,mdedetrich,0,"title:gradle-scala plugin overrides isolated gradle provisioner scala version in spotless description:### Expected BehaviorWhen using gradle + gradle-scala and specifying the scala version with `-PscalaVersion=2.12` along with spotless-scala (https://github.com/diffplug/spotless) with scalafmt 3.5.8, there shouldn't be any problems and it should check/format the code fine.### Current BehaviorCurrently if you use spotless scala along with scalafmt 3.5.8 + scala 2.12 to see if the code is formatted, i.e.```./gradlew -PscalaVersion=2.12 :spotlessScalaCheck```You get the following stack trace```> Configure project :Starting build with version 3.4.0-SNAPSHOT (commit id de2ccf1f) using Gradle 7.5.1, Java 18 and Scala 2.12.15Build properties: maxParallelForks=10, maxScalacThreads=8, maxTestRetries=0> Task :spotlessScala FAILEDStep 'scalafmt' found problem in 'streams/streams-scala/src/main/scala/org/apache/kafka/streams/scala/FunctionsCompatConversions.scala':nulljava.lang.reflect.InvocationTargetException        at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:119)        at com.diffplug.spotless.scala.ScalaFmtStep$State.createFormat(ScalaFmtStep.java:98)        at com.diffplug.spotless.FormatterStepImpl$Standard.format(FormatterStepImpl.java:80)        at com.diffplug.spotless.FormatterStep$Strict.format(FormatterStep.java:88)        at com.diffplug.spotless.Formatter.compute(Formatter.java:230)        at com.diffplug.spotless.PaddedCell.calculateDirtyState(PaddedCell.java:203)        at com.diffplug.spotless.PaddedCell.calculateDirtyState(PaddedCell.java:190)        at com.diffplug.gradle.spotless.SpotlessTaskImpl.processInputFile(SpotlessTaskImpl.java:102)        at com.diffplug.gradle.spotless.SpotlessTaskImpl.performAction(SpotlessTaskImpl.java:88)        at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)        at org.gradle.internal.reflect.JavaMethod.invoke(JavaMethod.java:125)        at org.gradle.api.internal.project.taskfactory.IncrementalInputsTaskAction.doExecute(IncrementalInputsTaskAction.java:32)        at org.gradle.api.internal.project.taskfactory.StandardTaskAction.execute(StandardTaskAction.java:51)        at org.gradle.api.internal.project.taskfactory.AbstractIncrementalTaskAction.execute(AbstractIncrementalTaskAction.java:25)        at org.gradle.api.internal.project.taskfactory.StandardTaskAction.execute(StandardTaskAction.java:29)        at org.gradle.api.internal.tasks.execution.TaskExecution$3.run(TaskExecution.java:236)        at org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:29)        at org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:26)        at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)        at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)        at org.gradle.internal.operations.DefaultBuildOperationRunner.run(DefaultBuildOperationRunner.java:47)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:68)        at org.gradle.api.internal.tasks.execution.TaskExecution.executeAction(TaskExecution.java:221)        at org.gradle.api.internal.tasks.execution.TaskExecution.executeActions(TaskExecution.java:204)        at org.gradle.api.internal.tasks.execution.TaskExecution.executeWithPreviousOutputFiles(TaskExecution.java:187)        at org.gradle.api.internal.tasks.execution.TaskExecution.execute(TaskExecution.java:165)        at org.gradle.internal.execution.steps.ExecuteStep.executeInternal(ExecuteStep.java:89)        at org.gradle.internal.execution.steps.ExecuteStep.access$000(ExecuteStep.java:40)        at org.gradle.internal.execution.steps.ExecuteStep$1.call(ExecuteStep.java:53)        at org.gradle.internal.execution.steps.ExecuteStep$1.call(ExecuteStep.java:50)        at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)        at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)        at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)        at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)        at org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)        at org.gradle.internal.execution.steps.ExecuteStep.execute(ExecuteStep.java:50)        at org.gradle.internal.execution.steps.ExecuteStep.execute(ExecuteStep.java:40)        at org.gradle.internal.execution.steps.RemovePreviousOutputsStep.execute(RemovePreviousOutputsStep.java:68)        at org.gradle.internal.execution.steps.RemovePreviousOutputsStep.execute(RemovePreviousOutputsStep.java:38)        at org.gradle.internal.execution.steps.CancelExecutionStep.execute(CancelExecutionStep.java:41)        at org.gradle.internal.execution.steps.TimeoutStep.executeWithoutTimeout(TimeoutStep.java:74)        at org.gradle.internal.execution.steps.TimeoutStep.execute(TimeoutStep.java:55)        at org.gradle.internal.execution.steps.CreateOutputsStep.execute(CreateOutputsStep.java:51)        at org.gradle.internal.execution.steps.CreateOutputsStep.execute(CreateOutputsStep.java:29)        at org.gradle.internal.execution.steps.CaptureStateAfterExecutionStep.executeDelegateBroadcastingChanges(CaptureStateAfterExecutionStep.java:124)        at org.gradle.internal.execution.steps.CaptureStateAfterExecutionStep.execute(CaptureStateAfterExecutionStep.java:80)        at org.gradle.internal.execution.steps.CaptureStateAfterExecutionStep.execute(CaptureStateAfterExecutionStep.java:58)        at org.gradle.internal.execution.steps.ResolveInputChangesStep.execute(ResolveInputChangesStep.java:48)        at org.gradle.internal.execution.steps.ResolveInputChangesStep.execute(ResolveInputChangesStep.java:36)        at org.gradle.internal.execution.steps.BuildCacheStep.executeWithoutCache(BuildCacheStep.java:181)        at org.gradle.internal.execution.steps.BuildCacheStep.lambda$execute$1(BuildCacheStep.java:71)        at org.gradle.internal.Either$Right.fold(Either.java:175)        at org.gradle.internal.execution.caching.CachingState.fold(CachingState.java:59)        at org.gradle.internal.execution.steps.BuildCacheStep.execute(BuildCacheStep.java:69)        at org.gradle.internal.execution.steps.BuildCacheStep.execute(BuildCacheStep.java:47)        at org.gradle.internal.execution.steps.StoreExecutionStateStep.execute(StoreExecutionStateStep.java:36)        at org.gradle.internal.execution.steps.StoreExecutionStateStep.execute(StoreExecutionStateStep.java:25)        at org.gradle.internal.execution.steps.RecordOutputsStep.execute(RecordOutputsStep.java:36)        at org.gradle.internal.execution.steps.RecordOutputsStep.execute(RecordOutputsStep.java:22)        at org.gradle.internal.execution.steps.SkipUpToDateStep.executeBecause(SkipUpToDateStep.java:110)        at org.gradle.internal.execution.steps.SkipUpToDateStep.lambda$execute$2(SkipUpToDateStep.java:56)        at org.gradle.internal.execution.steps.SkipUpToDateStep.execute(SkipUpToDateStep.java:56)        at org.gradle.internal.execution.steps.SkipUpToDateStep.execute(SkipUpToDateStep.java:38)        at org.gradle.internal.execution.steps.ResolveChangesStep.execute(ResolveChangesStep.java:73)        at org.gradle.internal.execution.steps.ResolveChangesStep.execute(ResolveChangesStep.java:44)        at org.gradle.internal.execution.steps.legacy.MarkSnapshottingInputsFinishedStep.execute(MarkSnapshottingInputsFinishedStep.java:37)        at org.gradle.internal.execution.steps.legacy.MarkSnapshottingInputsFinishedStep.execute(MarkSnapshottingInputsFinishedStep.java:27)        at org.gradle.internal.execution.steps.ResolveCachingStateStep.execute(ResolveCachingStateStep.java:89)        at org.gradle.internal.execution.steps.ResolveCachingStateStep.execute(ResolveCachingStateStep.java:50)        at org.gradle.internal.execution.steps.ValidateStep.execute(ValidateStep.java:114)        at org.gradle.internal.execution.steps.ValidateStep.execute(ValidateStep.java:57)        at org.gradle.internal.execution.steps.CaptureStateBeforeExecutionStep.execute(CaptureStateBeforeExecutionStep.java:76)        at org.gradle.internal.execution.steps.CaptureStateBeforeExecutionStep.execute(CaptureStateBeforeExecutionStep.java:50)        at org.gradle.internal.execution.steps.SkipEmptyWorkStep.executeWithNoEmptySources(SkipEmptyWorkStep.java:254)        at org.gradle.internal.execution.steps.SkipEmptyWorkStep.execute(SkipEmptyWorkStep.java:91)        at org.gradle.internal.execution.steps.SkipEmptyWorkStep.execute(SkipEmptyWorkStep.java:56)        at org.gradle.internal.execution.steps.RemoveUntrackedExecutionStateStep.execute(RemoveUntrackedExecutionStateStep.java:32)        at org.gradle.internal.execution.steps.RemoveUntrackedExecutionStateStep.execute(RemoveUntrackedExecutionStateStep.java:21)        at org.gradle.internal.execution.steps.legacy.MarkSnapshottingInputsStartedStep.execute(MarkSnapshottingInputsStartedStep.java:38)        at org.gradle.internal.execution.steps.LoadPreviousExecutionStateStep.execute(LoadPreviousExecutionStateStep.java:43)        at org.gradle.internal.execution.steps.LoadPreviousExecutionStateStep.execute(LoadPreviousExecutionStateStep.java:31)        at org.gradle.internal.execution.steps.AssignWorkspaceStep.lambda$execute$0(AssignWorkspaceStep.java:40)        at org.gradle.api.internal.tasks.execution.TaskExecution$4.withWorkspace(TaskExecution.java:281)        at org.gradle.internal.execution.steps.AssignWorkspaceStep.execute(AssignWorkspaceStep.java:40)        at org.gradle.internal.execution.steps.AssignWorkspaceStep.execute(AssignWorkspaceStep.java:30)        at org.gradle.internal.execution.steps.IdentityCacheStep.execute(IdentityCacheStep.java:37)        at org.gradle.internal.execution.steps.IdentityCacheStep.execute(IdentityCacheStep.java:27)        at org.gradle.internal.execution.steps.IdentifyStep.execute(IdentifyStep.java:44)        at org.gradle.internal.execution.steps.IdentifyStep.execute(IdentifyStep.java:33)        at org.gradle.internal.execution.impl.DefaultExecutionEngine$1.execute(DefaultExecutionEngine.java:76)        at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeIfValid(ExecuteActionsTaskExecuter.java:139)        at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.execute(ExecuteActionsTaskExecuter.java:128)        at org.gradle.api.internal.tasks.execution.CleanupStaleOutputsExecuter.execute(CleanupStaleOutputsExecuter.java:77)        at org.gradle.api.internal.tasks.execution.FinalizePropertiesTaskExecuter.execute(FinalizePropertiesTaskExecuter.java:46)        at org.gradle.api.internal.tasks.execution.ResolveTaskExecutionModeExecuter.execute(ResolveTaskExecutionModeExecuter.java:51)        at org.gradle.api.internal.tasks.execution.SkipTaskWithNoActionsExecuter.execute(SkipTaskWithNoActionsExecuter.java:57)        at org.gradle.api.internal.tasks.execution.SkipOnlyIfTaskExecuter.execute(SkipOnlyIfTaskExecuter.java:56)        at org.gradle.api.internal.tasks.execution.CatchExceptionTaskExecuter.execute(CatchExceptionTaskExecuter.java:36)        at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.executeTask(EventFiringTaskExecuter.java:77)        at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.call(EventFiringTaskExecuter.java:55)        at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.call(EventFiringTaskExecuter.java:52)        at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)        at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)        at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)        at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)        at org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)        at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter.execute(EventFiringTaskExecuter.java:52)        at org.gradle.execution.plan.LocalTaskNodeExecutor.execute(LocalTaskNodeExecutor.java:69)        at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$InvokeNodeExecutorsAction.execute(DefaultTaskExecutionGraph.java:327)        at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$InvokeNodeExecutorsAction.execute(DefaultTaskExecutionGraph.java:314)        at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$BuildOperationAwareExecutionAction.execute(DefaultTaskExecutionGraph.java:307)        at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$BuildOperationAwareExecutionAction.execute(DefaultTaskExecutionGraph.java:293)        at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.execute(DefaultPlanExecutor.java:420)        at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.run(DefaultPlanExecutor.java:342)        at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)        at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)Caused by: java.lang.NoClassDefFoundError: scala/collection/IterableOnce        at org.scalafmt.Scalafmt$.format$default$2(Scalafmt.scala:171)        at org.scalafmt.Scalafmt.format$default$2(Scalafmt.scala)        at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)        ... 123 moreCaused by: java.lang.ClassNotFoundException: scala.collection.IterableOnce        at com.diffplug.spotless.FeatureClassLoader.findClass(FeatureClassLoader.java:81)        ... 126 moreFAILURE: Build failed with an exception.* What went wrong:Execution failed for task ':spotlessScala'.> java.lang.reflect.InvocationTargetException* Try:> Run with --stacktrace option to get the stack trace.> Run with --info or --debug option to get more log output.> Run with --scan to get full insights.* Get more help at https://help.gradle.orgBUILD FAILED in 9s2 actionable tasks: 1 executed, 1 up-to-date```### ContextRelevant issue in spotless: https://github.com/diffplug/spotless/issues/1273Relevant PR in kafka: https://github.com/apache/kafka/pull/12475The reason why spotless-scala with scalafmt is failing is because the usage of `-PscalaVersion=2.12` causes gradle-scala plugin to override the scala version. While this is expected/fine if you happen to be building your project for a different version of Scala, in the case of spotless-scala (that uses scalafmt underneath) the version of scala should **not** be overridden because regardless of what Scala version you are building the project, scalafmt 3.5.8 only works with Scala 2.13.x. Specifically if you look at the stacktrace its complaining about classes that only exist in Scala 2.13.x stdlib but not in Scala 2.12.x stdlib. This is why if you run ` ./gradlew -PscalaVersion=2.13 :spotlessScalaCheck` there is no issue (since scalafmt 3.5.8 is compildSpotless is already trying to solve this problem by isolating it (see https://github.com/diffplug/spotless/issues/1273#issuecomment-1211199206) but for some reason the `-PscalaVersion=2.12` bypasses this isolation. My immediate suspicion is that guild-scala is providing the scala runtime/stdlib globally within gradle which is being picked up by spotless-scala? If this is the case I imagine the way to solve this issue is to use an isolated classloader (no idea if Gradle is already doing this?)### Steps to Reproduce Checkout the following branch/PR https://github.com/apache/kafka/pull/12475 and run ` ./gradlew -PscalaVersion=2.12 :spotlessScalaCheck`.### Your EnvironmentMy environment is MacOS Montery 12.5 M1 however this problem occurs on any platform (this is evidenced by the fact it fails in Kafka's CI/CD, see https://ci-builds.apache.org/job/Kafka/job/kafka-pr/job/PR-12475/)Build scan URL: https://scans.gradle.com/s/bycldhmiy5imy
"
21465,0,2825,225,0,0,DaveJarvis,0,"title:Cannot extract contents of Renjin 3.5 beta76 archive description:# Environment```$ gradle --version------------------------------------------------------------Gradle 7.5.1------------------------------------------------------------Build time:   2022-08-05 21:17:56 UTCRevision:     d1daa0cbf1a0103000b71484e1dbfe096e095918Kotlin:       1.6.21Groovy:       3.0.10Ant:          Apache Ant(TM) version 1.10.11 compiled on July 10 2021JVM:          18.0.2 (BellSoft 18.0.2+10)OS:           Linux 5.18.10-arch1-1 amd64$ java -versionopenjdk version ""18.0.2"" 2022-07-19OpenJDK Runtime Environment (build 18.0.2+10)OpenJDK 64-Bit Server VM (build 18.0.2+10, mixed mode, sharing)```# Replicate``` bashmkdir -p $HOME/dev/failcd $HOME/dev/failcat << EOF > build.gradleplugins { id 'java' }repositories {  mavenCentral()  maven { url ""https://nexus.bedatadriven.com/content/groups/public"" }}dependencies { implementation 'org.renjin:renjin-script-engine:3.5-beta76' }jar {  duplicatesStrategy = DuplicatesStrategy.EXCLUDE  from {    (configurations.runtimeClasspath.findAll { !it.path.endsWith("".pom"") })    .collect {      it.isDirectory() ? it : zipTree(it)    }  }}EOFgradle jar```# ExpectedNo error.# Actual```Configuration on demand is an incubating feature.> Task :jar FAILEDFAILURE: Build failed with an exception.* What went wrong:Execution failed for task ':jar'.> Could not expand ZIP '/home/username/.gradle/caches/modules-2/files-2.1/org.renjin/renjin-core/3.5-beta76/52ccd406ab3306df0d37929939d1e28b457057c7/renjin-core-3.5-beta76.jar'.* Try:> Run with --stacktrace option to get the stack trace.> Run with --info or --debug option to get more log output.> Run with --scan to get full insights.* Get more help at https://help.gradle.orgBUILD FAILED in 1s1 actionable task: 1 executed```# RegressionIs this a regression? The same `gradle.build` file works with Gradle 7.3.Both `jar` and `zip` commands can open the file successfully.``` bash$ zip --test /home/username/.gradle/caches/modules-2/files-2.1/org.renjin/renjin-core/3.5-beta76/52ccd406ab3306df0d37929939d1e28b457057c7/renjin-core-3.5-beta76.jar test of /home/username/.gradle/caches/modules-2/files-2.1/org.renjin/renjin-core/3.5-beta76/52ccd406ab3306df0d37929939d1e28b457057c7/renjin-core-3.5-beta76.jar OK$ jar -tvf /home/username/.gradle/caches/modules-2/files-2.1/org.renjin/renjin-core/3.5-beta76/52ccd406ab3306df0d37929939d1e28b457057c7/renjin-core-3.5-beta76.jar | wc -l2253```# Stacktrace```Caused by: org.gradle.api.GradleException: Could not expand ZIP '/home/username/.gradle/caches/modules-2/files-2.1/org.renjin/renjin-core/3.5-beta76/52ccd406ab3306df0d37929939d1e28b457057c7/renjin-core-3.5-beta76.jar'.        at org.gradle.api.internal.file.archive.ZipFileTree.visit(ZipFileTree.java:108)        at org.gradle.api.internal.file.collections.FilteredMinimalFileTree.visit(FilteredMinimalFileTree.java:89)        at org.gradle.api.internal.file.collections.FileTreeAdapter.visit(FileTreeAdapter.java:96)```
"
21463,1,0,293,0,0,ccjernigan,0,"title:Don't clear `distributionSha256Sum` when updating Gradle wrapper description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues--><!--- Provide a brief summary of the issue in the title above -->When updating Gradle, configuring the correct Gradle SHA is difficult because the SHA gets cleared automatically.### Expected Behavior`distributionSha256Sum` is not affected by updating the Gradle wrapper.### Current Behavior`distributionSha256Sum` is removed from gradle-wrapper.properties when generating an updated wrapper.### ContextWhen updating to new versions of Gradle, I have to do a silly little dance that goes like this:1. Update the Gradle version in gradle/wrapper/gradle-wrapper.properties2. Update the [Gradle SHA](https://gradle.org/release-checksums/) in gradle/wrapper/gradle-wrapper.properties3. Update the Gradle wrapper by running ./gradlew wrapper4. Re-add the [Gradle SHA](https://gradle.org/release-checksums/) to gradle/wrapper/gradle-wrapper.propertiesStep 4 should not be necessary and is the reason for this bug report.### Steps to Reproduce 1. Create a Gradle project2. Add the correct sha to gradle-wrapper.properties under `distributionSha256Sum`3. Run `./gradlew wrapper`4. Look at the gradle-wrapper.properties, specifically `distributionSha256Sum`
"
21461,1,815,2,0,0,wangxuyang518,0,"title:org.gradle.unsafe.configuration-cache-problems   error description:env闂?    classpath 'com.android.tools.build:gradle:4.2.2'distributionUrl=https\://services.gradle.org/distributions/gradle-6.9-bin.zipwhen i run   闂傚倷鑳堕崑銊╁磿閺屻儮鈧棃宕撶粵顪猯e --configuration-cache --info闂傚倷鑳堕崑銊╁磿閺屻儲鍋樺┑顖氥偘javaConfiguration cache is an incubating feature.Now considering [E:\workspace\NetDemo] as hierarchies to watchWatching the file system is enabled if availableInvalidating in-memory cache of C:\Users\01426239\.gradle\caches\journal-1\file-access.binReusing configuration cache.FAILURE: Build failed with an exception.* What went wrong:Could not create task ':help'.> Could not create task of type 'Help'.   > Class org.gradle.internal.instantiation.generator.AsmBackedClassGenerator$InvokeSerializationConstructorAndInitializeFieldsStrategy can not access a member of class org.gradle.api.internal.AbstractTask with modifiers ""protected""* Try:Run with --stacktrace option to get the stack trace. Run with --debug option to get more log output. Run with --scan to get full insights.```
"
21448,0,0,256,0,0,eskatos,0,"title:Remove false claim from plugins user manual chapter description:This is simply not true in practice and confuses readers.
"
21445,1,0,42,0,0,Kitanotori,0,"title:No way to quiet --write-locks description:### Expected Behavior`./gradlew dependencies -q --write-locks` should not output dependency info in case of no errors (i.e., only generate lockfiles)### Current Behavior`./gradlew dependencies -q --write-locks` outputs all dependency info even if no errors.### ContextIn case of non-trivial projects, the output of --write-locks is quite long and thus causes inconvenience.
"
21430,1,0,94,0,0,thelou1s,0,"title:Gradle's dependency cache may be corrupt, Why? Always! description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues--><!--- Provide a brief summary of the issue in the title above -->Unable to find method ''org.gradle.api.file.DirectoryProperty org.gradle.api.tasks.compile.CompileOptions.getGeneratedSourceOutputDirectory()'''org.gradle.api.file.DirectoryProperty org.gradle.api.tasks.compile.CompileOptions.getGeneratedSourceOutputDirectory()'Gradle's dependency cache may be corrupt (this sometimes occurs after a network connection timeout.)Re-download dependencies and sync project (requires network)The state of a Gradle build process (daemon) may be corrupt. Stopping all Gradle daemons may solve this problem.Stop Gradle build processes (requires restart)Your project may be using a third-party plugin which is not compatible with the other plugins in the project or the version of Gradle requested by the project.In the case of corrupt Gradle processes, you can also try closing the IDE and then killing all Java processes.### Expected Behavior<!--- Tell us what should happen -->### Current Behavior<!--- Tell us what happens instead of the expected behavior -->### Context<!--- How has this issue affected you? What are you trying to accomplish? --><!--- Providing context helps us come up with a solution that is most useful in the real world -->### Steps to Reproduce <!---Provide a self-contained example project as an attached archive or a Github project.You can use the following template with a Gradle GitHub action set up to showcase your problem: https://github.com/gradle/gradle-issue-reproducerIn the rare cases where this is infeasible, we will also accept a detailed set of instructions.-->### Your Environment<!--- Include as many relevant details about the environment you experienced the bug in --><!--- A build scan https://scans.gradle.com/get-started is ideal -->Build scan URL:///*// * Designed and developed by 2020 skydoves (Jaewoong Eum)// *// * Licensed under the Apache License, Version 2.0 (the ""License"");// * you may not use this file except in compliance with the License.// * You may obtain a copy of the License at// *// * http://www.apache.org/licenses/LICENSE-2.0// *// * Unless required by applicable law or agreed to in writing, software// * distributed under the License is distributed on an ""AS IS"" BASIS,// * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.// * See the License for the specific language governing permissions and// * limitations under the License.// */ext.versions = [  minSdk              : 23,  compileSdk          : 32,  versionCode         : 6,  versionName         : '1.0.5',  // gradle plugins  gradleBuildTool     : '4.0.1',  spotlessGradle      : '6.4.1',  versionPlugin       : '0.39.0',  ktlint              : '0.43.0',  // kotlin  kotlin              : '1.6.10',  // support library  materialVersion     : '1.6.1',  // architecture components  fragmentVersion     : '1.4.1',  lifecycleVersion    : '2.4.1',  roomVersion         : '2.4.2',  archCompomentVersion: '2.1.0',  // binding  bindablesVersion    : '1.1.0',  // startup  startupVersion      : '1.1.1',  // di  hiltVersion         : '2.42',  // network  retrofitVersion     : '2.9.0',  okhttpVersion       : '4.9.3',  sandwichVersion     : '1.2.6',  // moshi  moshiVersion        : '1.13.0',  // coroutines  coroutinesVersion   : '1.6.1',  // whatIf  whatIfVersion       : '1.1.1',  // glide  glideVersion        : '4.13.2',  glidePaletteVersion : '2.1.2',  // bundler  bundlerVersion      : '1.0.4',  // transformation  transformationLayout: '1.1.1',  // recyclerView  recyclerView        : '1.2.1',  baseAdapter         : '1.0.4',  // android ribbon  androidRibbonVersion: '1.0.4',  // progress view  progressViewVersion : '1.1.3',  // rainbow  rainbowVersion      : '1.0.3',  // debugging  timberVersion       : '5.0.1',  // benchmark  baselineProfiles    : '1.2.0-rc01',  macroBenchmark      : '1.1.0',  uiAutomator         : '2.2.0',  // unit test  truthVersion        : '1.0.1',  junitVersion        : '4.13.1',  turbineVersion      : '0.6.0',  robolectricVersion  : '4.4',  androidxTest        : '1.3.0',  androidxTestJunit   : '1.1.2',  androidTestRunner   : '1.3.0-beta01',  espressoVersion     : '3.3.0',  mockitoKotlinVersion: '2.2.0',  mockitoInlineVersion: '3.5.13']
"
21416,1,0,3,0,0,rasaha91,0,"title:--property option is not recognized when running ./gradlew <project>:properties --property <myProp> description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues--><!--- Provide a brief summary of the issue in the title above -->Per the [documentation](https://docs.gradle.org/current/userguide/command_line_interface.html#sec:listing_properties), when running `./gradlew <project>:properties`, there is a way to query a specific property through the `--property` option.### Expected Behavior<!--- Tell us what should happen -->Using the `--property` option should work and you should be able to query the value of the property.### Current Behavior<!--- Tell us what happens instead of the expected behavior -->We hit an unknown command-line option error:* What went wrong:Problem configuring task :ReactAndroid:properties from command line.> Unknown command-line option '--property'.### Context<!--- How has this issue affected you? What are you trying to accomplish? --><!--- Providing context helps us come up with a solution that is most useful in the real world -->We need to query the value of a property for use outside the gradle build and would like to do it via the documented command line option. We have a work around, but it would be ideal if the gradle command worked.### Steps to Reproduce <!---Provide a self-contained example project as an attached archive or a Github project.You can use the following template with a Gradle GitHub action set up to showcase your problem: https://github.com/gradle/gradle-issue-reproducerIn the rare cases where this is infeasible, we will also accept a detailed set of instructions.-->1. Clone facebook/react-native - https://github.com/facebook/react-native2. In the cloned directory, run `./gradlew ReactAndroid:properties --property libsDirName`3. Observe the aforementioned failure### Your Environment<!--- Include as many relevant details about the environment you experienced the bug in -->Output of `./gradlew --version`:Gradle 7.3.3Build time:   2021-12-22 12:37:54 UTCRevision:     6f556c80f945dc54b50e0be633da6c62dbe8dc71Kotlin:       1.5.31Groovy:       3.0.9Ant:          Apache Ant(TM) version 1.10.11 compiled on July 10 2021JVM:          11.0.13 (Ubuntu 11.0.13+8-Ubuntu-0ubuntu1.20.04)OS:           Linux 5.10.102.1-microsoft-standard-WSL2 amd64
"
21414,1,0,286,0,0,pjfanning,0,"title:have gradlew lazily create gradle-wrapper.jar if missing description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues--><!--- Provide a brief summary of the issue in the title above -->### Expected Behavior./gradlew should work even if gradle/wrapper/gradle-wrapper.jar is missing### Current Behavior./gradlew only works if gradle/wrapper/gradle-wrapper.jar exists### ContextOSSF Scorecard and other initiatives to improve the security of OSS and related CI builds -- OSSF Scorecard demerits projects if they have checked in binary artifacts. -- [Example](https://github.com/pjfanning/excel-streaming-reader/security/code-scanning/1)Gradlew is very useful for encouraging uniformity in build experience.It would be great if gradlew could download the gradle-wrapper.jar if it is not checked in (eg if git is configured to ignore the file).As an example, mvnw does not need its equivalent wrapper jar to be present ([docs](https://maven.apache.org/wrapper/#usage-without-binary-jar)).Apologies if a similar issue has been raised, I did look over issues for the last few months.
"
21400,0,0,141,0,0,DanielThomas,0,"title:Scala compilation fails with 'rt.jar (class sbt.internal.inc.DummyVirtualFile) is not supported' description:The upgrade to the Zinc compiler introduced this failure in Scala projects internally:https://github.com/gradle/gradle/commit/597d8133a18171451a8295cac6b1f726584c2fda#diff-08c249a9aa06c1271f91ea8a6f37375c76844b9261f2d1a6bf632594fd8ff1fdReported also against sbt, scala-maven-plugin and Zinc itself:- https://github.com/sbt/sbt/pull/5522- https://github.com/davidB/scala-maven-plugin/issues/615- https://github.com/sbt/zinc/issues/1102### Your EnvironmentGradle 7.5
"
21381,1,812,257,1,0,Omico,0,"title:The Kotlin DSL is still missing in the settings script. description:I have checked https://github.com/gradle/gradle/issues/11210 this is still not working. And I have made a simple project for this issue for testing. See https://github.com/Omico/gradle-issue-missing-kotlin-dsl-in-settings.Also, I have noticed there is a weird thing happened with the Gradle Enterprise plugin.In `settings.gradle.kts`:```kotlinplugins {    id(""com.gradle.enterprise"") version ""3.10.3""} gradleEnterprise {    buildScan {        termsOfServiceUrl = ""https://gradle.com/terms-of-service""        termsOfServiceAgree = ""yes""        publishAlwaysIf(!gradle.startParameter.isOffline)    } }```But the `gradleEnterprise` actually is:```kotlinval org.gradle.api.Project.`gradleEnterprise`: com.gradle.enterprise.gradleplugin.GradleEnterpriseExtension get() =    (this as org.gradle.api.plugins.ExtensionAware).extensions.getByName(""gradleEnterprise"") as com.gradle.enterprise.gradleplugin.GradleEnterpriseExtensionfun org.gradle.api.Project.`gradleEnterprise`(configure: Action<com.gradle.enterprise.gradleplugin.GradleEnterpriseExtension>): Unit =    (this as org.gradle.api.plugins.ExtensionAware).extensions.configure(""gradleEnterprise"", configure)```I'm really curious how it can be cast a `Settings` as a `Project`?
"
21374,0,24023,226,0,1,mlopatkin,0,"title:Storing a task property set to a ValueSource provider with ValueSourceParameters.None parameter type into configuration cache fails description:Consider the following build file:```gradleimport org.gradle.api.provider.*abstract class GreetValueSource implements ValueSource<String, ValueSourceParameters.None> {    String obtain() {        return ""Hello!""    }}abstract class MyTask extends DefaultTask {    @Input abstract Property<String> getGreeting()    @TaskAction void run() { println greeting.get() }}def greetValueSource = providers.of(GreetValueSource) {}tasks.register(""greet"", MyTask) {    greeting = greetValueSource}```Run it with configuration cache enabled: `gradle --configuration-cache greet`### Expected Behavior""Hello!"" is printed and the configuration cache is stored### Current BehaviorStoring the cache fails with exception:```* What went wrong:Configuration cache state could not be cached: field '__greeting__' from type 'MyTask': error writing value of type 'org.gradle.api.internal.provider.DefaultProperty'> Configuration cache state could not be cached: field 'provider' from type 'org.gradle.api.internal.provider.MappingProvider': error writing value of type 'org.gradle.api.internal.provider.DefaultValueSourceProviderFactory$ValueSourceProvider'   > null cannot be cast to non-null type java.lang.Class<*>* Try:> Run with --info or --debug option to get more log output.* Exception is:org.gradle.configurationcache.ConfigurationCacheError: Configuration cache state could not be cached: field '__greeting__' from type 'MyTask': error writing value of type 'org.gradle.api.internal.provider.DefaultProperty'        at org.gradle.configurationcache.problems.ProblemsListener$DefaultImpls.onError(ProblemsListener.kt:31)        at org.gradle.configurationcache.problems.ConfigurationCacheProblems.onError(ConfigurationCacheProblems.kt:37)        at org.gradle.configurationcache.serialization.AbstractIsolateContext.onError(Contexts.kt:399)        at org.gradle.configurationcache.serialization.beans.BeanPropertyWriterKt.writeNextProperty(BeanPropertyWriter.kt:102)        at org.gradle.configurationcache.serialization.beans.BeanPropertyWriter.writeStateOf(BeanPropertyWriter.kt:55)        at org.gradle.configurationcache.serialization.codecs.TaskNodeCodec$writeTask$3$2$1.invokeSuspend(TaskNodeCodec.kt:99)        at org.gradle.configurationcache.serialization.codecs.TaskNodeCodec$writeTask$3$2$1.invoke(TaskNodeCodec.kt)        at org.gradle.configurationcache.serialization.codecs.TaskNodeCodec$writeTask$3$2$1.invoke(TaskNodeCodec.kt)        at org.gradle.configurationcache.serialization.codecs.TaskNodeCodecKt.withTaskOf(TaskNodeCodec.kt:230)        at org.gradle.configurationcache.serialization.codecs.TaskNodeCodecKt.access$withTaskOf(TaskNodeCodec.kt:1)        at org.gradle.configurationcache.serialization.codecs.TaskNodeCodec.writeTask(TaskNodeCodec.kt:93)        at org.gradle.configurationcache.serialization.codecs.TaskNodeCodec.encode(TaskNodeCodec.kt:71)        at org.gradle.configurationcache.serialization.codecs.TaskNodeCodec.encode(TaskNodeCodec.kt:64)        at org.gradle.configurationcache.serialization.codecs.BindingsBackedCodec.encode(BindingsBackedCodec.kt:52)        at org.gradle.configurationcache.serialization.DefaultWriteContext.write(Contexts.kt:85)        at org.gradle.configurationcache.serialization.codecs.WorkNodeCodec.writeNode(WorkNodeCodec.kt:91)        at org.gradle.configurationcache.serialization.codecs.WorkNodeCodec.writeNodes(WorkNodeCodec.kt:62)        at org.gradle.configurationcache.serialization.codecs.WorkNodeCodec.writeWork(WorkNodeCodec.kt:47)        at org.gradle.configurationcache.ConfigurationCacheState.writeWorkGraphOf(ConfigurationCacheState.kt:256)        at org.gradle.configurationcache.ConfigurationCacheState.writeBuildState$configuration_cache(ConfigurationCacheState.kt:209)        at org.gradle.configurationcache.ConfigurationCacheState.writeRootBuild(ConfigurationCacheState.kt:171)        at org.gradle.configurationcache.ConfigurationCacheState.writeRootBuildState(ConfigurationCacheState.kt:115)        at org.gradle.configurationcache.ConfigurationCacheIO$writeRootBuildStateTo$1.invokeSuspend(ConfigurationCacheIO.kt:133)        at org.gradle.configurationcache.ConfigurationCacheIO$writeRootBuildStateTo$1.invoke(ConfigurationCacheIO.kt)        at org.gradle.configurationcache.ConfigurationCacheIO$writeRootBuildStateTo$1.invoke(ConfigurationCacheIO.kt)        at org.gradle.configurationcache.ConfigurationCacheIO$writeConfigurationCacheState$1$1.invokeSuspend(ConfigurationCacheIO.kt:184)        at org.gradle.configurationcache.ConfigurationCacheIO$writeConfigurationCacheState$1$1.invoke(ConfigurationCacheIO.kt)        at org.gradle.configurationcache.ConfigurationCacheIO$writeConfigurationCacheState$1$1.invoke(ConfigurationCacheIO.kt)        at org.gradle.configurationcache.serialization.RunningKt$runWriteOperation$1.invokeSuspend(Running.kt:45)        at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)        at kotlin.coroutines.ContinuationKt.startCoroutine(Continuation.kt:115)        at org.gradle.configurationcache.serialization.RunningKt.runToCompletion(Running.kt:56)        at org.gradle.configurationcache.serialization.RunningKt.runWriteOperation(Running.kt:44)        at org.gradle.configurationcache.ConfigurationCacheIO.writeConfigurationCacheState(ConfigurationCacheIO.kt:183)        at org.gradle.configurationcache.ConfigurationCacheIO.writeRootBuildStateTo$configuration_cache(ConfigurationCacheIO.kt:131)        at org.gradle.configurationcache.DefaultConfigurationCache$writeConfigurationCacheState$1.run(DefaultConfigurationCache.kt:378)        at org.gradle.internal.Factories$1.create(Factories.java:31)        at org.gradle.internal.work.DefaultWorkerLeaseService.withReplacedLocks(DefaultWorkerLeaseService.java:345)        at org.gradle.api.internal.project.DefaultProjectStateRegistry$DefaultBuildProjectRegistry.withMutableStateOfAllProjects(DefaultProjectStateRegistry.java:197)        at org.gradle.api.internal.project.DefaultProjectStateRegistry$DefaultBuildProjectRegistry.withMutableStateOfAllProjects(DefaultProjectStateRegistry.java:190)        at org.gradle.configurationcache.DefaultConfigurationCache.writeConfigurationCacheState(DefaultConfigurationCache.kt:377)        at org.gradle.configurationcache.DefaultConfigurationCache.access$writeConfigurationCacheState(DefaultConfigurationCache.kt:54)        at org.gradle.configurationcache.DefaultConfigurationCache$saveWorkGraph$1.invoke(DefaultConfigurationCache.kt:304)        at org.gradle.configurationcache.DefaultConfigurationCache$saveWorkGraph$1.invoke(DefaultConfigurationCache.kt:304)        at org.gradle.configurationcache.DefaultConfigurationCache$saveToCache$1$1.invoke(DefaultConfigurationCache.kt:319)        at org.gradle.configurationcache.DefaultConfigurationCache$saveToCache$1$1.invoke(DefaultConfigurationCache.kt:317)        at org.gradle.configurationcache.ConfigurationCacheRepository$StoreImpl$useForStore$1.invoke(ConfigurationCacheRepository.kt:177)        at org.gradle.configurationcache.ConfigurationCacheRepository$StoreImpl$useForStore$1.invoke(ConfigurationCacheRepository.kt:169)        at org.gradle.configurationcache.ConfigurationCacheRepository$withExclusiveAccessToCache$1.create(ConfigurationCacheRepository.kt:244)        at org.gradle.cache.internal.LockOnDemandCrossProcessCacheAccess.withFileLock(LockOnDemandCrossProcessCacheAccess.java:90)        at org.gradle.cache.internal.DefaultCacheAccess.withFileLock(DefaultCacheAccess.java:191)        at org.gradle.cache.internal.DefaultPersistentDirectoryStore.withFileLock(DefaultPersistentDirectoryStore.java:188)        at org.gradle.cache.internal.DefaultCacheFactory$ReferenceTrackingCache.withFileLock(DefaultCacheFactory.java:209)        at org.gradle.configurationcache.ConfigurationCacheRepository.withExclusiveAccessToCache(ConfigurationCacheRepository.kt:242)        at org.gradle.configurationcache.ConfigurationCacheRepository.access$withExclusiveAccessToCache(ConfigurationCacheRepository.kt:46)        at org.gradle.configurationcache.ConfigurationCacheRepository$StoreImpl.useForStore(ConfigurationCacheRepository.kt:169)        at org.gradle.configurationcache.DefaultConfigurationCache$saveToCache$1.invoke(DefaultConfigurationCache.kt:317)        at org.gradle.configurationcache.DefaultConfigurationCache$saveToCache$1.invoke(DefaultConfigurationCache.kt:316)        at org.gradle.configurationcache.ConfigurationCacheBuildOperationsKt$withOperation$1.call(ConfigurationCacheBuildOperations.kt:60)        at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)        at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)        at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)        at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)        at org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)        at org.gradle.configurationcache.ConfigurationCacheBuildOperationsKt.withOperation(ConfigurationCacheBuildOperations.kt:55)        at org.gradle.configurationcache.ConfigurationCacheBuildOperationsKt.withStoreOperation(ConfigurationCacheBuildOperations.kt:34)        at org.gradle.configurationcache.DefaultConfigurationCache.saveToCache(DefaultConfigurationCache.kt:316)        at org.gradle.configurationcache.DefaultConfigurationCache.saveWorkGraph(DefaultConfigurationCache.kt:304)        at org.gradle.configurationcache.DefaultConfigurationCache.access$saveWorkGraph(DefaultConfigurationCache.kt:54)        at org.gradle.configurationcache.DefaultConfigurationCache$loadOrScheduleRequestedTasks$1.invoke(DefaultConfigurationCache.kt:134)        at org.gradle.configurationcache.DefaultConfigurationCache$loadOrScheduleRequestedTasks$1.invoke(DefaultConfigurationCache.kt:132)        at org.gradle.configurationcache.DefaultConfigurationCache.runWorkThatContributesToCacheEntry(DefaultConfigurationCache.kt:276)        at org.gradle.configurationcache.DefaultConfigurationCache.loadOrScheduleRequestedTasks(DefaultConfigurationCache.kt:132)        at org.gradle.configurationcache.ConfigurationCacheAwareBuildTreeWorkPreparer.scheduleRequestedTasks(ConfigurationCacheAwareBuildTreeWorkPreparer.kt:28)        at org.gradle.internal.buildtree.DefaultBuildTreeLifecycleController.lambda$doScheduleAndRunTasks$2(DefaultBuildTreeLifecycleController.java:89)        at org.gradle.composite.internal.DefaultIncludedBuildTaskGraph.withNewWorkGraph(DefaultIncludedBuildTaskGraph.java:101)        at org.gradle.internal.buildtree.DefaultBuildTreeLifecycleController.doScheduleAndRunTasks(DefaultBuildTreeLifecycleController.java:88)        at org.gradle.internal.buildtree.DefaultBuildTreeLifecycleController.lambda$runBuild$4(DefaultBuildTreeLifecycleController.java:106)        at org.gradle.internal.model.StateTransitionController.lambda$transition$5(StateTransitionController.java:166)        at org.gradle.internal.model.StateTransitionController.doTransition(StateTransitionController.java:247)        at org.gradle.internal.model.StateTransitionController.lambda$transition$6(StateTransitionController.java:166)        at org.gradle.internal.work.DefaultSynchronizer.withLock(DefaultSynchronizer.java:44)        at org.gradle.internal.model.StateTransitionController.transition(StateTransitionController.java:166)        at org.gradle.internal.buildtree.DefaultBuildTreeLifecycleController.runBuild(DefaultBuildTreeLifecycleController.java:103)        at org.gradle.internal.buildtree.DefaultBuildTreeLifecycleController.scheduleAndRunTasks(DefaultBuildTreeLifecycleController.java:69)        at org.gradle.tooling.internal.provider.ExecuteBuildActionRunner.run(ExecuteBuildActionRunner.java:31)        at org.gradle.launcher.exec.ChainingBuildActionRunner.run(ChainingBuildActionRunner.java:35)        at org.gradle.internal.buildtree.ProblemReportingBuildActionRunner.run(ProblemReportingBuildActionRunner.java:49)        at org.gradle.launcher.exec.BuildOutcomeReportingBuildActionRunner.run(BuildOutcomeReportingBuildActionRunner.java:65)        at org.gradle.tooling.internal.provider.FileSystemWatchingBuildActionRunner.run(FileSystemWatchingBuildActionRunner.java:136)        at org.gradle.launcher.exec.BuildCompletionNotifyingBuildActionRunner.run(BuildCompletionNotifyingBuildActionRunner.java:41)        at org.gradle.launcher.exec.RootBuildLifecycleBuildActionExecutor.lambda$execute$0(RootBuildLifecycleBuildActionExecutor.java:40)        at org.gradle.composite.internal.DefaultRootBuildState.run(DefaultRootBuildState.java:122)        at org.gradle.launcher.exec.RootBuildLifecycleBuildActionExecutor.execute(RootBuildLifecycleBuildActionExecutor.java:40)        at org.gradle.internal.buildtree.DefaultBuildTreeContext.execute(DefaultBuildTreeContext.java:40)        at org.gradle.launcher.exec.BuildTreeLifecycleBuildActionExecutor.lambda$execute$0(BuildTreeLifecycleBuildActionExecutor.java:65)        at org.gradle.internal.buildtree.BuildTreeState.run(BuildTreeState.java:53)        at org.gradle.launcher.exec.BuildTreeLifecycleBuildActionExecutor.execute(BuildTreeLifecycleBuildActionExecutor.java:65)        at org.gradle.launcher.exec.RunAsBuildOperationBuildActionExecutor$3.call(RunAsBuildOperationBuildActionExecutor.java:61)        at org.gradle.launcher.exec.RunAsBuildOperationBuildActionExecutor$3.call(RunAsBuildOperationBuildActionExecutor.java:57)        at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)        at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)        at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)        at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)        at org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)        at org.gradle.launcher.exec.RunAsBuildOperationBuildActionExecutor.execute(RunAsBuildOperationBuildActionExecutor.java:57)        at org.gradle.launcher.exec.RunAsWorkerThreadBuildActionExecutor.lambda$execute$0(RunAsWorkerThreadBuildActionExecutor.java:36)        at org.gradle.internal.work.DefaultWorkerLeaseService.withLocks(DefaultWorkerLeaseService.java:249)        at org.gradle.internal.work.DefaultWorkerLeaseService.runAsWorkerThread(DefaultWorkerLeaseService.java:109)        at org.gradle.launcher.exec.RunAsWorkerThreadBuildActionExecutor.execute(RunAsWorkerThreadBuildActionExecutor.java:36)        at org.gradle.tooling.internal.provider.continuous.ContinuousBuildActionExecutor.execute(ContinuousBuildActionExecutor.java:110)        at org.gradle.tooling.internal.provider.SubscribableBuildActionExecutor.execute(SubscribableBuildActionExecutor.java:64)        at org.gradle.internal.session.DefaultBuildSessionContext.execute(DefaultBuildSessionContext.java:46)        at org.gradle.tooling.internal.provider.BuildSessionLifecycleBuildActionExecuter$ActionImpl.apply(BuildSessionLifecycleBuildActionExecuter.java:100)        at org.gradle.tooling.internal.provider.BuildSessionLifecycleBuildActionExecuter$ActionImpl.apply(BuildSessionLifecycleBuildActionExecuter.java:88)        at org.gradle.internal.session.BuildSessionState.run(BuildSessionState.java:69)        at org.gradle.tooling.internal.provider.BuildSessionLifecycleBuildActionExecuter.execute(BuildSessionLifecycleBuildActionExecuter.java:62)        at org.gradle.tooling.internal.provider.BuildSessionLifecycleBuildActionExecuter.execute(BuildSessionLifecycleBuildActionExecuter.java:41)        at org.gradle.tooling.internal.provider.StartParamsValidatingActionExecuter.execute(StartParamsValidatingActionExecuter.java:63)        at org.gradle.tooling.internal.provider.StartParamsValidatingActionExecuter.execute(StartParamsValidatingActionExecuter.java:31)        at org.gradle.tooling.internal.provider.SessionFailureReportingActionExecuter.execute(SessionFailureReportingActionExecuter.java:52)        at org.gradle.tooling.internal.provider.SessionFailureReportingActionExecuter.execute(SessionFailureReportingActionExecuter.java:40)        at org.gradle.tooling.internal.provider.SetupLoggingActionExecuter.execute(SetupLoggingActionExecuter.java:47)        at org.gradle.tooling.internal.provider.SetupLoggingActionExecuter.execute(SetupLoggingActionExecuter.java:31)        at org.gradle.launcher.daemon.server.exec.ExecuteBuild.doBuild(ExecuteBuild.java:65)        at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:37)        at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)        at org.gradle.launcher.daemon.server.exec.WatchForDisconnection.execute(WatchForDisconnection.java:39)        at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)        at org.gradle.launcher.daemon.server.exec.ResetDeprecationLogger.execute(ResetDeprecationLogger.java:29)        at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)        at org.gradle.launcher.daemon.server.exec.RequestStopIfSingleUsedDaemon.execute(RequestStopIfSingleUsedDaemon.java:35)        at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)        at org.gradle.launcher.daemon.server.exec.ForwardClientInput$2.create(ForwardClientInput.java:78)        at org.gradle.launcher.daemon.server.exec.ForwardClientInput$2.create(ForwardClientInput.java:75)        at org.gradle.util.internal.Swapper.swap(Swapper.java:38)        at org.gradle.launcher.daemon.server.exec.ForwardClientInput.execute(ForwardClientInput.java:75)        at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)        at org.gradle.launcher.daemon.server.exec.LogAndCheckHealth.execute(LogAndCheckHealth.java:55)        at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)        at org.gradle.launcher.daemon.server.exec.LogToClient.doBuild(LogToClient.java:63)        at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:37)        at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)        at org.gradle.launcher.daemon.server.exec.EstablishBuildEnvironment.doBuild(EstablishBuildEnvironment.java:84)        at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:37)        at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)        at org.gradle.launcher.daemon.server.exec.StartBuildOrRespondWithBusy$1.run(StartBuildOrRespondWithBusy.java:52)        at org.gradle.launcher.daemon.server.DaemonStateCoordinator$1.run(DaemonStateCoordinator.java:297)        at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)        at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)        at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)        at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)        at java.base/java.lang.Thread.run(Thread.java:829)Caused by: org.gradle.configurationcache.ConfigurationCacheError: Configuration cache state could not be cached: field 'provider' from type 'org.gradle.api.internal.provider.MappingProvider': error writing value of type 'org.gradle.api.internal.provider.DefaultValueSourceProviderFactory$ValueSourceProvider'        at org.gradle.configurationcache.problems.ProblemsListener$DefaultImpls.onError(ProblemsListener.kt:31)        at org.gradle.configurationcache.problems.ConfigurationCacheProblems.onError(ConfigurationCacheProblems.kt:37)        at org.gradle.configurationcache.serialization.AbstractIsolateContext.onError(Contexts.kt:399)        at org.gradle.configurationcache.serialization.beans.BeanPropertyWriterKt.writeNextProperty(BeanPropertyWriter.kt:102)        at org.gradle.configurationcache.serialization.beans.BeanPropertyWriter.writeStateOf(BeanPropertyWriter.kt:55)        at org.gradle.configurationcache.serialization.codecs.BeanCodec.writeBeanOf(BeanCodec.kt:59)        at org.gradle.configurationcache.serialization.codecs.BeanCodec.encode(BeanCodec.kt:37)        at org.gradle.configurationcache.serialization.codecs.BindingsBackedCodec.encode(BindingsBackedCodec.kt:52)        at org.gradle.configurationcache.serialization.codecs.FixedValueReplacingProviderCodec.encodeValue(ProviderCodecs.kt:102)        at org.gradle.configurationcache.serialization.codecs.FixedValueReplacingProviderCodec.encodeProvider(ProviderCodecs.kt:83)        at org.gradle.configurationcache.serialization.codecs.PropertyCodec.encode(ProviderCodecs.kt:243)        at org.gradle.configurationcache.serialization.codecs.PropertyCodec.encode(ProviderCodecs.kt:235)        at org.gradle.configurationcache.serialization.codecs.BindingsBackedCodec.encode(BindingsBackedCodec.kt:52)        at org.gradle.configurationcache.serialization.DefaultWriteContext.write(Contexts.kt:85)        at org.gradle.configurationcache.serialization.beans.BeanPropertyWriterKt.writeNextProperty(BeanPropertyWriter.kt:96)        ... 155 moreCaused by: java.lang.NullPointerException: null cannot be cast to non-null type java.lang.Class<*>        at org.gradle.configurationcache.serialization.codecs.ValueSourceProviderCodec.encodeValueSource(ProviderCodecs.kt:212)        at org.gradle.configurationcache.serialization.codecs.ValueSourceProviderCodec.encode(ProviderCodecs.kt:188)        at org.gradle.configurationcache.serialization.codecs.ValueSourceProviderCodec.encode(ProviderCodecs.kt:177)        at org.gradle.configurationcache.serialization.codecs.BindingsBackedCodec.encode(BindingsBackedCodec.kt:52)        at org.gradle.configurationcache.serialization.codecs.FixedValueReplacingProviderCodec.encodeValue(ProviderCodecs.kt:102)        at org.gradle.configurationcache.serialization.codecs.FixedValueReplacingProviderCodec.encodeProvider(ProviderCodecs.kt:83)        at org.gradle.configurationcache.serialization.codecs.ProviderCodec.encode(ProviderCodecs.kt:135)        at org.gradle.configurationcache.serialization.codecs.ProviderCodec.encode(ProviderCodecs.kt:128)        at org.gradle.configurationcache.serialization.codecs.BindingsBackedCodec.encode(BindingsBackedCodec.kt:52)        at org.gradle.configurationcache.serialization.DefaultWriteContext.write(Contexts.kt:85)        at org.gradle.configurationcache.serialization.beans.BeanPropertyWriterKt.writeNextProperty(BeanPropertyWriter.kt:96)```### Your Environment<!--- Include as many relevant details about the environment you experienced the bug in --><!--- A build scan https://scans.gradle.com/get-started is ideal -->Reproduces with Gradle as old as 6.8, I didn't try earlier versions.Build scan URL: https://scans.gradle.com/s/uxzfk4z36axwo
"
21346,0,296,297,0,0,big-guy,0,"title:Finalizers of finalizers no longer execute when upstream task fails description:Before Gradle 7.5, finalizers of finalizers always ran.Since Gradle 7.5, finalizers of finalizers only run when the upstream dependency is successful.### Expected BehaviorA finalizer should always run.### Current BehaviorA finalizer sometimes does not run.### ContextThis build reproduces the problem:```task A {    doLast {        if (project.hasProperty(""fail"")) {            throw new GradleException(""boom"")        }    }    finalizedBy ""f1""}task f1 {    finalizedBy ""f2""    doLast {        println ""f1""    }}task f2 {    doLast {        println ""f2""    }}```### Steps to Reproduce With 7.4:- `gradle A` executes `A`, `f1` and `f2`- `gradle A -Pfail` executes `A`, `f1` and `f2`With 7.5:- `gradle A` executes `A`, `f1` and `f2`- `gradle A -Pfail` executes `A` and `f1`, but not `f2`
"
21336,1,15208,287,0,0,ben-manes,0,"title:NPE in test logging masks which test failed description:When writing new tests, some mistake that I made resulted in a failure and for some reason Gradle's test reporter received no exception. This results in an NPE and does not output which test failed, making it harder for me to determine what the actual cause was. Unfortunately, the buildscan also failed to be published ([CI job](https://github.com/ben-manes/caffeine/runs/7486082269?check_suite_focus=true#logs)). This was run using Gradle 7.5.Exception```Failed to notify test listener.org.gradle.internal.exceptions.DefaultMultiCauseException: Failed to notify test listener.        at org.gradle.internal.event.AbstractBroadcastDispatch.dispatch(AbstractBroadcastDispatch.java:89)        at org.gradle.internal.event.BroadcastDispatch$CompositeDispatch.dispatch(BroadcastDispatch.java:346)        at org.gradle.internal.event.BroadcastDispatch$CompositeDispatch.dispatch(BroadcastDispatch.java:249)        at org.gradle.internal.event.ListenerBroadcast.dispatch(ListenerBroadcast.java:141)        at org.gradle.internal.event.ListenerBroadcast.dispatch(ListenerBroadcast.java:37)        at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)        at com.sun.proxy.$Proxy162.afterTest(Unknown Source)        at org.gradle.api.internal.tasks.testing.results.TestListenerAdapter.completed(TestListenerAdapter.java:50)        at jdk.internal.reflect.GeneratedMethodAccessor1052.invoke(Unknown Source)        at java.base@11.0.15/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)        at java.base@11.0.15/java.lang.reflect.Method.invoke(Method.java:566)        at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)        at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)        at org.gradle.internal.event.AbstractBroadcastDispatch.dispatch(AbstractBroadcastDispatch.java:43)        at org.gradle.internal.event.BroadcastDispatch$SingletonDispatch.dispatch(BroadcastDispatch.java:245)        at org.gradle.internal.event.BroadcastDispatch$SingletonDispatch.dispatch(BroadcastDispatch.java:157)        at org.gradle.internal.event.AbstractBroadcastDispatch.dispatch(AbstractBroadcastDispatch.java:61)        at org.gradle.internal.event.BroadcastDispatch$CompositeDispatch.dispatch(BroadcastDispatch.java:346)        at org.gradle.internal.event.BroadcastDispatch$CompositeDispatch.dispatch(BroadcastDispatch.java:249)        at org.gradle.internal.event.ListenerBroadcast.dispatch(ListenerBroadcast.java:141)        at org.gradle.internal.event.ListenerBroadcast.dispatch(ListenerBroadcast.java:37)        at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)        at com.sun.proxy.$Proxy164.completed(Unknown Source)        at org.gradle.api.internal.tasks.testing.results.StateTrackingTestResultProcessor.completed(StateTrackingTestResultProcessor.java:96)        at org.gradle.api.internal.tasks.testing.results.AttachParentTestResultProcessor.completed(AttachParentTestResultProcessor.java:56)        at jdk.internal.reflect.GeneratedMethodAccessor1055.invoke(Unknown Source)        at java.base@11.0.15/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)        at java.base@11.0.15/java.lang.reflect.Method.invoke(Method.java:566)        at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)        at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)        at org.gradle.internal.dispatch.FailureHandlingDispatch.dispatch(FailureHandlingDispatch.java:30)        at org.gradle.internal.dispatch.AsyncDispatch.dispatchMessages(AsyncDispatch.java:87)        at org.gradle.internal.dispatch.AsyncDispatch.access$000(AsyncDispatch.java:36)        at org.gradle.internal.dispatch.AsyncDispatch$1.run(AsyncDispatch.java:71)        at org.gradle.internal.concurrent.InterruptibleRunnable.run(InterruptibleRunnable.java:42)        at org.gradle.internal.operations.CurrentBuildOperationPreservingRunnable.run(CurrentBuildOperationPreservingRunnable.java:42)        at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)        at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)        at java.base@11.0.15/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)        at java.base@11.0.15/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)        at java.base@11.0.15/java.lang.Thread.run(Thread.java:829)Cause 1: java.lang.NullPointerException        at org.gradle.api.internal.tasks.testing.logging.FullExceptionFormatter.printException(FullExceptionFormatter.java:55)        at org.gradle.api.internal.tasks.testing.logging.FullExceptionFormatter.format(FullExceptionFormatter.java:44)        at org.gradle.api.internal.tasks.testing.logging.TestEventLogger.after(TestEventLogger.java:83)        at org.gradle.api.internal.tasks.testing.logging.TestEventLogger.afterTest(TestEventLogger.java:59)        at jdk.internal.reflect.GeneratedMethodAccessor1053.invoke(Unknown Source)        at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)        at java.base/java.lang.reflect.Method.invoke(Method.java:566)        at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)        at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)        at org.gradle.internal.event.AbstractBroadcastDispatch.dispatch(AbstractBroadcastDispatch.java:43)        at org.gradle.internal.event.BroadcastDispatch$SingletonDispatch.dispatch(BroadcastDispatch.java:245)        at org.gradle.internal.event.BroadcastDispatch$SingletonDispatch.dispatch(BroadcastDispatch.java:157)        at org.gradle.internal.event.AbstractBroadcastDispatch.dispatch(AbstractBroadcastDispatch.java:61)        at org.gradle.internal.event.BroadcastDispatch$CompositeDispatch.dispatch(BroadcastDispatch.java:346)        at org.gradle.internal.event.BroadcastDispatch$CompositeDispatch.dispatch(BroadcastDispatch.java:249)        at org.gradle.internal.event.ListenerBroadcast.dispatch(ListenerBroadcast.java:141)        at org.gradle.internal.event.ListenerBroadcast.dispatch(ListenerBroadcast.java:37)        at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)        at com.sun.proxy.$Proxy162.afterTest(Unknown Source)        at org.gradle.api.internal.tasks.testing.results.TestListenerAdapter.completed(TestListenerAdapter.java:50)        at jdk.internal.reflect.GeneratedMethodAccessor1052.invoke(Unknown Source)        at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)        at java.base/java.lang.reflect.Method.invoke(Method.java:566)        at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)        at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)        at org.gradle.internal.event.AbstractBroadcastDispatch.dispatch(AbstractBroadcastDispatch.java:43)        at org.gradle.internal.event.BroadcastDispatch$SingletonDispatch.dispatch(BroadcastDispatch.java:245)        at org.gradle.internal.event.BroadcastDispatch$SingletonDispatch.dispatch(BroadcastDispatch.java:157)        at org.gradle.internal.event.AbstractBroadcastDispatch.dispatch(AbstractBroadcastDispatch.java:61)        at org.gradle.internal.event.BroadcastDispatch$CompositeDispatch.dispatch(BroadcastDispatch.java:346)        at org.gradle.internal.event.BroadcastDispatch$CompositeDispatch.dispatch(BroadcastDispatch.java:249)        at org.gradle.internal.event.ListenerBroadcast.dispatch(ListenerBroadcast.java:141)        at org.gradle.internal.event.ListenerBroadcast.dispatch(ListenerBroadcast.java:37)        at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)        at com.sun.proxy.$Proxy164.completed(Unknown Source)        at org.gradle.api.internal.tasks.testing.results.StateTrackingTestResultProcessor.completed(StateTrackingTestResultProcessor.java:96)        at org.gradle.api.internal.tasks.testing.results.AttachParentTestResultProcessor.completed(AttachParentTestResultProcessor.java:56)        at jdk.internal.reflect.GeneratedMethodAccessor1055.invoke(Unknown Source)        at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)        at java.base/java.lang.reflect.Method.invoke(Method.java:566)        at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)        at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)        at org.gradle.internal.dispatch.FailureHandlingDispatch.dispatch(FailureHandlingDispatch.java:30)        at org.gradle.internal.dispatch.AsyncDispatch.dispatchMessages(AsyncDispatch.java:87)        at org.gradle.internal.dispatch.AsyncDispatch.access$000(AsyncDispatch.java:36)        at org.gradle.internal.dispatch.AsyncDispatch$1.run(AsyncDispatch.java:71)        at org.gradle.internal.concurrent.InterruptibleRunnable.run(InterruptibleRunnable.java:42)        at org.gradle.internal.operations.CurrentBuildOperationPreservingRunnable.run(CurrentBuildOperationPreservingRunnable.java:42)        at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)        at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)        at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)        at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)        at java.base/java.lang.Thread.run(Thread.java:829)Cause 2: java.lang.NullPointerException        at org.gradle.api.internal.tasks.testing.junit.result.TestReportDataCollector.exceptionClassName(TestReportDataCollector.java:113)        at org.gradle.api.internal.tasks.testing.junit.result.TestReportDataCollector.failureMessage(TestReportDataCollector.java:106)        at org.gradle.api.internal.tasks.testing.junit.result.TestReportDataCollector.afterTest(TestReportDataCollector.java:89)        at jdk.internal.reflect.GeneratedMethodAccessor1053.invoke(Unknown Source)        at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)        at java.base/java.lang.reflect.Method.invoke(Method.java:566)        at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)        at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)        at org.gradle.internal.event.AbstractBroadcastDispatch.dispatch(AbstractBroadcastDispatch.java:43)        at org.gradle.internal.event.BroadcastDispatch$SingletonDispatch.dispatch(BroadcastDispatch.java:245)        at org.gradle.internal.event.BroadcastDispatch$SingletonDispatch.dispatch(BroadcastDispatch.java:157)        at org.gradle.internal.event.AbstractBroadcastDispatch.dispatch(AbstractBroadcastDispatch.java:61)        at org.gradle.internal.event.BroadcastDispatch$CompositeDispatch.dispatch(BroadcastDispatch.java:346)        at org.gradle.internal.event.BroadcastDispatch$CompositeDispatch.dispatch(BroadcastDispatch.java:249)        at org.gradle.internal.event.ListenerBroadcast.dispatch(ListenerBroadcast.java:141)        at org.gradle.internal.event.ListenerBroadcast.dispatch(ListenerBroadcast.java:37)        at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)        at com.sun.proxy.$Proxy162.afterTest(Unknown Source)        at org.gradle.api.internal.tasks.testing.results.TestListenerAdapter.completed(TestListenerAdapter.java:50)        at jdk.internal.reflect.GeneratedMethodAccessor1052.invoke(Unknown Source)        at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)        at java.base/java.lang.reflect.Method.invoke(Method.java:566)        at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)        at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)        at org.gradle.internal.event.AbstractBroadcastDispatch.dispatch(AbstractBroadcastDispatch.java:43)        at org.gradle.internal.event.BroadcastDispatch$SingletonDispatch.dispatch(BroadcastDispatch.java:245)        at org.gradle.internal.event.BroadcastDispatch$SingletonDispatch.dispatch(BroadcastDispatch.java:157)        at org.gradle.internal.event.AbstractBroadcastDispatch.dispatch(AbstractBroadcastDispatch.java:61)        at org.gradle.internal.event.BroadcastDispatch$CompositeDispatch.dispatch(BroadcastDispatch.java:346)        at org.gradle.internal.event.BroadcastDispatch$CompositeDispatch.dispatch(BroadcastDispatch.java:249)        at org.gradle.internal.event.ListenerBroadcast.dispatch(ListenerBroadcast.java:141)        at org.gradle.internal.event.ListenerBroadcast.dispatch(ListenerBroadcast.java:37)        at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)        at com.sun.proxy.$Proxy164.completed(Unknown Source)        at org.gradle.api.internal.tasks.testing.results.StateTrackingTestResultProcessor.completed(StateTrackingTestResultProcessor.java:96)        at org.gradle.api.internal.tasks.testing.results.AttachParentTestResultProcessor.completed(AttachParentTestResultProcessor.java:56)        at jdk.internal.reflect.GeneratedMethodAccessor1055.invoke(Unknown Source)        at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)        at java.base/java.lang.reflect.Method.invoke(Method.java:566)        at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)        at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)        at org.gradle.internal.dispatch.FailureHandlingDispatch.dispatch(FailureHandlingDispatch.java:30)        at org.gradle.internal.dispatch.AsyncDispatch.dispatchMessages(AsyncDispatch.java:87)        at org.gradle.internal.dispatch.AsyncDispatch.access$000(AsyncDispatch.java:36)        at org.gradle.internal.dispatch.AsyncDispatch$1.run(AsyncDispatch.java:71)        at org.gradle.internal.concurrent.InterruptibleRunnable.run(InterruptibleRunnable.java:42)        at org.gradle.internal.operations.CurrentBuildOperationPreservingRunnable.run(CurrentBuildOperationPreservingRunnable.java:42)        at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)        at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)        at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)        at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)        at java.base/java.lang.Thread.run(Thread.java:829)```
"
21326,1,2372,0,0,0,bizzi-vinhvo,0,"title:Issue when upgraded to Gradle 7.5 description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues--><!--- Provide a brief summary of the issue in the title above -->### Expected Behavior<!--- Tell us what should happen -->Gradle build still work### Current Behavior<!--- Tell us what happens instead of the expected behavior -->Run with `gradle build````> Task :model:jandex FAILEDException in thread ""main"" java.lang.NoClassDefFoundError: org/gradle/internal/classpath/Instrumented        at org.kordamp.gradle.plugin.jandex.tasks.JandexMain$ClassFileVisitor.indexFile(JandexMain.java:172)        at org.kordamp.gradle.plugin.jandex.tasks.JandexMain$ClassFileVisitor.visitFile(JandexMain.java:160)        at org.kordamp.gradle.plugin.jandex.tasks.JandexMain$ClassFileVisitor.visitFile(JandexMain.java:147)        at java.base/java.nio.file.Files.walkFileTree(Files.java:2811)        at java.base/java.nio.file.Files.walkFileTree(Files.java:2882)        at org.kordamp.gradle.plugin.jandex.tasks.JandexMain.execute(JandexMain.java:98)        at org.kordamp.gradle.plugin.jandex.tasks.JandexMain.run(JandexMain.java:124)        at org.kordamp.gradle.plugin.jandex.tasks.JandexMain.main(JandexMain.java:111)Caused by: java.lang.ClassNotFoundException: org.gradle.internal.classpath.Instrumented        at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)        at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)        at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)        ... 8 moreFAILURE: Build failed with an exception.* What went wrong:Execution failed for task ':model:jandex'.> Process 'command '/Users/myuser/.sdkman/candidates/java/17.0.3-tem/bin/java'' finished with non-zero exit value 1* Try:> Run with --stacktrace option to get the stack trace.> Run with --info or --debug option to get more log output.> Run with --scan to get full insights.* Get more help at https://help.gradle.orgBUILD FAILED in 26s13 actionable tasks: 4 executed, 9 up-to-date```### Context<!--- How has this issue affected you? What are you trying to accomplish? --><!--- Providing context helps us come up with a solution that is most useful in the real world -->build.gradle```/* * This file was generated by the Gradle 'init' task. */plugins {    id 'org.kordamp.gradle.jandex' version ""${jandexVersion}""}dependencies {    implementation enforcedPlatform(""${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}"")    implementation 'io.quarkus:quarkus-smallrye-graphql'    implementation(""io.quarkus:quarkus-hibernate-validator"")    implementation ""com.fasterxml.jackson.core:jackson-core:${jacksonVerion}""    implementation ""com.fasterxml.jackson.core:jackson-annotations:${jacksonVerion}""}```gradle.properties```jandexVersion=0.12.0```### Steps to Reproduce <!---Provide a self-contained example project as an attached archive or a Github project.You can use the following template with a Gradle GitHub action set up to showcase your problem: https://github.com/gradle/gradle-issue-reproducerIn the rare cases where this is infeasible, we will also accept a detailed set of instructions.-->### Your Environment<!--- Include as many relevant details about the environment you experienced the bug in --><!--- A build scan https://scans.gradle.com/get-started is ideal -->Gradle: 7.5Java 17.0.3 [Eclipse Temurin](https://projects.eclipse.org/projects/adoptium.temurin)Quarkus: 2.10.3.Final
"
21323,0,0,215,0,1,adammurdoch,0,"title:Poor performance for fully up-to-date builds on machines with many CPU cores description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues-->Profiling has identified a number of hotspots in work node scheduling when there are many CPU cores and many work nodes that are all very quick (eg up-to-date).### Expected BehaviorRunning an up-to-date build on a machine with many cores should be faster than on an equivalent machine with few cores.Of course, this should be true for all builds, not just for up-to-date builds, but this issue is related only to fixing this for up-to-date builds.### Current BehaviorRunning an up-to-date build on a machine with many cores can be slower than running on an equivalent machine with few cores.### Context<!--- How has this issue affected you? What are you trying to accomplish? --><!--- Providing context helps us come up with a solution that is most useful in the real world -->### Steps to Reproduce <!---Provide a self-contained example project as an attached archive or a Github project.You can use the following template with a Gradle GitHub action set up to showcase your problem: https://github.com/gradle/gradle-issue-reproducerIn the rare cases where this is infeasible, we will also accept a detailed set of instructions.-->### Your Environment<!--- Include as many relevant details about the environment you experienced the bug in --><!--- A build scan https://scans.gradle.com/get-started is ideal -->Build scan URL:
"
21315,0,0,8,0,0,codefish1,0,"title:SystemRoot environment variable needs to be defined for GradleRunner Tests on Windows description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues--><!--- Provide a brief summary of the issue in the title above -->When using the GradleRunner for testing buildSrc plugins you can define the Environment variables to be used, either as an empty map or with it's own values in the map.  This works fine on Linux/MacOS but on Windows the **SystemRoot** environment variable is required for the tests to access various parts of the networking stack.  Errors tend to be appearing as `no such host is known`### Expected Behavior<!--- Tell us what should happen -->The tests should work the same across operating systems and developers shouldn't have to add specific code to add this environment variable every time### Current Behavior<!--- Tell us what happens instead of the expected behavior -->### Context<!--- How has this issue affected you? What are you trying to accomplish? --><!--- Providing context helps us come up with a solution that is most useful in the real world -->### Steps to Reproduce <!---Provide a self-contained example project as an attached archive or a Github project.You can use the following template with a Gradle GitHub action set up to showcase your problem: https://github.com/gradle/gradle-issue-reproducerIn the rare cases where this is infeasible, we will also accept a detailed set of instructions.-->I've created an examplar project at https://github.com/codefish1/gradle-windows-bug which replicates the issue on a Windows host### Your Environment<!--- Include as many relevant details about the environment you experienced the bug in --><!--- A build scan https://scans.gradle.com/get-started is ideal -->Build scan URL:
"
21306,0,0,256,0,0,eskatos,0,"title::incubationReport txt reporter broken on Kotlin function signatures spanning multiple lines description:### Expected BehaviorThe generation of incubation reports works with Kotlin function signatures spanning multiple lines annotated with `@Incubating`.### Current BehaviorIf one adds `@Incubating` to a Kotlin function whose signature spans multiple lines, the `:internal-build-reports:allIncubationReports` task fails with an obscure `java.lang.IndexOutOfBoundsException: Index: 2, Size: 1`.See https://ge.gradle.org/s/kw6ncplxhg5me/failure#1This is caused by the `txt` report to be broken by the line breaks.### ContextEncountered in https://github.com/gradle/gradle/pull/20554Worked around by making the function declaration a single line.### Steps to Reproduce - Add a Kotlin function in the Gradle API, e.g. in the `kotlin-dsl` subproject whose signature spans multiple lines.- Annotate the function with `@Incubating`- Run `./gradlew :internal-build-reports:allIncubationReports`- https://ge.gradle.org/s/ewwwna5fc5ita/failure#1
"
21303,1,823,290,0,0,martin-braun,0,"title:dependencySubstitution not working for included projects description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues--><!--- Provide a brief summary of the issue in the title above -->### Expected BehaviorGradle should be able to include a project that leverages a dependency substitution to include a local build module without failing to resolve the local module.### Current BehaviorA project that includes a build / module using dependency substitution manages to resolve such local dependency without any error. However, if the project will be included in another project the dependency substitution of the included project will fail with the message: > Failed to resolve: com.example:lib### ContextI build an app using Capacitor. I also build a Capacitor plugin. I also build a gradle module (java lib). Now I try to use dependency substitution to include my gradle module in my Capacitor plugin. Works well, no errors at this point. Now in my app project I included my Capacitor plugin. Capacitor includes its plugins using include project directives. This fails, because it cannot resolve my gradle module (java lib).### Steps to Reproduce First create an empty gradle project / lib (let's call it ""example-module"", package name: com.example). I followed this tutorial: https://docs.gradle.org/current/samples/sample_building_java_libraries.htmlNow build a second project (let's call it ""example-project"") and include the build of the first project:*settings.gradle*```groovyincludeBuild(""/Users/user/Projects/example-module"") {    dependencySubstitution {        substitute(module(""com.example:lib""))                .with(project("":lib""))    }}```*build.gradle*```groovydependencies {    implementation 'com.example:lib'	...}```This works. Gradle Sync does not complain. Now create a third project and include the second project like so: *settings.gradle*```groovyinclude ':my-plugin'project(':my-plugin').projectDir = new File('/Users/user/Projects/example-project')```Gradle sync on the third project will fail with: > Failed to resolve: com.example:lib### Your Environment```------------------------------------------------------------Gradle 7.4.2------------------------------------------------------------Build time:   2022-03-31 15:25:29 UTCRevision:     540473b8118064efcc264694cbcaa4b677f61041Kotlin:       1.5.31Groovy:       3.0.9Ant:          Apache Ant(TM) version 1.10.11 compiled on July 10 2021JVM:          18.0.1.1 (Oracle Corporation 18.0.1.1+2-6)OS:           Mac OS X 12.4 x86_64```Capacitor 2
"
21293,0,0,31,0,0,rschmitt,0,"title:User guide makes confusing claims about plugin dependency isolation description:[This section](https://docs.gradle.org/current/userguide/plugins.html#plugins_dsl_limitations) of the user guide makes it sound like there is some kind of classloader/dependency isolation between plugins when they are loaded using the `plugins` DSL block:> This way of adding plugins to a project is much more than a more convenient syntax. The plugins DSL is processed in a way which allows Gradle to determine the plugins in use very early and very quickly. This allows Gradle to do smart things such as [...] allow[ing] different plugins to use different versions of dependencies.I [mentioned this](https://gradle-community.slack.com/archives/CA745PZHN/p1658187858194079?thread_ts=1657944560.799889&cid=CA745PZHN) on the Gradle Community Slack workspace and nobody seemed to know what it was referring to, so this claim should evidently be clarified or removed.
"
21289,0,381,0,0,0,Just-some-one,0,"title:typo in Working with files doc in the user guide description:<!--- Provide a brief summary of the issue in the title above -->for this dochttps://docs.gradle.org/current/userguide/working_with_files.html#sec:filtering_filesin the notice that said```It闂傚倷鑳堕崑銊╁磿閺屻儲鍋?good practice to specify the character set when reading and writing the file, otherwise the transformations won闂傚倷鑳堕崑銊╁磿閺屻儲鍋?work properly for non-ASCII text. You configure the character set with the CopySpec.getFilteringCharset() property. If it闂傚倷鑳堕崑銊╁磿閺屻儲鍋?not specified, the JVM default character set is used, which is likely to be different from the one you want.```it should be CopySpec.setFilteringCharset()  and it's link should be https://docs.gradle.org/current/javadoc/org/gradle/api/file/CopySpec.html#setFilteringCharset-java.lang.String-```### Your Environment```------------------------------------------------------------Gradle 7.5------------------------------------------------------------Build time:   2022-07-14 12:48:15 UTCRevision:     c7db7b958189ad2b0c1472b6fe663e6d654a5103Kotlin:       1.6.21Groovy:       3.0.10Ant:          Apache Ant(TM) version 1.10.11 compiled on July 10 2021JVM:          17.0.3 (Red Hat, Inc. 17.0.3+7-LTS)OS:           Linux 4.18.0-372.16.1.el8_6.x86_64 amd64```
"
21270,0,0,275,0,1,octylFractal,0,"title:De-incubate JavaVersion.VERSION_18 description:Fixes #21269
"
21269,0,0,275,0,0,octylFractal,0,"title:JavaVersion.VERSION_18 is still marked @Incubating description:Gradle fully supports Java 18, but the `@Incubating` marker was not removed with the 7.5 release. It should be removed to indicate that it is supported.
"
21252,0,0,215,0,0,adammurdoch,0,"title:Gradle does not recover from dependency resolution failures that happen while writing to the cache description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues-->It is possible to leave a configuration cache entry in a permanently broken state after a dependency resolution failure, even though the same build would later succeed with configuration caching disabled.### Expected BehaviorGradle recovers from dependency resolution failures in exactly the same way regardless of whether configuration caching is enabled or not.### Current BehaviorCurrently, a ""broken"" file collection is written to the cache when dependency resolution fails but no information about this failure is added so that the resolution can be retried in the usual way.I think the best option here is to stop writing broken file collections to the cache, rather than somehow attempting to store all the state that is need to recover.### Context<!--- How has this issue affected you? What are you trying to accomplish? --><!--- Providing context helps us come up with a solution that is most useful in the real world -->### Steps to Reproduce <!---Provide a self-contained example project as an attached archive or a Github project.You can use the following template with a Gradle GitHub action set up to showcase your problem: https://github.com/gradle/gradle-issue-reproducerIn the rare cases where this is infeasible, we will also accept a detailed set of instructions.-->### Your Environment<!--- Include as many relevant details about the environment you experienced the bug in --><!--- A build scan https://scans.gradle.com/get-started is ideal -->Build scan URL:
"
21245,1,0,280,0,0,rentalhost,0,"title:wrapper task generates an invalid distributionUrl link description:### ProblemAfter modifying the file `gradle.properties` and set `wrapper.gradleVersion` property to `7.5.0-rc-5` (although it happened with earlier versions) and running the `wrapper` task, the `gradle-wrapper.properties` file is updated with an invalid `distributionUrl`. It seems correct to me, but the file is not distributed through the indicated link (`https://services.gradle.org/distributions/gradle-7.5.0-rc-5-bin.zip`), but with the link `https://services.gradle.org/distributions/gradle-7.5-rc-5-bin.zip` (`7.5` instead of `7.5.0`).So in practice whenever the `wrapper` is updated I need to manually update the correct link.### ContextI'm developing a plugin for IntelliJ platform, the code can be found in https://github.com/hammer-tools/php-hammer.### Steps to Reproduce Change the `gradle.properties` file, setting the `wrapper.gradleVersion` property to a version `7.5.0-rc-5` and run the `wrapper` task.### Your EnvironmentWindows 10
"
21218,1,1803,289,0,0,livk-cloud,0,"title:Error writing upload maven repository plugin description:> jdk:17.0.3 gradle:7.4.2```kotlinabstract class MavenRepositoryPlugin : Plugin<Project> {    override fun apply(project: Project) {        project.pluginManager.apply(MavenPublishPlugin::class.java)        val publishing = project.extensions.getByType(PublishingExtension::class.java)        publishing.repositories.maven { maven ->            val releasesRepoUrl = ""https://xxxxx""            val snapshotsRepoUrl = ""https://xxxx""            if (project.version.toString().endsWith(""SNAPSHOT"")){                maven.setUrl(snapshotsRepoUrl)            }else{                maven.setUrl(releasesRepoUrl)            }            maven.credentials {                it.username = ""xxxxx""                it.password = ""xxxxx""            }        }    }}```> The code is converted from groovy, but the error still occurs> error info```txt> Task :buildSrc:extractPluginRequests NO-SOURCE> Task :buildSrc:generatePluginAdapters UP-TO-DATE> Task :buildSrc:pluginDescriptors UP-TO-DATE> Task :buildSrc:processResources UP-TO-DATE> Task :buildSrc:processTestResources NO-SOURCE> Task :buildSrc:compileKotlin> Task :buildSrc:compileJava NO-SOURCE> Task :buildSrc:compileGroovy NO-SOURCE> Task :buildSrc:compileGroovyPlugins NO-SOURCE> Task :buildSrc:classes UP-TO-DATE> Task :buildSrc:inspectClassesForKotlinIC> Task :buildSrc:jar> Task :buildSrc:assemble> Task :buildSrc:compileTestKotlin NO-SOURCE> Task :buildSrc:pluginUnderTestMetadata> Task :buildSrc:compileTestJava NO-SOURCE> Task :buildSrc:compileTestGroovy NO-SOURCE> Task :buildSrc:testClasses UP-TO-DATE> Task :buildSrc:test NO-SOURCE> Task :buildSrc:validatePlugins> Task :buildSrc:check> Task :buildSrc:build> Task :prepareKotlinBuildScriptModel UP-TO-DATEFAILURE: Build failed with an exception.* What went wrong:You must specify a URL for a Maven repository.```> I wonder if it's my configuration wrong or something else
"
21204,1,338,75,0,0,ZSmallX,0,"title:Unable to configure buildSrc pluginManagement with init script and Gradle.settingsEvaluated for buildSrc/settings.gradle.kts description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues--><!--- Provide a brief summary of the issue in the title above -->I try to use Gradle init script to specify pluginsManagement#repositories to custom maven. In the init script, I use Gradle#settingsEvaluated to set the pluginsManagement#repositories. ### Expected Behavior<!--- Tell us what should happen -->Unable to set pluginsManagement#repositories for buildSrc plugins to custom maven repo.### Current Behavior<!--- Tell us what happens instead of the expected behavior -->Set pluginsManagement#repositories for buildSrc plugins and take effect to custom maven repo.### Context<!--- How has this issue affected you? What are you trying to accomplish? --><!--- Providing context helps us come up with a solution that is most useful in the real world -->Uses Gradle init script to automake builds, each project does not need a configuration on buildSrc plugins pluginsManagement#repositories.### Steps to Reproduce <!---Provide a self-contained example project as an attached archive or a Github project.You can use the following template with a Gradle GitHub action set up to showcase your problem: https://github.com/gradle/gradle-issue-reproducerIn the rare cases where this is infeasible, we will also accept a detailed set of instructions.-->command:```./gradlew --init-script=init.gradle.kts --info```init.gradle.kts```settingsEvaluated {    pluginManagement {        repositories {            maven(url = ""http://mymaven/repository/"")        }    }}```buildSrc/build.gradle.kts```// ...// Uses plugins in buildSrc.plugins {    `kotlin-dsl`}// ...```settings.gradle.kts```// ... Without congifuring pluginManagement#repositories.```### Your Environment<!--- Include as many relevant details about the environment you experienced the bug in --><!--- A build scan https://scans.gradle.com/get-started is ideal -->Build scan URL: NoneIt's a local build. Had tried Gradle7.4.2, it has the same question.
"
21203,0,2685,22,0,0,danysantiago,0,"title:Incremental Annotation Processing Issue when recompiling annotated source dependency description:Hi - It seems Gradle's incremental compilation is failing to reprocess the originating source of a generated class that needs to be recompiled.Let me go through an example. First, we have our annotated source:```@Componentinterface MyComponent {  Lazy<Library> getLibrary();}```Then we have an `ISOLATING` annotation processor that processes the annotation called `@Component` and generates the following:```final class DaggerMyComponent {    private DaggerMyComponent() {    }    public static DaggerMyComponent.Builder builder() {        return new DaggerMyComponent.Builder();    }    public static MyComponent create() {        return (new DaggerMyComponent.Builder()).build();    }    private static final class MyComponentImpl implements MyComponent {        private final DaggerMyComponent.MyComponentImpl myComponentImpl = this;        private Provider<Library> libraryProvider;        private MyComponentImpl() {            this.initialize();        }        private void initialize() {            this.libraryProvider = new DaggerMyComponent.MyComponentImpl.SwitchingProvider(this.myComponentImpl, 0);        }        public Lazy<Library> getLibrary() {            return DoubleCheck.lazy(this.libraryProvider);        }        private static final class SwitchingProvider<T> implements Provider<T> {            private final DaggerMyComponent.MyComponentImpl myComponentImpl;            private final int id;            SwitchingProvider(DaggerMyComponent.MyComponentImpl myComponentImpl, int id) {                this.myComponentImpl = myComponentImpl;                this.id = id;            }            public T get() {                switch(this.id) {                case 0:                    return new Library();                default:                    throw new AssertionError(this.id);                }            }        }    }    static final class Builder {        private Builder() {        }        public MyComponent build() {            return new DaggerMyComponent.MyComponentImpl();        }    }}```The originating element of `DaggerMyComponent.java` is `MyComponent`. Now, if I make ABI incompatible changes to `Library`, then Gradle for some reason does not recompile `MyComponent` and instead it seems to consider `DaggerMyComponent.class` and `DaggerMyComponent.java` stale and deletes them without invoking the processor which leads to `DaggerMyComponent.java` not being regenerated and ultimately to a `ClassNotFoundException` because no class is compiled for the missing generated source.This exact behaviour can be reproduced with the following project: https://github.com/danysantiago/DaggerGradleIncrementalIssueTo reproduce:1. Do a full build and run: `./gradlew clean run`2. Change the [method](https://github.com/danysantiago/DaggerGradleIncrementalIssue/blob/main/library/src/main/java/Library.java#L12) in `Library.java` from `something1()` to `something2()` (or anything else different).3. Do an incremental build and run `./gradlew run`You should see the project fail with:```> Task :run FAILEDException in thread ""main"" java.lang.NoClassDefFoundError: DaggerMyComponent$MyComponentImpl$SwitchingProvider        at DaggerMyComponent$MyComponentImpl.initialize(DaggerMyComponent.java:50)        at DaggerMyComponent$MyComponentImpl.<init>(DaggerMyComponent.java:44)        at DaggerMyComponent$Builder.build(DaggerMyComponent.java:33)        at DaggerMyComponent.create(DaggerMyComponent.java:25)        at Maincito.main(Maincito.java:3)Caused by: java.lang.ClassNotFoundException: DaggerMyComponent$MyComponentImpl$SwitchingProvider        at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:581)        at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)        at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:522)        ... 5 more```The project is using:- Gradle 7.4.2- Java 11- [Dagger](https://github.com/google/dagger) 2.42Let me know if you need more information!
"
21191,0,600,176,0,0,breskeby,0,"title:VersionCatalogsExtension cannot be resolved when accessed from subprojects block description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues-->Using the type unsafe versions catalogue API as described in https://docs.gradle.org/current/userguide/platforms.html#sub:type-unsafe-access-to-catalog does not work when used within a subprojects block.This seems like an ordering problem of when the extension is actually added to the extensions container of a project. It works when accessing it directly in the projects build script.### Expected BehaviorThe type safe api as described in https://docs.gradle.org/current/userguide/platforms.html#sub:type-unsafe-access-to-catalog should work within a `subprojects` block### Current BehaviorResolving the `VersionCatalogsExtension` fails with ```* What went wrong:A problem occurred evaluating root project 'version-catalogue-issue'.> Extension of type 'VersionCatalogsExtension' does not exist.```### Context// no special context. pretty straight forward### Steps to Reproduce Find a reproducible example attached. In my real life scenario we fail in applying a binary plugin in subprojects, that accesses the extension. but the minimum example to demo the problem boils down to:```// this works!def versionCatalogRoot = extensions.getByType(VersionCatalogsExtension).named(""buildLibs"")println(versionCatalogRoot.findLibrary(""checkstyle"").get().get())subprojects {    // this throws ""Extension of type 'VersionCatalogsExtension' does not exist.""    def versionCatalog = extensions.getByType(VersionCatalogsExtension).named(""buildLibs"")    println(versionCatalogRoot.findLibrary(""checkstyle"").get().get())}``` [version-catalogue-issue.zip](https://github.com/gradle/gradle/files/9060936/version-catalogue-issue.zip)### Your Environment- Gradle 7.4.2
"
21182,1,1343,0,0,0,sacchettom,0,"title:resolveConsistentlyWith can't downgrade directly declared dependencies description:Given configurations A and B, where B extends A, B is set to resolve consistently with A. If B directly declares a dependency on a module from A in a higher version compared to what was resolved in A, Gradle can't resolve the version for B.### Expected BehaviorGiven the request for the ""consistent"" version resolution, the same version as A should be enforced.### Current BehaviorResolution fails.### ContextWe are trying to develop a plugin to allow users easily build modules for a specific java-based product. As such, we inject some dependencies through the plugin for test and compilation. Users can add their own dependencies. The test harness has a number of dependencies, but we'd like the test classpath to eventually use the same versions as the compile classpath. Tried using the consistent resolution and it works as long as it has to upgrade the dependencies. Downgrade though does not work.### Steps to Reproduce Minimal build:```groovyplugins {    id 'java'}repositories {    mavenCentral()}configurations {    testCompileClasspath.shouldResolveConsistentlyWith(configurations.compileClasspath)}dependencies {    implementation 'org.apache.commons:commons-text:1.9'    testImplementation 'org.apache.commons:commons-lang3:3.12.0'}```Here `commons-text` has a transitive on `commons-lang3:3.11.0`. But specifying a dependency on `3.12.0` breaks the build:```> Task :dependencyInsightorg.apache.commons:commons-lang3:3.11 FAILED   Selection reasons:      - By constraint : version resolved in configuration ':compileClasspath' by consistent resolution   Failures:      - Could not resolve org.apache.commons:commons-lang3:{strictly 3.11}.          - Cannot find a version of 'org.apache.commons:commons-lang3' that satisfies the version constraints:               Dependency path ':gradletest:unspecified' --> 'org.apache.commons:commons-lang3:3.12.0'               Constraint path ':gradletest:unspecified' --> 'org.apache.commons:commons-lang3:{strictly 3.11}' because of the following reason: version resolved in configuration ':compileClasspath' by consistent resolution               Dependency path ':gradletest:unspecified' --> 'org.apache.commons:commons-text:1.9' (compile) --> 'org.apache.commons:commons-lang3:3.11'```I believe this is part of the `strictly` logic - if people declared a certain dependency there must be a reason, so we should raise an issue. But I don't find it particularly intuitive. The downgrade instead works just fine if the downgrade happens for a transitive dependency, i.e. this couple of dependencies```    implementation 'org.apache.commons:commons-text:1.7'    testImplementation 'io.bitbucket.5faces:common:1.0.4'```causes `commons-lang3` `3.12.0` requested by the test dependency to be downgraded correctly to the `3.9` version resolved in the compile classpath 
"
21170,0,5078,63,0,0,blackears,0,"title:Gradle is trying to use a JDK that has been uninstalled from my system description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues--><!--- Provide a brief summary of the issue in the title above -->### Expected BehaviorGradle should be able to handle uninstalling one JDK and installing another.### Current BehaviorGradle refused to use the JDK pointed to by JAVA_HOME and instead kept trying to use the old no  longer installed version of the JDK.### ContextUnable to run Gradle.  Keep getting the error message ```D:\dev\starling2\game\2022\androidExportTest\android\build>""C:\Program Files\Eclipse Adoptium\jdk-11.0.15.10-hotspot/bin/java.exe"" ""-Xmx64m"" ""-Xms64m""   ""-Dorg.gradle.appname=gradlew"" -classpath ""D:\dev\starling2\game\2022\androidExportTest\android\build\\gradle\wrapper\gradle-wrapper.jar"" org.gradle.wrapper.GradleWrapperMain --stacktrace  --infoInitialized native services in: C:\Users\kitfox\.gradle\nativeInitialized jansi services in: C:\Users\kitfox\.gradle\nativeFAILURE: Build failed with an exception.* What went wrong:The supplied javaHome seems to be invalid. I cannot find the java executable. Tried location: C:\Program Files\Java\jdk1.8.0_151\bin\java.exe* Try:Run with --debug option to get more log output. Run with --scan to get full insights.* Exception is:org.gradle.internal.jvm.JavaHomeException: The supplied javaHome seems to be invalid. I cannot find the java executable. Tried location: C:\Program Files\Java\jdk1.8.0_151\bin\java.exe        at org.gradle.internal.jvm.Jvm.findExecutable(Jvm.java:183)        at org.gradle.internal.jvm.Jvm.getJavaExecutable(Jvm.java:208)        at org.gradle.internal.jvm.Jvm.forHome(Jvm.java:119)        at org.gradle.launcher.daemon.context.DaemonCompatibilitySpec.javaHomeMatches(DaemonCompatibilitySpec.java:64)        at org.gradle.launcher.daemon.context.DaemonCompatibilitySpec.whyUnsatisfied(DaemonCompatibilitySpec.java:40)        at org.gradle.launcher.daemon.context.DaemonCompatibilitySpec.isSatisfiedBy(DaemonCompatibilitySpec.java:35)        at org.gradle.launcher.daemon.context.DaemonCompatibilitySpec.isSatisfiedBy(DaemonCompatibilitySpec.java:25)        at org.gradle.launcher.daemon.client.DefaultDaemonConnector.getCompatibleDaemons(DefaultDaemonConnector.java:192)        at org.gradle.launcher.daemon.client.DefaultDaemonConnector.connectToIdleDaemon(DefaultDaemonConnector.java:157)        at org.gradle.launcher.daemon.client.DefaultDaemonConnector.connect(DefaultDaemonConnector.java:125)        at org.gradle.launcher.daemon.client.DaemonClient.execute(DaemonClient.java:144)        at org.gradle.launcher.daemon.client.DaemonClient.execute(DaemonClient.java:98)        at org.gradle.launcher.cli.RunBuildAction.run(RunBuildAction.java:57)        at org.gradle.internal.Actions$RunnableActionAdapter.execute(Actions.java:210)        at org.gradle.launcher.cli.DefaultCommandLineActionFactory$ParseAndBuildAction.execute(DefaultCommandLineActionFactory.java:275)        at org.gradle.launcher.cli.DefaultCommandLineActionFactory$ParseAndBuildAction.execute(DefaultCommandLineActionFactory.java:247)        at org.gradle.launcher.cli.DebugLoggerWarningAction.execute(DebugLoggerWarningAction.java:82)        at org.gradle.launcher.cli.DebugLoggerWarningAction.execute(DebugLoggerWarningAction.java:30)        at org.gradle.launcher.cli.WelcomeMessageAction.execute(WelcomeMessageAction.java:92)        at org.gradle.launcher.cli.WelcomeMessageAction.execute(WelcomeMessageAction.java:38)        at org.gradle.launcher.cli.NativeServicesInitializingAction.execute(NativeServicesInitializingAction.java:44)        at org.gradle.launcher.cli.NativeServicesInitializingAction.execute(NativeServicesInitializingAction.java:26)        at org.gradle.launcher.cli.ExceptionReportingAction.execute(ExceptionReportingAction.java:41)        at org.gradle.launcher.cli.ExceptionReportingAction.execute(ExceptionReportingAction.java:26)        at org.gradle.launcher.cli.DefaultCommandLineActionFactory$WithLogging.execute(DefaultCommandLineActionFactory.java:240)        at org.gradle.launcher.Main.doAction(Main.java:35)        at org.gradle.launcher.bootstrap.EntryPoint.run(EntryPoint.java:50)        at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)        at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)        at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)        at java.base/java.lang.reflect.Method.invoke(Method.java:566)        at org.gradle.launcher.bootstrap.ProcessBootstrap.runNoExit(ProcessBootstrap.java:60)        at org.gradle.launcher.bootstrap.ProcessBootstrap.run(ProcessBootstrap.java:37)        at org.gradle.launcher.GradleMain.main(GradleMain.java:31)        at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)        at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)        at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)        at java.base/java.lang.reflect.Method.invoke(Method.java:566)        at org.gradle.wrapper.BootstrapMainStarter.start(BootstrapMainStarter.java:35)        at org.gradle.wrapper.WrapperExecutor.execute(WrapperExecutor.java:108)        at org.gradle.wrapper.GradleWrapperMain.main(GradleWrapperMain.java:63)* Get more help at https://help.gradle.org```### Steps to Reproduce This issue has been resolved and is discussed in the thread https://discuss.gradle.org/t/gradle-is-trying-to-use-a-jdk-that-has-been-uninstalled-from-my-system/43202/3.  However, someone suggested I make a bug report of it here.  I was able to resolve the issue by deleting the registry.bin file that Gradle demon creates.### Your EnvironmentWindows 10
"
21164,0,0,33,0,0,bcmedeiros,0,"title:Unix start script is overwriting the `APP_NAME` env var value description:### Expected BehaviorWhen using the application plugin and running my apps using the generated start script, I expect any environment variable that I set from outside to be available to be consumed by my app.### Current BehaviorIf I set a environment variable called `APP_NAME`, the value for this variable is overwritten by the start script (Unix version only, Windows version works fine).### ContextI run hundreds of containers in a cloud container service, and as a standard in all environments, we always set `APP_NAME` and `APP_VERSION` environment variables to be consumed by loggers.Now that we are migrating to Gradle, we noticed that, regardless of what we set for `APP_NAME`, Gradle start scripts overwrites this to what it _thinks_ is the app name.### Steps to Reproduce 1. Create a simple java application that prints the `APP_NAME` env var2. Enable the `application` plugin and the dist package, unzip it3. run `APP_NAME=my-custom-name-from-outside ./app`4. `app` will be printed, instead of `my-custom-name-from-outside`### Your EnvironmentGradle 7.4.2 in any Unix OS
"
21161,1,0,0,0,0,harikrishnabikki,0,"title:No signature of method: org.gradle.api.internal.project.ProjectStateInternal.hasCompleted() is applicable for argument types: () values: [] description:Similar to: [https://github.com/expo/expo/issues/17565]`> Configure project :appInternal API constructor DefaultDomainObjectSet(Class<T>) has been deprecated. This is scheduled to be removed in Gradle 7.0. Please use ObjectFactory.domainObjectSet(Class<T>) instead. See https://docs.gradle.org/6.3/userguide/custom_gradle_types.html#domainobjectset for more details.        at build_9ffkuqqmthbii9y5r6sx20say.run(/Volumes/NewVolume/GitHub/appName/android/app/build.gradle:1)        (Run with --stacktrace to get the full stack trace of this deprecation warning.)> Configure project :expo-eas-clientWarning: The 'kotlin-android-extensions' Gradle plugin is deprecated. Please use this migration guide (https://goo.gle/kotlin-android-extensions-deprecation) to start working with View Binding (https://developer.android.com/topic/libraries/view-binding) and the 'kotlin-parcelize' plugin.> Configure project :expo-structured-headersWarning: The 'kotlin-android-extensions' Gradle plugin is deprecated. Please use this migration guide (https://goo.gle/kotlin-android-extensions-deprecation) to start working with View Binding (https://developer.android.com/topic/libraries/view-binding) and the 'kotlin-parcelize' plugin.FAILURE: Build completed with 2 failures.1: Task failed with an exception.-----------* Where:Script '/Volumes/NewVolume/GitHub/appName/node_modules/expo-updates/scripts/create-manifest-android.gradle' line: 105* What went wrong:A problem occurred evaluating script.> No signature of method: org.gradle.api.internal.project.ProjectStateInternal.hasCompleted() is applicable for argument types: () values: []* Try:Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights.==============================================================================2: Task failed with an exception.-----------* What went wrong:A problem occurred configuring project ':expo'.> compileSdkVersion is not specified. Please add it to build.gradle* Try:Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights.==============================================================================* Get more help at https://help.gradle.org``$ ./gradlew assembleRelease --warning-mode all --stacktrace> Configure project :app> Configure project :expo-eas-clientWarning: The 'kotlin-android-extensions' Gradle plugin is deprecated. Please use this migration guide (https://goo.gle/kotlin-android-extensions-deprecation) to start working with View Binding (https://developer.android.com/topic/libraries/view-binding) and the 'kotlin-parcelize' plugin.> Configure project :expo-structured-headersWarning: The 'kotlin-android-extensions' Gradle plugin is deprecated. Please use this migration guide (https://goo.gle/kotlin-android-extensions-deprecation) to start working with View Binding (https://developer.android.com/topic/libraries/view-binding) and the 'kotlin-parcelize' plugin.FAILURE: Build completed with 2 failures.1: Task failed with an exception.-----------* Where:Script '/Volumes/NewVolume/GitHub/appName/node_modules/expo-updates/scripts/create-manifest-android.gradle' line: 105* What went wrong:A problem occurred evaluating script.> No signature of method: org.gradle.api.internal.project.ProjectStateInternal.hasCompleted() is applicable for argument types: () values: []* Try:Run with --info or --debug option to get more log output. Run with --scan to get full insights.* Exception is:org.gradle.api.GradleScriptException: A problem occurred evaluating script.        at org.gradle.groovy.scripts.internal.DefaultScriptRunnerFactory$ScriptRunnerImpl.run(DefaultScriptRunnerFactory.java:93)        at org.gradle.configuration.DefaultScriptPluginFactory$ScriptPluginImpl$2.run(DefaultScriptPluginFactory.java:237)        at org.gradle.configuration.DefaultScriptTarget.addConfiguration(DefaultScriptTarget.java:74)        at org.gradle.configuration.DefaultScriptPluginFactory$ScriptPluginImpl.apply(DefaultScriptPluginFactory.java:242)        at org.gradle.configuration.BuildOperationScriptPlugin$1$1.run(BuildOperationScriptPlugin.java:69)        at org.gradle.internal.operations.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:402)        at org.gradle.internal.operations.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:394)        at org.gradle.internal.operations.DefaultBuildOperationExecutor$1.execute(DefaultBuildOperationExecutor.java:165)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.execute(DefaultBuildOperationExecutor.java:250)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.execute(DefaultBuildOperationExecutor.java:158)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:92)        at org.gradle.internal.operations.DelegatingBuildOperationExecutor.run(DelegatingBuildOperationExecutor.java:31)        at org.gradle.configuration.BuildOperationScriptPlugin$1.execute(BuildOperationScriptPlugin.java:66)        at org.gradle.configuration.BuildOperationScriptPlugin$1.execute(BuildOperationScriptPlugin.java:63)        at org.gradle.configuration.internal.DefaultUserCodeApplicationContext.apply(DefaultUserCodeApplicationContext.java:49)        at org.gradle.configuration.BuildOperationScriptPlugin.apply(BuildOperationScriptPlugin.java:63)        at org.gradle.api.internal.plugins.DefaultObjectConfigurationAction.applyScript(DefaultObjectConfigurationAction.java:149)        at org.gradle.api.internal.plugins.DefaultObjectConfigurationAction.access$000(DefaultObjectConfigurationAction.java:42)        at org.gradle.api.internal.plugins.DefaultObjectConfigurationAction$1.run(DefaultObjectConfigurationAction.java:75)        at org.gradle.api.internal.plugins.DefaultObjectConfigurationAction.execute(DefaultObjectConfigurationAction.java:183)        at org.gradle.api.internal.project.AbstractPluginAware.apply(AbstractPluginAware.java:49)        at org.gradle.api.internal.project.ProjectScript.apply(ProjectScript.java:37)        at org.gradle.api.Script$apply.callCurrent(Unknown Source)        at build_2eito4e1a80dhc73sak3zh63j.run(/Volumes/NewVolume/GitHub/appName/node_modules/expo-updates/android/build.gradle:9)        at org.gradle.groovy.scripts.internal.DefaultScriptRunnerFactory$ScriptRunnerImpl.run(DefaultScriptRunnerFactory.java:91)        at org.gradle.configuration.DefaultScriptPluginFactory$ScriptPluginImpl$2.run(DefaultScriptPluginFactory.java:237)        at org.gradle.configuration.ProjectScriptTarget.addConfiguration(ProjectScriptTarget.java:77)        at org.gradle.configuration.DefaultScriptPluginFactory$ScriptPluginImpl.apply(DefaultScriptPluginFactory.java:242)        at org.gradle.configuration.BuildOperationScriptPlugin$1$1.run(BuildOperationScriptPlugin.java:69)        at org.gradle.internal.operations.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:402)        at org.gradle.internal.operations.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:394)        at org.gradle.internal.operations.DefaultBuildOperationExecutor$1.execute(DefaultBuildOperationExecutor.java:165)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.execute(DefaultBuildOperationExecutor.java:250)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.execute(DefaultBuildOperationExecutor.java:158)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:92)        at org.gradle.internal.operations.DelegatingBuildOperationExecutor.run(DelegatingBuildOperationExecutor.java:31)        at org.gradle.configuration.BuildOperationScriptPlugin$1.execute(BuildOperationScriptPlugin.java:66)        at org.gradle.configuration.BuildOperationScriptPlugin$1.execute(BuildOperationScriptPlugin.java:63)        at org.gradle.configuration.internal.DefaultUserCodeApplicationContext.apply(DefaultUserCodeApplicationContext.java:49)        at org.gradle.configuration.BuildOperationScriptPlugin.apply(BuildOperationScriptPlugin.java:63)        at org.gradle.configuration.project.BuildScriptProcessor$1.run(BuildScriptProcessor.java:45)        at org.gradle.internal.Factories$1.create(Factories.java:26)        at org.gradle.api.internal.project.DefaultProjectStateRegistry$ProjectStateImpl.withMutableState(DefaultProjectStateRegistry.java:245)        at org.gradle.api.internal.project.DefaultProjectStateRegistry$ProjectStateImpl.withMutableState(DefaultProjectStateRegistry.java:226)        at org.gradle.configuration.project.BuildScriptProcessor.execute(BuildScriptProcessor.java:42)        at org.gradle.configuration.project.BuildScriptProcessor.execute(BuildScriptProcessor.java:26)        at org.gradle.configuration.project.ConfigureActionsProjectEvaluator.evaluate(ConfigureActionsProjectEvaluator.java:35)        at org.gradle.configuration.project.LifecycleProjectEvaluator$EvaluateProject$1.run(LifecycleProjectEvaluator.java:102)        at org.gradle.internal.Factories$1.create(Factories.java:26)        at org.gradle.api.internal.project.DefaultProjectStateRegistry$ProjectStateImpl.withMutableState(DefaultProjectStateRegistry.java:245)        at org.gradle.api.internal.project.DefaultProjectStateRegistry$ProjectStateImpl.withMutableState(DefaultProjectStateRegistry.java:226)        at org.gradle.configuration.project.LifecycleProjectEvaluator$EvaluateProject.run(LifecycleProjectEvaluator.java:91)        at org.gradle.internal.operations.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:402)        at org.gradle.internal.operations.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:394)        at org.gradle.internal.operations.DefaultBuildOperationExecutor$1.execute(DefaultBuildOperationExecutor.java:165)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.execute(DefaultBuildOperationExecutor.java:250)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.execute(DefaultBuildOperationExecutor.java:158)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:92)        at org.gradle.internal.operations.DelegatingBuildOperationExecutor.run(DelegatingBuildOperationExecutor.java:31)        at org.gradle.configuration.project.LifecycleProjectEvaluator.evaluate(LifecycleProjectEvaluator.java:63)        at org.gradle.api.internal.project.DefaultProject.evaluate(DefaultProject.java:707)        at org.gradle.api.internal.project.DefaultProject.evaluationDependsOn(DefaultProject.java:787)        at org.gradle.api.internal.project.DefaultProject.evaluationDependsOn(DefaultProject.java:779)        at jdk.internal.reflect.GeneratedMethodAccessor161.invoke(Unknown Source)        at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)        at autolinking_implementation_19t053xvw7a1l9agp8j0axerk$_run_closure6.doCall(/Volumes/NewVolume/GitHub/appName/node_modules/expo-modules-autolinking/scripts/android/autolinking_implementation.gradle:272)        at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)        at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)        at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)        at org.gradle.internal.metaobject.BeanDynamicObject$MetaClassAdapter.invokeMethod(BeanDynamicObject.java:483)        at org.gradle.internal.metaobject.BeanDynamicObject.tryInvokeMethod(BeanDynamicObject.java:195)        at org.gradle.internal.extensibility.MixInClosurePropertiesAsMethodsDynamicObject.tryInvokeMethod(MixInClosurePropertiesAsMethodsDynamicObject.java:46)        at org.gradle.groovy.scripts.BasicScript$ScriptDynamicObject.tryInvokeMethod(BasicScript.java:134)        at org.gradle.internal.metaobject.AbstractDynamicObject.invokeMethod(AbstractDynamicObject.java:163)        at org.gradle.groovy.scripts.BasicScript.invokeMethod(BasicScript.java:83)        at build_9u4i88ixpd74wdy26nq6tbjde.run(/Volumes/NewVolume/GitHub/appName/node_modules/expo/android/build.gradle:33)        at org.gradle.groovy.scripts.internal.DefaultScriptRunnerFactory$ScriptRunnerImpl.run(DefaultScriptRunnerFactory.java:91)        at org.gradle.configuration.DefaultScriptPluginFactory$ScriptPluginImpl$2.run(DefaultScriptPluginFactory.java:237)        at org.gradle.configuration.ProjectScriptTarget.addConfiguration(ProjectScriptTarget.java:77)        at org.gradle.configuration.DefaultScriptPluginFactory$ScriptPluginImpl.apply(DefaultScriptPluginFactory.java:242)        at org.gradle.configuration.BuildOperationScriptPlugin$1$1.run(BuildOperationScriptPlugin.java:69)        at org.gradle.internal.operations.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:402)        at org.gradle.internal.operations.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:394)        at org.gradle.internal.operations.DefaultBuildOperationExecutor$1.execute(DefaultBuildOperationExecutor.java:165)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.execute(DefaultBuildOperationExecutor.java:250)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.execute(DefaultBuildOperationExecutor.java:158)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:92)        at org.gradle.internal.operations.DelegatingBuildOperationExecutor.run(DelegatingBuildOperationExecutor.java:31)        at org.gradle.configuration.BuildOperationScriptPlugin$1.execute(BuildOperationScriptPlugin.java:66)        at org.gradle.configuration.BuildOperationScriptPlugin$1.execute(BuildOperationScriptPlugin.java:63)        at org.gradle.configuration.internal.DefaultUserCodeApplicationContext.apply(DefaultUserCodeApplicationContext.java:49)        at org.gradle.configuration.BuildOperationScriptPlugin.apply(BuildOperationScriptPlugin.java:63)        at org.gradle.configuration.project.BuildScriptProcessor$1.run(BuildScriptProcessor.java:45)        at org.gradle.internal.Factories$1.create(Factories.java:26)        at org.gradle.api.internal.project.DefaultProjectStateRegistry$ProjectStateImpl.withMutableState(DefaultProjectStateRegistry.java:245)        at org.gradle.api.internal.project.DefaultProjectStateRegistry$ProjectStateImpl.withMutableState(DefaultProjectStateRegistry.java:226)        at org.gradle.configuration.project.BuildScriptProcessor.execute(BuildScriptProcessor.java:42)        at org.gradle.configuration.project.BuildScriptProcessor.execute(BuildScriptProcessor.java:26)        at org.gradle.configuration.project.ConfigureActionsProjectEvaluator.evaluate(ConfigureActionsProjectEvaluator.java:35)        at org.gradle.configuration.project.LifecycleProjectEvaluator$EvaluateProject$1.run(LifecycleProjectEvaluator.java:102)        at org.gradle.internal.Factories$1.create(Factories.java:26)        at org.gradle.internal.work.DefaultWorkerLeaseService.withLocks(DefaultWorkerLeaseService.java:189)        at org.gradle.internal.work.StopShieldingWorkerLeaseService.withLocks(StopShieldingWorkerLeaseService.java:40)        at org.gradle.api.internal.project.DefaultProjectStateRegistry$ProjectStateImpl.withProjectLock(DefaultProjectStateRegistry.java:271)        at org.gradle.api.internal.project.DefaultProjectStateRegistry$ProjectStateImpl.withMutableState(DefaultProjectStateRegistry.java:265)        at org.gradle.api.internal.project.DefaultProjectStateRegistry$ProjectStateImpl.withMutableState(DefaultProjectStateRegistry.java:226)        at org.gradle.configuration.project.LifecycleProjectEvaluator$EvaluateProject.run(LifecycleProjectEvaluator.java:91)        at org.gradle.internal.operations.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:402)        at org.gradle.internal.operations.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:394)        at org.gradle.internal.operations.DefaultBuildOperationExecutor$1.execute(DefaultBuildOperationExecutor.java:165)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.execute(DefaultBuildOperationExecutor.java:250)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.execute(DefaultBuildOperationExecutor.java:158)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:92)        at org.gradle.internal.operations.DelegatingBuildOperationExecutor.run(DelegatingBuildOperationExecutor.java:31)        at org.gradle.configuration.project.LifecycleProjectEvaluator.evaluate(LifecycleProjectEvaluator.java:63)        at org.gradle.api.internal.project.DefaultProject.evaluate(DefaultProject.java:707)        at org.gradle.api.internal.project.DefaultProject.evaluate(DefaultProject.java:143)        at org.gradle.execution.TaskPathProjectEvaluator.configure(TaskPathProjectEvaluator.java:36)        at org.gradle.execution.TaskPathProjectEvaluator.configureHierarchy(TaskPathProjectEvaluator.java:64)        at org.gradle.configuration.DefaultProjectsPreparer.prepareProjects(DefaultProjectsPreparer.java:61)        at org.gradle.configuration.BuildOperatingFiringProjectsPreparer$ConfigureBuild.run(BuildOperatingFiringProjectsPreparer.java:52)        at org.gradle.internal.operations.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:402)        at org.gradle.internal.operations.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:394)        at org.gradle.internal.operations.DefaultBuildOperationExecutor$1.execute(DefaultBuildOperationExecutor.java:165)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.execute(DefaultBuildOperationExecutor.java:250)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.execute(DefaultBuildOperationExecutor.java:158)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:92)        at org.gradle.internal.operations.DelegatingBuildOperationExecutor.run(DelegatingBuildOperationExecutor.java:31)        at org.gradle.configuration.BuildOperatingFiringProjectsPreparer.prepareProjects(BuildOperatingFiringProjectsPreparer.java:40)        at org.gradle.initialization.DefaultGradleLauncher.prepareProjects(DefaultGradleLauncher.java:218)        at org.gradle.initialization.DefaultGradleLauncher.doClassicBuildStages(DefaultGradleLauncher.java:155)        at org.gradle.initialization.DefaultGradleLauncher.doBuildStages(DefaultGradleLauncher.java:140)        at org.gradle.initialization.DefaultGradleLauncher.executeTasks(DefaultGradleLauncher.java:120)        at org.gradle.internal.invocation.GradleBuildController$1.create(GradleBuildController.java:74)        at org.gradle.internal.invocation.GradleBuildController$1.create(GradleBuildController.java:67)        at org.gradle.internal.work.DefaultWorkerLeaseService.withLocks(DefaultWorkerLeaseService.java:189)        at org.gradle.internal.work.StopShieldingWorkerLeaseService.withLocks(StopShieldingWorkerLeaseService.java:40)        at org.gradle.internal.invocation.GradleBuildController.doBuild(GradleBuildController.java:67)        at org.gradle.internal.invocation.GradleBuildController.run(GradleBuildController.java:56)        at org.gradle.tooling.internal.provider.ExecuteBuildActionRunner.run(ExecuteBuildActionRunner.java:31)        at org.gradle.launcher.exec.ChainingBuildActionRunner.run(ChainingBuildActionRunner.java:35)        at org.gradle.launcher.exec.BuildOutcomeReportingBuildActionRunner.run(BuildOutcomeReportingBuildActionRunner.java:63)        at org.gradle.tooling.internal.provider.ValidatingBuildActionRunner.run(ValidatingBuildActionRunner.java:32)        at org.gradle.launcher.exec.BuildCompletionNotifyingBuildActionRunner.run(BuildCompletionNotifyingBuildActionRunner.java:39)        at org.gradle.launcher.exec.RunAsBuildOperationBuildActionRunner$3.call(RunAsBuildOperationBuildActionRunner.java:51)        at org.gradle.launcher.exec.RunAsBuildOperationBuildActionRunner$3.call(RunAsBuildOperationBuildActionRunner.java:45)        at org.gradle.internal.operations.DefaultBuildOperationExecutor$CallableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:416)        at org.gradle.internal.operations.DefaultBuildOperationExecutor$CallableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:406)        at org.gradle.internal.operations.DefaultBuildOperationExecutor$1.execute(DefaultBuildOperationExecutor.java:165)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.execute(DefaultBuildOperationExecutor.java:250)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.execute(DefaultBuildOperationExecutor.java:158)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:102)        at org.gradle.internal.operations.DelegatingBuildOperationExecutor.call(DelegatingBuildOperationExecutor.java:36)        at org.gradle.launcher.exec.RunAsBuildOperationBuildActionRunner.run(RunAsBuildOperationBuildActionRunner.java:45)        at org.gradle.launcher.exec.InProcessBuildActionExecuter$1.transform(InProcessBuildActionExecuter.java:50)        at org.gradle.launcher.exec.InProcessBuildActionExecuter$1.transform(InProcessBuildActionExecuter.java:47)        at org.gradle.composite.internal.DefaultRootBuildState.run(DefaultRootBuildState.java:80)        at org.gradle.launcher.exec.InProcessBuildActionExecuter.execute(InProcessBuildActionExecuter.java:47)        at org.gradle.launcher.exec.InProcessBuildActionExecuter.execute(InProcessBuildActionExecuter.java:31)        at org.gradle.launcher.exec.BuildTreeScopeBuildActionExecuter.execute(BuildTreeScopeBuildActionExecuter.java:42)        at org.gradle.launcher.exec.BuildTreeScopeBuildActionExecuter.execute(BuildTreeScopeBuildActionExecuter.java:28)        at org.gradle.tooling.internal.provider.ContinuousBuildActionExecuter.execute(ContinuousBuildActionExecuter.java:78)        at org.gradle.tooling.internal.provider.ContinuousBuildActionExecuter.execute(ContinuousBuildActionExecuter.java:52)        at org.gradle.tooling.internal.provider.SubscribableBuildActionExecuter.execute(SubscribableBuildActionExecuter.java:60)        at org.gradle.tooling.internal.provider.SubscribableBuildActionExecuter.execute(SubscribableBuildActionExecuter.java:38)        at org.gradle.tooling.internal.provider.SessionScopeBuildActionExecuter.execute(SessionScopeBuildActionExecuter.java:68)        at org.gradle.tooling.internal.provider.SessionScopeBuildActionExecuter.execute(SessionScopeBuildActionExecuter.java:38)        at org.gradle.tooling.internal.provider.GradleThreadBuildActionExecuter.execute(GradleThreadBuildActionExecuter.java:37)        at org.gradle.tooling.internal.provider.GradleThreadBuildActionExecuter.execute(GradleThreadBuildActionExecuter.java:26)        at org.gradle.tooling.internal.provider.ParallelismConfigurationBuildActionExecuter.execute(ParallelismConfigurationBuildActionExecuter.java:43)        at org.gradle.tooling.internal.provider.ParallelismConfigurationBuildActionExecuter.execute(ParallelismConfigurationBuildActionExecuter.java:29)        at org.gradle.tooling.internal.provider.StartParamsValidatingActionExecuter.execute(StartParamsValidatingActionExecuter.java:60)        at org.gradle.tooling.internal.provider.StartParamsValidatingActionExecuter.execute(StartParamsValidatingActionExecuter.java:32)        at org.gradle.tooling.internal.provider.SessionFailureReportingActionExecuter.execute(SessionFailureReportingActionExecuter.java:55)        at org.gradle.tooling.internal.provider.SessionFailureReportingActionExecuter.execute(SessionFailureReportingActionExecuter.java:41)        at org.gradle.tooling.internal.provider.SetupLoggingActionExecuter.execute(SetupLoggingActionExecuter.java:48)        at org.gradle.tooling.internal.provider.SetupLoggingActionExecuter.execute(SetupLoggingActionExecuter.java:32)        at org.gradle.launcher.daemon.server.exec.ExecuteBuild.doBuild(ExecuteBuild.java:68)        at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:37)        at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)        at org.gradle.launcher.daemon.server.exec.WatchForDisconnection.execute(WatchForDisconnection.java:39)        at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)        at org.gradle.launcher.daemon.server.exec.ResetDeprecationLogger.execute(ResetDeprecationLogger.java:29)        at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)        at org.gradle.launcher.daemon.server.exec.RequestStopIfSingleUsedDaemon.execute(RequestStopIfSingleUsedDaemon.java:35)        at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)        at org.gradle.launcher.daemon.server.exec.ForwardClientInput$2.create(ForwardClientInput.java:78)        at org.gradle.launcher.daemon.server.exec.ForwardClientInput$2.create(ForwardClientInput.java:75)        at org.gradle.util.Swapper.swap(Swapper.java:38)        at org.gradle.launcher.daemon.server.exec.ForwardClientInput.execute(ForwardClientInput.java:75)        at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)        at org.gradle.launcher.daemon.server.exec.LogAndCheckHealth.execute(LogAndCheckHealth.java:55)        at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)        at org.gradle.launcher.daemon.server.exec.LogToClient.doBuild(LogToClient.java:63)        at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:37)        at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)        at org.gradle.launcher.daemon.server.exec.EstablishBuildEnvironment.doBuild(EstablishBuildEnvironment.java:82)        at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:37)        at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)        at org.gradle.launcher.daemon.server.exec.StartBuildOrRespondWithBusy$1.run(StartBuildOrRespondWithBusy.java:52)        at org.gradle.launcher.daemon.server.DaemonStateCoordinator$1.run(DaemonStateCoordinator.java:297)        at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)        at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)        at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)Caused by: groovy.lang.MissingMethodException: No signature of method: org.gradle.api.internal.project.ProjectStateInternal.hasCompleted() is applicable for argument types: () values: []        at create_manifest_android_c6t3y31pownbtpspv92a2d8ch.run(/Volumes/NewVolume/GitHub/appName/node_modules/expo-updates/scripts/create-manifest-android.gradle:105)        at org.gradle.groovy.scripts.internal.DefaultScriptRunnerFactory$ScriptRunnerImpl.run(DefaultScriptRunnerFactory.java:91)        ... 203 moreBUILD FAILED in 9s`
"
21158,0,225,297,0,0,big-guy,0,"title:Document behavior around `--` to differentiate between task options and Gradle command-line flags description:When we add a new command-line option to Gradle, we run the risk that a task may have a task option with the same name.  When that happens, the Gradle option wins. There's a way around this.It's a common pattern in other tools (git, grep, etc) to use `--` as a way to separate ""options"" from positional arguments.  Gradle follows this same pattern, but there's no documentation for it. We should also check if there's test coverage.This should be documented in our user manual but we should also consider putting something in `gradle -h`.See #21154 ## ExampleIf you have this build:```abstract class MyTask extends DefaultTask {    @Option(option=""profile"", description=""foobar"")    void setProfile(String value) {        System.out.println(""Called setProfile"")    }}task mytask(type: MyTask)```If you run `gradle mytask --profile`, Gradle swallows the `--profile` as an option.If you run `gradle -- mytask --profile=foo`, we treat `--profile` as a task option.
"
21152,0,0,297,0,1,big-guy,0,"title:New `--show-version` option captures Nokee task option description:Nokee has a task option [`--show-version`](https://github.com/nokeedev/init.nokee.dev#nokee-task) to show the version of Nokee used by the project.We added `-V` and `--show-version` in 7.5.  Due to the way we parse command-line options, we see `gradle nokee --show-version` as if it's our option and no longer show the Nokee version.A simple fix is to rename `--show-version` to `--show-gradle-version` so we're less likely to conflict with other task options
"
21151,1,0,298,0,0,chachako,0,"title:Please delete the Kotlin options preset of `kotlin-dsl` plugin description:https://github.com/gradle/gradle/blob/v7.5.0-RC3/subprojects/kotlin-dsl-plugins/src/main/kotlin/org/gradle/kotlin/dsl/plugins/dsl/KotlinDslCompilerPlugins.kt#L48-L49Or can anyone explain why `kotlin-dsl` needs such an `afterEvaluate` setup? It's messing up my plugin development. When writing tests for the developed Gradle plugin, some code doesn't compile because the `1.4` level still uses the old Kotlin JVM backend. And if I write the plugin with some new Kotlin API, it will also say `NoSuchMethod` error, for example using the `kotlin.duration` APIEverything changed for the better when I unapplied the `kotlin-dsl` plugin. So this feels really bad, but please forgive me if I got something wrong 濠碘槅鍋撶徊浠嬪疮椤栨氨姣?"
21125,0,778,299,1,0,martinbonnin,0,"title:""Unable to make progress running work"" using 7.5-rc-3 description:I get an error similar to https://github.com/gradle/gradle/issues/20254 with `7.5-rc-3`. To reproduce:```git clone https://github.com/apollographql/apollo-kotlincd apollo-kotlin# checkout branch add-benchmarkgit checkout 3f07a68671b6c8dc6784af744ef917a4edbb2bfd ./gradlew -p tests build```The build reaches 97% and then fails with:```Unable to make progress running work. The following items are queued for execution but none of them can be started:  - Queued nodes for :      - work action resolve metadata-service.json (project :multi-module-root) (state=SHOULD_RUN, dependencies=NOT_COMPLETE, group=finalizer in task group 0, successors=[:multi-module-root:generateServiceApolloSources])      - :multi-module-child:generateServiceApolloSources (state=SHOULD_RUN, dependencies=NOT_COMPLETE, group=org.gradle.execution.plan.CompositeNodeGroup@39bfc497, successors=[:multi-module-child:checkApolloVersi[...]```This started with `7.5-rc-1`. `7.4.2` seems unaffected
"
21118,1,18070,69,0,0,changusmc,0,"title:`projects` task support for configuration cache description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues--><!--- Provide a brief summary of the issue in the title above -->### Expected BehaviorRunning `./gradlew projects && ./gradlew projects` should succeed with configuration cache enabled### Current BehaviorRunning `./gradlew projects && ./gradlew projects` fails because `The value of this property has been discarded during serialization.````* Exception is:org.gradle.api.tasks.TaskExecutionException: Execution failed for task ':projects'.        at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.lambda$executeIfValid$1(ExecuteActionsTaskExecuter.java:145)        at org.gradle.internal.Try$Failure.ifSuccessfulOrElse(Try.java:282)        at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeIfValid(ExecuteActionsTaskExecuter.java:143)        at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.execute(ExecuteActionsTaskExecuter.java:131)        at org.gradle.api.internal.tasks.execution.CleanupStaleOutputsExecuter.execute(CleanupStaleOutputsExecuter.java:77)        at org.gradle.api.internal.tasks.execution.FinalizePropertiesTaskExecuter.execute(FinalizePropertiesTaskExecuter.java:46)        at org.gradle.api.internal.tasks.execution.ResolveTaskExecutionModeExecuter.execute(ResolveTaskExecutionModeExecuter.java:51)        at org.gradle.api.internal.tasks.execution.SkipTaskWithNoActionsExecuter.execute(SkipTaskWithNoActionsExecuter.java:57)        at org.gradle.api.internal.tasks.execution.SkipOnlyIfTaskExecuter.execute(SkipOnlyIfTaskExecuter.java:56)        at org.gradle.api.internal.tasks.execution.CatchExceptionTaskExecuter.execute(CatchExceptionTaskExecuter.java:36)        at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.executeTask(EventFiringTaskExecuter.java:77)        at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.call(EventFiringTaskExecuter.java:55)        at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.call(EventFiringTaskExecuter.java:52)        at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)        at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)        at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)        at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)        at org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)        at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter.execute(EventFiringTaskExecuter.java:52)        at org.gradle.execution.plan.LocalTaskNodeExecutor.execute(LocalTaskNodeExecutor.java:74)        at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$InvokeNodeExecutorsAction.execute(DefaultTaskExecutionGraph.java:402)        at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$InvokeNodeExecutorsAction.execute(DefaultTaskExecutionGraph.java:389)        at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$BuildOperationAwareExecutionAction.execute(DefaultTaskExecutionGraph.java:382)        at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$BuildOperationAwareExecutionAction.execute(DefaultTaskExecutionGraph.java:368)        at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.lambda$run$0(DefaultPlanExecutor.java:127)        at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.execute(DefaultPlanExecutor.java:191)        at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.executeNextNode(DefaultPlanExecutor.java:182)        at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.run(DefaultPlanExecutor.java:124)        at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)        at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)        at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:61)Caused by: java.lang.IllegalStateException: The value of this property has been discarded during serialization.        at org.gradle.internal.serialization.Transient$Discarded.get(Transient.java:99)        at org.gradle.api.tasks.diagnostics.ConventionReportTask.getProjects(ConventionReportTask.java:113)        at org.gradle.api.tasks.diagnostics.ProjectReportTask_Decorated.getProjects(Unknown Source)        at org.gradle.api.tasks.diagnostics.ProjectBasedReportTask.generate(ProjectBasedReportTask.java:40)        at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)        at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)        at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)        at org.gradle.internal.reflect.JavaMethod.invoke(JavaMethod.java:104)        at org.gradle.api.internal.project.taskfactory.StandardTaskAction.doExecute(StandardTaskAction.java:58)        at org.gradle.api.internal.project.taskfactory.StandardTaskAction.execute(StandardTaskAction.java:51)        at org.gradle.api.internal.project.taskfactory.StandardTaskAction.execute(StandardTaskAction.java:29)        at org.gradle.api.internal.tasks.execution.TaskExecution$2.run(TaskExecution.java:239)        at org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:29)        at org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:26)        at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)        at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)        at org.gradle.internal.operations.DefaultBuildOperationRunner.run(DefaultBuildOperationRunner.java:47)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:68)        at org.gradle.api.internal.tasks.execution.TaskExecution.executeAction(TaskExecution.java:224)        at org.gradle.api.internal.tasks.execution.TaskExecution.executeActions(TaskExecution.java:207)        at org.gradle.api.internal.tasks.execution.TaskExecution.executeWithPreviousOutputFiles(TaskExecution.java:190)        at org.gradle.api.internal.tasks.execution.TaskExecution.execute(TaskExecution.java:168)        at org.gradle.internal.execution.steps.ExecuteStep.executeInternal(ExecuteStep.java:89)        at org.gradle.internal.execution.steps.ExecuteStep.access$000(ExecuteStep.java:40)        at org.gradle.internal.execution.steps.ExecuteStep$1.call(ExecuteStep.java:53)        at org.gradle.internal.execution.steps.ExecuteStep$1.call(ExecuteStep.java:50)        at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)        at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)        at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)        at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)        at org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)        at org.gradle.internal.execution.steps.ExecuteStep.execute(ExecuteStep.java:50)        at org.gradle.internal.execution.steps.ExecuteStep.execute(ExecuteStep.java:40)        at org.gradle.internal.execution.steps.RemovePreviousOutputsStep.execute(RemovePreviousOutputsStep.java:68)        at org.gradle.internal.execution.steps.RemovePreviousOutputsStep.execute(RemovePreviousOutputsStep.java:38)        at org.gradle.internal.execution.steps.ResolveInputChangesStep.execute(ResolveInputChangesStep.java:48)        at org.gradle.internal.execution.steps.ResolveInputChangesStep.execute(ResolveInputChangesStep.java:36)        at org.gradle.internal.execution.steps.CancelExecutionStep.execute(CancelExecutionStep.java:41)        at org.gradle.internal.execution.steps.TimeoutStep.executeWithoutTimeout(TimeoutStep.java:74)        at org.gradle.internal.execution.steps.TimeoutStep.execute(TimeoutStep.java:55)        at org.gradle.internal.execution.steps.CreateOutputsStep.execute(CreateOutputsStep.java:51)        at org.gradle.internal.execution.steps.CreateOutputsStep.execute(CreateOutputsStep.java:29)        at org.gradle.internal.execution.steps.CaptureStateAfterExecutionStep.execute(CaptureStateAfterExecutionStep.java:61)        at org.gradle.internal.execution.steps.CaptureStateAfterExecutionStep.execute(CaptureStateAfterExecutionStep.java:42)        at org.gradle.internal.execution.steps.BroadcastChangingOutputsStep.execute(BroadcastChangingOutputsStep.java:60)        at org.gradle.internal.execution.steps.BroadcastChangingOutputsStep.execute(BroadcastChangingOutputsStep.java:27)        at org.gradle.internal.execution.steps.BuildCacheStep.executeWithoutCache(BuildCacheStep.java:188)        at org.gradle.internal.execution.steps.BuildCacheStep.lambda$execute$1(BuildCacheStep.java:75)        at org.gradle.internal.Either$Right.fold(Either.java:175)        at org.gradle.internal.execution.caching.CachingState.fold(CachingState.java:59)        at org.gradle.internal.execution.steps.BuildCacheStep.execute(BuildCacheStep.java:73)        at org.gradle.internal.execution.steps.BuildCacheStep.execute(BuildCacheStep.java:48)        at org.gradle.internal.execution.steps.StoreExecutionStateStep.execute(StoreExecutionStateStep.java:38)        at org.gradle.internal.execution.steps.StoreExecutionStateStep.execute(StoreExecutionStateStep.java:27)        at org.gradle.internal.execution.steps.RecordOutputsStep.execute(RecordOutputsStep.java:36)        at org.gradle.internal.execution.steps.RecordOutputsStep.execute(RecordOutputsStep.java:22)        at org.gradle.internal.execution.steps.SkipUpToDateStep.executeBecause(SkipUpToDateStep.java:109)        at org.gradle.internal.execution.steps.SkipUpToDateStep.lambda$execute$2(SkipUpToDateStep.java:56)        at org.gradle.internal.execution.steps.SkipUpToDateStep.execute(SkipUpToDateStep.java:56)        at org.gradle.internal.execution.steps.SkipUpToDateStep.execute(SkipUpToDateStep.java:38)        at org.gradle.internal.execution.steps.ResolveChangesStep.execute(ResolveChangesStep.java:73)        at org.gradle.internal.execution.steps.ResolveChangesStep.execute(ResolveChangesStep.java:44)        at org.gradle.internal.execution.steps.legacy.MarkSnapshottingInputsFinishedStep.execute(MarkSnapshottingInputsFinishedStep.java:37)        at org.gradle.internal.execution.steps.legacy.MarkSnapshottingInputsFinishedStep.execute(MarkSnapshottingInputsFinishedStep.java:27)        at org.gradle.internal.execution.steps.ResolveCachingStateStep.execute(ResolveCachingStateStep.java:89)        at org.gradle.internal.execution.steps.ResolveCachingStateStep.execute(ResolveCachingStateStep.java:50)        at org.gradle.internal.execution.steps.ValidateStep.execute(ValidateStep.java:114)        at org.gradle.internal.execution.steps.ValidateStep.execute(ValidateStep.java:57)        at org.gradle.internal.execution.steps.CaptureStateBeforeExecutionStep.execute(CaptureStateBeforeExecutionStep.java:76)        at org.gradle.internal.execution.steps.CaptureStateBeforeExecutionStep.execute(CaptureStateBeforeExecutionStep.java:50)        at org.gradle.internal.execution.steps.SkipEmptyWorkStep.lambda$execute$2(SkipEmptyWorkStep.java:93)        at org.gradle.internal.execution.steps.SkipEmptyWorkStep.execute(SkipEmptyWorkStep.java:93)        at org.gradle.internal.execution.steps.SkipEmptyWorkStep.execute(SkipEmptyWorkStep.java:34)        at org.gradle.internal.execution.steps.legacy.MarkSnapshottingInputsStartedStep.execute(MarkSnapshottingInputsStartedStep.java:38)        at org.gradle.internal.execution.steps.LoadPreviousExecutionStateStep.execute(LoadPreviousExecutionStateStep.java:43)        at org.gradle.internal.execution.steps.LoadPreviousExecutionStateStep.execute(LoadPreviousExecutionStateStep.java:31)        at org.gradle.internal.execution.steps.AssignWorkspaceStep.lambda$execute$0(AssignWorkspaceStep.java:40)        at org.gradle.api.internal.tasks.execution.TaskExecution$3.withWorkspace(TaskExecution.java:284)        at org.gradle.internal.execution.steps.AssignWorkspaceStep.execute(AssignWorkspaceStep.java:40)        at org.gradle.internal.execution.steps.AssignWorkspaceStep.execute(AssignWorkspaceStep.java:30)        at org.gradle.internal.execution.steps.IdentityCacheStep.execute(IdentityCacheStep.java:37)        at org.gradle.internal.execution.steps.IdentityCacheStep.execute(IdentityCacheStep.java:27)        at org.gradle.internal.execution.steps.IdentifyStep.execute(IdentifyStep.java:44)        at org.gradle.internal.execution.steps.IdentifyStep.execute(IdentifyStep.java:33)        at org.gradle.internal.execution.impl.DefaultExecutionEngine$1.execute(DefaultExecutionEngine.java:76)        at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeIfValid(ExecuteActionsTaskExecuter.java:142)        at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.execute(ExecuteActionsTaskExecuter.java:131)        at org.gradle.api.internal.tasks.execution.CleanupStaleOutputsExecuter.execute(CleanupStaleOutputsExecuter.java:77)        at org.gradle.api.internal.tasks.execution.FinalizePropertiesTaskExecuter.execute(FinalizePropertiesTaskExecuter.java:46)        at org.gradle.api.internal.tasks.execution.ResolveTaskExecutionModeExecuter.execute(ResolveTaskExecutionModeExecuter.java:51)        at org.gradle.api.internal.tasks.execution.SkipTaskWithNoActionsExecuter.execute(SkipTaskWithNoActionsExecuter.java:57)        at org.gradle.api.internal.tasks.execution.SkipOnlyIfTaskExecuter.execute(SkipOnlyIfTaskExecuter.java:56)        at org.gradle.api.internal.tasks.execution.CatchExceptionTaskExecuter.execute(CatchExceptionTaskExecuter.java:36)        at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.executeTask(EventFiringTaskExecuter.java:77)        at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.call(EventFiringTaskExecuter.java:55)        at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.call(EventFiringTaskExecuter.java:52)        at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)        at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)        at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)        at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)        at org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)        at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter.execute(EventFiringTaskExecuter.java:52)        at org.gradle.execution.plan.LocalTaskNodeExecutor.execute(LocalTaskNodeExecutor.java:74)        at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$InvokeNodeExecutorsAction.execute(DefaultTaskExecutionGraph.java:402)        at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$InvokeNodeExecutorsAction.execute(DefaultTaskExecutionGraph.java:389)        at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$BuildOperationAwareExecutionAction.execute(DefaultTaskExecutionGraph.java:382)        at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$BuildOperationAwareExecutionAction.execute(DefaultTaskExecutionGraph.java:368)        at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.lambda$run$0(DefaultPlanExecutor.java:127)        at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.execute(DefaultPlanExecutor.java:191)        at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.executeNextNode(DefaultPlanExecutor.java:182)        at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.run(DefaultPlanExecutor.java:124)        at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)        at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)        at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:61)```Gradle 7.3.3, Gradle Enterprise plugin 3.8### SwitchesBackground build scan publication | On | 闂?- | -- | --Build Cache | On | 闂備浇澹堟禍顒勫垂閸婁巩ld output capturing | On | 闂備浇澹堟禍顒勫及椤хfiguration Cache | On | 闂備浇澹堟禍顒勫及椤хfigure on demand | On | 闂備浇澹堟禍顒€顪冪缓娓唌on | On | 闂備浇澹堟禍顒勫船閸ｅ埐e system watching | On | 闂備浇澹堟禍顒傜矈閻х晢allel | On | 闂備浇澹堟禍顒傜矈绾扮磩k inputs file capturing | On | 闂備浇澹堟禍顒傜矈绾句靠t output capturing | On | 闂備浇澹堟禍顒勫及椤хtinue on failure | Off | 闂備浇澹堟禍顒勫及椤хtinuous | Off | 闂備浇澹堟禍顒€顪冪缓鐡?run | Off | 闂備浇澹堟禍顒傜矈閻㈢專line | Off | 闂備浇澹堟禍顒傜矈閻?run tasks | Off | 闂備浇澹堟禍顒傜矈閻潊resh dependencies | Off | 闂?/div></div>### InfrastructureOperating system | macOS 12.4 (aarch64) | 闂?- | -- | --CPU cores | 10 cores | 闂備浇澹堟禍顒傜矈閻滄釜 Gradle workers | 10 workers | 闂備浇澹堟禍顒傜矈椤╁檿a runtime | JetBrains s.r.o. OpenJDK Runtime Environment 11.0.12+0-b1504.28-7817840 | 闂備浇澹堟禍顒傜矈椤╁檿a VM | JetBrains s.r.o. OpenJDK 64-Bit Server VM 11.0.12+0-b1504.28-7817840 (mixed mode) | 闂備浇澹堟禍顒傜矈閻滄釜 JVM memory heap size | 10 GiB | 闂備浇澹堟禍顒傜矈閻氱牚ale | English (United States) | 闂備浇澹堟禍顒€顪冪缓鐖乤ult charset | UTF-8
"
21116,0,0,0,0,1,mgroth0,0,"title:StackOverflowError thrown from internal Gradle code. description:<!--- Provide a brief summary of the issue in the title above -->When building a project I sometimes get a `StackOverflowError`. If I run `./gradlew --stop` and then build the project again, I do not get the error for at least one build. Therefore, it has something to do with running more than 1 build with the same daemon.### Expected BehaviorTo not get a `StackOverflowError`.### Current Behavior[error.txt](https://github.com/gradle/gradle/files/9003083/error.txt)### ContextCurrently, I have to run `./gradlew --stop` every couple of runs, so it's intrusive to my workflow.I have tried setting the stack size much higher in gradle.properties like so:`-XX:ThreadStackSize=400000 -XX:CompilerThreadStackSize=400000`. The effect of this is strange in that sometimes setting the number higher works as a temporary fix but eventually, the issue starts occurring again.### Steps to Reproduce I'm not able to provide a reproducer right now. I'm wondering if there is any quick insight anyone might have? If the problem continues, I'll try to work on a reproducer.### Your EnvironmentMac OSX 12.4Gradle 7.5-rc-2-all<!--- A build scan https://scans.gradle.com/get-started is ideal -->Build scan URL: https://scans.gradle.com/s/huleoj3bbbaxg
"
21112,1,735,294,0,0,EugenMayer,0,"title:Composite builds depenendcy substitution not applied to testCompileClasspath and tesRuntimeClasspath description:When using `includeBuild` with a depedencyResolution, the substituted projects are used the right way in the `compileClasspath` and `runtimeClasspath`. The problem is, that in the `testCompileClasspath` and `testRuntimmClasspath` the dependencies are not substituted.### Expected BehaviorThe dependency that has been configured to be substituted, should be substituted find  `testCompileClasspath` and `testRuntimmClasspath`  too.### Current BehaviorSubstitution works for `compileClasspath` and `runtimeClasspath`, but does not work  `testCompileClasspath` and `testRuntimmClasspath`### ContextWe are using composite builds for our project, one library that is used as a platform library (non test) is loaded via usual substitution.### Steps to Reproduce Library---Create a library 'platform' in the folder platform and put some kind of test bean there```java@Componentpublic class TestBeanV1 {}```Compile an publish to your nexus as a snapshot `0.0.0`Now refactor `TestBeanV1` to `TestBeanV2` (and do not publish to your nexus, we want to use this as a composite build)----AppCreate the most simple spring boot starter app in the folder app.```put this in your `settings.gradle```````groovyincludeBuild('../platform') {    dependencySubstitution {        substitute module('de.example:platform') using project(':');    }}```then use this dependencies```dependencies {    implementation(            ""de.example:platform:0.0.0-SNAPSHOT""    )}```Now in your application```java@SpringBootApplicationpublic class Application{  public static void main(String[] args)  {    context = SpringApplication.run(Application.class, args);  }}```resolve that bean```java@Configurationpublic class SomeConfig{	@Autowired	TestBeanV2 testBean;}```Now add a smoke test for the application```java@ExtendWith(SpringExtension.class)@SpringBootTestclass ApplicationTest{  @Test  void main() {    // dummy  }}```When you run the test, you should get a `ClassNotFound` exception for the `TestBeanV2` class - while `TestBeanV1` would actually work### Your Environmentgradle 7.4.2spring boot 2.6.8 (if interesting at all, does not matter for that case)
"
21111,0,622,237,0,0,britter,0,"title:Adding files to variants created from ComponentMetadataRules does not work when SNAPSHOT versions are used description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues--><!--- Provide a brief summary of the issue in the title above -->### Expected BehaviorA ComponentMetadataRule that derives a new variant and adds files to that variant should work with SNAPSHOT dependencies where the file's name actually contains a timestamped version. ### Current BehaviorIt's not possible to add files to a variant using `withFiles { addFile("""") }`. Gradle will construct the wrong file name.### ContextI've a plugin that adds a `ComponentMetadataRule` for downloading POM files that live alongside the other artifacts inside a repository. I need to POM files in order to extract data form the `licenses` element in the POM. My rule does the following:```kotlinwithFiles {    removeAllFiles()    addFile(""${context.details.id.name}-${context.details.id.version}.pom"")}```However when this rule processes a snapshot version, I'm seeing the following error:```Cannot fingerprint input file property 'rootSpec$1': Could not resolve all files for configuration ':poms'.> Could not resolve all files for configuration ':poms'.  > Could not find commons-lang3-3.2.2-SNAPSHOT-3.2.2-SNAPSHOT.pom (org.apache.commons:commons-lang3:3.2.2-SNAPSHOT:20140111.132309-5).    Searched in the following locations:        https://repository.apache.org/content/repositories/snapshots/org/apache/commons/commons-lang3/3.2.2-SNAPSHOT/commons-lang3-3.2.2-SNAPSHOT.pom```### Steps to Reproduce 1. Clone  https://github.com/britter/gradle-sandbox/2. `cd component-metadata-rules-SNAPSHOTS/build.gradle.kts`3. `./gradlew downloadPoms`### Your EnvironmentBuild scan URL: https://scans.gradle.com/s/hi2dnfy5yvhnk/failure#1
"
21075,1,1191,39,0,1,kubabar1,0,"title:Cannot access project from included build as dependency using composite build description:### Expected BehaviorIt should be possible to access project dependency from included build in composite build.### Current BehaviorAccessing project from included build as dependency is impossible without workaround described in section **Context**.### ContextI闂傚倷鑳堕崑銊╁磿閺屻儲鍋?struggling with a problem with Gradle composite build. I have 2 separate gradle builds - **project1** and **project2**. In **project2** all dependencies are defined in a separate file **module-specific-dependencies.gradle**, which is applied inside project2/build.gradle, e.g.:**module-specific-dependencies.gradle**```dependencies {    implementation 'org.springframework.boot:spring-boot-starter-web'    implementation project(':module1')    developmentOnly 'org.springframework.boot:spring-boot-devtools'    testImplementation 'org.springframework.boot:spring-boot-starter-test'}```**project2/build.gradle**```apply from: 'module-specific-dependencies.gradle'```Now **project2** is included into **project1** and I want to use **module-specific-dependencies.gradle** file inside that project - I tried to do that using `gradle.includedBuild`:```apply from: file(""${gradle.includedBuild('project2').projectDir}/module-specific-dependencies.gradle"")```now, if I闂傚倷鑳堕崑銊╁磿閺屻儲鍋?trying to run project2 it works fine, but for project1 I receive below error:```Project with path ':module1' could not be found in root project 'project1'.```Problem is caused by below project dependency from **module-specific-dependencies.gradle:**```implementation project(':module1')```I tried to change that dependency to:```implementation 'com.examplemod2:module1:0.0.1-SNAPSHOT'```after that problem was fixed for **project1**, but below problem occurred during launching **project2**:```Execution failed for task ':compileJava'.> Could not resolve all files for configuration ':compileClasspath'.   > Could not find com.examplemod2:module1:0.0.1-SNAPSHOT.     Required by:         project :```only below solution worked for me:```implementation project.findProject(':module1') != null ? project.findProject(':module1') : 'com.examplemod2:module1:0.0.1-SNAPSHOT'```but it seems to be too big workaround - how in this case I can use project dependency, assuming that project structure cannot be changed (dependencies have to be defined inside separate file)?### Steps to Reproduce I created example project with this problem: https://github.com/kubabar1/GradleCompositeBuildTrialCurrently I used described above workaround. To recreate problem You need to open file **project2/module-specific-dependencies.gradle** and replace:```implementation CompositeBuildUtils.resolveProjectDependency(project, ':module1', 'com.examplemod2', 'module1', '0.0.1-SNAPSHOT')```by:```implementation project(':module1')```(now after run `./gradlew build` from **project1** error described in section **Context** should occur)or:```implementation 'com.examplemod2:module1:0.0.1-SNAPSHOT'```(now after run `./gradlew build` from **project2** error described in section **Context** should occur)### Your EnvironmentGradle 7.4.1
"
21074,0,205,262,1,1,3flex,0,"title:ProjectBuilder tests failing when exercising Kotlin multiplatform plugin description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues--><!--- Provide a brief summary of the issue in the title above -->### Expected Behavior<!--- Tell us what should happen -->I can use ProjectBuilder while applying ""kotlin-multiplatform"" plugin.### Current Behavior<!--- Tell us what happens instead of the expected behavior -->Failure:```Cannot create service of type KotlinScriptEvaluator using method BuildServices.createKotlinScriptEvaluator() as required service of type KotlinScriptBasePluginsApplicator for parameter #7 is not available.```### Context<!--- How has this issue affected you? What are you trying to accomplish? --><!--- Providing context helps us come up with a solution that is most useful in the real world -->Trying to efficiently test a Gradle plugin that integrates with the Kotlin Gradle plugin.### Steps to Reproduce <!---Provide a self-contained example project as an attached archive or a Github project.You can use the following template with a Gradle GitHub action set up to showcase your problem: https://github.com/gradle/gradle-issue-reproducerIn the rare cases where this is infeasible, we will also accept a detailed set of instructions.-->Will do if required, but this issue is almost identical to https://github.com/gradle/gradle/issues/16774 which was acknowledged and for a while had a release target for a fix. The difference with this issue is that I'm not aware of a workaround https://github.com/gradle/gradle/issues/16774#issuecomment-1109284132### Your Environment<!--- Include as many relevant details about the environment you experienced the bug in --><!--- A build scan https://scans.gradle.com/get-started is ideal -->Build scan URL:
"
21062,0,4977,251,0,0,ghale,0,"title:Failure when publishing build scan with platforms and catalogs description:There's something going sideways when we use both platforms and catalogs together.  With the right set of dependencies, we get a failure like this when we use `--scan` to publish to scans.gradle.com or to a Gradle Enterprise instance:```A build scan cannot be produced as an error occurred gathering build data.Please report this problem via https://gradle.com/help/plugin and include the following via copy/paste:----------Gradle version: 7.4.2Plugin version: 3.8.1org.gradle.api.artifacts.ResolveException: Could not resolve all dependencies for configuration ':lib:testCompileClasspath'.        at org.gradle.api.internal.artifacts.ivyservice.ErrorHandlingConfigurationResolver.wrapException(ErrorHandlingConfigurationResolver.java:107)        at org.gradle.api.internal.artifacts.ivyservice.ErrorHandlingConfigurationResolver$ErrorHandlingResolutionResult.getRoot(ErrorHandlingConfigurationResolver.java:214)        at org.gradle.api.internal.artifacts.configurations.ResolveConfigurationResolutionBuildOperationResult.getRootComponent(ResolveConfigurationResolutionBuildOperationResult.java:60)        at com.gradle.scan.plugin.internal.b.f.a.h$a.b(SourceFile:113)        at com.gradle.scan.plugin.internal.b.f.a.h$a.a(SourceFile:66)        at com.gradle.scan.plugin.internal.b.f.a.h.a(SourceFile:47)        at com.gradle.scan.plugin.internal.b.f.a.g.a(SourceFile:147)        at com.gradle.scan.plugin.internal.b.f.c.a(SourceFile:137)        at com.gradle.scan.plugin.internal.l.a.f.a(SourceFile:12)        at com.gradle.scan.plugin.internal.l.a$c.finished(SourceFile:154)        at com.gradle.scan.plugin.internal.l.a.a(SourceFile:65)        at com.gradle.scan.plugin.internal.l.l.a(SourceFile:56)        at com.gradle.scan.plugin.internal.l.c.a(SourceFile:98)        at com.gradle.scan.plugin.internal.l.g.a(SourceFile:51)        at com.gradle.scan.plugin.internal.q.a$a.a(SourceFile:31)        at com.gradle.scan.plugin.internal.q.a$a.a(SourceFile:20)        at com.gradle.scan.plugin.internal.q.a.c(SourceFile:67)Caused by: java.lang.RuntimeException: Problems reading data from Binary store in /Users/ghale/.gradle/.tmp/gradle1491328417675576407.bin offset 2495 exists? true        at org.gradle.api.internal.artifacts.ivyservice.resolveengine.store.DefaultBinaryStore$SimpleBinaryData.read(DefaultBinaryStore.java:132)        at org.gradle.api.internal.artifacts.ivyservice.resolveengine.result.StreamingResolutionResultBuilder$RootFactory.lambda$create$0(StreamingResolutionResultBuilder.java:189)        at org.gradle.api.internal.artifacts.ivyservice.resolveengine.store.CachedStoreFactory$SimpleStore.load(CachedStoreFactory.java:101)        at org.gradle.api.internal.artifacts.ivyservice.resolveengine.result.StreamingResolutionResultBuilder$RootFactory.create(StreamingResolutionResultBuilder.java:187)        at org.gradle.api.internal.artifacts.ivyservice.resolveengine.result.StreamingResolutionResultBuilder$RootFactory.create(StreamingResolutionResultBuilder.java:159)        at org.gradle.api.internal.artifacts.result.DefaultResolutionResult.getRoot(DefaultResolutionResult.java:50)        at org.gradle.api.internal.artifacts.ivyservice.ErrorHandlingConfigurationResolver$ErrorHandlingResolutionResult.getRoot(ErrorHandlingConfigurationResolver.java:212)        at org.gradle.api.internal.artifacts.configurations.ResolveConfigurationResolutionBuildOperationResult.getRootComponent(ResolveConfigurationResolutionBuildOperationResult.java:60)        at com.gradle.scan.plugin.internal.b.f.a.h$a.b(SourceFile:113)        at com.gradle.scan.plugin.internal.b.f.a.h$a.a(SourceFile:66)        at com.gradle.scan.plugin.internal.b.f.a.h.a(SourceFile:47)        at com.gradle.scan.plugin.internal.b.f.a.g.a(SourceFile:147)        at com.gradle.scan.plugin.internal.b.f.c.a(SourceFile:137)        at com.gradle.scan.plugin.internal.l.a.f.a(SourceFile:12)        at com.gradle.scan.plugin.internal.l.a$c.finished(SourceFile:154)        at com.gradle.scan.plugin.internal.l.a.a(SourceFile:65)        at com.gradle.scan.plugin.internal.l.l.a(SourceFile:56)        at com.gradle.scan.plugin.internal.l.c.a(SourceFile:98)        at com.gradle.scan.plugin.internal.l.g.a(SourceFile:51)        at com.gradle.scan.plugin.internal.q.a$a.a(SourceFile:31)        at com.gradle.scan.plugin.internal.q.a$a.a(SourceFile:20)        at com.gradle.scan.plugin.internal.q.a.c(SourceFile:67)Caused by: java.lang.IllegalStateException: Corrupt serialized resolution result. Cannot find selected module (253) for constraint apiElements -> com.googlecode.libphonenumber:libphonenumber:8.12.30        at org.gradle.api.internal.artifacts.ivyservice.resolveengine.result.DefaultResolutionResultBuilder.visitOutgoingEdges(DefaultResolutionResultBuilder.java:83)        at org.gradle.api.internal.artifacts.ivyservice.resolveengine.result.StreamingResolutionResultBuilder$RootFactory.deserialize(StreamingResolutionResultBuilder.java:239)        at org.gradle.api.internal.artifacts.ivyservice.resolveengine.store.DefaultBinaryStore$SimpleBinaryData.read(DefaultBinaryStore.java:130)        ... 21 more----------```I was able to boil this down to a [simple reproducible case](https://github.com/ghale/platformIssueReproducer).  What I found was that any of the following would cause the error to go away:- Removing the version catalog and inlining the spring dependency in the platform- Removing any one of the dependencies in the platform- Explicitly setting the version of `mockserver-netty` in lib/build.gradleMight be other remediating tweaks, too, that I didn't stumble on.### Expected BehaviorBuild scan should publish successfully.### Current BehaviorAn exception is thrown when publishing the build scan.### ContextThis came up in a user's build, but we were able to isolate the issue and boil it down to a simple reproducible example.### Steps to Reproduce https://github.com/ghale/platformIssueReproducer
"
21058,1,0,256,0,1,eskatos,0,"title:Automatically disambiguate two variants with an attribute with null value and a single value matching the requested description:The Kotlin Gradle Plugin 1.7.0 is published with two variants targeting different Gradle versions, distinguished by the `GradlePluginApiVersion` attribute. The first variant, for Gradle versions < 7.0 doesn't have the attribute, the second variant, for Gradle versions > 7.0 has the attribute with a value of `7.0`.Consuming it for compilation, e.g. in `buildSrc` or a plugin build fails on Gradle 7.6 because the dependency resolution engine cannot disambiguate.This PR fixes the disambiguation algorithm to automatically disambiguate two variants with an attribute with null value and a single value matching the requested.Along the way this PR also adds the `Bundling.EXTERNAL` attribute to libraries derived from Maven metadata.### Contributor Checklist- [x] [Review Contribution Guidelines](https://github.com/gradle/gradle/blob/master/CONTRIBUTING.md)- [x] Make sure that all commits are [signed off](https://git-scm.com/docs/git-commit#Documentation/git-commit.txt---signoff) to indicate that you agree to the terms of [Developer Certificate of Origin](https://developercertificate.org/).- [x] Make sure all contributed code can be distributed under the terms of the [Apache License 2.0](https://github.com/gradle/gradle/blob/master/LICENSE), e.g. the code was written by yourself or the original code is licensed under [a license compatible to Apache License 2.0](https://apache.org/legal/resolved.html).- [x] Check [""Allow edit from maintainers"" option](https://help.github.com/articles/allowing-changes-to-a-pull-request-branch-created-from-a-fork/) in pull request so that additional changes can be pushed by Gradle team- [x] Provide integration tests (under `<subproject>/src/integTest`) to verify changes from a user perspective- [x] Provide unit tests (under `<subproject>/src/test`) to verify logic- [ ] Update User Guide, DSL Reference, and Javadoc for public-facing changes- [x] Ensure that tests pass sanity check: `./gradlew sanityCheck`- [x] Ensure that tests pass locally: `./gradlew <changed-subproject>:quickTest`### Gradle Core Team Checklist- [ ] Verify design and implementation - [ ] Verify test coverage and CI build status- [ ] Verify documentation- [ ] Recognize contributor in release notes
"
21056,0,1645,7,0,0,jvmusin,0,"title:Task `help --task help` fails on the second run when configuration cache is enabled description:### Expected BehaviorThe task runs with the same output.### Current BehaviorThe task runs normally on the first run and fails on the second one with an error:```Rustam.Musin@UNIT-2257 gradle-help-task-issue % ./gradlew help --task helpConfiguration cache is an incubating feature.Calculating task graph as no configuration cache is available for tasks: help --task help> Task :helpDetailed task information for helpPath     :helpType     Help (org.gradle.configuration.Help)Options     --task     The task to show help for.Description     Displays a help message.Group     help0 problems were found storing the configuration cache.See the complete report at file:///Users/Rustam.Musin/my/gradle-help-task-issue/build/reports/configuration-cache/9mvlkblqk1hawnen5cx3q7g1e/b3tsmfa1prg1pxaqtnzmgrazr/configuration-cache-report.htmlBUILD SUCCESSFUL in 744ms1 actionable task: 1 executedConfiguration cache entry stored.Rustam.Musin@UNIT-2257 gradle-help-task-issue % ./gradlew help --task helpConfiguration cache is an incubating feature.Reusing configuration cache.> Task :help FAILEDFAILURE: Build failed with an exception.* What went wrong:Execution failed for task ':help'.> A problem occurred configuring root project 'gradle-help-task-issue'.   > Failed to apply plugin 'org.gradle.help-tasks'.      > Cannot add task 'help' as a task with that name already exists.* Try:> Run with --stacktrace option to get the stack trace.> Run with --info or --debug option to get more log output.> Run with --scan to get full insights.* Get more help at https://help.gradle.orgBUILD FAILED in 543ms1 actionable task: 1 executedConfiguration cache entry reused.Rustam.Musin@UNIT-2257 gradle-help-task-issue % ```### ContextJust wanted to try out the configuration cache, and the attempt has been failed :(### Steps to Reproduce 0. Use Gradle 7.4.2 on macOS Monterey x86_641. Download the project2. Run `./gradlew help --task help` and see the correct output3. Run the same command again and see the errorI've attached the sample project[gradle-help-task-issue.zip](https://github.com/gradle/gradle/files/8948630/gradle-help-task-issue.zip).
"
21047,1,3339,42,0,0,s5bug,0,"title:JDK-local jmod not getting picked up by Gradle description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues--><!--- Provide a brief summary of the issue in the title above -->### Expected BehaviorWith the configuration set to force GraalVM:```groovyjava {    toolchain {        languageVersion = JavaLanguageVersion.of(17)        vendor = JvmVendorSpec.matching(""GraalVM"")        implementation = JvmImplementation.VENDOR_SPECIFIC    }}```I should be able to require GraalVM jmods:```javamodule tf.bug.uui {    requires org.graalvm.sdk;    requires org.graalvm.truffle;}```### Current Behavior```error: module not found: org.graalvm.sdk    requires org.graalvm.sdk;                        ^error: module not found: org.graalvm.truffle    requires org.graalvm.truffle;                        ^```### ContextI'm trying to compile an example project that uses GraalVM polyglot and _requires a local installation of GraalVM_.```javaimport org.graalvm.polyglot.*;Path exePath =  Paths.get(""test.bc"");Source source = Source.newBuilder(""llvm"", exePath.toFile()).build();Value cpart = polyglot.eval(source);Value test = cpart.getMember(""test"");Value result = test.execute(1, 2);System.out.println(result.asInt());```IntelliJ knows that this module exists. Aside from showing it as part of the JDK:![image](https://user-images.githubusercontent.com/7751296/174553398-90ca3027-3136-4315-b6dd-e364235852c7.png)It also does not error on any of the `requires` or `import` clauses.### Steps to Reproduce Have GraalVM installed.`build.gradle`:```javaplugins {    id 'java'}java {    toolchain {        languageVersion = JavaLanguageVersion.of(17)        vendor = JvmVendorSpec.matching(""GraalVM"")        implementation = JvmImplementation.VENDOR_SPECIFIC    }}````module-info.java`:```javamodule tf.bug.uui {    requires org.graalvm.sdk;    requires org.graalvm.truffle;}```### Your Environment```> java -versionopenjdk version ""17.0.1"" 2021-10-19OpenJDK Runtime Environment GraalVM CE 21.3.0 (build 17.0.1+12-jvmci-21.3-b05)OpenJDK 64-Bit Server VM GraalVM CE 21.3.0 (build 17.0.1+12-jvmci-21.3-b05, mixed mode, sharing)``````> java --list-modulescom.oracle.graal.graal_enterprisecom.oracle.svm.svm_enterprisecom.oracle.truffle.regexcom.oracle.truffle.truffle_nficom.oracle.truffle.truffle_nfi_libffijava.base@17.0.1java.compiler@17.0.1java.datatransfer@17.0.1java.desktop@17.0.1java.instrument@17.0.1java.logging@17.0.1java.management@17.0.1java.management.rmi@17.0.1java.naming@17.0.1java.net.http@17.0.1java.prefs@17.0.1java.rmi@17.0.1java.scripting@17.0.1java.se@17.0.1java.security.jgss@17.0.1java.security.sasl@17.0.1java.smartcardio@17.0.1java.sql@17.0.1java.sql.rowset@17.0.1java.transaction.xa@17.0.1java.xml@17.0.1java.xml.crypto@17.0.1jdk.accessibility@17.0.1jdk.attach@17.0.1jdk.charsets@17.0.1jdk.compiler@17.0.1jdk.crypto.cryptoki@17.0.1jdk.crypto.ec@17.0.1jdk.crypto.mscapi@17.0.1jdk.dynalink@17.0.1jdk.editpad@17.0.1jdk.hotspot.agent@17.0.1jdk.httpserver@17.0.1jdk.incubator.foreign@17.0.1jdk.incubator.vector@17.0.1jdk.internal.ed@17.0.1jdk.internal.jvmstat@17.0.1jdk.internal.le@17.0.1jdk.internal.opt@17.0.1jdk.internal.vm.ci@17.0.1jdk.internal.vm.compilerjdk.internal.vm.compiler.managementjdk.internal.vm.compiler.truffle.jfrjdk.jartool@17.0.1jdk.javadoc@17.0.1jdk.jcmd@17.0.1jdk.jconsole@17.0.1jdk.jdeps@17.0.1jdk.jdi@17.0.1jdk.jdwp.agent@17.0.1jdk.jfr@17.0.1jdk.jlink@17.0.1jdk.jpackage@17.0.1jdk.jshell@17.0.1jdk.jsobject@17.0.1jdk.jstatd@17.0.1jdk.localedata@17.0.1jdk.management@17.0.1jdk.management.agent@17.0.1jdk.management.jfr@17.0.1jdk.naming.dns@17.0.1jdk.naming.rmi@17.0.1jdk.net@17.0.1jdk.nio.mapmode@17.0.1jdk.random@17.0.1jdk.sctp@17.0.1jdk.security.auth@17.0.1jdk.security.jgss@17.0.1jdk.unsupported@17.0.1jdk.unsupported.desktop@17.0.1jdk.xml.dom@17.0.1jdk.zipfs@17.0.1org.graalvm.js.scriptengineorg.graalvm.locatororg.graalvm.nativeimage.llvmorg.graalvm.sdkorg.graalvm.truffle```<!--- Include as many relevant details about the environment you experienced the bug in --><!--- A build scan https://scans.gradle.com/get-started is ideal -->Build scan URL: https://gradle.com/s/6j2skim4ffc7m
"
21038,1,129,26,0,0,knyttl,0,"title:maven-publish randomly publishes empty pom description:I created a demo project here: https://gitlab.com/knyttl/kotlin-1.6.20-publishing-demo/-/tree/mainWhen you run ```gradle clean build publish --info --warning-mode all; cat m2/demo/demo/ci/demo-ci.pom```It will randomly generate two different kind of poms:1. correct one: https://gist.github.com/knyttl/abba960ae07afe1c361c4959e5d3cb252. empty one: https://gist.github.com/knyttl/d9574b6589828d5b5aec10a347a8ea59On my local computer I can have it consistently as follows:- kotlin version 1.6.10 -> correct behaviour- kotlin version 1.7.0 -> empty pomHowever, on some other testing environment, I could get random results independently on kotlin version.### Expected BehaviorThe resulting pom should always be the same.### Current BehaviorThe resulting pom differs randomly.### ContextThis completely brakes our builds. Either there is some race condition or I am missing some setting.The strange is that the empty `pom.xml` contains `<packaging>pom</packaging>` whereas the correct one does not have it.This is probably something to do with the fact that there are two published artifacts.### Steps to Reproduce See above.### Your Environment```gradle 7.4.2different environments```
"
21037,1,0,0,0,0,VicthorAdeoba,0,"title:Execution failed for task ':app:processDebugResources'. > A failure occurred while executing com.android.build.gradle.internal.tasks.Workers$ActionFacade    > Android resource linking failed      C:\Users\viktor\.gradle\daemon\6.7\RESOURCES\BMI-Calculator\BMI-Calculator-Flutter-Completed-master\android\app\src\main\AndroidManifest.xml:19:9-43:20: AAPT: error: resource string/title_activity_main (aka co.appbrewery.bmicalculator:string/title_activity_main) not found. description:Below is what my AndroidManifest.xml looks like. I have made neccesary corrections based on the documentation attached at https://github.com/flutter/flutter/wiki/Upgrading-pre-1.12-Android-projects. My gradle version is 6.7 but i have tried 5.4.1 and 7.0.1 but neithher worked. I upgraded my minCompileSdk from 28 to 30 and also updated my target sdk but all to no avail.  I am new to flutter, please help me out here<manifest xmlns:android=""http://schemas.android.com/apk/res/android""    package=""co.appbrewery.bmicalculator"">    <!-- The INTERNET permission is required for development. Specifically,         flutter needs it to communicate with the running application         to allow setting breakpoints, to provide hot reload, etc.    -->    <uses-permission android:name=""android.permission.INTERNET""/>    <!-- io.flutter.app.FlutterApplication is an android.app.Application that         calls FlutterMain.startInitialization(this); in its onCreate method.         In most cases you can leave this as-is, but you if you want to provide         additional functionality it is fine to subclass or reimplement         FlutterApplication and put your custom class here. -->    <application        android:name=""${applicationName}""        android:label=""bmi_calculator""        android:launchMode=""singleTop"">        <activity            android:name="".MainActivity""            android:exported=""true""            android:label=""@string/title_activity_main""            android:icon=""@mipmap/ic_launcher""            android:hardwareAccelerated=""true""            android:theme=""@style/LaunchTheme""            android:windowSoftInputMode=""adjustResize"">            <!-- This keeps the window background of the activity showing                 until Flutter renders its first frame. It can be removed if                 there is no splash screen (such as the default splash screen                 defined in @style/LaunchTheme). -->            <meta-data                android:name=""io.flutter.embedding.android.SplashScreenDrawable""                android:resource=""@drawable/launch_background""  />            <meta-data                android:name=""io.flutter.embedding.android.NormalTheme""                android:resource=""@style/NormalTheme""                />            <intent-filter>                <action android:name=""android.intent.action.MAIN""/>                <category android:name=""android.intent.category.LAUNCHER""/>            </intent-filter>        </activity>            <meta-data            android:name=""flutterEmbedding""            android:value=""2"" />    </application></manifest>my activity.java  looks like...package co.appbrewery.bmicalculator;import io.flutter.embedding.android.FlutterActivity;class MainActivity: extends FlutterActivity() {        }
"
21030,1,1181,2,0,0,mauricio-sky,0,"title:ConcurrentModificationException when excluding multi tasks from command line (-x) in a subproject with configureondemand description:### Expected BehaviorP.s: This error does not happen on gradle 7.3.3 (or previous versions).Using gradle 7.4.+, when ignoring multiple tasks via command line (using `-x` as parameter) on a subproject where configureondemand is enabled, and we remove tasks using gradle script as well, the command line should run successfully.### Current BehaviorCurrently, when we ignore multi tasks via command line like the example bellow:```./gradlew test-module:taskA -x test-module:taskB -x test-module:taskC```And the project has `org.gradle.configureondemand=true` on `gradle.properties` file, and we are removing any task like bellow on the root gradle file:```def modulesExcludedFromCleanBuildTasks = [        ""test-module""]modulesExcludedFromCleanBuildTasks.forEach { module ->    gradle.startParameter.excludedTaskNames.add("":$module:clean"")    gradle.startParameter.excludedTaskNames.add("":$module:build"")}```there is an exception as output:```Configuration on demand is an incubating feature.FAILURE: Build failed with an exception.* What went wrong:java.util.ConcurrentModificationException (no error message)```### ContextWe have a multi module project where some modules does not have the tasks clean and build, so these tasks are removed via gradle file as the example above (using `gradle.startParameter.excludedTaskNames.add()`). In one of these modules, we have code to test our app, and we have some steps on our CI pipeline where we do not run all tests scenarios but only some of them, so we use -x to exclude unnecessary tests for CI. Our pipeline started to get error when we updated gradle to 7.4.+.### Steps to Reproduce #### 1 - See the issue on reproducerhttps://github.com/mauriciogeneroso/gradle-issue-22235-reproducer#### 2 - Download the project already set up1 - Download the project already set up: [gradle-test.zip](https://github.com/gradle/gradle/files/8918921/gradle-test.zip) 2 - Run the command line: `./gradlew test-module:taskA -x test-module:taskB -x test-module:taskC`#### 3 - Set up from Scratch1 - Create a gradle project2 - On `gradle.properties` file includes `org.gradle.configureondemand=true`3 - Create a subproject4 - Create at lease 3 tasks on the subproject like:```task taskA(type: JavaExec) {    classpath = sourceSets.main.runtimeClasspath    mainClass = 'test.HelloWorld'}task taskB(type: JavaExec) {    classpath = sourceSets.main.runtimeClasspath    mainClass = 'test.HelloWorld'}task taskC(type: JavaExec) {    classpath = sourceSets.main.runtimeClasspath    mainClass = 'test.HelloWorld'}taskA.dependsOn(taskB, taskC)```5 - On gradle root file, exclude any task from the subproject like:```def modulesExcludedFromCleanBuildTasks = [        ""test-module""]modulesExcludedFromCleanBuildTasks.forEach { module ->    gradle.startParameter.excludedTaskNames.add("":$module:clean"")    gradle.startParameter.excludedTaskNames.add("":$module:build"")}```6 - Run the command line: `./gradlew test-module:taskA -x test-module:taskB -x test-module:taskC`### Your EnvironmentNothing in particular required to reproduce the issue.
"
21022,1,426,299,0,0,snazy,0,"title:Composite/includeBuild replacing module with project breaks dependencies in publications description:Scenario:```build A+--- includesBuild ""nessie""     + --- build ""nessie""          + defines project `:clients:client` - published with module name `nessie-client`          +--- includeBuild ""iceberg""               + subsitutes module `nessie-client` with `:clients:client`                + build ""iceberg""                    + defines project `:iceberg-nessie`                        + depends on module `nessie-client````When running `:iceberg:iceberg-nessie:publishToMavenLocal`, the generated pom of `:iceberg-nessie` wrongly uses the module name `client` instead of `nessie-client` in the pom's `<depedencies><dependency><artifactId>`.(Using Gradle build with PR #21016, based on 0452e01706db5d9c88b043af8485a1c0d5a9cfc5)
"
20997,1,0,0,0,0,VickyBox,0,"title:IncludeBuild Incremental not working  description:I'm an android developer using kotlin. My projects are using IncludeBuild. when A Project depend on B Project. and B Project depend on C Project. following these steps:1. I compiled three projects.2. then I add one line code in C project,  after compiled闂傚倷鐒︾€笛呯矙閹达附鍋?find B project is compiled all code. Incremental not working. kotlin闂?.5.21gradle version: 6.7.1gradle.properties:android.useAndroidX=trueandroid.enableJetifier=trueorg.gradle.jvmargs=-Xmx5120M
"
20995,0,353,282,0,0,aSemy,0,"title:can't view KDoc or source code of generated Kotlin dependency extensions in IDE description:### ContextI recently discovered that there's a val, `embeddedKotlinVersion`, provided to help align the embedded Kotlin version during plugin development.```kotlin// build.gradle.ktsimport org.gradle.kotlin.dsl.embeddedKotlinVersionplugins {  kotlin(""jvm"") version embeddedKotlinVersion  idea}```However it's not clear what this is, as the source code and KDoc isn't available.### Current BehaviourHovering over the value doesn't reveal the docs in the pop-up:![image](https://user-images.githubusercontent.com/897017/173227096-ed908257-4fc9-49c7-903a-8024cda7d4d4.png)If I cmd+click to go to the source, it's not available:![image](https://user-images.githubusercontent.com/897017/173227102-99fc4805-a745-4142-822f-61b1b06800cb.png)However I can see some good documentation in the source code. It's a real shame it's not visible! It would certainly help me a lot.https://github.com/gradle/gradle/blob/09189b9831989dfc9df70825b3e181dca0814a69/build-logic/kotlin-dsl/src/main/kotlin/gradlebuild/kotlindsl/generator/tasks/GenerateKotlinDependencyExtensions.kt#L69-L74### Expected BehaviourI expect to be able to view the source code and/or KDoc in my IDE when I'm developing.### Steps to Reproduce  I've tried enabling as much 'download sources' options as possible.```kotlintasks.wrapper {  gradleVersion = ""7.5-rc-2""  distributionType = Wrapper.DistributionType.ALL}idea {  module {    isDownloadSources = true    isDownloadJavadoc = true  }}```### Your EnvironmentVersions* Gradle   * 7.5-rc-2  * 7.4.2* Kotlin 1.7.0* IntelliJ IDEA 2022.1.2 (Ultimate Edition) Build #IU-221.5787.30, built on May 31, 2022
"
20992,1,1237,296,0,0,Rollczi,0,"title:[BUG] Add static field in the custom annotation marked as repeatable. description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues--><!--- Provide a brief summary of the issue in the title above -->### Expected Behaviorexecute build gradle task ### Current BehaviorFailed > Task :examples:bukkit:processTestResources NO-SOURCE```/home/runner/work/LiteCommands/LiteCommands/litecommands-core/src/main/java/dev/rollczi/litecommands/command/permission/ExecutedPermission.java:13: error: containing annotation type (dev.rollczi.litecommands.command.permission.ExecutedPermissions) does not have a default value for element ExecutedPermissions@Repeatable(ExecutedPermissions.class)^> Task :litecommands-core:compileJavaNote: /home/runner/work/LiteCommands/LiteCommands/litecommands-core/src/main/java/dev/rollczi/litecommands/implementation/LiteCommandFactory.java uses unchecked or unsafe operations.```### Context<!--- How has this issue affected you? What are you trying to accomplish? -->I'm try to add `EXECUTED_PERMISSION_RESOLVER in @interface ExecutedPermission` and `EXECUTED_PERMISSIONS_RESOLVER in @interface ExecutedPermissions````java@Target({ElementType.TYPE, ElementType.METHOD})@Retention(RetentionPolicy.RUNTIME)@Repeatable(ExecutedPermissions.class)public @interface ExecutedPermission {    String[] value() default {};    FactoryAnnotationResolver<ExecutedPermission> EXECUTED_PERMISSION_RESOLVER = new ExecutedPermissionAnnotationResolver();}``````java@Target({ElementType.TYPE, ElementType.METHOD})@Retention(RetentionPolicy.RUNTIME)public @interface ExecutedPermissions {    ExecutedPermission[] value() default {};    FactoryAnnotationResolver<ExecutedPermissions> EXECUTED_PERMISSIONS_RESOLVER = new ExecutedPermissionsAnnotationResolver();}```<!--- Providing context helps us come up with a solution that is most useful in the real world -->### Steps to Reproduce <!---Provide a self-contained example project as an attached archive or a Github project.You can use the following template with a Gradle GitHub action set up to showcase your problem: https://github.com/gradle/gradle-issue-reproducerIn the rare cases where this is infeasible, we will also accept a detailed set of instructions.-->This depends on adding a static field in the Repeatable annotation. (this is not always the case, for example class Permission and Permissions compile correct https://github.com/Rollczi/LiteCommands/blob/3dad9712114cd5722f725215af98f8f9d18159c9/litecommands-core/src/main/java/dev/rollczi/litecommands/command/permission/Permission.java) ### Your Environment<!--- Include as many relevant details about the environment you experienced the bug in --><!--- A build scan https://scans.gradle.com/get-started is ideal -->Build scan URL:master build: https://github.com/Rollczi/LiteCommands/runs/6842981830?check_suite_focus=truewith --scan: https://github.com/Rollczi/LiteCommands/runs/6843102992?check_suite_focus=true
"
20981,0,519,168,0,0,otrosien,0,"title:Gradle init doesn't escape single quotes description:When using `gradle init` (with default settings / groovy output) to convert a maven-based project to gradle, I noticed that, when the `name` property in pom.xml contains a single quote, it produces an invalid line in build.gradle.### Expected Behaviorgradle should ensure escaping of single-quotes when copying over strings from pom.xml to build.gradle### Current Behavior```pom.xml:    <name>That's it</name>build.gradle:description = 'That's it'```Worth noting that with kotlin output the same lack of escaping happens for double-quotes.### Steps to Reproduce POC repository: https://github.com/otrosien/gradle-init-bug-poc### Your Environment```------------------------------------------------------------Gradle 7.4.2------------------------------------------------------------Build time:   2022-03-31 15:25:29 UTCRevision:     540473b8118064efcc264694cbcaa4b677f61041Kotlin:       1.5.31Groovy:       3.0.9Ant:          Apache Ant(TM) version 1.10.11 compiled on July 10 2021JVM:          17.0.3 (Eclipse Adoptium 17.0.3+7)OS:           Mac OS X 12.3.1 x86_64```
"
20960,1,86,16,0,0,up-to-you,0,"title:Docker image 7.4.2-jdk17 is broken on 4.15 kernel description:java --version results in:`Failed to start thread - pthread_create failed (EPERM) for attributes: stacksize: 1024k, guardsize: 8k, detached.`Found similar fresh issue https://github.com/flyway/flyway/issues/3457Someone argue that problem is not reproducible with `alpine` version.Most probably due to new 17.0.3 `temurin` jdk build.### Expected BehaviorGradle images use more robust JDK distributions### Current Behavior`Failed to start thread - pthread_create failed (EPERM) for attributes: stacksize: 1024k, guardsize: 8k, detached.`### Steps to Reproduce Kernel 4.15.Dockerfile:```FROM gradle:7.4.2-jdk17RUN ulimit -sRUN /opt/java/openjdk/bin/java --version```### Your EnvironmentLinux kernel 4.15
"
20945,0,565,31,0,0,rschmitt,0,"title:Composite builds fail when reusing configuration cache description:### Expected BehaviorComposite builds should work with `--configuration-cache`, since it's not documented that they don't and they appear to work in at least some cases.### Current BehaviorI have a repro that shows included builds not being found when the configuration cache is reused. First build (stores the cache entry):```[0] ~/repro/CompositeBuild # ./gradlew clean build --configuration-cache[...]BUILD SUCCESSFUL in 5s4 actionable tasks: 4 executedConfiguration cache entry stored.```Second build (reuses the cached entry):```[0] ~/repro/CompositeBuild # ./gradlew clean build --configuration-cacheConfiguration cache is an incubating feature.Reusing configuration cache.FAILURE: Build failed with an exception.* What went wrong:Could not find build 'Util'```### ContextI work with a few large composite builds and I want to take advantage of the configuration cache.### Steps to ReproduceExtract and run the reproducer, [repro.tar.gz](https://github.com/gradle/gradle/files/8847962/repro.tar.gz):```$ tar -zxvf repro.tar.gz$ cd CompositeBuild$ ./gradlew clean build --configuration-cache$ ./gradlew clean build --configuration-cache```### Your EnvironmentI've reproduced this on both Linux and macOS, on both case-sensitive and case-insensitive volumes, with multiple versions of Java, using Gradle 7.4.2 as well as the latest Gradle nightly.
"
20940,1,1060,6,0,0,jlvs-chirp,0,"title:""Unable to make progress running work."" error when adding entry task to execution plan in 7.5 rc 1 description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues--><!--- Provide a brief summary of the issue in the title above -->Adding an entry task to the execution plan no longer works in Gradle 7.5-rc1.### Expected Behavior<!--- Tell us what should happen -->Build to run successfully and include the added task.### Current Behavior<!--- Tell us what happens instead of the expected behavior -->We add a `bootstrap` task that updates the developer local environment to each build (IDE and command line) to ensure our developer environments are always up to date. This is done by adding an entry task to the execution plan.```gradle.taskGraph.whenReady {    withGroovyBuilder {        val executionPlan: ExecutionPlan = getTypedProperty(""executionPlan"")        executionPlan.addEntryTasks(listOf(taskProvider.get()))        executionPlan.determineExecutionPlan()    }}```In Gradle 7.5-rc1, this no longer works. We get the following error.```Unable to make progress running work. The following items are queued for execution but none of them can be started: | 闂?- | --闂?| - Queued nodes for : | 闂備胶鍘у畷顒勫焵椤掑倸鏋嶉弶?| - :bootstrap (state=SHOULD_RUN, dependencies=NOT_COMPLETE, group=task group 1, successors=[])```### Context<!--- How has this issue affected you? What are you trying to accomplish? --><!--- Providing context helps us come up with a solution that is most useful in the real world -->We are unable to upgrade to Gradle 7.5-rc1.### Steps to Reproduce <!---Provide a self-contained example project as an attached archive or a Github project.You can use the following template with a Gradle GitHub action set up to showcase your problem: https://github.com/gradle/gradle-issue-reproducerIn the rare cases where this is infeasible, we will also accept a detailed set of instructions.-->Clone `https://github.com/jlvs-chirp/gradle-issue-reproducer`. Run `./gradlew build`. It should fail with the above error.Change the Gradle version from 7.5-rc1 to 7.4.2 with the following diff. Run `./gradlew build` again. It should pass. ```diff --git a/gradle/wrapper/gradle-wrapper.properties b/gradle/wrapper/gradle-wrapper.propertiesindex fcfb29d..aa991fc 100644--- a/gradle/wrapper/gradle-wrapper.properties+++ b/gradle/wrapper/gradle-wrapper.properties@@ -1,5 +1,5 @@ distributionBase=GRADLE_USER_HOME distributionPath=wrapper/dists-distributionUrl=https\://services.gradle.org/distributions/gradle-7.5-rc-1-bin.zip+distributionUrl=https\://services.gradle.org/distributions/gradle-7.4.2-bin.zip zipStoreBase=GRADLE_USER_HOME zipStorePath=wrapper/dists```### Your Environment<!--- Include as many relevant details about the environment you experienced the bug in --><!--- A build scan https://scans.gradle.com/get-started is ideal -->Build scan URL:https://scans.gradle.com/s/m6naiyvnvcray
"
20939,1,322,2,0,0,madhurgupta10,0,"title:AAPT: error: failed to deserialize resource table: configuration has invalid locale 'be-' after updating AGP description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues--><!--- Provide a brief summary of the issue in the title above -->### Expected Behavior<!--- Tell us what should happen -->Should be able to build project without any errors.### Current Behavior<!--- Tell us what happens instead of the expected behavior -->Unable to build project with the following error.```AAPT: error: failed to deserialize resource table: configuration has invalid locale 'be-'.```### Context<!--- How has this issue affected you? What are you trying to accomplish? --><!--- Providing context helps us come up with a solution that is most useful in the real world -->Project repository - https://github.com/commons-app/apps-android-commons### Steps to Reproduce <!---Provide a self-contained example project as an attached archive or a Github project.You can use the following template with a Gradle GitHub action set up to showcase your problem: https://github.com/gradle/gradle-issue-reproducerIn the rare cases where this is infeasible, we will also accept a detailed set of instructions.-->Before (worked fine)```classpath 'com.android.tools.build:gradle:4.0.1'classpath ""org.jetbrains.kotlin:kotlin-gradle-plugin:1.5.10""```Now (error)```classpath 'com.android.tools.build:gradle:7.2.1'classpath ""org.jetbrains.kotlin:kotlin-gradle-plugin:1.6.10""```### Your Environment<!--- Include as many relevant details about the environment you experienced the bug in --><!--- A build scan https://scans.gradle.com/get-started is ideal -->Build: AI-212.5712.43.2112.8609683, 202205181650,AI-212.5712.43.2112.8609683, JRE 11.0.12+7-b1504.28-7817840x64 JetBrains s.r.o, OS Windows 10(amd64) v10.0 , screens 6720.0x3780.0AS: Chipmunk | 2021.2.1 Patch 1; Kotlin plugin: 212-1.6.10-release-923-AS5457.46; Android Gradle Plugin: 7.2.1; Gradle: 7.3.3; Gradle JDK: version 11.0.12;
"
20928,0,1801,300,0,1,bjhargrave,0,"title:`Manifest.from(Object...)` does not support merging Manifest implementations description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues--><!--- Provide a brief summary of the issue in the title above -->### Expected Behavior<!--- Tell us what should happen -->One should be able to pass an implementation of `org.gradle.api.java.archives.Manifest` to `Manifest.from(Object...)` to get the argument manifest merged into the receiver manifest.The [javadoc](https://github.com/gradle/gradle/blob/270f942676177479a8e389cdd734a18771bc4982/subprojects/platform-jvm/src/main/java/org/gradle/api/java/archives/Manifest.java#L84-L85) indicates this is supported. ### Current Behavior<!--- Tell us what happens instead of the expected behavior -->The current implementation of `DefaultManifestMergeSpec` requires the manifest object to be an instance of the internal `DefaultManifest` type:https://github.com/gradle/gradle/blob/270f942676177479a8e389cdd734a18771bc4982/subprojects/platform-jvm/src/main/java/org/gradle/api/java/archives/internal/DefaultManifestMergeSpec.java#L152rather than the `Manifest` type. When the manifest object is not an instance of the internal `DefaultManifest` type, the code attempts to resolve the manifest object as a file path which fails.### Context<!--- How has this issue affected you? What are you trying to accomplish? --><!--- Providing context helps us come up with a solution that is most useful in the real world -->The is affecting the use of custom manifest object in plugins as they cannot merge a manifest object unless it is of the internal `DefaultManifest` type.### Steps to Reproduce <!---Provide a self-contained example project as an attached archive or a Github project.You can use the following template with a Gradle GitHub action set up to showcase your problem: https://github.com/gradle/gradle-issue-reproducerIn the rare cases where this is infeasible, we will also accept a detailed set of instructions.-->This can be seen when using the latest fix https://github.com/bndtools/bnd/pull/5276 to the Bnd Gradle plugin (6.4.0-SNAPSHOT) when building JUnit 5 which also uses the `com.github.johnrengelman.shadow` plugin. These two plugins interact over the jar task's manifest object. With the Bnd fix, the following exception occurs.```Caused by: org.gradle.internal.typeconversion.UnsupportedNotationException: Cannot convert the provided notation to a File or URI: org.gradle.api.java.archives.internal.DefaultManifest@1ab3a446.The following types/formats are supported:  - A String or CharSequence path, for example 'src/main/java' or '/usr/include'.  - A String or CharSequence URI, for example 'file:/usr/include'.  - A File instance.  - A Path instance.  - A Directory instance.  - A RegularFile instance.  - A URI or URL instance.  - A TextResource instance.        at org.gradle.internal.typeconversion.ErrorHandlingNotationParser.parseNotation(ErrorHandlingNotationParser.java:57)        at org.gradle.api.internal.file.AbstractFileResolver.convertObjectToFile(AbstractFileResolver.java:105)        at org.gradle.api.internal.file.AbstractBaseDirFileResolver.doResolve(AbstractBaseDirFileResolver.java:63)        at org.gradle.api.internal.file.AbstractFileResolver.resolve(AbstractFileResolver.java:74)        at org.gradle.api.internal.file.AbstractFileResolver.resolve(AbstractFileResolver.java:48)        at org.gradle.api.java.archives.internal.DefaultManifest.read(DefaultManifest.java:281)        at org.gradle.api.java.archives.internal.DefaultManifest.<init>(DefaultManifest.java:77)        at org.gradle.api.java.archives.internal.DefaultManifestMergeSpec.createManifest(DefaultManifestMergeSpec.java:155)        at org.gradle.api.java.archives.internal.DefaultManifestMergeSpec.merge(DefaultManifestMergeSpec.java:84)        at org.gradle.api.java.archives.internal.DefaultManifestMergeSpec$merge.call(Unknown Source)        at com.github.jengelman.gradle.plugins.shadow.tasks.DefaultInheritManifest$_getEffectiveManifest_closure1.doCall(DefaultInheritManifest.groovy:65)```I have a PR I will submit with the fix for this issue. ### Your Environment<!--- Include as many relevant details about the environment you experienced the bug in --><!--- A build scan https://scans.gradle.com/get-started is ideal -->Build scan URL:https://scans.gradle.com/s/huhyrwmnaz73w
"
20916,1,385,24,0,0,yogurtearl,0,"title:task input property name `os.arch` seems to have no effect. description:### Expected BehaviorThis should cause tests to never be `UP-TO-DATE` : ```kotlin import kotlin.random.Randomtasks.withType<Test>{    val random = Random.nextDouble().toString()    println(""random = $random"")    inputs.property(""os.arch"", random)}```### Current Behaviorand input property of name `os.arch` seems to be treated differently and not caused the task to be out of date. `os.arch` seems to be a unique value that triggers this odd behavior. ### ContextUsing a string other than `""os.arch""` DOES work, for example, this does cause `Test` tasks to always be out of date as expected:```kotlin import kotlin.random.Randomtasks.withType<Test>{    val random = Random.nextDouble().toString()    println(""random = $random"")    inputs.property(""cpu_architecture"", random)}```### Your EnvironmentGradle 7.4.2macOS 12.1.3
"
20915,1,650,0,0,0,mgroth0,0,"title:Gradle Tooling API 7.5-rc-1 not compatible with Java 17 description:Regular Gradle (not the tooling API) 7.5-rc-1 works perfectly for me with Java 17. However, the tooling API throws the following: ```No matching variant of matt.KJ:kbuild:1654196619201 was found. The consumer was configured to find a runtime of a library compatible with Java 16, packaged as a jar, and its dependencies declared externally, as well as attribute 'org.gradle.plugin.api-version' with value '7.5-rc-1' but:GRADLE ERR:          - Variant 'apiElements' capability matt.KJ:kbuild:1654196619201 declares a library, packaged as a jar, and its dependencies declared externally:GRADLE ERR:              - Incompatible because this component declares an API of a component compatible with Java 17 and the consumer needed a runtime of a component compatible with Java 16````matt.KJ:kbuild` is a local gradle plugin developed in java 17. I might be able to build it in 16 so it might not be a huge issue. But I wanted to check here if my assumption is correct that this is my only option for now, and also to check if there are plans to update the tooling api to java 17?
"
20910,0,1027,273,0,0,bamboo,0,"title:`mustRunAfter` constraint is violated by `finalizedBy` dependency description:Consider the following task graph involving a `mustRunAfter` constraint referencing a `finalizedBy` task dependency:```kotlin          tasks {                register(""dockerTest"") {                    dependsOn(""dockerUp"")     // dependsOn createContainer mustRunAfter removeContainer                    finalizedBy(""dockerStop"") // dependsOn removeContainer                }                register(""dockerUp"") {                    dependsOn(""createContainer"")                }                register(""dockerStop"") {                    dependsOn(""removeContainer"")                }                register(""createContainer"") {                    mustRunAfter(""removeContainer"")                }                register(""removeContainer"") {                }            }```### Expected BehaviorUpon running `gradle dockerTest`, Gradle should ensure the `:createContainer` task is executed after `:removeContainer` due to the `mustRunAfter` constraint producing the following order of execution:```> Task :removeContainer UP-TO-DATE> Task :createContainer UP-TO-DATE> Task :dockerUp UP-TO-DATE> Task :dockerTest UP-TO-DATE> Task :dockerStop UP-TO-DATE``` > Gradle ensures that all task dependencies and ordering rules are honored when executing tasks, so that the task is executed after all of its dependencies and any ""must run after"" tasks have been executed.[Task.java:82-83](https://github.com/gradle/gradle/blob/b3959d4af6bd282041c0c6da37a2508065b75f1a/subprojects/core-api/src/main/java/org/gradle/api/Task.java#L82-L83). ### Current Behavior (tested against 7.4)Gradle violates the `mustRunAfter` constraint between `:createContainer` and `:removeContainer`:```> Task :createContainer UP-TO-DATE> Task :dockerUp UP-TO-DATE> Task :dockerTest UP-TO-DATE> Task :removeContainer UP-TO-DATE> Task :dockerStop UP-TO-DATE```
"
20892,0,0,215,0,0,adammurdoch,0,"title:Build fails with ""Task was never scheduled for execution"" exception when configuration cache is enabled description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues-->This happens when:- Configuration cache is enabled.- A task from an included build runs at configuration time, eg it produces a plugin that is applied to the main build.- The same task is also included in the ""main"" work graph, eg it reachable via a project dependency or the task is referenced from the command-line.- The work graph is loaded from the configuration cache.### Expected BehaviorThe build should not fail.### Current BehaviorAs above
"
20891,0,29811,24,0,1,yogurtearl,0,"title:`startScripts` relies on `chmod` being in the PATH.  description:### Expected Behavior`startScripts` should still work when `chmod` is NOT in the `PATH`. ### Current Behaviorif `PATH` does not contain `chmod` on unix style system, `startScripts` from the application plugin will give an error like this: <b>CLICK TO SEE THE FULL ERROR</b>```org.gradle.testkit.runner.UnexpectedBuildFailure: Unexpected build execution failure in /var/folders/zg/tjjb_fkx1355xx67t7pyl43r0000gn/T/junit5739200029167170917 with arguments [distTar, --stacktrace]Output:> Task :compileKotlin> Task :compileJava NO-SOURCE> Task :processResources NO-SOURCE> Task :classes UP-TO-DATE> Task :inspectClassesForKotlinIC> Task :jar> Task :startScripts FAILEDFAILURE: Build failed with an exception.* What went wrong:Execution failed for task ':startScripts'.> Execute failed: java.io.IOException: Cannot run program ""chmod"" (in directory ""/Users/myRepo/buildSrc/build/tmp/test/work/.gradle-test-kit/test-kit-daemon/7.4.2""): error=2, No such file or directory* Try:> Run with --info or --debug option to get more log output.> Run with --scan to get full insights.* Exception is:org.gradle.api.tasks.TaskExecutionException: Execution failed for task ':startScripts'.	at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.lambda$executeIfValid$1(ExecuteActionsTaskExecuter.java:147)	at org.gradle.internal.Try$Failure.ifSuccessfulOrElse(Try.java:282)	at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeIfValid(ExecuteActionsTaskExecuter.java:145)	at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.execute(ExecuteActionsTaskExecuter.java:133)	at org.gradle.api.internal.tasks.execution.CleanupStaleOutputsExecuter.execute(CleanupStaleOutputsExecuter.java:77)	at org.gradle.api.internal.tasks.execution.FinalizePropertiesTaskExecuter.execute(FinalizePropertiesTaskExecuter.java:46)	at org.gradle.api.internal.tasks.execution.ResolveTaskExecutionModeExecuter.execute(ResolveTaskExecutionModeExecuter.java:51)	at org.gradle.api.internal.tasks.execution.SkipTaskWithNoActionsExecuter.execute(SkipTaskWithNoActionsExecuter.java:57)	at org.gradle.api.internal.tasks.execution.SkipOnlyIfTaskExecuter.execute(SkipOnlyIfTaskExecuter.java:56)	at org.gradle.api.internal.tasks.execution.CatchExceptionTaskExecuter.execute(CatchExceptionTaskExecuter.java:36)	at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.executeTask(EventFiringTaskExecuter.java:77)	at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.call(EventFiringTaskExecuter.java:55)	at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.call(EventFiringTaskExecuter.java:52)	at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)	at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)	at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)	at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)	at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)	at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)	at org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)	at org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)	at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter.execute(EventFiringTaskExecuter.java:52)	at org.gradle.execution.plan.LocalTaskNodeExecutor.execute(LocalTaskNodeExecutor.java:74)	at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$InvokeNodeExecutorsAction.execute(DefaultTaskExecutionGraph.java:333)	at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$InvokeNodeExecutorsAction.execute(DefaultTaskExecutionGraph.java:320)	at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$BuildOperationAwareExecutionAction.execute(DefaultTaskExecutionGraph.java:313)	at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$BuildOperationAwareExecutionAction.execute(DefaultTaskExecutionGraph.java:299)	at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.lambda$run$0(DefaultPlanExecutor.java:143)	at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.execute(DefaultPlanExecutor.java:227)	at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.executeNextNode(DefaultPlanExecutor.java:218)	at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.run(DefaultPlanExecutor.java:140)	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)Caused by: Execute failed: java.io.IOException: Cannot run program ""chmod"" (in directory ""/Users/myRepo/buildSrc/build/tmp/test/work/.gradle-test-kit/test-kit-daemon/7.4.2""): error=2, No such file or directory	at org.apache.tools.ant.taskdefs.ExecuteOn.runExec(ExecuteOn.java:484)	at org.apache.tools.ant.taskdefs.ExecTask.execute(ExecTask.java:527)	at org.apache.tools.ant.taskdefs.Chmod.execute(Chmod.java:186)	at org.gradle.api.internal.plugins.StartScriptGenerator$AntUnixFileOperation.createExecutablePermission(StartScriptGenerator.java:131)	at org.gradle.api.internal.plugins.StartScriptGenerator.generateUnixScript(StartScriptGenerator.java:113)	at org.gradle.jvm.application.tasks.CreateStartScripts.generate(CreateStartScripts.java:383)	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)	at org.gradle.internal.reflect.JavaMethod.invoke(JavaMethod.java:104)	at org.gradle.api.internal.project.taskfactory.StandardTaskAction.doExecute(StandardTaskAction.java:58)	at org.gradle.api.internal.project.taskfactory.StandardTaskAction.execute(StandardTaskAction.java:51)	at org.gradle.api.internal.project.taskfactory.StandardTaskAction.execute(StandardTaskAction.java:29)	at org.gradle.api.internal.tasks.execution.TaskExecution$3.run(TaskExecution.java:242)	at org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:29)	at org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:26)	at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)	at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)	at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)	at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)	at org.gradle.internal.operations.DefaultBuildOperationRunner.run(DefaultBuildOperationRunner.java:47)	at org.gradle.internal.operations.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:68)	at org.gradle.api.internal.tasks.execution.TaskExecution.executeAction(TaskExecution.java:227)	at org.gradle.api.internal.tasks.execution.TaskExecution.executeActions(TaskExecution.java:210)	at org.gradle.api.internal.tasks.execution.TaskExecution.executeWithPreviousOutputFiles(TaskExecution.java:193)	at org.gradle.api.internal.tasks.execution.TaskExecution.execute(TaskExecution.java:171)	at org.gradle.internal.execution.steps.ExecuteStep.executeInternal(ExecuteStep.java:89)	at org.gradle.internal.execution.steps.ExecuteStep.access$000(ExecuteStep.java:40)	at org.gradle.internal.execution.steps.ExecuteStep$1.call(ExecuteStep.java:53)	at org.gradle.internal.execution.steps.ExecuteStep$1.call(ExecuteStep.java:50)	at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)	at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)	at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)	at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)	at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)	at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)	at org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)	at org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)	at org.gradle.internal.execution.steps.ExecuteStep.execute(ExecuteStep.java:50)	at org.gradle.internal.execution.steps.ExecuteStep.execute(ExecuteStep.java:40)	at org.gradle.internal.execution.steps.RemovePreviousOutputsStep.execute(RemovePreviousOutputsStep.java:68)	at org.gradle.internal.execution.steps.RemovePreviousOutputsStep.execute(RemovePreviousOutputsStep.java:38)	at org.gradle.internal.execution.steps.ResolveInputChangesStep.execute(ResolveInputChangesStep.java:48)	at org.gradle.internal.execution.steps.ResolveInputChangesStep.execute(ResolveInputChangesStep.java:36)	at org.gradle.internal.execution.steps.CancelExecutionStep.execute(CancelExecutionStep.java:41)	at org.gradle.internal.execution.steps.TimeoutStep.executeWithoutTimeout(TimeoutStep.java:74)	at org.gradle.internal.execution.steps.TimeoutStep.execute(TimeoutStep.java:55)	at org.gradle.internal.execution.steps.CreateOutputsStep.execute(CreateOutputsStep.java:51)	at org.gradle.internal.execution.steps.CreateOutputsStep.execute(CreateOutputsStep.java:29)	at org.gradle.internal.execution.steps.CaptureStateAfterExecutionStep.execute(CaptureStateAfterExecutionStep.java:61)	at org.gradle.internal.execution.steps.CaptureStateAfterExecutionStep.execute(CaptureStateAfterExecutionStep.java:42)	at org.gradle.internal.execution.steps.BroadcastChangingOutputsStep.execute(BroadcastChangingOutputsStep.java:60)	at org.gradle.internal.execution.steps.BroadcastChangingOutputsStep.execute(BroadcastChangingOutputsStep.java:27)	at org.gradle.internal.execution.steps.BuildCacheStep.executeWithoutCache(BuildCacheStep.java:180)	at org.gradle.internal.execution.steps.BuildCacheStep.lambda$execute$1(BuildCacheStep.java:75)	at org.gradle.internal.Either$Right.fold(Either.java:175)	at org.gradle.internal.execution.caching.CachingState.fold(CachingState.java:59)	at org.gradle.internal.execution.steps.BuildCacheStep.execute(BuildCacheStep.java:73)	at org.gradle.internal.execution.steps.BuildCacheStep.execute(BuildCacheStep.java:48)	at org.gradle.internal.execution.steps.StoreExecutionStateStep.execute(StoreExecutionStateStep.java:36)	at org.gradle.internal.execution.steps.StoreExecutionStateStep.execute(StoreExecutionStateStep.java:25)	at org.gradle.internal.execution.steps.RecordOutputsStep.execute(RecordOutputsStep.java:36)	at org.gradle.internal.execution.steps.RecordOutputsStep.execute(RecordOutputsStep.java:22)	at org.gradle.internal.execution.steps.SkipUpToDateStep.executeBecause(SkipUpToDateStep.java:110)	at org.gradle.internal.execution.steps.SkipUpToDateStep.lambda$execute$2(SkipUpToDateStep.java:56)	at org.gradle.internal.execution.steps.SkipUpToDateStep.execute(SkipUpToDateStep.java:56)	at org.gradle.internal.execution.steps.SkipUpToDateStep.execute(SkipUpToDateStep.java:38)	at org.gradle.internal.execution.steps.ResolveChangesStep.execute(ResolveChangesStep.java:73)	at org.gradle.internal.execution.steps.ResolveChangesStep.execute(ResolveChangesStep.java:44)	at org.gradle.internal.execution.steps.legacy.MarkSnapshottingInputsFinishedStep.execute(MarkSnapshottingInputsFinishedStep.java:37)	at org.gradle.internal.execution.steps.legacy.MarkSnapshottingInputsFinishedStep.execute(MarkSnapshottingInputsFinishedStep.java:27)	at org.gradle.internal.execution.steps.ResolveCachingStateStep.execute(ResolveCachingStateStep.java:89)	at org.gradle.internal.execution.steps.ResolveCachingStateStep.execute(ResolveCachingStateStep.java:50)	at org.gradle.internal.execution.steps.ValidateStep.execute(ValidateStep.java:114)	at org.gradle.internal.execution.steps.ValidateStep.execute(ValidateStep.java:57)	at org.gradle.internal.execution.steps.CaptureStateBeforeExecutionStep.execute(CaptureStateBeforeExecutionStep.java:76)	at org.gradle.internal.execution.steps.CaptureStateBeforeExecutionStep.execute(CaptureStateBeforeExecutionStep.java:50)	at org.gradle.internal.execution.steps.SkipEmptyWorkStep.executeWithNoEmptySources(SkipEmptyWorkStep.java:249)	at org.gradle.internal.execution.steps.SkipEmptyWorkStep.execute(SkipEmptyWorkStep.java:86)	at org.gradle.internal.execution.steps.SkipEmptyWorkStep.execute(SkipEmptyWorkStep.java:54)	at org.gradle.internal.execution.steps.RemoveUntrackedExecutionStateStep.execute(RemoveUntrackedExecutionStateStep.java:32)	at org.gradle.internal.execution.steps.RemoveUntrackedExecutionStateStep.execute(RemoveUntrackedExecutionStateStep.java:21)	at org.gradle.internal.execution.steps.legacy.MarkSnapshottingInputsStartedStep.execute(MarkSnapshottingInputsStartedStep.java:38)	at org.gradle.internal.execution.steps.LoadPreviousExecutionStateStep.execute(LoadPreviousExecutionStateStep.java:43)	at org.gradle.internal.execution.steps.LoadPreviousExecutionStateStep.execute(LoadPreviousExecutionStateStep.java:31)	at org.gradle.internal.execution.steps.AssignWorkspaceStep.lambda$execute$0(AssignWorkspaceStep.java:40)	at org.gradle.api.internal.tasks.execution.TaskExecution$4.withWorkspace(TaskExecution.java:287)	at org.gradle.internal.execution.steps.AssignWorkspaceStep.execute(AssignWorkspaceStep.java:40)	at org.gradle.internal.execution.steps.AssignWorkspaceStep.execute(AssignWorkspaceStep.java:30)	at org.gradle.internal.execution.steps.IdentityCacheStep.execute(IdentityCacheStep.java:37)	at org.gradle.internal.execution.steps.IdentityCacheStep.execute(IdentityCacheStep.java:27)	at org.gradle.internal.execution.steps.IdentifyStep.execute(IdentifyStep.java:44)	at org.gradle.internal.execution.steps.IdentifyStep.execute(IdentifyStep.java:33)	at org.gradle.internal.execution.impl.DefaultExecutionEngine$1.execute(DefaultExecutionEngine.java:76)	at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeIfValid(ExecuteActionsTaskExecuter.java:144)	at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.execute(ExecuteActionsTaskExecuter.java:133)	at org.gradle.api.internal.tasks.execution.CleanupStaleOutputsExecuter.execute(CleanupStaleOutputsExecuter.java:77)	at org.gradle.api.internal.tasks.execution.FinalizePropertiesTaskExecuter.execute(FinalizePropertiesTaskExecuter.java:46)	at org.gradle.api.internal.tasks.execution.ResolveTaskExecutionModeExecuter.execute(ResolveTaskExecutionModeExecuter.java:51)	at org.gradle.api.internal.tasks.execution.SkipTaskWithNoActionsExecuter.execute(SkipTaskWithNoActionsExecuter.java:57)	at org.gradle.api.internal.tasks.execution.SkipOnlyIfTaskExecuter.execute(SkipOnlyIfTaskExecuter.java:56)	at org.gradle.api.internal.tasks.execution.CatchExceptionTaskExecuter.execute(CatchExceptionTaskExecuter.java:36)	at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.executeTask(EventFiringTaskExecuter.java:77)	at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.call(EventFiringTaskExecuter.java:55)	at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.call(EventFiringTaskExecuter.java:52)	at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)	at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)	at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)	at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)	at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)	at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)	at org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)	at org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)	at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter.execute(EventFiringTaskExecuter.java:52)	at org.gradle.execution.plan.LocalTaskNodeExecutor.execute(LocalTaskNodeExecutor.java:74)	at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$InvokeNodeExecutorsAction.execute(DefaultTaskExecutionGraph.java:333)	at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$InvokeNodeExecutorsAction.execute(DefaultTaskExecutionGraph.java:320)	at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$BuildOperationAwareExecutionAction.execute(DefaultTaskExecutionGraph.java:313)	at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$BuildOperationAwareExecutionAction.execute(DefaultTaskExecutionGraph.java:299)	at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.lambda$run$0(DefaultPlanExecutor.java:143)	at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.execute(DefaultPlanExecutor.java:227)	at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.executeNextNode(DefaultPlanExecutor.java:218)	at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.run(DefaultPlanExecutor.java:140)	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)Caused by: java.io.IOException: Cannot run program ""chmod"" (in directory ""/Users/myRepo/buildSrc/build/tmp/test/work/.gradle-test-kit/test-kit-daemon/7.4.2""): error=2, No such file or directory	at org.apache.tools.ant.taskdefs.launcher.Java13CommandLauncher.exec(Java13CommandLauncher.java:58)	at org.apache.tools.ant.taskdefs.Execute.launch(Execute.java:424)	at org.apache.tools.ant.taskdefs.Execute.execute(Execute.java:438)	at org.apache.tools.ant.taskdefs.ExecTask.runExecute(ExecTask.java:660)	at org.apache.tools.ant.taskdefs.ExecuteOn.runParallel(ExecuteOn.java:702)	at org.apache.tools.ant.taskdefs.ExecuteOn.runExec(ExecuteOn.java:474)	... 124 moreCaused by: java.io.IOException: error=2, No such file or directory	... 130 more* Get more help at https://help.gradle.orgBUILD FAILED in 2s4 actionable tasks: 4 executed	at app//org.gradle.testkit.runner.internal.DefaultGradleRunner.lambda$build$2(DefaultGradleRunner.java:264)	at app//org.gradle.testkit.runner.internal.DefaultGradleRunner.run(DefaultGradleRunner.java:338)	at app//org.gradle.testkit.runner.internal.DefaultGradleRunner.build(DefaultGradleRunner.java:262)	at app//my.Test.testApplication$buildSrc(Test.kt:260)	at java.base@17.0.2/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)	at java.base@17.0.2/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)	at java.base@17.0.2/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)	at java.base@17.0.2/java.lang.reflect.Method.invoke(Method.java:568)	at app//org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:688)	at app//org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)	at app//org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)	at app//org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)	at app//org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84)	at app//org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)	at app//org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)	at app//org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)	at app//org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:210)	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:206)	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:131)	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:65)	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)	at java.base@17.0.2/java.util.ArrayList.forEach(ArrayList.java:1511)	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)	at java.base@17.0.2/java.util.ArrayList.forEach(ArrayList.java:1511)	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)	at app//org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)	at app//org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108)	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96)	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75)	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99)	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79)	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75)	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61)	at java.base@17.0.2/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)	at java.base@17.0.2/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)	at java.base@17.0.2/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)	at java.base@17.0.2/java.lang.reflect.Method.invoke(Method.java:568)	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:133)	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71)	at app//worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)	at app//worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)```</details> ```* What went wrong:Execution failed for task ':startScripts'.> Execute failed: java.io.IOException: Cannot run program ""chmod"" (in directory ""/Users/myRepo/buildSrc/build/tmp/test/work/.gradle-test-kit/test-kit-daemon/7.4.2""): error=2, No such file or directory```### Suggested fixRemove the AntTask for `chmod` and use `java.nio.file.Files.setPosixFilePermissions` instead: https://github.com/gradle/gradle/blob/bd12f942062f2970e4d8514258e04e94048a03a3/subprojects/plugins/src/main/java/org/gradle/api/internal/plugins/StartScriptGenerator.java#L126-L131### Steps to Reproduce Run a test similar to this. the `.withEnvironment(mapOf())` means that `chmod` is not on the path. ```kotlin    @Test    internal fun testApplication() {        // our gradle file to run with        file(""build.gradle.kts"").writeText(            """"""            plugins {                kotlin(""jvm"") version ""1.6.21""                application            }                                      repositories {               mavenCentral()            }                           application {                mainClass.set(""MainKt"")            }            """""".trimIndent()        )        file(""src/main/kotlin/Main.kt"").writeText(            """"""            fun main() = println(""Gradle!"")                """""".trimIndent()        )        GradleRunner.create()            .withPluginClasspath()            .withEnvironment(mapOf())            .forwardStdOutput(PrintWriter(System.out))            .withProjectDir(tempDir)            .withArguments(""distTar"", ""--stacktrace"")            .build()    }```### Your EnvironmentGradle 7.4.2macOS 12.3.1
"
20885,1,0,296,0,1,jvandort,0,"title:Make PublishArtifact to IvyArtifactName conversion lazy  description:Resolving a dependency graph causes the root project to collect its metadata.This in turn causes all configurations to resolve their artifacts to concretetypes. Previously, any artifacts which are backed by tasks or other lazy entitieshad their backing entities realized. However, this commit updates the conversionof PublishArtifacts to IvyArtifactNames to defer any actual conversion untildata is actually accessed from the converted IvyActifactName. Often times, the datais not actually required during dependency resolution, and thus the underlyingtasks will not be realized.Fixes #20846
"
20883,0,26051,89,0,0,liutikas,0,"title:Stop computing a logging string that is not used description:Stop computing a logging string that is not used. In [AbstractCollectionProperty#add](https://cs.android.com/android-studio/gradle/+/master:subprojects/model-core/src/main/java/org/gradle/api/internal/provider/AbstractCollectionProperty.java;l=69) there is a `Preconditions.checkNotNull(element, String.format(""` call that makes String.format be called even if the logging is not even done. In our build this one call ends up taking 25ms of configuration time. Here is the stacktrace where it gets called from Android Gradle Plugin that takes this time:```org.gradle.api.internal.provider.AbstractCollectionProperty.add(AbstractCollectionProperty.java)com.android.build.api.variant.impl.FlatSourceDirectoriesImpl.addSource$gradle_core(FlatSourceDirectoriesImpl.kt:60)com.android.build.api.variant.impl.FlatSourceDirectoriesImpl.addSources$gradle_core(FlatSourceDirectoriesImpl.kt:73)com.android.build.api.variant.impl.SourcesImpl.<init>(SourcesImpl.kt:57)com.android.build.api.component.impl.ComponentImpl$sources$2.invoke(ComponentImpl.kt:139)com.android.build.api.component.impl.ComponentImpl$sources$2.invoke(ComponentImpl.kt:138)kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)com.android.build.api.component.impl.ComponentImpl.getSources(ComponentImpl.kt:138)com.android.build.api.component.impl.AndroidTestImpl_Decorated.getSources()com.android.build.gradle.internal.test.AbstractTestDataImpl.<init>(AbstractTestDataImpl.kt:96)com.android.build.gradle.internal.test.TestDataImpl.<init>(TestDataImpl.kt:39)com.android.build.gradle.internal.TaskManager.createConnectedTestForVariant(TaskManager.kt:1969)com.android.build.gradle.internal.TaskManager.createAndroidTestVariantTasks(TaskManager.kt:1620)com.android.build.gradle.internal.TaskManager.createTasksForTest(TaskManager.kt:690)com.android.build.gradle.internal.TaskManager.createTasks(TaskManager.kt:328)com.android.build.gradle.internal.plugins.BasePlugin.createAndroidTasks(BasePlugin.kt:692)com.android.build.gradle.internal.plugins.BasePlugin$createTasks$2$1.call(BasePlugin.kt:575)com.android.builder.profile.ThreadRecorder.record(ThreadRecorder.java:69)com.android.builder.profile.ThreadRecorder.record(ThreadRecorder.java:54)com.android.build.gradle.internal.profile.AnalyticsResourceManager.recordBlockAtConfiguration(AnalyticsResourceManager.kt:207)com.android.build.gradle.internal.profile.AnalyticsConfiguratorService.recordBlock(AnalyticsConfiguratorService.kt:85)com.android.build.gradle.internal.plugins.BasePlugin$createTasks$2.accept(BasePlugin.kt:570)com.android.build.gradle.internal.plugins.BasePlugin$createTasks$2.accept(BasePlugin.kt:567)com.android.build.gradle.internal.crash.CrashReporting$afterEvaluate$1.execute(crash_reporting.kt:37)com.android.build.gradle.internal.crash.CrashReporting$afterEvaluate$1.execute(crash_reporting.kt:35)org.gradle.configuration.internal.DefaultUserCodeApplicationContext$CurrentApplication$1.execute(DefaultUserCodeApplicationContext.java:123)org.gradle.configuration.internal.DefaultListenerBuildOperationDecorator$BuildOperationEmittingAction$1.run(DefaultListenerBuildOperationDecorator.java:171)org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:29)org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:26)org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)org.gradle.internal.operations.DefaultBuildOperationRunner.run(DefaultBuildOperationRunner.java:47)org.gradle.internal.operations.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:68)org.gradle.configuration.internal.DefaultListenerBuildOperationDecorator$BuildOperationEmittingAction.execute(DefaultListenerBuildOperationDecorator.java:168)org.gradle.internal.event.BroadcastDispatch$ActionInvocationHandler.dispatch(BroadcastDispatch.java:95)org.gradle.internal.event.BroadcastDispatch$ActionInvocationHandler.dispatch(BroadcastDispatch.java:83)org.gradle.internal.event.AbstractBroadcastDispatch.dispatch(AbstractBroadcastDispatch.java:43)org.gradle.internal.event.BroadcastDispatch$SingletonDispatch.dispatch(BroadcastDispatch.java:245)org.gradle.internal.event.BroadcastDispatch$SingletonDispatch.dispatch(BroadcastDispatch.java:157)org.gradle.internal.event.AbstractBroadcastDispatch.dispatch(AbstractBroadcastDispatch.java:61)org.gradle.internal.event.BroadcastDispatch$CompositeDispatch.dispatch(BroadcastDispatch.java:346)org.gradle.internal.event.BroadcastDispatch$CompositeDispatch.dispatch(BroadcastDispatch.java:249)org.gradle.internal.event.ListenerBroadcast.dispatch(ListenerBroadcast.java:141)org.gradle.internal.event.ListenerBroadcast.dispatch(ListenerBroadcast.java:37)org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)com.sun.proxy.$Proxy51.afterEvaluate()org.gradle.configuration.project.LifecycleProjectEvaluator$NotifyAfterEvaluate$1.execute(LifecycleProjectEvaluator.java:247)org.gradle.configuration.project.LifecycleProjectEvaluator$NotifyAfterEvaluate$1.execute(LifecycleProjectEvaluator.java:244)org.gradle.api.internal.project.DefaultProject.stepEvaluationListener(DefaultProject.java:1434)org.gradle.configuration.project.LifecycleProjectEvaluator$NotifyAfterEvaluate.run(LifecycleProjectEvaluator.java:253)org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:29)org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:26)org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)org.gradle.internal.operations.DefaultBuildOperationRunner.run(DefaultBuildOperationRunner.java:47)org.gradle.internal.operations.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:68)org.gradle.configuration.project.LifecycleProjectEvaluator$EvaluateProject.lambda$run$0(LifecycleProjectEvaluator.java:114)org.gradle.configuration.project.LifecycleProjectEvaluator$EvaluateProject$$Lambda$1072.accept()org.gradle.api.internal.project.DefaultProjectStateRegistry$ProjectStateImpl.lambda$applyToMutableState$0(DefaultProjectStateRegistry.java:351)org.gradle.api.internal.project.DefaultProjectStateRegistry$ProjectStateImpl$$Lambda$1059.apply()org.gradle.api.internal.project.DefaultProjectStateRegistry$ProjectStateImpl.fromMutableState(DefaultProjectStateRegistry.java:369)org.gradle.api.internal.project.DefaultProjectStateRegistry$ProjectStateImpl.applyToMutableState(DefaultProjectStateRegistry.java:350)org.gradle.configuration.project.LifecycleProjectEvaluator$EvaluateProject.run(LifecycleProjectEvaluator.java:100)org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:29)org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:26)org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)org.gradle.internal.operations.DefaultBuildOperationRunner.run(DefaultBuildOperationRunner.java:47)org.gradle.internal.operations.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:68)org.gradle.configuration.project.LifecycleProjectEvaluator.evaluate(LifecycleProjectEvaluator.java:72)org.gradle.api.internal.project.DefaultProject.evaluate(DefaultProject.java:761)org.gradle.api.internal.project.DefaultProject.evaluate(DefaultProject.java:152)org.gradle.api.internal.project.ProjectLifecycleController.lambda$ensureSelfConfigured$1(ProjectLifecycleController.java:63)org.gradle.api.internal.project.ProjectLifecycleController$$Lambda$1070.run()org.gradle.internal.model.StateTransitionController.lambda$doTransition$12(StateTransitionController.java:236)org.gradle.internal.model.StateTransitionController$$Lambda$192.get()org.gradle.internal.model.StateTransitionController.doTransition(StateTransitionController.java:247)org.gradle.internal.model.StateTransitionController.doTransition(StateTransitionController.java:235)org.gradle.internal.model.StateTransitionController.lambda$maybeTransitionIfNotCurrentlyTransitioning$9(StateTransitionController.java:196)org.gradle.internal.model.StateTransitionController$$Lambda$1071.run()org.gradle.internal.work.DefaultSynchronizer.withLock(DefaultSynchronizer.java:34)org.gradle.internal.model.StateTransitionController.maybeTransitionIfNotCurrentlyTransitioning(StateTransitionController.java:192)org.gradle.api.internal.project.ProjectLifecycleController.ensureSelfConfigured(ProjectLifecycleController.java:63)org.gradle.api.internal.project.DefaultProjectStateRegistry$ProjectStateImpl.ensureConfigured(DefaultProjectStateRegistry.java:325)org.gradle.execution.TaskPathProjectEvaluator.configure(TaskPathProjectEvaluator.java:33)org.gradle.execution.TaskPathProjectEvaluator.configureHierarchy(TaskPathProjectEvaluator.java:49)org.gradle.execution.DefaultTaskSelector.getSelection(DefaultTaskSelector.java:101)org.gradle.execution.DefaultTaskSelector.getSelection(DefaultTaskSelector.java:82)org.gradle.execution.CompositeAwareTaskSelector.getSelection(CompositeAwareTaskSelector.java:94)org.gradle.execution.commandline.CommandLineTaskParser.parseTasks(CommandLineTaskParser.java:43)org.gradle.execution.TaskNameResolvingBuildConfigurationAction.configure(TaskNameResolvingBuildConfigurationAction.java:44)org.gradle.execution.DefaultBuildConfigurationActionExecuter.configure(DefaultBuildConfigurationActionExecuter.java:49)org.gradle.execution.DefaultBuildConfigurationActionExecuter.access$000(DefaultBuildConfigurationActionExecuter.java:25)org.gradle.execution.DefaultBuildConfigurationActionExecuter$1.proceed(DefaultBuildConfigurationActionExecuter.java:62)org.gradle.execution.DefaultTasksBuildExecutionAction.configure(DefaultTasksBuildExecutionAction.java:48)org.gradle.execution.DefaultBuildConfigurationActionExecuter.configure(DefaultBuildConfigurationActionExecuter.java:49)org.gradle.execution.DefaultBuildConfigurationActionExecuter.lambda$select$0(DefaultBuildConfigurationActionExecuter.java:36)org.gradle.execution.DefaultBuildConfigurationActionExecuter$$Lambda$1324.run()org.gradle.internal.Factories$1.create(Factories.java:31)org.gradle.internal.work.DefaultWorkerLeaseService.withReplacedLocks(DefaultWorkerLeaseService.java:345)org.gradle.api.internal.project.DefaultProjectStateRegistry$DefaultBuildProjectRegistry.withMutableStateOfAllProjects(DefaultProjectStateRegistry.java:197)org.gradle.api.internal.project.DefaultProjectStateRegistry$DefaultBuildProjectRegistry.withMutableStateOfAllProjects(DefaultProjectStateRegistry.java:190)org.gradle.execution.DefaultBuildConfigurationActionExecuter.select(DefaultBuildConfigurationActionExecuter.java:35)org.gradle.initialization.DefaultTaskExecutionPreparer.prepareForTaskExecution(DefaultTaskExecutionPreparer.java:42)org.gradle.initialization.VintageBuildModelController.lambda$scheduleRequestedTasks$1(VintageBuildModelController.java:81)org.gradle.initialization.VintageBuildModelController$$Lambda$1323.run()org.gradle.internal.model.StateTransitionController.lambda$inState$1(StateTransitionController.java:110)org.gradle.internal.model.StateTransitionController$$Lambda$181.get()org.gradle.internal.model.StateTransitionController.lambda$inState$2(StateTransitionController.java:125)org.gradle.internal.model.StateTransitionController$$Lambda$182.create()org.gradle.internal.work.DefaultSynchronizer.withLock(DefaultSynchronizer.java:44)org.gradle.internal.model.StateTransitionController.inState(StateTransitionController.java:121)org.gradle.internal.model.StateTransitionController.inState(StateTransitionController.java:109)org.gradle.initialization.VintageBuildModelController.scheduleRequestedTasks(VintageBuildModelController.java:81)org.gradle.internal.build.DefaultBuildLifecycleController$DefaultWorkGraphBuilder.addRequestedTasks(DefaultBuildLifecycleController.java:242)org.gradle.internal.buildtree.DefaultBuildTreeWorkPreparer$$Lambda$1315.accept()org.gradle.internal.build.DefaultBuildLifecycleController.lambda$populateWorkGraph$4(DefaultBuildLifecycleController.java:143)org.gradle.internal.build.DefaultBuildLifecycleController$$Lambda$1322.accept()org.gradle.internal.build.DefaultBuildWorkPreparer.populateWorkGraph(DefaultBuildWorkPreparer.java:41)org.gradle.internal.build.BuildOperationFiringBuildWorkPreparer$PopulateWorkGraph.populateTaskGraph(BuildOperationFiringBuildWorkPreparer.java:138)org.gradle.internal.build.BuildOperationFiringBuildWorkPreparer$PopulateWorkGraph.run(BuildOperationFiringBuildWorkPreparer.java:89)org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:29)org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:26)org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)org.gradle.internal.operations.DefaultBuildOperationRunner.run(DefaultBuildOperationRunner.java:47)org.gradle.internal.operations.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:68)org.gradle.internal.build.BuildOperationFiringBuildWorkPreparer.populateWorkGraph(BuildOperationFiringBuildWorkPreparer.java:66)org.gradle.internal.build.DefaultBuildLifecycleController.lambda$populateWorkGraph$5(DefaultBuildLifecycleController.java:143)org.gradle.internal.build.DefaultBuildLifecycleController$$Lambda$1321.run()org.gradle.internal.model.StateTransitionController.lambda$inState$1(StateTransitionController.java:110)org.gradle.internal.model.StateTransitionController$$Lambda$181.get()org.gradle.internal.model.StateTransitionController.lambda$inState$2(StateTransitionController.java:125)org.gradle.internal.model.StateTransitionController$$Lambda$182.create()org.gradle.internal.work.DefaultSynchronizer.withLock(DefaultSynchronizer.java:44)org.gradle.internal.model.StateTransitionController.inState(StateTransitionController.java:121)org.gradle.internal.model.StateTransitionController.inState(StateTransitionController.java:109)org.gradle.internal.build.DefaultBuildLifecycleController.populateWorkGraph(DefaultBuildLifecycleController.java:143)org.gradle.internal.build.DefaultBuildWorkGraphController$DefaultBuildWorkGraph.populateWorkGraph(DefaultBuildWorkGraphController.java:126)org.gradle.composite.internal.DefaultBuildController.populateWorkGraph(DefaultBuildController.java:71)org.gradle.composite.internal.DefaultIncludedBuildTaskGraph$DefaultBuildTreeWorkGraphBuilder.withWorkGraph(DefaultIncludedBuildTaskGraph.java:142)org.gradle.internal.buildtree.DefaultBuildTreeWorkPreparer.lambda$scheduleRequestedTasks$0(DefaultBuildTreeWorkPreparer.java:34)org.gradle.internal.buildtree.DefaultBuildTreeWorkPreparer$$Lambda$1314.accept()org.gradle.composite.internal.DefaultIncludedBuildTaskGraph$DefaultBuildTreeWorkGraph$1.run(DefaultIncludedBuildTaskGraph.java:170)org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:29)org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:26)org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)org.gradle.internal.operations.DefaultBuildOperationRunner.run(DefaultBuildOperationRunner.java:47)org.gradle.internal.operations.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:68)org.gradle.composite.internal.DefaultIncludedBuildTaskGraph$DefaultBuildTreeWorkGraph.scheduleWork(DefaultIncludedBuildTaskGraph.java:167)org.gradle.internal.buildtree.DefaultBuildTreeWorkPreparer.scheduleRequestedTasks(DefaultBuildTreeWorkPreparer.java:34)org.gradle.internal.buildtree.DefaultBuildTreeLifecycleController.lambda$doScheduleAndRunTasks$2(DefaultBuildTreeLifecycleController.java:89)org.gradle.internal.buildtree.DefaultBuildTreeLifecycleController$$Lambda$188.apply()org.gradle.composite.internal.DefaultIncludedBuildTaskGraph.withNewWorkGraph(DefaultIncludedBuildTaskGraph.java:101)org.gradle.internal.buildtree.DefaultBuildTreeLifecycleController.doScheduleAndRunTasks(DefaultBuildTreeLifecycleController.java:88)org.gradle.internal.buildtree.DefaultBuildTreeLifecycleController$$Lambda$184.get()org.gradle.internal.buildtree.DefaultBuildTreeLifecycleController.lambda$runBuild$4(DefaultBuildTreeLifecycleController.java:106)org.gradle.internal.buildtree.DefaultBuildTreeLifecycleController$$Lambda$185.get()org.gradle.internal.model.StateTransitionController.lambda$transition$5(StateTransitionController.java:166)org.gradle.internal.model.StateTransitionController$$Lambda$187.get()org.gradle.internal.model.StateTransitionController.doTransition(StateTransitionController.java:247)org.gradle.internal.model.StateTransitionController.lambda$transition$6(StateTransitionController.java:166)org.gradle.internal.model.StateTransitionController$$Lambda$186.create()org.gradle.internal.work.DefaultSynchronizer.withLock(DefaultSynchronizer.java:44)org.gradle.internal.model.StateTransitionController.transition(StateTransitionController.java:166)org.gradle.internal.buildtree.DefaultBuildTreeLifecycleController.runBuild(DefaultBuildTreeLifecycleController.java:103)org.gradle.internal.buildtree.DefaultBuildTreeLifecycleController.scheduleAndRunTasks(DefaultBuildTreeLifecycleController.java:69)org.gradle.tooling.internal.provider.ExecuteBuildActionRunner.run(ExecuteBuildActionRunner.java:31)org.gradle.launcher.exec.ChainingBuildActionRunner.run(ChainingBuildActionRunner.java:35)org.gradle.internal.buildtree.ProblemReportingBuildActionRunner.run(ProblemReportingBuildActionRunner.java:49)org.gradle.launcher.exec.BuildOutcomeReportingBuildActionRunner.run(BuildOutcomeReportingBuildActionRunner.java:65)org.gradle.tooling.internal.provider.FileSystemWatchingBuildActionRunner.run(FileSystemWatchingBuildActionRunner.java:136)org.gradle.launcher.exec.BuildCompletionNotifyingBuildActionRunner.run(BuildCompletionNotifyingBuildActionRunner.java:41)org.gradle.launcher.exec.RootBuildLifecycleBuildActionExecutor.lambda$execute$0(RootBuildLifecycleBuildActionExecutor.java:40)org.gradle.launcher.exec.RootBuildLifecycleBuildActionExecutor$$Lambda$177.apply()org.gradle.composite.internal.DefaultRootBuildState.run(DefaultRootBuildState.java:122)org.gradle.launcher.exec.RootBuildLifecycleBuildActionExecutor.execute(RootBuildLifecycleBuildActionExecutor.java:40)org.gradle.internal.buildtree.DefaultBuildTreeContext.execute(DefaultBuildTreeContext.java:40)org.gradle.launcher.exec.BuildTreeLifecycleBuildActionExecutor.lambda$execute$0(BuildTreeLifecycleBuildActionExecutor.java:65)org.gradle.launcher.exec.BuildTreeLifecycleBuildActionExecutor$$Lambda$116.apply()org.gradle.internal.buildtree.BuildTreeState.run(BuildTreeState.java:53)org.gradle.launcher.exec.BuildTreeLifecycleBuildActionExecutor.execute(BuildTreeLifecycleBuildActionExecutor.java:65)org.gradle.launcher.exec.RunAsBuildOperationBuildActionExecutor$3.call(RunAsBuildOperationBuildActionExecutor.java:61)org.gradle.launcher.exec.RunAsBuildOperationBuildActionExecutor$3.call(RunAsBuildOperationBuildActionExecutor.java:57)org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)org.gradle.launcher.exec.RunAsBuildOperationBuildActionExecutor.execute(RunAsBuildOperationBuildActionExecutor.java:57)org.gradle.launcher.exec.RunAsWorkerThreadBuildActionExecutor.lambda$execute$0(RunAsWorkerThreadBuildActionExecutor.java:36)org.gradle.launcher.exec.RunAsWorkerThreadBuildActionExecutor$$Lambda$115.create()org.gradle.internal.work.DefaultWorkerLeaseService.withLocks(DefaultWorkerLeaseService.java:249)org.gradle.internal.work.DefaultWorkerLeaseService.runAsWorkerThread(DefaultWorkerLeaseService.java:109)org.gradle.launcher.exec.RunAsWorkerThreadBuildActionExecutor.execute(RunAsWorkerThreadBuildActionExecutor.java:36)org.gradle.tooling.internal.provider.continuous.ContinuousBuildActionExecutor.execute(ContinuousBuildActionExecutor.java:110)org.gradle.tooling.internal.provider.SubscribableBuildActionExecutor.execute(SubscribableBuildActionExecutor.java:64)org.gradle.internal.session.DefaultBuildSessionContext.execute(DefaultBuildSessionContext.java:46)org.gradle.tooling.internal.provider.BuildSessionLifecycleBuildActionExecuter$ActionImpl.apply(BuildSessionLifecycleBuildActionExecuter.java:100)org.gradle.tooling.internal.provider.BuildSessionLifecycleBuildActionExecuter$ActionImpl.apply(BuildSessionLifecycleBuildActionExecuter.java:88)org.gradle.internal.session.BuildSessionState.run(BuildSessionState.java:69)org.gradle.tooling.internal.provider.BuildSessionLifecycleBuildActionExecuter.execute(BuildSessionLifecycleBuildActionExecuter.java:62)org.gradle.tooling.internal.provider.BuildSessionLifecycleBuildActionExecuter.execute(BuildSessionLifecycleBuildActionExecuter.java:41)org.gradle.tooling.internal.provider.StartParamsValidatingActionExecuter.execute(StartParamsValidatingActionExecuter.java:63)org.gradle.tooling.internal.provider.StartParamsValidatingActionExecuter.execute(StartParamsValidatingActionExecuter.java:31)org.gradle.tooling.internal.provider.SessionFailureReportingActionExecuter.execute(SessionFailureReportingActionExecuter.java:52)org.gradle.tooling.internal.provider.SessionFailureReportingActionExecuter.execute(SessionFailureReportingActionExecuter.java:40)org.gradle.tooling.internal.provider.SetupLoggingActionExecuter.execute(SetupLoggingActionExecuter.java:47)org.gradle.tooling.internal.provider.SetupLoggingActionExecuter.execute(SetupLoggingActionExecuter.java:31)org.gradle.launcher.cli.RunBuildAction.run(RunBuildAction.java:57)org.gradle.internal.Actions$RunnableActionAdapter.execute(Actions.java:210)org.gradle.launcher.cli.DefaultCommandLineActionFactory$ParseAndBuildAction.execute(DefaultCommandLineActionFactory.java:255)org.gradle.launcher.cli.DefaultCommandLineActionFactory$ParseAndBuildAction.execute(DefaultCommandLineActionFactory.java:226)org.gradle.launcher.cli.DebugLoggerWarningAction.execute(DebugLoggerWarningAction.java:82)org.gradle.launcher.cli.DebugLoggerWarningAction.execute(DebugLoggerWarningAction.java:30)org.gradle.launcher.cli.WelcomeMessageAction.execute(WelcomeMessageAction.java:96)org.gradle.launcher.cli.WelcomeMessageAction.execute(WelcomeMessageAction.java:40)org.gradle.launcher.cli.NativeServicesInitializingAction.execute(NativeServicesInitializingAction.java:44)org.gradle.launcher.cli.NativeServicesInitializingAction.execute(NativeServicesInitializingAction.java:26)org.gradle.launcher.cli.ExceptionReportingAction.execute(ExceptionReportingAction.java:41)org.gradle.launcher.cli.ExceptionReportingAction.execute(ExceptionReportingAction.java:26)org.gradle.launcher.cli.DefaultCommandLineActionFactory$WithLogging.execute(DefaultCommandLineActionFactory.java:357)org.gradle.launcher.Main.doAction(Main.java:35)org.gradle.launcher.bootstrap.EntryPoint.run(EntryPoint.java:50)jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)java.lang.reflect.Method.invoke(Method.java:566)org.gradle.launcher.bootstrap.ProcessBootstrap.runNoExit(ProcessBootstrap.java:60)org.gradle.launcher.bootstrap.ProcessBootstrap.run(ProcessBootstrap.java:37)jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)java.lang.reflect.Method.invoke(Method.java:566)org.gradle.launcher.GradleMain.main(GradleMain.java:34)```### Expected BehaviorWe don't waste time in String.format for a log statement that doesn't even get printed.### Current BehaviorSpending 25ms on something that is not needed### Context![image](https://user-images.githubusercontent.com/1418185/171276662-dac1957e-75e6-420c-ba14-a068509f8421.png)
"
20859,0,0,10,0,1,martinda,0,"title:Fix task name in lazy configuration doc description:### ContextThe task name in the first example in [Lazy Configuration - Working with files](https://docs.gradle.org/current/userguide/lazy_configuration.html#working_with_files_in_lazy_properties) is wrong. It says `gradle print` but when you run the example, it's `gradle generate`.### Contributor Checklist- [x] [Review Contribution Guidelines](https://github.com/gradle/gradle/blob/master/CONTRIBUTING.md)- [x] Make sure that all commits are [signed off](https://git-scm.com/docs/git-commit#Documentation/git-commit.txt---signoff) to indicate that you agree to the terms of [Developer Certificate of Origin](https://developercertificate.org/).- [x] Make sure all contributed code can be distributed under the terms of the [Apache License 2.0](https://github.com/gradle/gradle/blob/master/LICENSE), e.g. the code was written by yourself or the original code is licensed under [a license compatible to Apache License 2.0](https://apache.org/legal/resolved.html).- [x] Check [""Allow edit from maintainers"" option](https://help.github.com/articles/allowing-changes-to-a-pull-request-branch-created-from-a-fork/) in pull request so that additional changes can be pushed by Gradle team- [n/a] Provide integration tests (under `<subproject>/src/integTest`) to verify changes from a user perspective- [n/a] Provide unit tests (under `<subproject>/src/test`) to verify logic- [n/a] Update User Guide, DSL Reference, and Javadoc for public-facing changes- [n/a] Ensure that tests pass sanity check: `./gradlew sanityCheck`- [n/a] Ensure that tests pass locally: `./gradlew <changed-subproject>:quickTest`### Gradle Core Team Checklist- [ ] Verify design and implementation - [ ] Verify test coverage and CI build status- [ ] Verify documentation- [ ] Recognize contributor in release notes
"
20857,0,0,256,0,0,joffrey-bion,0,"title:Incorrect warning in ""Working with files"" documentation description:As [discussed on the forum](https://discuss.gradle.org/t/confusing-doc-on-working-with-files/42996), there are a couple warnings in the ""Working with files"" section of the doc, about using `new File()` with relative paths.In [Single files and directories](https://docs.gradle.org/current/userguide/working_with_files.html?&_ga=2.97871967.112824274.1653426566-1576328757.1650215366#sec:single_file_paths):> Never use new File(relative path) because this creates a path relative to the current working directory (CWD)In [File collections](https://docs.gradle.org/current/userguide/working_with_files.html?&_ga=2.97871967.112824274.1653426566-1576328757.1650215366#sec:file_collections):> Although the files() method accepts File instances, never use new File(relative path) with it because this creates a path relative to the current working directory (CWD)Given that the code snippets showcasing `file()` and `files()` both include a call to those functions with a `new File(relativePath)` as argument, I believe those warnings should be rephrased to include that it's ok to pass `File` objects with relative paths to those functions, and related functions like `from()`.
"
20852,0,0,15,0,0,digulla,0,"title:Typo in docs: version should be versionRef. description:Typo in documentation https://docs.gradle.org/current/userguide/platforms.html#sec:multiple    library(""junit-api"", ""org.junit.jupiter"", ""junit-jupiter-api"").version(junit5)should be    library(""junit-api"", ""org.junit.jupiter"", ""junit-jupiter-api"").versionRef(junit5)This is a very confusing error since the build will fail because of a missing dependency (it will try to load ""org.junit.jupiter:junit-jupiter-api:junit"", i.e. the alias instead of the version number).
"
20850,0,0,0,0,0,M-Lazeba,0,"title:In tooling API FileDownloadResult is successful for HTTP 404 description:<!--- Provide a brief summary of the issue in the title above -->Recently added to TAPI events `FileDownloadResult` does not provide any error in case of `404` HTTP response.It just reports 0 bytes as downloaded but no operation failure.From inspecting the code I see it is because of how HttpClientHelper.processResponse is implemented, it returns `null` for `response.wasMissing()` and then it skips any processing in `AbstractExternalResourceAccessor.withContent`### Expected BehaviorIn case of 404 HTTP response operation result should be an instance of `FailureResult` with proper `Failure` included.### Current BehaviorResult is not an instance of `FailureResult` implying successful operation.### ContextI am working on surfacing downloads information during sync and build in Android Studio and stumbled on this. I can currently workaround this by checking `bytesDownloaded` which will be 0 in case of `404`, but would be nice to have proper reporting.Gradle version: 7.4
"
20849,0,371,300,0,0,ZacSweers,0,"title:It's not possible to safely use ExecOperations in a ValueSource without invalidating configuration cache description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues--><!--- Provide a brief summary of the issue in the title above -->### Expected Behavior<!--- Tell us what should happen -->Using `ExecOperations` with a changing value inside a `ValueSource` should not inherently invalidate configuration cache (or there should be a safe way to use it)### Current Behavior<!--- Tell us what happens instead of the expected behavior -->It invalidates configuration cache, regardless of what the `ValueSource` itself ultimately returns.### Context<!--- How has this issue affected you? What are you trying to accomplish? --><!--- Providing context helps us come up with a solution that is most useful in the real world -->The 7.5-rc-1 docs recommend using a custom `ValueSource` to implement custom value computation without invalidating configuration cache. This is pretty useful with the change to monitor all exec operations as configuration cache invalidations. We use a gradle-provided set of build tags and custom values for Gradle enterprise build scans, including one for `git status --porcelain`. With Gradle 7.5-rc-1 however, I noticed that this invalidated configuration cache if a new file was modified (thus changing that output).<img width=""1094"" alt=""image"" src=""https://user-images.githubusercontent.com/1361086/170167627-5ca3632f-f42d-4d8c-a493-d5e772e91a5f.png"">After looking at the [7.5-rc-1 release notes](https://docs.gradle.org/7.5-rc-1/release-notes.html#configuration-cache-improvements), my understanding was this should be workaround-able by implementing a custom `ValueSource` that returns something with the same equals/hashcode value. This is implemented in the below-linked PR. However, it seems that _any_ use of `ExecOperations` invalidates it. So I'm not sure how to chain process exec results into a `ValueSource` without breaking configuration caching. We use this for a whole host of git metadata, so this seems almost like a regression as my understanding is I can't use `Process` directly in these either without the same problem.### Steps to Reproduce <!---Provide a self-contained example project as an attached archive or a Github project.You can use the following template with a Gradle GitHub action set up to showcase your problem: https://github.com/gradle/gradle-issue-reproducerIn the rare cases where this is infeasible, we will also accept a detailed set of instructions.-->Reuse the logic from [this PR](https://github.com/slackhq/slack-gradle-plugin/pull/31) in `ProcessExtensions.kt` anywhere in configuration like so```kotlinval gitStatus =  executeBlockingWithResult(    providers,    projectDir,    listOf(""git"", ""status"", ""--porcelain""),    isRelevantToConfigurationCache = false  )```Observe that even though it's using a custom `ValueSource`, it still invalidates the configuration cache.```$ ./gradlew helpConfiguration cache is an incubating feature.Calculating task graph as configuration cache cannot be reused because output of the external process 'git' has changed.```### Your Environment<!--- Include as many relevant details about the environment you experienced the bug in --><!--- A build scan https://scans.gradle.com/get-started is ideal -->Build scan URL:
"
20847,0,418,173,0,0,Tapchicoma,0,"title:Plugin variants are ignored when plugin is added as buildSrc common dependency description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues--><!--- Provide a brief summary of the issue in the title above -->### Expected BehaviorWhen plugin with variants is added as a common dependency in `buildSrc` module, related variant is selected:```ktplugins {   `kotlin-dsl`}dependencies {    implementation ""org.jetbrains.kotlin:kotlin-gradle-plugin:1.7.0-RC""}```And in project with Gradle version 7+ - Gradle should select `gradle70` variant.### Current BehaviorGradle selects main plugin variant which doesn't have `GRADLE_PLUGIN_API_VERSION_ATTRIBUTE` attribute.It is possible to workaround by adding such attribute to all resolvable configurations:```ktconfigurations.configureEach {    if (isCanBeResolved) {        attributes {            @Suppress(""UnstableApiUsage"")            attribute(GradlePluginApiVersion.GRADLE_PLUGIN_API_VERSION_ATTRIBUTE, project.objects.named(GradleVersion.current().version))        }    }}```### ContextUser may assume build is using latest plugin variant while it is not. If plugin main variant has only basic functionality - it could lead to build performance regression.### Steps to Reproduce - Create a basic project with `buildSrc` and a code above and latest Gradle version- check info logs for `Using Kotlin Gradle plugin gradle70 variant` line, while actually it will be `Using Kotlin Gradle plugin main variant`
"
20846,0,170,159,0,0,dreis2211,0,"title:Test task avoidance is not working since Gradle 7.4.x description:Hi,it seems that the task avoidance for tests is not working anymore since Gradle 7.4.x### Expected BehaviorTest tasks are not eagerly created### Current BehaviorTest tasks are eagerly created### Context<!--- How has this issue affected you? What are you trying to accomplish? --><!--- Providing context helps us come up with a solution that is most useful in the real world -->### Steps to Reproduce Have something like the following in your project```tasks.withType(Test).configureEach {    println ""Configure Tests""    testLogging {        showStandardStreams = true        exceptionFormat = 'full'    }}````Configure Tests` should not be printed when the test tasks are not run, but it is. For simpler reproduction: https://github.com/dreis2211/gradle-task-avoidance-bugThis seems to be caused by the relatively new `testResultsElementsForTest` infrastructure added in #18834, but I haven't looked too deep yet.Cheers,Christoph
"
20845,1,3269,14,0,0,manymonsters,0,"title:Jacoco reports error after changing Gradle version description:When I was using Gradle 7.2, there was no problem with code coverage, but after I recently upgraded Gradle to 7.3.3, the .ec files are all 0 Bytes### Current BehaviorThrowing exception when writing .ec file### Steps to Reproduce This problem only occurs after upgrading the Gradle version to 7.3.3. Before the 7.3.3 version, there was no problem. I only upgraded Gradle.### Your EnvironmentJacoco Version : 0.8.2Gradle Version : 7.3.3### Error info when writing .ec file```java.lang.reflect.InvocationTargetException        at java.lang.reflect.Method.invoke(Native Method)        at com.monster.test.appium.espresso.TestApplication.onTestFinished(TestApplication.kt:60)        at com.monster.test.appium.espresso.jacoco.UITestBroadcastReceiver.onReceive(UITestBroadcastReceiver.kt:19)        at android.app.LoadedApk$ReceiverDispatcher$Args.lambda$getRunnable$0$LoadedApk$ReceiverDispatcher$Args(LoadedApk.java:1558)        at android.app.-$$Lambda$LoadedApk$ReceiverDispatcher$Args$_BumDX2UKsnxLVrE6UJsJZkotuA.run(Unknown Source:2)        at android.os.Handler.handleCallback(Handler.java:883)        at android.os.Handler.dispatchMessage(Handler.java:100)        at android.os.Looper.loop(Looper.java:224)        at com.monster.libcrashhandler.CrashHandler.setCrashHandler$lambda-6(CrashHandler.kt:230)        at com.monster.libcrashhandler.CrashHandler.$r8$lambda$QnsRQAjU9rzH-m6zacxgeGWFy5Y(Unknown Source:0)        at com.monster.libcrashhandler.CrashHandler$$ExternalSyntheticLambda1.run(Unknown Source:2)        at android.os.Handler.handleCallback(Handler.java:883)        at android.os.Handler.dispatchMessage(Handler.java:100)        at android.os.Looper.loop(Looper.java:224)        at android.app.ActivityThread.main(ActivityThread.java:7562)        at java.lang.reflect.Method.invoke(Native Method)        at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:539)        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:950)     Caused by: java.lang.IllegalStateException: JaCoCo agent not started.        at org.jacoco.agent.rt.internal_3570298.Agent.getInstance(Agent.java:77)        at org.jacoco.agent.rt.RT.getAgent(RT.java:33)        at java.lang.reflect.Method.invoke(Native Method)         at com.monster.test.appium.espresso.TestApplication.onTestFinished(TestApplication.kt:60)         at com.monster.test.appium.espresso.jacoco.UITestBroadcastReceiver.onReceive(UITestBroadcastReceiver.kt:19)         at android.app.LoadedApk$ReceiverDispatcher$Args.lambda$getRunnable$0$LoadedApk$ReceiverDispatcher$Args(LoadedApk.java:1558)         at android.app.-$$Lambda$LoadedApk$ReceiverDispatcher$Args$_BumDX2UKsnxLVrE6UJsJZkotuA.run(Unknown Source:2)         at android.os.Handler.handleCallback(Handler.java:883)         at android.os.Handler.dispatchMessage(Handler.java:100)         at android.os.Looper.loop(Looper.java:224)         at com.monster.libcrashhandler.CrashHandler.setCrashHandler$lambda-6(CrashHandler.kt:230)         at com.monster.libcrashhandler.CrashHandler.$r8$lambda$QnsRQAjU9rzH-m6zacxgeGWFy5Y(Unknown Source:0)         at com.monster.libcrashhandler.CrashHandler$$ExternalSyntheticLambda1.run(Unknown Source:2)         at android.os.Handler.handleCallback(Handler.java:883)         at android.os.Handler.dispatchMessage(Handler.java:100)         at android.os.Looper.loop(Looper.java:224)         at android.app.ActivityThread.main(ActivityThread.java:7562)         at java.lang.reflect.Method.invoke(Native Method)         at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:539)         at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:950) ```
"
20842,1,0,0,0,0,emp3826,0,"title:use gradle build in github actions but failed because of failing disabling deamon description:use gradle build in github actions but failedthe daemon was disappeared but neither use --no-daemon  nor org.gradle.daemon=false in properties file could stop the daemon### Expected Behaviorbuild successfully### Current BehaviorGradle build daemon disappeared unexpectedly (it may have been killed or may have crashed)### Contextstop daemon more conveniently### Steps to Reproduce https://github.com/U1F605/vmessocketForAndroid/actions/runs/2366898738### Your Environmentgithub actions ubuntu-latest
"
20839,1,292,21,0,0,yevhenii-nadtochii,0,"title:Intellij IDEA reports a fake error when accessing `libs` extension from `plugins` block description:### Expected BehaviorNothing is reported for the code below:```kotlinplugins {    java    alias(libs.plugins.protobuf)}```### Current BehaviorIDEA reports an error:```kotlinplugins {    java    alias(libs.plugins.protobuf)          ^^^^    // 'val Project.libs: LibrariesForLibs' can't be called in this context by implicit receiver.     // Use the explicit one if necessary}```But the script is successfully compiled and executed.### ContextMigration to a brand-new [version catalog](https://docs.gradle.org/current/userguide/platforms.html), which became stable in Gradle 7.4.2.### Steps to reproduce1. Declare a version catalog with a plugin.2. Apply this plugin using the generated `libs` extension.### Your EnvironmentIntelliJ IDEA 2022.1.1 (Ultimate Edition) (Build #IU-221.5591.52, built on May 10, 2022)Gradle 7.4.2macOS Monterey, v12.4
"
20837,0,14830,300,0,0,JornVernee,0,"title:""Error while evaluating property 'javaVersion' of task ':compileJava' > No value present"" when using relative javac path description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues-->When using a relative path to a `javac` executable on Linux, the build fails with the following stacktrace:Stack trace (click to unfold)```* Exception is:org.gradle.api.tasks.TaskExecutionException: Execution failed for task ':app:compileJava'.        at org.gradle.api.internal.tasks.execution.CatchExceptionTaskExecuter.execute(CatchExceptionTaskExecuter.java:38)        at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.executeTask(EventFiringTaskExecuter.java:77)        at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.call(EventFiringTaskExecuter.java:55)        at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.call(EventFiringTaskExecuter.java:52)        at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)        at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)        at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)        at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)        at org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)        at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter.execute(EventFiringTaskExecuter.java:52)        at org.gradle.execution.plan.LocalTaskNodeExecutor.execute(LocalTaskNodeExecutor.java:74)        at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$InvokeNodeExecutorsAction.execute(DefaultTaskExecutionGraph.java:333)        at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$InvokeNodeExecutorsAction.execute(DefaultTaskExecutionGraph.java:320)        at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$BuildOperationAwareExecutionAction.execute(DefaultTaskExecutionGraph.java:313)        at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$BuildOperationAwareExecutionAction.execute(DefaultTaskExecutionGraph.java:299)        at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.lambda$run$0(DefaultPlanExecutor.java:143)        at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.execute(DefaultPlanExecutor.java:227)        at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.executeNextNode(DefaultPlanExecutor.java:218)        at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.run(DefaultPlanExecutor.java:140)        at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)        at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)Caused by: org.gradle.api.internal.tasks.properties.PropertyEvaluationException: Error while evaluating property 'javaVersion' of task ':app:compileJava'        at org.gradle.api.internal.tasks.properties.InputParameterUtils.prepareInputParameterValue(InputParameterUtils.java:33)        at org.gradle.api.internal.tasks.execution.TaskExecution.lambda$visitRegularInputs$1(TaskExecution.java:315)        at org.gradle.internal.execution.fingerprint.impl.DefaultInputFingerprinter$InputCollectingVisitor.visitInputProperty(DefaultInputFingerprinter.java:106)        at org.gradle.api.internal.tasks.execution.TaskExecution.visitRegularInputs(TaskExecution.java:315)        at org.gradle.internal.execution.fingerprint.impl.DefaultInputFingerprinter.fingerprintInputProperties(DefaultInputFingerprinter.java:61)        at org.gradle.internal.execution.steps.CaptureStateBeforeExecutionStep.captureExecutionStateWithOutputs(CaptureStateBeforeExecutionStep.java:193)        at org.gradle.internal.execution.steps.CaptureStateBeforeExecutionStep.lambda$captureExecutionState$1(CaptureStateBeforeExecutionStep.java:141)        at org.gradle.internal.execution.steps.BuildOperationStep$1.call(BuildOperationStep.java:37)        at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)        at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)        at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)        at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)        at org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)        at org.gradle.internal.execution.steps.BuildOperationStep.operation(BuildOperationStep.java:34)        at org.gradle.internal.execution.steps.CaptureStateBeforeExecutionStep.captureExecutionState(CaptureStateBeforeExecutionStep.java:130)        at org.gradle.internal.execution.steps.CaptureStateBeforeExecutionStep.lambda$execute$0(CaptureStateBeforeExecutionStep.java:75)        at org.gradle.internal.execution.steps.CaptureStateBeforeExecutionStep.execute(CaptureStateBeforeExecutionStep.java:75)        at org.gradle.internal.execution.steps.CaptureStateBeforeExecutionStep.execute(CaptureStateBeforeExecutionStep.java:50)        at org.gradle.internal.execution.steps.SkipEmptyWorkStep.executeWithNoEmptySources(SkipEmptyWorkStep.java:249)        at org.gradle.internal.execution.steps.SkipEmptyWorkStep.executeWithNoEmptySources(SkipEmptyWorkStep.java:204)        at org.gradle.internal.execution.steps.SkipEmptyWorkStep.execute(SkipEmptyWorkStep.java:83)        at org.gradle.internal.execution.steps.SkipEmptyWorkStep.execute(SkipEmptyWorkStep.java:54)        at org.gradle.internal.execution.steps.RemoveUntrackedExecutionStateStep.execute(RemoveUntrackedExecutionStateStep.java:32)        at org.gradle.internal.execution.steps.RemoveUntrackedExecutionStateStep.execute(RemoveUntrackedExecutionStateStep.java:21)        at org.gradle.internal.execution.steps.legacy.MarkSnapshottingInputsStartedStep.execute(MarkSnapshottingInputsStartedStep.java:38)        at org.gradle.internal.execution.steps.LoadPreviousExecutionStateStep.execute(LoadPreviousExecutionStateStep.java:43)        at org.gradle.internal.execution.steps.LoadPreviousExecutionStateStep.execute(LoadPreviousExecutionStateStep.java:31)        at org.gradle.internal.execution.steps.AssignWorkspaceStep.lambda$execute$0(AssignWorkspaceStep.java:40)        at org.gradle.api.internal.tasks.execution.TaskExecution$4.withWorkspace(TaskExecution.java:287)        at org.gradle.internal.execution.steps.AssignWorkspaceStep.execute(AssignWorkspaceStep.java:40)        at org.gradle.internal.execution.steps.AssignWorkspaceStep.execute(AssignWorkspaceStep.java:30)        at org.gradle.internal.execution.steps.IdentityCacheStep.execute(IdentityCacheStep.java:37)        at org.gradle.internal.execution.steps.IdentityCacheStep.execute(IdentityCacheStep.java:27)        at org.gradle.internal.execution.steps.IdentifyStep.execute(IdentifyStep.java:44)        at org.gradle.internal.execution.steps.IdentifyStep.execute(IdentifyStep.java:33)        at org.gradle.internal.execution.impl.DefaultExecutionEngine$1.execute(DefaultExecutionEngine.java:76)        at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeIfValid(ExecuteActionsTaskExecuter.java:144)        at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.execute(ExecuteActionsTaskExecuter.java:133)        at org.gradle.api.internal.tasks.execution.CleanupStaleOutputsExecuter.execute(CleanupStaleOutputsExecuter.java:77)        at org.gradle.api.internal.tasks.execution.FinalizePropertiesTaskExecuter.execute(FinalizePropertiesTaskExecuter.java:46)        at org.gradle.api.internal.tasks.execution.ResolveTaskExecutionModeExecuter.execute(ResolveTaskExecutionModeExecuter.java:51)        at org.gradle.api.internal.tasks.execution.SkipTaskWithNoActionsExecuter.execute(SkipTaskWithNoActionsExecuter.java:57)        at org.gradle.api.internal.tasks.execution.SkipOnlyIfTaskExecuter.execute(SkipOnlyIfTaskExecuter.java:56)        at org.gradle.api.internal.tasks.execution.CatchExceptionTaskExecuter.execute(CatchExceptionTaskExecuter.java:36)        at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.executeTask(EventFiringTaskExecuter.java:77)        at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.call(EventFiringTaskExecuter.java:55)        at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.call(EventFiringTaskExecuter.java:52)        at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)        at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)        at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)        at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)        at org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)        at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter.execute(EventFiringTaskExecuter.java:52)        at org.gradle.execution.plan.LocalTaskNodeExecutor.execute(LocalTaskNodeExecutor.java:74)        at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$InvokeNodeExecutorsAction.execute(DefaultTaskExecutionGraph.java:333)        at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$InvokeNodeExecutorsAction.execute(DefaultTaskExecutionGraph.java:320)        at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$BuildOperationAwareExecutionAction.execute(DefaultTaskExecutionGraph.java:313)        at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$BuildOperationAwareExecutionAction.execute(DefaultTaskExecutionGraph.java:299)        at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.lambda$run$0(DefaultPlanExecutor.java:143)        at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.execute(DefaultPlanExecutor.java:227)        at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.executeNextNode(DefaultPlanExecutor.java:218)        at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.run(DefaultPlanExecutor.java:140)        at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)        at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)Caused by: java.util.NoSuchElementException: No value present        at org.gradle.jvm.toolchain.internal.JavaToolchainQueryService.query(JavaToolchainQueryService.java:74)        at org.gradle.jvm.toolchain.internal.JavaToolchainQueryService.lambda$findMatchingToolchain$0(JavaToolchainQueryService.java:62)        at org.gradle.jvm.toolchain.internal.JavaToolchainQueryService.lambda$findMatchingToolchain$1(JavaToolchainQueryService.java:62)        at org.gradle.api.internal.provider.DefaultProvider.calculateOwnValue(DefaultProvider.java:72)        at org.gradle.api.internal.provider.AbstractMinimalProvider.calculateValue(AbstractMinimalProvider.java:103)        at org.gradle.api.internal.provider.TransformBackedProvider.calculateOwnValue(TransformBackedProvider.java:64)        at org.gradle.api.internal.provider.AbstractMinimalProvider.get(AbstractMinimalProvider.java:84)        at org.gradle.api.tasks.compile.JavaCompile.getJavaVersion(JavaCompile.java:318)        at org.gradle.api.tasks.compile.JavaCompile_Decorated.getJavaVersion(Unknown Source)        at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)        at org.gradle.api.internal.tasks.properties.bean.AbstractNestedRuntimeBeanNode$BeanPropertyValue$1$1.create(AbstractNestedRuntimeBeanNode.java:77)        at org.gradle.internal.deprecation.DeprecationLogger.whileDisabled(DeprecationLogger.java:244)        at org.gradle.api.internal.tasks.properties.bean.AbstractNestedRuntimeBeanNode$BeanPropertyValue$1.get(AbstractNestedRuntimeBeanNode.java:73)        at com.google.common.base.Suppliers$NonSerializableMemoizingSupplier.get(Suppliers.java:167)        at org.gradle.api.internal.tasks.properties.bean.AbstractNestedRuntimeBeanNode$BeanPropertyValue.call(AbstractNestedRuntimeBeanNode.java:133)        at org.gradle.util.internal.GUtil.uncheckedCall(GUtil.java:458)        at org.gradle.util.internal.DeferredUtil.unpackNestableDeferred(DeferredUtil.java:83)        at org.gradle.util.internal.DeferredUtil.unpack(DeferredUtil.java:57)        at org.gradle.util.internal.DeferredUtil.unpackOrNull(DeferredUtil.java:49)        at org.gradle.api.internal.tasks.properties.InputParameterUtils.prepareInputParameterValue(InputParameterUtils.java:39)        at org.gradle.api.internal.tasks.properties.InputParameterUtils.prepareInputParameterValue(InputParameterUtils.java:31)        ... 69 more```</details>### Expected BehaviorThe build should finish successfully, or a more informative error message should be printed (it took several hours to figure out that the relative path was the problem).### Current BehaviorThe following error is displayed:```* What went wrong:Execution failed for task ':app:compileJava'.> Error while evaluating property 'javaVersion' of task ':app:compileJava'   > No value present```### ContextTrying to build a project with a custom `javac` executable (since JDK 19 is not currently supported for running gradle)Specifically, building `jextract` with github actions: https://github.com/JornVernee/jextract/runs/6526298731?check_suite_focus=true#step:9:27Ended up working around this by passing an absolute path instead.### Steps to Reproduce - create a basic project with `gradle init`, I've just used all default settings- in `app/build.gradle` add the java plugin and a `compileJava` task like so:```plugins {    // Apply the application plugin to add support for building a CLI application in Java.    id 'application'    id 'java' // <-----}...compileJava {    options.fork = true    options.forkOptions.executable = ""${jdk_home}/bin/javac""}```- Get a JDK in a relative path, for instance:```# in the project root dir:$ mkdir deps$ wget -O deps/jdk.tar.gz https://download.oracle.com/java/18/latest/jdk-18_linux-x64_bin.tar.gz$ tar -xvf deps/jdk.tar.gz -C deps```  - Run `./gradlew -Pjdk_home=./deps/<jdk folder> clean :app:compileJava`- Switch to an absolute path and observe that it works in that case. For instance: `./gradlew -Pjdk_home=""$(realpath ./deps/<jdk folder>)"" clean :app:compileJava`### Your Environment- using Linux (I'm using Ubuntu 20.04 WSL). There doesn't seem to be an issue on Windows.- using gradle 7.4.2
"
20824,0,895,17,0,0,gavra0,0,"title:Buildscript jars are not keeping their original compression description:Using the attached [cache-compression.zip](https://github.com/gradle/gradle/files/8715265/cache-compression.zip) project, and running `./gradlew help`, the compression of `myJar.jar` is not maintained. E.g:```gavra@gavra-linux-top:~/projects/cache-compression$ zipinfo myJar.jar Archive:  myJar.jarZip file size: 465 bytes, number of entries: 1-rw-r--r--  3.0 unx      291 bx stor 22-May-18 10:55 build.gradle1 file, 291 bytes uncompressed, 291 bytes compressed:  0.0%gavra@gavra-linux-top:~/projects/cache-compression$ find ~/.gradle/caches/ -name myJar.jar/usr/local/google/home/gavra/.gradle/caches/jars-9/fd440d87bd09d4901d22d1d60c379d2e/myJar.jargavra@gavra-linux-top:~/projects/cache-compression$ zipinfo /usr/local/google/home/gavra/.gradle/caches/jars-9/fd440d87bd09d4901d22d1d60c379d2e/myJar.jarArchive:  /usr/local/google/home/gavra/.gradle/caches/jars-9/fd440d87bd09d4901d22d1d60c379d2e/myJar.jarZip file size: 434 bytes, number of entries: 1-rw----     2.0 fat      291 bl defN 80-Feb-01 00:00 build.gradle1 file, 291 bytes uncompressed, 296 bytes compressed:  -1.7%```This prevents Gradle plugins from shipping data that can be memory-mapped, to avoid loading it into memory.
"
20820,0,1516,5,0,0,antohaby,0,"title:Provider gets evaluated twice with configuration cache enabled description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues-->A Gradle Task with some field of type `Provider<*>` get evaluated twice if Configuration Cache is enabled.### Expected Behavior`Provider` gets evaluated only once.### ContextI want to delay the time-expensive evaluation of some data. Either during task execution (when configuration cache isn't enabled) or capture it in configuration cache and then reuse cached value during execution.### Steps to Reproduce ```kotlin// build.gradle.ktsabstract class MyTask : DefaultTask() {    private val prop = project.provider {        println(""Expensive data calculation"")        ""data""    }    @TaskAction    fun action() {        println(""Results: ${prop.get()}"")    }}val myTask by tasks.registering(MyTask::class)```Executing this task for the first time shows that `prop` gets evaluated twice: during configuration phase and execution phase```$ ./gradlew myTask  --configuration-cache --rerun-tasksConfiguration cache is an incubating feature.Calculating task graph as no configuration cache is available for tasks: myTaskExpensive data calculation> Task :myTaskExpensive data calculationResults: data```Executing this task second time shows that `prop` is recovered from cache and thus no evaluation happened.```$ ./gradlew myTask  --configuration-cache --rerun-tasks                Configuration cache is an incubating feature.Reusing configuration cache.> Task :myTaskResults: data```<!---Provide a self-contained example project as an attached archive or a Github project.You can use the following template with a Gradle GitHub action set up to showcase your problem: https://github.com/gradle/gradle-issue-reproducerIn the rare cases where this is infeasible, we will also accept a detailed set of instructions.-->### WorkaroundKotlin `lazy` delegate works as expected. Although gradle configuration cache got a bit polluted with internal state of `Lazy`.```kotlinabstract class MyTask : DefaultTask() {    private val prop by lazy {        println(""Expensive data calculation"")        ""data""    }    @TaskAction    fun action() {        println(""Results: $prop"")    }}val myTask by tasks.registering(MyTask::class)```1st execution:```$ ./gradlew myTask  --configuration-cache --rerun-tasksConfiguration cache is an incubating feature.Calculating task graph as configuration cache cannot be reused because file 'build.gradle.kts' has changed.Expensive data calculation> Task :myTaskResults: data```2nd execution:```$ ./gradlew myTask  --configuration-cache --rerun-tasksConfiguration cache is an incubating feature.Reusing configuration cache.> Task :myTaskResults: data```### EnvironmentGradle 7.4.2
"
20813,0,0,222,0,1,h0tk3y,0,"title:`CachingJvmMetadataDetector` caches metadata of invalid installations for the lifetime of the daemon, not build description:`CachingJvmMetadataDetector` is supposed to store the JVM installation metadata from detected JVM installations. However, some installations that the underlying detector probes may turn out invalid due to failures to run the Java executable or incorrect output. The current implementation stores the failed results in the cache, too. This may lead to false negative JVM toolchain detection in consecutive builds if the toolchain was incorrect at first and then the user fixed the issue.### Expected BehaviorIf a JVM installation was considered invalid on one build, the detector tries to probe it in the next build again, if requested, because the user might have fixed the issue with the installation.### Current BehaviorThe `FailureInstallationMetadata` instance is stored in the cache for the lifetime of the Gradle daemon.### Steps to Reproduce * Add a path to an invalid or broken JDK to `org.gradle.java.installations.paths`    * For example, do `chmod -x bin/java`* Run `./gradlew javaToolChains`, making sure that the build is running in a Gradle daemon* Observe the invalid JDK listed in the outputs* ""Fix"" the JDK    * For example, replace the contents with a correct JDK* Using the same daemon, run `./gradlew javaToolChains` again* The current implementation will still report the JDK as invalid, with the same failure
"
20812,0,0,251,0,1,ghale,0,"title:Make fallback safe when hashing zip files on JDK < 11 description:This fixes issues where certain specialized hashers (manifest file hasher, properties file hasher, line ending normalization hasher) choose to fallback to a delegate hasher under certain circumstances.  On JDK < 11, we use a zip stream that does not support reading the contents of an entry more than once.To support this, we create a zip entry that caches its contents and if we fail to hash the stream, we fallback to the delegate hasher with the caching zip entry, avoiding a second read.  This only occurs when processing zip files on JDK < 11.  If we encounter a file larger than an arbitrary limit (10mb) we simply do not attempt to hash it with the specialized hasher and immediately pass it on to the delegate.Fixes #20708 
"
20808,0,0,7,0,0,markslater,0,"title:GitHub scheduled ""Code scanning - action"" runs on forks description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues--><!--- Provide a brief summary of the issue in the title above -->### Expected BehaviorScheduled GitHub actions should not execute on forks because it uses up contributors' GitHub CI/CD credit.See discussion about solving this problem [here](https://github.community/t/do-not-run-cron-workflows-in-forks/17636/3).### Current BehaviorThe ""Code scanning - action"" runs every day on my fork of `gradle/gradle`### ContextHaving recently fetched latest from upstream, I get notification of [a (failing) GitHub action on master](https://github.com/markslater/gradle/actions) every day.  The ""Code scanning - action"" runs for ~20 minutes using up the credit in my free tier GitHub account.### Steps to Reproduce Fork `grade/gradle`.  Wait for 24 hours.### Your EnvironmentN/A
"
20800,1,693,273,1,0,bamboo,0,"title:Misdetected cycle on combination of `finalizedBy` and `mustRunAfter` constraints description:The following example reconstructed from a real project will get Gradle to fail due to a _Misdetected cycle between :removeContainer and :dockerTest. Help us by reporting this to https://github.com/gradle/gradle/issues/2293_.```            tasks {                register(""dockerTest"") {                    dependsOn(""dockerUp"")     // dependsOn createContainer mustRunAfter removeContainer                    finalizedBy(""dockerStop"") // dependsOn removeContainer                }                register(""dockerUp"") {                    dependsOn(""createContainer"")                }                register(""dockerStop"") {                    dependsOn(""removeContainer"")                }                register(""createContainer"") {                    mustRunAfter(""removeContainer"")                }                register(""removeContainer"") {                }            }```## Expected BehaviorA dependency of a finalizer must not run until it is known to be needed by something else that should run. So if the dependency is only required by a finalizer, then it should not start until the finalizer is ready to start (ie the finalized task has completed). But if the dependency is also required by some node reachable from the command-line tasks, then it should start as soon as its dependencies are ready. Or if the dependency is required by multiple finalizers, then it should not start until one of those finalizer is ready to start.
"
20791,0,369,0,0,0,kostya3264,0,"title:Gradle Module Metadata should not have constraint with null version description:<!--- Provide a brief summary of the issue in the title above -->### Expected BehaviorIf there is  at least one  dependency constraint without any version,  Gradle Module Metadata should not be generated. Validation should fail (based on the documentation https://github.com/gradle/gradle/blob/master/subprojects/docs/src/docs/design/gradle-module-metadata-latest-specification.md#variants-value)### Current BehaviorThe Gradle Module Metadata can have  a dependency  constraint without any version. Validation fails only if all constraints don't have a version.### ContextWe are trying  to add  a library which contains dependency constraint with Null version. Our build is failing with the following exception:```  Caused by: org.gradle.internal.resolve.ModuleVersionResolveException: Could not resolve {lib_with_incorrect_dep_constraint}.  Required by:     project {project-name}  Caused by: java.lang.NullPointerException```Is there any way to suppress reading Gradle Module Metadata file from dependency?### Steps to Reproduce Create a constraints section in build.gradle with several  dependencies, at least one of them should have a version, the other one should be without any version (the order doesn't matter), something like this```dependencies {      constraints {        implementation 'commons-io:commons-io'        implementation 'joda-time:joda-time:2.9.9'    }}```### Your EnvironmentGradle 6.9.2
"
20787,1,24642,300,0,0,ZacSweers,0,"title:ProviderFactory#exec in 7.5-rc-1 fails with simple args input description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues--><!--- Provide a brief summary of the issue in the title above -->### Expected Behavior<!--- Tell us what should happen -->I expect this to work### Current Behavior<!--- Tell us what happens instead of the expected behavior -->Even a simple snippet results in an exception at runtime from Gradle internals### Context<!--- How has this issue affected you? What are you trying to accomplish? --><!--- Providing context helps us come up with a solution that is most useful in the real world -->Trying to use the new exec provider APIs in 7.5### Steps to Reproduce <!---Provide a self-contained example project as an attached archive or a Github project.You can use the following template with a Gradle GitHub action set up to showcase your problem: https://github.com/gradle/gradle-issue-reproducerIn the rare cases where this is infeasible, we will also accept a detailed set of instructions.-->```kotlinval gitVersion = providers.exec {  args = listOf(""git"", ""--version"")  workingDir = rootDir}.standardOutput.asText.get()println(""Git version is $gitVersion"")```Adding this to your build file will result in this failure at configuration time```gw help --stacktraceType-safe project accessors is an incubating feature.FAILURE: Build failed with an exception.* Where:Build file '/Users/zacsweers/dev/slack/oss/slack-gradle-plugin/build.gradle.kts' line: 265* What went wrong:Could not isolate value org.gradle.api.internal.provider.sources.process.ProcessOutputValueSource$Parameters_Decorated@db118aa of type ProcessOutputValueSource.Parameters> Failed to query the value of property 'commandLine'.   > Cannot get the value of a property of type java.util.List with element type java.lang.String as the source value contains a null element.* Try:> Run with --info or --debug option to get more log output.> Run with --scan to get full insights.* Exception is:org.gradle.internal.snapshot.impl.IsolationException: Could not isolate value org.gradle.api.internal.provider.sources.process.ProcessOutputValueSource$Parameters_Decorated@db118aa of type ProcessOutputValueSource.Parameters        at org.gradle.internal.snapshot.impl.DefaultIsolatableFactory.isolate(DefaultIsolatableFactory.java:51)        at org.gradle.api.internal.provider.DefaultValueSourceProviderFactory.isolateParameters(DefaultValueSourceProviderFactory.java:161)        at org.gradle.api.internal.provider.DefaultValueSourceProviderFactory.access$400(DefaultValueSourceProviderFactory.java:44)        at org.gradle.api.internal.provider.DefaultValueSourceProviderFactory$LazilyObtainedValue.source(DefaultValueSourceProviderFactory.java:316)        at org.gradle.api.internal.provider.DefaultValueSourceProviderFactory$LazilyObtainedValue.obtain(DefaultValueSourceProviderFactory.java:300)        at org.gradle.api.internal.provider.DefaultValueSourceProviderFactory$ValueSourceProvider.calculateOwnValue(DefaultValueSourceProviderFactory.java:256)        at org.gradle.api.internal.provider.AbstractMinimalProvider.calculateValue(AbstractMinimalProvider.java:102)        at org.gradle.api.internal.provider.TransformBackedProvider.calculateOwnValue(TransformBackedProvider.java:64)        at org.gradle.api.internal.provider.AbstractMinimalProvider.calculateValue(AbstractMinimalProvider.java:102)        at org.gradle.api.internal.provider.TransformBackedProvider.calculateOwnValue(TransformBackedProvider.java:64)        at org.gradle.api.internal.provider.AbstractMinimalProvider.get(AbstractMinimalProvider.java:83)        at Build_gradle.<init>(build.gradle.kts:265)        at Program.execute(Unknown Source)        at org.gradle.kotlin.dsl.execution.Interpreter$ProgramHost.eval(Interpreter.kt:532)        at org.gradle.kotlin.dsl.execution.Interpreter$ProgramHost.evaluateSecondStageOf(Interpreter.kt:438)        at Program.execute(Unknown Source)        at org.gradle.kotlin.dsl.execution.Interpreter$ProgramHost.eval(Interpreter.kt:532)        at org.gradle.kotlin.dsl.execution.Interpreter.eval(Interpreter.kt:184)        at org.gradle.kotlin.dsl.provider.StandardKotlinScriptEvaluator.evaluate(KotlinScriptEvaluator.kt:115)        at org.gradle.kotlin.dsl.provider.KotlinScriptPluginFactory$create$1.invoke(KotlinScriptPluginFactory.kt:51)        at org.gradle.kotlin.dsl.provider.KotlinScriptPluginFactory$create$1.invoke(KotlinScriptPluginFactory.kt:36)        at org.gradle.kotlin.dsl.provider.KotlinScriptPlugin.apply(KotlinScriptPlugin.kt:34)        at org.gradle.configuration.BuildOperationScriptPlugin$1.run(BuildOperationScriptPlugin.java:65)        at org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:29)        at org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:26)        at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)        at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)        at org.gradle.internal.operations.DefaultBuildOperationRunner.run(DefaultBuildOperationRunner.java:47)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:68)        at org.gradle.configuration.BuildOperationScriptPlugin.lambda$apply$0(BuildOperationScriptPlugin.java:62)        at org.gradle.configuration.internal.DefaultUserCodeApplicationContext.apply(DefaultUserCodeApplicationContext.java:44)        at org.gradle.configuration.BuildOperationScriptPlugin.apply(BuildOperationScriptPlugin.java:62)        at org.gradle.api.internal.project.DefaultProjectStateRegistry$ProjectStateImpl.lambda$applyToMutableState$0(DefaultProjectStateRegistry.java:351)        at org.gradle.api.internal.project.DefaultProjectStateRegistry$ProjectStateImpl.fromMutableState(DefaultProjectStateRegistry.java:369)        at org.gradle.api.internal.project.DefaultProjectStateRegistry$ProjectStateImpl.applyToMutableState(DefaultProjectStateRegistry.java:350)        at org.gradle.configuration.project.BuildScriptProcessor.execute(BuildScriptProcessor.java:42)        at org.gradle.configuration.project.BuildScriptProcessor.execute(BuildScriptProcessor.java:26)        at org.gradle.configuration.project.ConfigureActionsProjectEvaluator.evaluate(ConfigureActionsProjectEvaluator.java:35)        at org.gradle.configuration.project.LifecycleProjectEvaluator$EvaluateProject.lambda$run$0(LifecycleProjectEvaluator.java:109)        at org.gradle.api.internal.project.DefaultProjectStateRegistry$ProjectStateImpl.lambda$applyToMutableState$0(DefaultProjectStateRegistry.java:351)        at org.gradle.api.internal.project.DefaultProjectStateRegistry$ProjectStateImpl.lambda$fromMutableState$1(DefaultProjectStateRegistry.java:374)        at org.gradle.internal.work.DefaultWorkerLeaseService.withReplacedLocks(DefaultWorkerLeaseService.java:345)        at org.gradle.api.internal.project.DefaultProjectStateRegistry$ProjectStateImpl.fromMutableState(DefaultProjectStateRegistry.java:374)        at org.gradle.api.internal.project.DefaultProjectStateRegistry$ProjectStateImpl.applyToMutableState(DefaultProjectStateRegistry.java:350)        at org.gradle.configuration.project.LifecycleProjectEvaluator$EvaluateProject.run(LifecycleProjectEvaluator.java:100)        at org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:29)        at org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:26)        at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)        at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)        at org.gradle.internal.operations.DefaultBuildOperationRunner.run(DefaultBuildOperationRunner.java:47)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:68)        at org.gradle.configuration.project.LifecycleProjectEvaluator.evaluate(LifecycleProjectEvaluator.java:72)        at org.gradle.api.internal.project.DefaultProject.evaluate(DefaultProject.java:761)        at org.gradle.api.internal.project.DefaultProject.evaluate(DefaultProject.java:152)        at org.gradle.api.internal.project.ProjectLifecycleController.lambda$ensureSelfConfigured$1(ProjectLifecycleController.java:63)        at org.gradle.internal.model.StateTransitionController.lambda$doTransition$12(StateTransitionController.java:236)        at org.gradle.internal.model.StateTransitionController.doTransition(StateTransitionController.java:247)        at org.gradle.internal.model.StateTransitionController.doTransition(StateTransitionController.java:235)        at org.gradle.internal.model.StateTransitionController.lambda$maybeTransitionIfNotCurrentlyTransitioning$9(StateTransitionController.java:196)        at org.gradle.internal.work.DefaultSynchronizer.withLock(DefaultSynchronizer.java:34)        at org.gradle.internal.model.StateTransitionController.maybeTransitionIfNotCurrentlyTransitioning(StateTransitionController.java:192)        at org.gradle.api.internal.project.ProjectLifecycleController.ensureSelfConfigured(ProjectLifecycleController.java:63)        at org.gradle.api.internal.project.DefaultProjectStateRegistry$ProjectStateImpl.ensureConfigured(DefaultProjectStateRegistry.java:325)        at org.gradle.execution.TaskPathProjectEvaluator.configure(TaskPathProjectEvaluator.java:33)        at org.gradle.execution.TaskPathProjectEvaluator.configureHierarchy(TaskPathProjectEvaluator.java:47)        at org.gradle.configuration.DefaultProjectsPreparer.prepareProjects(DefaultProjectsPreparer.java:50)        at org.gradle.configuration.BuildTreePreparingProjectsPreparer.prepareProjects(BuildTreePreparingProjectsPreparer.java:64)        at org.gradle.configuration.BuildOperationFiringProjectsPreparer$ConfigureBuild.run(BuildOperationFiringProjectsPreparer.java:52)        at org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:29)        at org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:26)        at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)        at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)        at org.gradle.internal.operations.DefaultBuildOperationRunner.run(DefaultBuildOperationRunner.java:47)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:68)        at org.gradle.configuration.BuildOperationFiringProjectsPreparer.prepareProjects(BuildOperationFiringProjectsPreparer.java:40)        at org.gradle.initialization.VintageBuildModelController.lambda$prepareProjects$3(VintageBuildModelController.java:89)        at org.gradle.internal.model.StateTransitionController.lambda$doTransition$12(StateTransitionController.java:236)        at org.gradle.internal.model.StateTransitionController.doTransition(StateTransitionController.java:247)        at org.gradle.internal.model.StateTransitionController.doTransition(StateTransitionController.java:235)        at org.gradle.internal.model.StateTransitionController.lambda$transitionIfNotPreviously$10(StateTransitionController.java:210)        at org.gradle.internal.work.DefaultSynchronizer.withLock(DefaultSynchronizer.java:34)        at org.gradle.internal.model.StateTransitionController.transitionIfNotPreviously(StateTransitionController.java:206)        at org.gradle.initialization.VintageBuildModelController.prepareProjects(VintageBuildModelController.java:89)        at org.gradle.initialization.VintageBuildModelController.prepareToScheduleTasks(VintageBuildModelController.java:71)        at org.gradle.internal.build.DefaultBuildLifecycleController.lambda$prepareToScheduleTasks$2(DefaultBuildLifecycleController.java:127)        at org.gradle.internal.model.StateTransitionController.lambda$doTransition$12(StateTransitionController.java:236)        at org.gradle.internal.model.StateTransitionController.doTransition(StateTransitionController.java:247)        at org.gradle.internal.model.StateTransitionController.doTransition(StateTransitionController.java:235)        at org.gradle.internal.model.StateTransitionController.lambda$maybeTransition$8(StateTransitionController.java:187)        at org.gradle.internal.work.DefaultSynchronizer.withLock(DefaultSynchronizer.java:34)        at org.gradle.internal.model.StateTransitionController.maybeTransition(StateTransitionController.java:183)        at org.gradle.internal.build.DefaultBuildLifecycleController.prepareToScheduleTasks(DefaultBuildLifecycleController.java:125)        at org.gradle.internal.buildtree.DefaultBuildTreeWorkPreparer.scheduleRequestedTasks(DefaultBuildTreeWorkPreparer.java:33)        at org.gradle.internal.buildtree.DefaultBuildTreeLifecycleController.lambda$doScheduleAndRunTasks$2(DefaultBuildTreeLifecycleController.java:89)        at org.gradle.composite.internal.DefaultIncludedBuildTaskGraph.withNewWorkGraph(DefaultIncludedBuildTaskGraph.java:101)        at org.gradle.internal.buildtree.DefaultBuildTreeLifecycleController.doScheduleAndRunTasks(DefaultBuildTreeLifecycleController.java:88)        at org.gradle.internal.buildtree.DefaultBuildTreeLifecycleController.lambda$runBuild$4(DefaultBuildTreeLifecycleController.java:106)        at org.gradle.internal.model.StateTransitionController.lambda$transition$5(StateTransitionController.java:166)        at org.gradle.internal.model.StateTransitionController.doTransition(StateTransitionController.java:247)        at org.gradle.internal.model.StateTransitionController.lambda$transition$6(StateTransitionController.java:166)        at org.gradle.internal.work.DefaultSynchronizer.withLock(DefaultSynchronizer.java:44)        at org.gradle.internal.model.StateTransitionController.transition(StateTransitionController.java:166)        at org.gradle.internal.buildtree.DefaultBuildTreeLifecycleController.runBuild(DefaultBuildTreeLifecycleController.java:103)        at org.gradle.internal.buildtree.DefaultBuildTreeLifecycleController.scheduleAndRunTasks(DefaultBuildTreeLifecycleController.java:69)        at org.gradle.tooling.internal.provider.ExecuteBuildActionRunner.run(ExecuteBuildActionRunner.java:31)        at org.gradle.launcher.exec.ChainingBuildActionRunner.run(ChainingBuildActionRunner.java:35)        at org.gradle.internal.buildtree.ProblemReportingBuildActionRunner.run(ProblemReportingBuildActionRunner.java:49)        at org.gradle.launcher.exec.BuildOutcomeReportingBuildActionRunner.run(BuildOutcomeReportingBuildActionRunner.java:65)        at org.gradle.tooling.internal.provider.FileSystemWatchingBuildActionRunner.run(FileSystemWatchingBuildActionRunner.java:136)        at org.gradle.launcher.exec.BuildCompletionNotifyingBuildActionRunner.run(BuildCompletionNotifyingBuildActionRunner.java:41)        at org.gradle.launcher.exec.RootBuildLifecycleBuildActionExecutor.lambda$execute$0(RootBuildLifecycleBuildActionExecutor.java:40)        at org.gradle.composite.internal.DefaultRootBuildState.run(DefaultRootBuildState.java:122)        at org.gradle.launcher.exec.RootBuildLifecycleBuildActionExecutor.execute(RootBuildLifecycleBuildActionExecutor.java:40)        at org.gradle.internal.buildtree.DefaultBuildTreeContext.execute(DefaultBuildTreeContext.java:40)        at org.gradle.launcher.exec.BuildTreeLifecycleBuildActionExecutor.lambda$execute$0(BuildTreeLifecycleBuildActionExecutor.java:65)        at org.gradle.internal.buildtree.BuildTreeState.run(BuildTreeState.java:53)        at org.gradle.launcher.exec.BuildTreeLifecycleBuildActionExecutor.execute(BuildTreeLifecycleBuildActionExecutor.java:65)        at org.gradle.launcher.exec.RunAsBuildOperationBuildActionExecutor$3.call(RunAsBuildOperationBuildActionExecutor.java:61)        at org.gradle.launcher.exec.RunAsBuildOperationBuildActionExecutor$3.call(RunAsBuildOperationBuildActionExecutor.java:57)        at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)        at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)        at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)        at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)        at org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)        at org.gradle.launcher.exec.RunAsBuildOperationBuildActionExecutor.execute(RunAsBuildOperationBuildActionExecutor.java:57)        at org.gradle.launcher.exec.RunAsWorkerThreadBuildActionExecutor.lambda$execute$0(RunAsWorkerThreadBuildActionExecutor.java:36)        at org.gradle.internal.work.DefaultWorkerLeaseService.withLocks(DefaultWorkerLeaseService.java:249)        at org.gradle.internal.work.DefaultWorkerLeaseService.runAsWorkerThread(DefaultWorkerLeaseService.java:109)        at org.gradle.launcher.exec.RunAsWorkerThreadBuildActionExecutor.execute(RunAsWorkerThreadBuildActionExecutor.java:36)        at org.gradle.tooling.internal.provider.continuous.ContinuousBuildActionExecutor.execute(ContinuousBuildActionExecutor.java:110)        at org.gradle.tooling.internal.provider.SubscribableBuildActionExecutor.execute(SubscribableBuildActionExecutor.java:64)        at org.gradle.internal.session.DefaultBuildSessionContext.execute(DefaultBuildSessionContext.java:46)        at org.gradle.tooling.internal.provider.BuildSessionLifecycleBuildActionExecuter$ActionImpl.apply(BuildSessionLifecycleBuildActionExecuter.java:100)        at org.gradle.tooling.internal.provider.BuildSessionLifecycleBuildActionExecuter$ActionImpl.apply(BuildSessionLifecycleBuildActionExecuter.java:88)        at org.gradle.internal.session.BuildSessionState.run(BuildSessionState.java:69)        at org.gradle.tooling.internal.provider.BuildSessionLifecycleBuildActionExecuter.execute(BuildSessionLifecycleBuildActionExecuter.java:62)        at org.gradle.tooling.internal.provider.BuildSessionLifecycleBuildActionExecuter.execute(BuildSessionLifecycleBuildActionExecuter.java:41)        at org.gradle.tooling.internal.provider.StartParamsValidatingActionExecuter.execute(StartParamsValidatingActionExecuter.java:63)        at org.gradle.tooling.internal.provider.StartParamsValidatingActionExecuter.execute(StartParamsValidatingActionExecuter.java:31)        at org.gradle.tooling.internal.provider.SessionFailureReportingActionExecuter.execute(SessionFailureReportingActionExecuter.java:52)        at org.gradle.tooling.internal.provider.SessionFailureReportingActionExecuter.execute(SessionFailureReportingActionExecuter.java:40)        at org.gradle.tooling.internal.provider.SetupLoggingActionExecuter.execute(SetupLoggingActionExecuter.java:47)        at org.gradle.tooling.internal.provider.SetupLoggingActionExecuter.execute(SetupLoggingActionExecuter.java:31)        at org.gradle.launcher.daemon.server.exec.ExecuteBuild.doBuild(ExecuteBuild.java:65)        at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:37)        at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)        at org.gradle.launcher.daemon.server.exec.WatchForDisconnection.execute(WatchForDisconnection.java:39)        at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)        at org.gradle.launcher.daemon.server.exec.ResetDeprecationLogger.execute(ResetDeprecationLogger.java:29)        at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)        at org.gradle.launcher.daemon.server.exec.RequestStopIfSingleUsedDaemon.execute(RequestStopIfSingleUsedDaemon.java:35)        at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)        at org.gradle.launcher.daemon.server.exec.ForwardClientInput$2.create(ForwardClientInput.java:78)        at org.gradle.launcher.daemon.server.exec.ForwardClientInput$2.create(ForwardClientInput.java:75)        at org.gradle.util.internal.Swapper.swap(Swapper.java:38)        at org.gradle.launcher.daemon.server.exec.ForwardClientInput.execute(ForwardClientInput.java:75)        at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)        at org.gradle.launcher.daemon.server.exec.LogAndCheckHealth.execute(LogAndCheckHealth.java:55)        at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)        at org.gradle.launcher.daemon.server.exec.LogToClient.doBuild(LogToClient.java:63)        at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:37)        at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)        at org.gradle.launcher.daemon.server.exec.EstablishBuildEnvironment.doBuild(EstablishBuildEnvironment.java:84)        at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:37)        at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)        at org.gradle.launcher.daemon.server.exec.StartBuildOrRespondWithBusy$1.run(StartBuildOrRespondWithBusy.java:52)        at org.gradle.launcher.daemon.server.DaemonStateCoordinator$1.run(DaemonStateCoordinator.java:297)        at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)        at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)Caused by: org.gradle.api.internal.provider.AbstractProperty$PropertyQueryException: Failed to query the value of property 'commandLine'.        at org.gradle.api.internal.provider.AbstractProperty.doCalculateValue(AbstractProperty.java:136)        at org.gradle.api.internal.provider.AbstractProperty.calculateOwnValue(AbstractProperty.java:127)        at org.gradle.api.internal.provider.AbstractMinimalProvider.getOrNull(AbstractMinimalProvider.java:92)        at org.gradle.api.internal.provider.AbstractMinimalProvider.unpackState(AbstractMinimalProvider.java:180)        at org.gradle.internal.snapshot.impl.AbstractValueProcessor.processValue(AbstractValueProcessor.java:134)        at org.gradle.internal.snapshot.impl.AbstractValueProcessor.processValue(AbstractValueProcessor.java:121)        at org.gradle.internal.snapshot.impl.AbstractValueProcessor.processValue(AbstractValueProcessor.java:134)        at org.gradle.internal.snapshot.impl.DefaultIsolatableFactory.isolate(DefaultIsolatableFactory.java:49)        ... 177 moreCaused by: java.lang.NullPointerException: Cannot get the value of a property of type java.util.List with element type java.lang.String as the source value contains a null element.        at com.google.common.base.Preconditions.checkNotNull(Preconditions.java:1245)        at org.gradle.api.internal.provider.ValidatingValueCollector.add(ValidatingValueCollector.java:37)        at org.gradle.api.internal.provider.ValidatingValueCollector.addAll(ValidatingValueCollector.java:54)        at org.gradle.api.internal.provider.Collectors$ElementsFromCollection.collectEntries(Collectors.java:169)        at org.gradle.api.internal.provider.AbstractCollectionProperty$CollectingSupplier.calculateValue(AbstractCollectionProperty.java:337)        at org.gradle.api.internal.provider.AbstractCollectionProperty.calculateValueFrom(AbstractCollectionProperty.java:184)        at org.gradle.api.internal.provider.AbstractCollectionProperty.calculateValueFrom(AbstractCollectionProperty.java:37)        at org.gradle.api.internal.provider.AbstractProperty.doCalculateValue(AbstractProperty.java:133)        ... 184 more```### Your Environment<!--- Include as many relevant details about the environment you experienced the bug in --><!--- A build scan https://scans.gradle.com/get-started is ideal -->Build scan URL:
"
20785,0,2206,300,0,0,ZacSweers,0,"title:`ResolvedArtifactResult` cannot be fingerprinted when there are outputs in 7.5-rc-1 description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues--><!--- Provide a brief summary of the issue in the title above -->### Expected Behavior<!--- Tell us what should happen -->I expect this to work### Current Behavior<!--- Tell us what happens instead of the expected behavior -->It does not and only works if there are no outputs defined.```Task failed with an exception.-----------* What went wrong:Execution failed for task ':libraries:core-lib:printreleaseRuntimeClasspathComponents'.> Cannot fingerprint input property 'resolvedArtifacts': value '[<all artifacts listed but removed for brevity>]' cannot be serialized.* Try:> Run with --stacktrace option to get the stack trace.> Run with --info or --debug option to get more log output.==============================================================================```### Context<!--- How has this issue affected you? What are you trying to accomplish? --><!--- Providing context helps us come up with a solution that is most useful in the real world -->I was trying to reuse the new `ArtifactCollection.getResolvedArtifacts()` API in Gradle 7.5-rc-1 to make some tasks compatible with configuration caching.### Steps to Reproduce <!---Provide a self-contained example project as an attached archive or a Github project.You can use the following template with a Gradle GitHub action set up to showcase your problem: https://github.com/gradle/gradle-issue-reproducerIn the rare cases where this is infeasible, we will also accept a detailed set of instructions.-->```kotlinimport org.gradle.api.DefaultTaskimport org.gradle.api.Projectimport org.gradle.api.artifacts.Configurationimport org.gradle.api.artifacts.result.ResolvedArtifactResultimport org.gradle.api.file.RegularFilePropertyimport org.gradle.api.provider.SetPropertyimport org.gradle.api.tasks.Inputimport org.gradle.api.tasks.OutputFileimport org.gradle.api.tasks.TaskActionimport org.gradle.api.tasks.TaskProviderimport org.gradle.internal.component.external.model.ModuleComponentArtifactIdentifierpublic abstract class ExampleTask : DefaultTask() {  @get:Input public abstract val resolvedArtifacts: SetProperty<ResolvedArtifactResult>  @get:OutputFile  public abstract val outputFile: RegularFileProperty  @TaskAction  public fun doStuff() {    val identifiersToVersions =      resolvedArtifacts        .get()        .map { it.id }        .filterIsInstance<ModuleComponentArtifactIdentifier>()        .associate { component ->          val componentId = component.componentIdentifier          val identifier = ""${componentId.group}:${componentId.module}""          identifier to componentId.version        }    outputFile.asFile.get().writeText(identifiersToVersions.toString())  }  public companion object {    public fun register(project: Project, configuration: Configuration): TaskProvider<ExampleTask> {      return project.tasks.register(        ""print${configuration.name}Components"",        ExampleTask::class.java      ) {        resolvedArtifacts.set(configuration.incoming.artifacts.resolvedArtifacts)        outputFile.set(project.layout.buildDirectory.file(""reports/example/$name.txt""))      }    }  }}```Then simply register the above task and run it to reproduce the previous message + failure. IF you remove the `outputFile` property, it works again.### Your Environment<!--- Include as many relevant details about the environment you experienced the bug in --><!--- A build scan https://scans.gradle.com/get-started is ideal -->Build scan URL:
"
20779,0,2860,300,0,0,ZacSweers,0,"title:`ArtifactCollection.getResolvedArtifacts()` is not compatible with configuration cache if combined with artifact views description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues--><!--- Provide a brief summary of the issue in the title above -->### Expected BehaviorI would expect this to work with artifact views. It actually does not work at all in a basic android project without them because android configurations require specifying an attribute to avoid ambiguous variant exceptions### Current Behavior<!--- Tell us what happens instead of the expected behavior -->The build reports configuration cache problems if you use artifact views.```FAILURE: Build failed with an exception.* What went wrong:Configuration cache problems found in this build.11 problems were found storing the configuration cache, 1 of which seems unique.- Task `:libraries:core-lib:printreleaseRuntimeClasspathComponents` of type `ExampleTask`: cannot serialize object of type 'org.gradle.api.internal.artifacts.result.DefaultResolvedArtifactResult', a subtype of 'org.gradle.api.artifacts.result.ArtifactResult', as these are not supported with the configuration cache.  See https://docs.gradle.org/7.5-rc-1/userguide/configuration_cache.html#config_cache:requirements:disallowed_types```### Context<!--- How has this issue affected you? What are you trying to accomplish? --><!--- Providing context helps us come up with a solution that is most useful in the real world -->See above### Steps to Reproduce <!---Provide a self-contained example project as an attached archive or a Github project.You can use the following template with a Gradle GitHub action set up to showcase your problem: https://github.com/gradle/gradle-issue-reproducerIn the rare cases where this is infeasible, we will also accept a detailed set of instructions.-->Use this example task in an android library project that depends on one or more other android projects + other external dependencies. Note the artifact view in the `register` function.```kotlinimport org.gradle.api.DefaultTaskimport org.gradle.api.Projectimport org.gradle.api.artifacts.Configurationimport org.gradle.api.artifacts.result.ResolvedArtifactResultimport org.gradle.api.attributes.Usageimport org.gradle.api.provider.SetPropertyimport org.gradle.api.tasks.Classpathimport org.gradle.api.tasks.InputFilesimport org.gradle.api.tasks.TaskActionimport org.gradle.api.tasks.TaskProviderpublic abstract class ExampleTask : DefaultTask() {  @get:Classpath  @get:InputFiles  public abstract val resolvedArtifacts: SetProperty<ResolvedArtifactResult>  @TaskAction  public fun doStuff() {    val components =      resolvedArtifacts        .get()        .onEach {          logger.lifecycle(""ARTIFACT: ${it.id}"")        }        .map { it.id }        .filterIsInstance<org.gradle.internal.component.external.model.ModuleComponentArtifactIdentifier>()        .associate { component ->          val componentId = component.componentIdentifier          val identifier = ""${componentId.group}:${componentId.module}""          identifier to componentId.version        }    logger.lifecycle(components.toString())  }  public companion object {    public fun register(project: Project, configuration: Configuration): TaskProvider<ExampleTask> {      return project.tasks.register(""print${configuration.name}Components"", ExampleTask::class.java) {        resolvedArtifacts.set(          configuration            .incoming            .artifactView {              attributes {                attribute(Usage.USAGE_ATTRIBUTE, project.objects.named(Usage::class.java, ""android-classes""))              }              lenient(true)            }            .artifacts        )      }    }  }}```Then configure it in an android library project like so```kotlinconfigure<com.android.build.gradle.LibraryExtension> {  libraryVariants.configureEach {    val registered = ExampleTask.register(project, runtimeConfiguration)    println(registered.name)  }}```And run the task, such as `:path:to:project:printreleaseRuntimeClasspathComponents`You can also reproduce this in android application projects with this snippet```kotlin```kotlinconfigure<com.android.build.gradle.AppExtension> {  applicationVariants.configureEach {    val registered = ExampleTask.register(project, runtimeConfiguration)    println(registered.name)  }}```### Your Environment<!--- Include as many relevant details about the environment you experienced the bug in --><!--- A build scan https://scans.gradle.com/get-started is ideal -->Build scan URL:
"
20765,1,3569,237,0,0,handstandsam,0,"title:Configuration Cache ignores `notCompatibleWithConfigurationCache` when `org.gradle.unsafe.configuration-cache-problems=warn` is set description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues--><!--- Provide a brief summary of the issue in the title above -->Configuration Cache ignores `notCompatibleWithConfigurationCache` when `org.gradle.unsafe.configuration-cache-problems=warn` is set in all cases.**Reproduced with Gradle 7.4.2 and 7.5-rc-1**### Expected Behavior<!--- Tell us what should happen -->When `org.gradle.unsafe.configuration-cache=true` is set and  and `task.notCompatibleWithConfigurationCache()` is used, then it should skip configuration cache for that task.### Current Behavior<!--- Tell us what happens instead of the expected behavior -->The `task.notCompatibleWithConfigurationCache()` notifies Gradle that a task does not work with Configuration Cache.  That is honored when `org.gradle.unsafe.configuration-cache=true` is set.  However, if `...cache-problems=warn` is enabled, then the `task.notCompatibleWithConfigurationCache()` is not honored.If you remove the line `org.gradle.unsafe.configuration-cache-problems=warn` from `gradle.properties`, and have the cache enabled, or disabled, everything works as expected.### Context<!--- How has this issue affected you? What are you trying to accomplish? --><!--- Providing context helps us come up with a solution that is most useful in the real world -->I was testing https://github.com/dropbox/dependency-guard with these properties enabled, and it would always error out on the second run, even with `task.notCompatibleWithConfigurationCache()` set.### Steps to Reproduce <!---Provide a self-contained example project as an attached archive or a Github project.You can use the following template with a Gradle GitHub action set up to showcase your problem: https://github.com/gradle/gradle-issue-reproducerIn the rare cases where this is infeasible, we will also accept a detailed set of instructions.-->`git clone git@github.com:dropbox/dependency-guard.git`Add the following to `gradle.properties````org.gradle.unsafe.configuration-cache=trueorg.gradle.unsafe.configuration-cache-problems=warn```All the tasks for Dependency Guard all have `task.notCompatibleWithConfigurationCache("""")` [here](https://github.com/dropbox/dependency-guard/blob/main/dependency-guard/src/main/kotlin/com/dropbox/gradle/plugins/dependencyguard/internal/utils/Tasks.kt#L16).run `./gradlew dependencyGuard` 2x.  It will fail the 2nd time.This will happen whenever `org.gradle.unsafe.configuration-cache-problems=warn` is set. `task.notCompatibleWithConfigurationCache()` is totally ignored in this case.Note: This has also been reproduced/confirmed by @autonomousapps and @joshafeinberg### Your Environment<!--- Include as many relevant details about the environment you experienced the bug in --><!--- A build scan https://scans.gradle.com/get-started is ideal -->**Reproduced with Gradle 7.4.2 and 7.5-rc-1**Build scan URL: N/AThe task fails, and a scan cannot be published.  Here is the failure output when`org.gradle.unsafe.configuration-cache-problems=warn` is set.```Configuration cache is an incubating feature.Reusing configuration cache.> Task :sample:app:dependencyGuard FAILED> Task :dependencyTreeDiffClasspath FAILED***** DEPENDENCY CHANGE DETECTED *****...6 problems were found reusing the configuration cache, 4 of which seem unique.- Task `:dependencyTreeDiffClasspath` of type `com.dropbox.gradle.plugins.dependencyguard.internal.tree.BuildEnvironmentDependencyTreeDiffTask`: cannot deserialize object of type 'org.gradle.api.Project' as these are not supported with the configuration cache.  See https://docs.gradle.org/7.4.2/userguide/configuration_cache.html#config_cache:requirements:disallowed_types- Task `:dependencyTreeDiffClasspath` of type `com.dropbox.gradle.plugins.dependencyguard.internal.tree.BuildEnvironmentDependencyTreeDiffTask`: cannot deserialize object of type 'org.gradle.api.artifacts.Configuration' as these are not supported with the configuration cache.  See https://docs.gradle.org/7.4.2/userguide/configuration_cache.html#config_cache:requirements:disallowed_types- Task `:dependencyTreeDiffClasspath` of type `com.dropbox.gradle.plugins.dependencyguard.internal.tree.BuildEnvironmentDependencyTreeDiffTask`: invocation of 'Task.project' at execution time is unsupported.  See https://docs.gradle.org/7.4.2/userguide/configuration_cache.html#config_cache:requirements:use_project_during_execution- Task `:sample:app:dependencyGuard` of type `com.dropbox.gradle.plugins.dependencyguard.internal.list.DependencyGuardListTask`: invocation of 'Task.project' at execution time is unsupported.  See https://docs.gradle.org/7.4.2/userguide/configuration_cache.html#config_cache:requirements:use_project_during_executionSee the complete report at file:///Users/samedwards/src/dependency-guard/build/reports/configuration-cache/4dnp0acgzytw6wvevjej5r348/bn56al0f50kpcboe5zda54uvf/configuration-cache-report.htmlFAILURE: Build completed with 2 failures.1: Task failed with an exception.-----------* What went wrong:Execution failed for task ':sample:app:dependencyGuard'.> Configuration with name releaseRuntimeClasspath was not found for :sample:app* Try:> Run with --stacktrace option to get the stack trace.> Run with --info or --debug option to get more log output.> Run with --scan to get full insights.==============================================================================2: Task failed with an exception.-----------* What went wrong:Execution failed for task ':dependencyTreeDiffClasspath'.> Parameter specified as non-null is null: method com.dropbox.gradle.plugins.dependencyguard.internal.ProjectExtKt.qualifiedBaselineTaskName, parameter $this$qualifiedBaselineTaskName* Try:> Run with --stacktrace option to get the stack trace.> Run with --info or --debug option to get more log output.> Run with --scan to get full insights.==============================================================================* Get more help at https://help.gradle.orgDeprecated Gradle features were used in this build, making it incompatible with Gradle 8.0.You can use '--warning-mode all' to show the individual deprecation warnings and determine if they come from your own scripts or plugins.See https://docs.gradle.org/7.4.2/userguide/command_line_interface.html#sec:command_line_warningsBUILD FAILED in 381ms2 actionable tasks: 2 executedConfiguration cache entry reused with 6 problems.```
"
20741,0,2629,297,0,0,big-guy,0,"title:7.5 nightly slows down or hangs when many tasks are requested on the command-line description:### Expected BehaviorGradle build should not hang.### Current BehaviorGradle build slows down to the point that it seems to be hanging.### ContextA build in the ready-for-release pipeline for Gradle has started to run much slower and times out after 3 hours. The build usually takes <5 minutes. The build seems to execute work, but very slowly and with high CPU load. A thread dump shows that several threads are in `org.gradle.execution.plan.LocalTaskNodeExecutor#addHardSuccessorTasksToQueue`.The last successful nightly was based on 7decfad14ac9bc9dc27e589fa40bb09daf388831### Steps to Reproduce Running the Gradle build with:```./gradlew clean launcher:allVersionsIntegMultiVersionTest antlr:allVersionsIntegMultiVersionTest base-services:allVersionsIntegMultiVersionTest build-cache:allVersionsIntegMultiVersionTest build-cache-http:allVersionsIntegMultiVersionTest build-events:allVersionsIntegMultiVersionTest build-init:allVersionsIntegMultiVersionTest build-profile:allVersionsIntegMultiVersionTest composite-builds:allVersionsIntegMultiVersionTest configuration-cache:allVersionsIntegMultiVersionTest core:allVersionsIntegMultiVersionTest core-api:allVersionsIntegMultiVersionTest dependency-management:allVersionsIntegMultiVersionTest diagnostics:allVersionsIntegMultiVersionTest docs:allVersionsIntegMultiVersionTest ear:allVersionsIntegMultiVersionTest enterprise:allVersionsIntegMultiVersionTest execution:allVersionsIntegMultiVersionTest file-collections:allVersionsIntegMultiVersionTest ide:allVersionsIntegMultiVersionTest integ-test:allVersionsIntegMultiVersionTest internal-integ-testing:allVersionsIntegMultiVersionTest internal-performance-testing:allVersionsIntegMultiVersionTest ivy:allVersionsIntegMultiVersionTest jvm-services:allVersionsIntegMultiVersionTest kotlin-dsl:allVersionsIntegMultiVersionTest kotlin-dsl-integ-tests:allVersionsIntegMultiVersionTest kotlin-dsl-plugins:allVersionsIntegMultiVersionTest kotlin-dsl-tooling-builders:allVersionsIntegMultiVersionTest language-java:allVersionsIntegMultiVersionTest logging:allVersionsIntegMultiVersionTest maven:allVersionsIntegMultiVersionTest messaging:allVersionsIntegMultiVersionTest model-core:allVersionsIntegMultiVersionTest model-groovy:allVersionsIntegMultiVersionTest persistent-cache:allVersionsIntegMultiVersionTest platform-base:allVersionsIntegMultiVersionTest platform-jvm:allVersionsIntegMultiVersionTest plugin-development:allVersionsIntegMultiVersionTest plugin-use:allVersionsIntegMultiVersionTest process-services:allVersionsIntegMultiVersionTest publish:allVersionsIntegMultiVersionTest reporting:allVersionsIntegMultiVersionTest resources:allVersionsIntegMultiVersionTest resources-gcs:allVersionsIntegMultiVersionTest resources-http:allVersionsIntegMultiVersionTest resources-s3:allVersionsIntegMultiVersionTest resources-sftp:allVersionsIntegMultiVersionTest samples:allVersionsIntegMultiVersionTest signing:allVersionsIntegMultiVersionTest snapshots:allVersionsIntegMultiVersionTest testing-base:allVersionsIntegMultiVersionTest tooling-api:allVersionsIntegMultiVersionTest version-control:allVersionsIntegMultiVersionTest workers:allVersionsIntegMultiVersionTest wrapper:allVersionsIntegMultiVersionTest wrapper-shared:allVersionsIntegMultiVersionTest```### Your Environmenthttps://ge.gradle.org/s/zkvwjvxwyuquk
"
20722,0,759,232,0,0,lacasseio,0,"title:Task buildNeeded and buildDependents resolve configuration too early description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues--><!--- Provide a brief summary of the issue in the title above -->### Expected Behavior<!--- Tell us what should happen -->The following should succeed:Null provider:```plugins {    id 'java'}def version = objects.property(String)configurations.testImplementation.dependencies.addLater(version.map { project.dependencies.create(""com.example:artifact:${it}"") })tasks.all {} // force realize all tasksversion.set('5.6')assert configurations.testRuntimeClasspath.allDependencies.size() == 1 // fails here```Provider expecting some value to exist:```plugins {    id 'java'}def version = objects.property(String)configurations.testImplementation.dependencies.addLater(provider { project.dependencies.create(""com.example:artifact:${version.get()}"") })tasks.all {} // force realize all tasks (fails here)version.set('5.6') // later set the provider valueassert configurations.testRuntimeClasspath.allDependencies.size() == 1```### Current Behavior<!--- Tell us what happens instead of the expected behavior -->Task configuration should be only for performance, hence realizing a task early should not cause unrelated build configuration failures or worst, silent failures. The tasks `buildNeeded` and `buildDependents`, cause the `Configuration`'s `DependencySet` to resolve early causing any `DependencySet#addLater` or `DependencySet#addAllLater` to realize too early. It will either silently ignore the dependency (if the provider is null) or fail to configure (if the provider is more complex and expect values to be present). Using those `addLater`/`addAllLater` help defer dependencies instead of using the error-prone `afterEvaluate`. ### Context<!--- How has this issue affected you? What are you trying to accomplish? --><!--- Providing context helps us come up with a solution that is most useful in the real world -->The problem starts [here](https://github.com/gradle/gradle/blob/93772b10948f957ba076d5f9319a9dde166d117d/subprojects/plugins/src/main/java/org/gradle/api/plugins/JavaPlugin.java#L414-L419) where configuration action are registered for those two tasks which ends up adding the dependency [here](https://github.com/gradle/gradle/blob/93772b10948f957ba076d5f9319a9dde166d117d/subprojects/plugins/src/main/java/org/gradle/api/plugins/JavaPlugin.java#L487). The `dependsOn` should be further deferred by using a `Callable` which would properly push back the realization of the configuration's dependencies. Underneath, `Configuration#getAllDependencies()` will be called which is responsible for the early realization of the dependencies.### Steps to Reproduce <!---Provide a self-contained example project as an attached archive or a Github project.You can use the following template with a Gradle GitHub action set up to showcase your problem: https://github.com/gradle/gradle-issue-reproducerIn the rare cases where this is infeasible, we will also accept a detailed set of instructions.-->### Your Environment<!--- Include as many relevant details about the environment you experienced the bug in --><!--- A build scan https://scans.gradle.com/get-started is ideal -->Build scan URL:
"
20709,0,32430,24,0,1,yogurtearl,0,"title:Config cache exception on JDK 17: InaccessibleObjectException CopyOnWriteArrayList.writeObject description:### Expected BehaviorConfig cache should ""just work"". ### Current BehaviorRunning with config cache gives this error (intermittently): ```* What went wrong:Configuration cache state could not be cached: field '__compileKotlinArgumentsContributor$kotlin_gradle_plugin__' from type 'org.jetbrains.kotlin.gradle.internal.KaptGenerateStubsTask': error writing value of type 'org.gradle.api.internal.provider.DefaultProperty'> Configuration cache state could not be cached: field 'friendPaths' from type 'org.jetbrains.kotlin.gradle.internal.KotlinJvmCompilerArgumentsContributor': error writing value of type 'org.gradle.api.internal.file.collections.DefaultConfigurableFileCollection'   > Configuration cache state could not be cached: field 'provider' from type 'org.gradle.configurationcache.serialization.codecs.ProviderBackedFileCollectionSpec': error writing value of type 'org.gradle.api.internal.provider.DefaultProvider'      > Configuration cache state could not be cached: field 'provider' from type 'org.gradle.configurationcache.serialization.codecs.ProviderBackedFileCollectionSpec': error writing value of type 'org.gradle.api.internal.provider.DefaultProperty'         > Configuration cache state could not be cached: field 'filter' from type 'org.gradle.configurationcache.serialization.codecs.FilteredFileCollectionSpec': error writing value of type 'org.jetbrains.kotlin.gradle.plugin.AndroidTestedVariantArtifactsFilter'            > Configuration cache state could not be cached: field 'artifactCollection' from type 'org.jetbrains.kotlin.gradle.plugin.AndroidTestedVariantArtifactsFilter': error writing value of type 'com.android.build.gradle.internal.dependency.ArtifactCollectionWithExtraArtifact'               > Configuration cache state could not be cached: field 'parentArtifacts' from type 'com.android.build.gradle.internal.dependency.ArtifactCollectionWithExtraArtifact': error writing value of type 'org.gradle.api.internal.artifacts.configurations.DefaultConfiguration$ConfigurationArtifactCollection'                  > Configuration cache state could not be cached: field 'causes' from type 'org.gradle.internal.resolve.ModuleVersionResolveException': error writing value of type 'java.util.concurrent.CopyOnWriteArrayList'                     > Unable to make private void java.util.concurrent.CopyOnWriteArrayList.writeObject(java.io.ObjectOutputStream) throws java.io.IOException accessible: module java.base does not ""opens java.util.concurrent"" to unnamed module @29576df9* Try:> Run with --info or --debug option to get more log output.> Run with --scan to get full insights.* Exception is:org.gradle.configurationcache.ConfigurationCacheError: Configuration cache state could not be cached: field '__compileKotlinArgumentsContributor$kotlin_gradle_plugin__' from type 'org.jetbrains.kotlin.gradle.internal.KaptGenerateStubsTask': error writing value of type 'org.gradle.api.internal.provider.DefaultProperty'        at org.gradle.configurationcache.serialization.beans.BeanPropertyWriterKt.writeNextProperty(BeanPropertyWriter.kt:106)        at org.gradle.configurationcache.serialization.beans.BeanPropertyWriter.writeStateOf(BeanPropertyWriter.kt:59)        at org.gradle.configurationcache.serialization.codecs.TaskNodeCodec$writeTask$3$2$1.invokeSuspend(TaskNodeCodec.kt:101)        at org.gradle.configurationcache.serialization.codecs.TaskNodeCodec$writeTask$3$2$1.invoke(TaskNodeCodec.kt)        at org.gradle.configurationcache.serialization.codecs.TaskNodeCodec$writeTask$3$2$1.invoke(TaskNodeCodec.kt)        at org.gradle.configurationcache.serialization.codecs.TaskNodeCodecKt.withTaskOf(TaskNodeCodec.kt:234)        at org.gradle.configurationcache.serialization.codecs.TaskNodeCodecKt.access$withTaskOf(TaskNodeCodec.kt:1)        at org.gradle.configurationcache.serialization.codecs.TaskNodeCodec.writeTask(TaskNodeCodec.kt:95)        at org.gradle.configurationcache.serialization.codecs.TaskNodeCodec.encode(TaskNodeCodec.kt:71)        at org.gradle.configurationcache.serialization.codecs.TaskNodeCodec.encode(TaskNodeCodec.kt:64)        at org.gradle.configurationcache.serialization.codecs.BindingsBackedCodec.encode(BindingsBackedCodec.kt:52)        at org.gradle.configurationcache.serialization.DefaultWriteContext.write(Contexts.kt:80)        at org.gradle.configurationcache.serialization.codecs.WorkNodeCodec.writeNode(WorkNodeCodec.kt:77)        at org.gradle.configurationcache.serialization.codecs.WorkNodeCodec.writeNodes(WorkNodeCodec.kt:54)        at org.gradle.configurationcache.serialization.codecs.WorkNodeCodec.writeWork(WorkNodeCodec.kt:39)        at org.gradle.configurationcache.ConfigurationCacheState.writeWorkGraphOf(ConfigurationCacheState.kt:254)        at org.gradle.configurationcache.ConfigurationCacheState.writeBuildState$configuration_cache(ConfigurationCacheState.kt:207)        at org.gradle.configurationcache.ConfigurationCacheState.writeRootBuild(ConfigurationCacheState.kt:169)        at org.gradle.configurationcache.ConfigurationCacheState.writeRootBuildState(ConfigurationCacheState.kt:113)        at org.gradle.configurationcache.ConfigurationCacheIO$writeRootBuildStateTo$1.invokeSuspend(ConfigurationCacheIO.kt:130)        at org.gradle.configurationcache.ConfigurationCacheIO$writeRootBuildStateTo$1.invoke(ConfigurationCacheIO.kt)        at org.gradle.configurationcache.ConfigurationCacheIO$writeRootBuildStateTo$1.invoke(ConfigurationCacheIO.kt)        at org.gradle.configurationcache.ConfigurationCacheIO$writeConfigurationCacheState$1$1.invokeSuspend(ConfigurationCacheIO.kt:181)        at org.gradle.configurationcache.ConfigurationCacheIO$writeConfigurationCacheState$1$1.invoke(ConfigurationCacheIO.kt)        at org.gradle.configurationcache.ConfigurationCacheIO$writeConfigurationCacheState$1$1.invoke(ConfigurationCacheIO.kt)        at org.gradle.configurationcache.serialization.RunningKt$runWriteOperation$1.invokeSuspend(Running.kt:45)        at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)        at kotlin.coroutines.ContinuationKt.startCoroutine(Continuation.kt:115)        at org.gradle.configurationcache.serialization.RunningKt.runToCompletion(Running.kt:56)        at org.gradle.configurationcache.serialization.RunningKt.runWriteOperation(Running.kt:44)        at org.gradle.configurationcache.ConfigurationCacheIO.writeConfigurationCacheState(ConfigurationCacheIO.kt:180)        at org.gradle.configurationcache.ConfigurationCacheIO.writeRootBuildStateTo$configuration_cache(ConfigurationCacheIO.kt:128)        at org.gradle.configurationcache.DefaultConfigurationCache$writeConfigurationCacheState$1.create(DefaultConfigurationCache.kt:378)        at org.gradle.configurationcache.DefaultConfigurationCache$writeConfigurationCacheState$1.create(DefaultConfigurationCache.kt:377)        at org.gradle.internal.work.DefaultWorkerLeaseService.withoutLocks(DefaultWorkerLeaseService.java:332)        at org.gradle.api.internal.project.DefaultProjectStateRegistry.lambda$withMutableStateOfAllProjects$0(DefaultProjectStateRegistry.java:154)        at org.gradle.internal.work.DefaultWorkerLeaseService.withLocks(DefaultWorkerLeaseService.java:270)        at org.gradle.api.internal.project.DefaultProjectStateRegistry.withMutableStateOfAllProjects(DefaultProjectStateRegistry.java:154)        at org.gradle.configurationcache.DefaultConfigurationCache.writeConfigurationCacheState(DefaultConfigurationCache.kt:377)        at org.gradle.configurationcache.DefaultConfigurationCache.access$writeConfigurationCacheState(DefaultConfigurationCache.kt:54)        at org.gradle.configurationcache.DefaultConfigurationCache$saveWorkGraph$1.invoke(DefaultConfigurationCache.kt:304)        at org.gradle.configurationcache.DefaultConfigurationCache$saveWorkGraph$1.invoke(DefaultConfigurationCache.kt:304)        at org.gradle.configurationcache.DefaultConfigurationCache$saveToCache$1$1.invoke(DefaultConfigurationCache.kt:319)        at org.gradle.configurationcache.DefaultConfigurationCache$saveToCache$1$1.invoke(DefaultConfigurationCache.kt:317)        at org.gradle.configurationcache.ConfigurationCacheRepository$StoreImpl$useForStore$1.invoke(ConfigurationCacheRepository.kt:177)        at org.gradle.configurationcache.ConfigurationCacheRepository$StoreImpl$useForStore$1.invoke(ConfigurationCacheRepository.kt:169)        at org.gradle.configurationcache.ConfigurationCacheRepository$withExclusiveAccessToCache$1.create(ConfigurationCacheRepository.kt:244)        at org.gradle.cache.internal.LockOnDemandCrossProcessCacheAccess.withFileLock(LockOnDemandCrossProcessCacheAccess.java:90)        at org.gradle.cache.internal.DefaultCacheAccess.withFileLock(DefaultCacheAccess.java:191)        at org.gradle.cache.internal.DefaultPersistentDirectoryStore.withFileLock(DefaultPersistentDirectoryStore.java:188)        at org.gradle.cache.internal.DefaultCacheFactory$ReferenceTrackingCache.withFileLock(DefaultCacheFactory.java:209)        at org.gradle.configurationcache.ConfigurationCacheRepository.withExclusiveAccessToCache(ConfigurationCacheRepository.kt:242)        at org.gradle.configurationcache.ConfigurationCacheRepository.access$withExclusiveAccessToCache(ConfigurationCacheRepository.kt:46)        at org.gradle.configurationcache.ConfigurationCacheRepository$StoreImpl.useForStore(ConfigurationCacheRepository.kt:169)        at org.gradle.configurationcache.DefaultConfigurationCache$saveToCache$1.invoke(DefaultConfigurationCache.kt:317)        at org.gradle.configurationcache.DefaultConfigurationCache$saveToCache$1.invoke(DefaultConfigurationCache.kt:316)        at org.gradle.configurationcache.ConfigurationCacheBuildOperationsKt$withOperation$1.call(ConfigurationCacheBuildOperations.kt:39)        at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)        at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)        at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)        at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)        at org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)        at org.gradle.configurationcache.ConfigurationCacheBuildOperationsKt.withOperation(ConfigurationCacheBuildOperations.kt:37)        at org.gradle.configurationcache.ConfigurationCacheBuildOperationsKt.withStoreOperation(ConfigurationCacheBuildOperations.kt:32)        at org.gradle.configurationcache.DefaultConfigurationCache.saveToCache(DefaultConfigurationCache.kt:316)        at org.gradle.configurationcache.DefaultConfigurationCache.saveWorkGraph(DefaultConfigurationCache.kt:304)        at org.gradle.configurationcache.DefaultConfigurationCache.access$saveWorkGraph(DefaultConfigurationCache.kt:54)        at org.gradle.configurationcache.DefaultConfigurationCache$loadOrScheduleRequestedTasks$1.invoke(DefaultConfigurationCache.kt:134)        at org.gradle.configurationcache.DefaultConfigurationCache$loadOrScheduleRequestedTasks$1.invoke(DefaultConfigurationCache.kt:132)        at org.gradle.configurationcache.DefaultConfigurationCache.runWorkThatContributesToCacheEntry(DefaultConfigurationCache.kt:276)        at org.gradle.configurationcache.DefaultConfigurationCache.loadOrScheduleRequestedTasks(DefaultConfigurationCache.kt:132)        at org.gradle.configurationcache.ConfigurationCacheAwareBuildTreeWorkPreparer.scheduleRequestedTasks(ConfigurationCacheAwareBuildTreeWorkPreparer.kt:28)        at org.gradle.internal.buildtree.DefaultBuildTreeLifecycleController.lambda$doScheduleAndRunTasks$2(DefaultBuildTreeLifecycleController.java:89)        at org.gradle.composite.internal.DefaultIncludedBuildTaskGraph.withNewWorkGraph(DefaultIncludedBuildTaskGraph.java:75)        at org.gradle.internal.buildtree.DefaultBuildTreeLifecycleController.doScheduleAndRunTasks(DefaultBuildTreeLifecycleController.java:88)        at org.gradle.internal.buildtree.DefaultBuildTreeLifecycleController.lambda$runBuild$4(DefaultBuildTreeLifecycleController.java:106)        at org.gradle.internal.model.StateTransitionController.lambda$transition$6(StateTransitionController.java:166)        at org.gradle.internal.model.StateTransitionController.doTransition(StateTransitionController.java:238)        at org.gradle.internal.model.StateTransitionController.lambda$transition$7(StateTransitionController.java:166)        at org.gradle.internal.work.DefaultSynchronizer.withLock(DefaultSynchronizer.java:44)        at org.gradle.internal.model.StateTransitionController.transition(StateTransitionController.java:166)        at org.gradle.internal.buildtree.DefaultBuildTreeLifecycleController.runBuild(DefaultBuildTreeLifecycleController.java:103)        at org.gradle.internal.buildtree.DefaultBuildTreeLifecycleController.scheduleAndRunTasks(DefaultBuildTreeLifecycleController.java:69)        at org.gradle.tooling.internal.provider.ExecuteBuildActionRunner.run(ExecuteBuildActionRunner.java:31)        at org.gradle.launcher.exec.ChainingBuildActionRunner.run(ChainingBuildActionRunner.java:35)        at org.gradle.internal.buildtree.ProblemReportingBuildActionRunner.run(ProblemReportingBuildActionRunner.java:49)        at org.gradle.launcher.exec.BuildOutcomeReportingBuildActionRunner.run(BuildOutcomeReportingBuildActionRunner.java:69)        at org.gradle.tooling.internal.provider.FileSystemWatchingBuildActionRunner.run(FileSystemWatchingBuildActionRunner.java:119)        at org.gradle.launcher.exec.BuildCompletionNotifyingBuildActionRunner.run(BuildCompletionNotifyingBuildActionRunner.java:41)        at org.gradle.launcher.exec.RootBuildLifecycleBuildActionExecutor.lambda$execute$0(RootBuildLifecycleBuildActionExecutor.java:40)        at org.gradle.composite.internal.DefaultRootBuildState.run(DefaultRootBuildState.java:128)        at org.gradle.launcher.exec.RootBuildLifecycleBuildActionExecutor.execute(RootBuildLifecycleBuildActionExecutor.java:40)        at org.gradle.internal.buildtree.DefaultBuildTreeContext.execute(DefaultBuildTreeContext.java:40)        at org.gradle.launcher.exec.BuildTreeLifecycleBuildActionExecutor.lambda$execute$0(BuildTreeLifecycleBuildActionExecutor.java:65)        at org.gradle.internal.buildtree.BuildTreeState.run(BuildTreeState.java:53)        at org.gradle.launcher.exec.BuildTreeLifecycleBuildActionExecutor.execute(BuildTreeLifecycleBuildActionExecutor.java:65)        at org.gradle.launcher.exec.RunAsBuildOperationBuildActionExecutor$3.call(RunAsBuildOperationBuildActionExecutor.java:61)        at org.gradle.launcher.exec.RunAsBuildOperationBuildActionExecutor$3.call(RunAsBuildOperationBuildActionExecutor.java:57)        at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)        at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)        at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)        at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)        at org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)        at org.gradle.launcher.exec.RunAsBuildOperationBuildActionExecutor.execute(RunAsBuildOperationBuildActionExecutor.java:57)        at org.gradle.launcher.exec.RunAsWorkerThreadBuildActionExecutor.lambda$execute$0(RunAsWorkerThreadBuildActionExecutor.java:36)        at org.gradle.internal.work.DefaultWorkerLeaseService.withLocks(DefaultWorkerLeaseService.java:270)        at org.gradle.internal.work.DefaultWorkerLeaseService.runAsWorkerThread(DefaultWorkerLeaseService.java:119)        at org.gradle.launcher.exec.RunAsWorkerThreadBuildActionExecutor.execute(RunAsWorkerThreadBuildActionExecutor.java:36)        at org.gradle.tooling.internal.provider.ContinuousBuildActionExecutor.execute(ContinuousBuildActionExecutor.java:103)        at org.gradle.tooling.internal.provider.SubscribableBuildActionExecutor.execute(SubscribableBuildActionExecutor.java:64)        at org.gradle.internal.session.DefaultBuildSessionContext.execute(DefaultBuildSessionContext.java:46)        at org.gradle.tooling.internal.provider.BuildSessionLifecycleBuildActionExecuter$ActionImpl.apply(BuildSessionLifecycleBuildActionExecuter.java:100)        at org.gradle.tooling.internal.provider.BuildSessionLifecycleBuildActionExecuter$ActionImpl.apply(BuildSessionLifecycleBuildActionExecuter.java:88)        at org.gradle.internal.session.BuildSessionState.run(BuildSessionState.java:69)        at org.gradle.tooling.internal.provider.BuildSessionLifecycleBuildActionExecuter.execute(BuildSessionLifecycleBuildActionExecuter.java:62)        at org.gradle.tooling.internal.provider.BuildSessionLifecycleBuildActionExecuter.execute(BuildSessionLifecycleBuildActionExecuter.java:41)        at org.gradle.tooling.internal.provider.StartParamsValidatingActionExecuter.execute(StartParamsValidatingActionExecuter.java:63)        at org.gradle.tooling.internal.provider.StartParamsValidatingActionExecuter.execute(StartParamsValidatingActionExecuter.java:31)        at org.gradle.tooling.internal.provider.SessionFailureReportingActionExecuter.execute(SessionFailureReportingActionExecuter.java:58)        at org.gradle.tooling.internal.provider.SessionFailureReportingActionExecuter.execute(SessionFailureReportingActionExecuter.java:42)        at org.gradle.tooling.internal.provider.SetupLoggingActionExecuter.execute(SetupLoggingActionExecuter.java:47)        at org.gradle.tooling.internal.provider.SetupLoggingActionExecuter.execute(SetupLoggingActionExecuter.java:31)        at org.gradle.launcher.daemon.server.exec.ExecuteBuild.doBuild(ExecuteBuild.java:65)        at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:37)        at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)        at org.gradle.launcher.daemon.server.exec.WatchForDisconnection.execute(WatchForDisconnection.java:39)        at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)        at org.gradle.launcher.daemon.server.exec.ResetDeprecationLogger.execute(ResetDeprecationLogger.java:29)        at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)        at org.gradle.launcher.daemon.server.exec.RequestStopIfSingleUsedDaemon.execute(RequestStopIfSingleUsedDaemon.java:35)        at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)        at org.gradle.launcher.daemon.server.exec.ForwardClientInput$2.create(ForwardClientInput.java:78)        at org.gradle.launcher.daemon.server.exec.ForwardClientInput$2.create(ForwardClientInput.java:75)        at org.gradle.util.internal.Swapper.swap(Swapper.java:38)        at org.gradle.launcher.daemon.server.exec.ForwardClientInput.execute(ForwardClientInput.java:75)        at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)        at org.gradle.launcher.daemon.server.exec.LogAndCheckHealth.execute(LogAndCheckHealth.java:55)        at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)        at org.gradle.launcher.daemon.server.exec.LogToClient.doBuild(LogToClient.java:63)        at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:37)        at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)        at org.gradle.launcher.daemon.server.exec.EstablishBuildEnvironment.doBuild(EstablishBuildEnvironment.java:84)        at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:37)        at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)        at org.gradle.launcher.daemon.server.exec.StartBuildOrRespondWithBusy$1.run(StartBuildOrRespondWithBusy.java:52)        at org.gradle.launcher.daemon.server.DaemonStateCoordinator$1.run(DaemonStateCoordinator.java:297)        at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)        at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)Caused by: org.gradle.configurationcache.ConfigurationCacheError: Configuration cache state could not be cached: field 'friendPaths' from type 'org.jetbrains.kotlin.gradle.internal.KotlinJvmCompilerArgumentsContributor': error writing value of type 'org.gradle.api.internal.file.collections.DefaultConfigurableFileCollection'        at org.gradle.configurationcache.serialization.beans.BeanPropertyWriterKt.writeNextProperty(BeanPropertyWriter.kt:106)        at org.gradle.configurationcache.serialization.beans.BeanPropertyWriterKt$writeNextProperty$1.invokeSuspend(BeanPropertyWriter.kt)        at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)        at kotlin.coroutines.SafeContinuation.resumeWith(SafeContinuationJvm.kt:41)        at org.gradle.configurationcache.serialization.CombinatorsKt$reentrant$1$encodeLoop$$inlined$Continuation$1.resumeWith(Continuation.kt:167)        at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:46)        at kotlin.coroutines.SafeContinuation.resumeWith(SafeContinuationJvm.kt:41)        at org.gradle.configurationcache.serialization.CombinatorsKt$reentrant$1$encodeLoop$$inlined$Continuation$1.resumeWith(Continuation.kt:167)        at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:46)        at kotlin.coroutines.SafeContinuation.resumeWith(SafeContinuationJvm.kt:41)        at org.gradle.configurationcache.serialization.CombinatorsKt$reentrant$1$encodeLoop$$inlined$Continuation$1.resumeWith(Continuation.kt:167)        at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:46)        at kotlin.coroutines.SafeContinuation.resumeWith(SafeContinuationJvm.kt:41)        at org.gradle.configurationcache.serialization.CombinatorsKt$reentrant$1$encodeLoop$$inlined$Continuation$1.resumeWith(Continuation.kt:167)        at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:46)        at kotlin.coroutines.SafeContinuation.resumeWith(SafeContinuationJvm.kt:41)        at org.gradle.configurationcache.serialization.CombinatorsKt$reentrant$1$encodeLoop$$inlined$Continuation$1.resumeWith(Continuation.kt:167)        at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:46)        at kotlin.coroutines.SafeContinuation.resumeWith(SafeContinuationJvm.kt:41)        at org.gradle.configurationcache.serialization.CombinatorsKt$reentrant$1$encodeLoop$$inlined$Continuation$1.resumeWith(Continuation.kt:167)        at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:46)        at kotlin.coroutines.ContinuationKt.startCoroutine(Continuation.kt:115)        at org.gradle.configurationcache.serialization.CombinatorsKt$reentrant$1.encodeLoop(Combinators.kt:142)        at org.gradle.configurationcache.serialization.CombinatorsKt$reentrant$1.encode(Combinators.kt:112)        at org.gradle.configurationcache.serialization.codecs.BindingsBackedCodec.encode(BindingsBackedCodec.kt:52)        at org.gradle.configurationcache.serialization.DefaultWriteContext.write(Contexts.kt:80)        at org.gradle.configurationcache.serialization.codecs.FixedValueReplacingProviderCodec.encodeValue(ProviderCodecs.kt:97)        at org.gradle.configurationcache.serialization.codecs.FixedValueReplacingProviderCodec.encodeProvider(ProviderCodecs.kt:83)        at org.gradle.configurationcache.serialization.codecs.PropertyCodec.encode(ProviderCodecs.kt:243)        at org.gradle.configurationcache.serialization.codecs.PropertyCodec.encode(ProviderCodecs.kt:235)        at org.gradle.configurationcache.serialization.codecs.BindingsBackedCodec.encode(BindingsBackedCodec.kt:52)        at org.gradle.configurationcache.serialization.DefaultWriteContext.write(Contexts.kt:80)        at org.gradle.configurationcache.serialization.beans.BeanPropertyWriterKt.writeNextProperty(BeanPropertyWriter.kt:100)        ... 153 moreCaused by: org.gradle.configurationcache.ConfigurationCacheError: Configuration cache state could not be cached: field 'provider' from type 'org.gradle.configurationcache.serialization.codecs.ProviderBackedFileCollectionSpec': error writing value of type 'org.gradle.api.internal.provider.DefaultProvider'        at org.gradle.configurationcache.serialization.beans.BeanPropertyWriterKt.writeNextProperty(BeanPropertyWriter.kt:106)        at org.gradle.configurationcache.serialization.beans.BeanPropertyWriterKt$writeNextProperty$1.invokeSuspend(BeanPropertyWriter.kt)        at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)        ... 180 moreCaused by: org.gradle.configurationcache.ConfigurationCacheError: Configuration cache state could not be cached: field 'provider' from type 'org.gradle.configurationcache.serialization.codecs.ProviderBackedFileCollectionSpec': error writing value of type 'org.gradle.api.internal.provider.DefaultProperty'        at org.gradle.configurationcache.serialization.beans.BeanPropertyWriterKt.writeNextProperty(BeanPropertyWriter.kt:106)        at org.gradle.configurationcache.serialization.beans.BeanPropertyWriterKt$writeNextProperty$1.invokeSuspend(BeanPropertyWriter.kt)        at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)        ... 177 moreCaused by: org.gradle.configurationcache.ConfigurationCacheError: Configuration cache state could not be cached: field 'filter' from type 'org.gradle.configurationcache.serialization.codecs.FilteredFileCollectionSpec': error writing value of type 'org.jetbrains.kotlin.gradle.plugin.AndroidTestedVariantArtifactsFilter'        at org.gradle.configurationcache.serialization.beans.BeanPropertyWriterKt.writeNextProperty(BeanPropertyWriter.kt:106)        at org.gradle.configurationcache.serialization.beans.BeanPropertyWriterKt$writeNextProperty$1.invokeSuspend(BeanPropertyWriter.kt)        at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)        ... 174 moreCaused by: org.gradle.configurationcache.ConfigurationCacheError: Configuration cache state could not be cached: field 'artifactCollection' from type 'org.jetbrains.kotlin.gradle.plugin.AndroidTestedVariantArtifactsFilter': error writing value of type 'com.android.build.gradle.internal.dependency.ArtifactCollectionWithExtraArtifact'        ... 177 moreCaused by: org.gradle.configurationcache.ConfigurationCacheError: Configuration cache state could not be cached: field 'parentArtifacts' from type 'com.android.build.gradle.internal.dependency.ArtifactCollectionWithExtraArtifact': error writing value of type 'org.gradle.api.internal.artifacts.configurations.DefaultConfiguration$ConfigurationArtifactCollection'        at org.gradle.configurationcache.serialization.beans.BeanPropertyWriterKt.writeNextProperty(BeanPropertyWriter.kt:106)        at org.gradle.configurationcache.serialization.beans.BeanPropertyWriterKt$writeNextProperty$1.invokeSuspend(BeanPropertyWriter.kt)        at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)        ... 171 moreCaused by: org.gradle.configurationcache.ConfigurationCacheError: Configuration cache state could not be cached: field 'causes' from type 'org.gradle.internal.resolve.ModuleVersionResolveException': error writing value of type 'java.util.concurrent.CopyOnWriteArrayList'        at org.gradle.configurationcache.serialization.beans.BeanPropertyWriterKt.writeNextProperty(BeanPropertyWriter.kt:106)        at org.gradle.configurationcache.serialization.beans.BeanPropertyWriter.writeStateOf(BeanPropertyWriter.kt:59)        at org.gradle.configurationcache.serialization.beans.BeanPropertyWriter$writeStateOf$1.invokeSuspend(BeanPropertyWriter.kt)        ... 172 moreCaused by: java.lang.reflect.InaccessibleObjectException: Unable to make private void java.util.concurrent.CopyOnWriteArrayList.writeObject(java.io.ObjectOutputStream) throws java.io.IOException accessible: module java.base does not ""opens java.util.concurrent"" to unnamed module @29576df9        at org.gradle.configurationcache.serialization.codecs.jos.JavaObjectSerializationCodecKt.serializationMethodHierarchy(JavaObjectSerializationCodec.kt:248)        at org.gradle.configurationcache.serialization.codecs.jos.JavaSerializationEncodingLookup.writeObjectMethodHierarchyFrom(JavaSerializationEncodingLookup.kt:81)        at org.gradle.configurationcache.serialization.codecs.jos.JavaSerializationEncodingLookup.writeObjectEncodingFor(JavaSerializationEncodingLookup.kt:60)        at org.gradle.configurationcache.serialization.codecs.jos.JavaSerializationEncodingLookup.calculateEncoding(JavaSerializationEncodingLookup.kt:43)        at org.gradle.configurationcache.serialization.codecs.jos.JavaSerializationEncodingLookup.access$calculateEncoding(JavaSerializationEncodingLookup.kt:28)        at org.gradle.configurationcache.serialization.codecs.jos.JavaSerializationEncodingLookup$encodingFor$1.apply(JavaSerializationEncodingLookup.kt:35)        at org.gradle.configurationcache.serialization.codecs.jos.JavaSerializationEncodingLookup$encodingFor$1.apply(JavaSerializationEncodingLookup.kt:35)        at org.gradle.configurationcache.serialization.codecs.jos.JavaSerializationEncodingLookup.encodingFor(JavaSerializationEncodingLookup.kt:35)        at org.gradle.configurationcache.serialization.codecs.jos.JavaObjectSerializationCodec.encodingForType(JavaObjectSerializationCodec.kt:82)        at org.gradle.configurationcache.serialization.codecs.Binding.encodingForType(BindingsBackedCodec.kt:90)        at org.gradle.configurationcache.serialization.codecs.BindingsBackedCodec.computeEncoding(BindingsBackedCodec.kt:69)        at org.gradle.configurationcache.serialization.codecs.BindingsBackedCodec.access$computeEncoding(BindingsBackedCodec.kt:36)        at org.gradle.configurationcache.serialization.codecs.BindingsBackedCodec$taggedEncodingFor$1.apply(BindingsBackedCodec.kt:64)        at org.gradle.configurationcache.serialization.codecs.BindingsBackedCodec$taggedEncodingFor$1.apply(BindingsBackedCodec.kt:64)        at org.gradle.configurationcache.serialization.codecs.BindingsBackedCodec.taggedEncodingFor(BindingsBackedCodec.kt:64)        at org.gradle.configurationcache.serialization.codecs.BindingsBackedCodec.encode(BindingsBackedCodec.kt:49)        at org.gradle.configurationcache.serialization.DefaultWriteContext.write(Contexts.kt:80)        at org.gradle.configurationcache.serialization.beans.BeanPropertyWriterKt.writeNextProperty(BeanPropertyWriter.kt:100)        ... 174 more```### Your EnvironmentGradle 7.4.2Android Gradle plugin (AGP): 7.2.0Kotlin gradle plugin: 1.6.10openjdk 17.0.2 2022-01-18 LTSOpenJDK Runtime Environment Zulu17.32+13-CA (build 17.0.2+8-LTS)OpenJDK 64-Bit Server VM Zulu17.32+13-CA (build 17.0.2+8-LTS, mixed mode, sharing)
"
20708,0,0,251,0,0,ghale,0,"title:@Classpath with @NormalizeLineEndings fails to capture differences in zip entries on JDK8 description:If you combine @NormalizeLineEndings with @Classpath (i.e. runtime classpath normalization with line ending normalization) changes to non-text files contained in zip files can be missed.This is because when we do line ending normalization, we start reading the contents of the zip entry and then when we detect that the file is not a text file, we break out of the normalization and pass it on to the normal classpath resource hasher.  However, with zip entries, this means that we stop reading the entry in the middle of the stream and on JDK8 when we break out, it doesn't reset the stream to the beginning of the entry, it just returns EOF every time the stream for that entry is opened/read (until `getNextEntry()` is called).  The end result of this is that the hash for the file can end up being the same, even though the contents are different.### Expected BehaviorChanges to non-text files contained in zip files should be reflected in the hash of the zip file.### Current BehaviorThe zip file hash can end up being the same even though the contents are actually different.### Contexthttps://youtrack.jetbrains.com/issue/KT-52313
"
20704,0,0,57,0,0,dschiller,0,"title:Gradle has Issues with `exFAT` description:### Expected BehaviorGradle should work### Current BehaviorGradle doesn't work### ContextSee this ticket at flutter which leads to this ticket here: https://github.com/flutter/flutter/issues/103311### Steps to Reproduce - Download Flutter SDK- Run Flutter doctor- Download and install Android Studio- Install Android commandline tools- Install Pixel 2 API 30 Emulator- Run Out of the Box Flutter App### Your EnvironmentWindows 10 / exFAT drive
"
20695,0,312,0,0,0,dlin-ta,0,"title:Precompiled Kotlin script plugins are broken in explicit API mode description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues--><!--- Provide a brief summary of the issue in the title above -->A precompiled `.gradle.kts` plugin in a project that uses```kotlinkotlin {    explicitApi()}```fails to build.### Expected Behavior<!--- Tell us what should happen -->The plugin should build successfully.### Current Behavior<!--- Tell us what happens instead of the expected behavior -->Many```e: .../build/generated-sources/kotlin-dsl-plugins/kotlin/...Plugin.kt: (6, 1): Visibility must be specified in explicit API mode```errors.### Context<!--- How has this issue affected you? What are you trying to accomplish? --><!--- Providing context helps us come up with a solution that is most useful in the real world -->https://kotlinlang.org/docs/whatsnew14.html#explicit-api-mode-for-library-authorsExplicit API mode is useful for ensuring that you are exposing as API exactly what you intend to. I believe this can be particularly useful for Gradle plugins; however Gradle is broken.### Steps to Reproduce <!---Provide a self-contained example project as an attached archive or a Github project.You can use the following template with a Gradle GitHub action set up to showcase your problem: https://github.com/gradle/gradle-issue-reproducerIn the rare cases where this is infeasible, we will also accept a detailed set of instructions.-->```kotlin// build.gradle.ktsplugins {    `kotlin-dsl`}kotlin {    explicitApi()}``````kotlin// src/main/kotlin/example.gradle.kts```### Your Environment<!--- Include as many relevant details about the environment you experienced the bug in --><!--- A build scan https://scans.gradle.com/get-started is ideal -->Build scan URL:
"
20693,1,1727,0,0,0,atfb,0,"title:Configuration cache breaks the build after cleaning build cache description:<!--- Provide a brief summary of the issue in the title above -->When running an external command from a plugin task ( in my case `GenerateDebugProto`) I'm getting an error message.```FAILURE: Build failed with an exception. | 闂備胶鍘у畷顒勫焵椤掑倸鏋嶉弶?| 闂?| 闂備胶鍘у畷顒勫焵椤掑倸鏋嶉弶?| * What went wrong: | 闂備胶鍘у畷顒勫焵椤掑倸鏋嶉弶?| Execution failed for task ':app:protobuf:generateDebugProto'. | 闂備胶鍘у畷顒勫焵椤掑倸鏋嶉弶?| > Could not find method exec() for arguments [build_55v32hz48kbcuzkyl11y300fq$_run_closure3$_closure9$_closure11$_closure15$_closure17@36468b43] on task ':app:protobuf:generateDebugProto' of type com.google.protobuf.gradle.GenerateProtoTask. | 闂備浇澹堟禍顒傜矉閸㈢珚闂備浇澹堟禍顒傜矈绾惧攨s happens after I clean build cache, clean output cache but I **don't clean configuration cache**.```$> ./gradlew clean $> rm -rf ~/.gradle/caches/build-cache-1 $> ./gradlew :app:protobuf:generateDebugProto```After cleaning configuration cache build runs successfully again.`$> rm -rf .gradle/configuration-cache`<br class=""Apple-interchange-newline"">### Expected BehaviorBuild runs successfully and able to reuse configuratinon cache### Current BehaviorBuild fails unless configuration cache is cleared### build.gradle of the module````...protobuf {    protoc {        artifact = versioned('com.google.protobuf:protoc')    }    plugins {        javalite {            // The codegen for lite comes as a separate artifact            artifact = versioned('com.google.protobuf:protoc-gen-javalite')        }    }    generateProtoTasks {        all().each { task ->            task.builtins {                remove java            }            task.plugins {                javalite {                    outputSubDir = 'java'                }            }            // Optimize the protobuf java files after they are generated.            def outputDir = task.getOutputDir(task.plugins[0])            task.doLast {                exec {   // FAILS HERE  with the above error                    final os = org.gradle.internal.os.OperatingSystem.current()                    if (os.isWindows()) {                        commandLine 'python3', 'protobuf-optimizer.py'                    } else {                        commandLine file('protobuf-optimizer.py')                    }                    args outputDir                }            }        }    }}...````
"
20684,0,55164,0,0,0,ant-druha,0,"title:Gradle refresh in IntelliJ IDEA fails with IllegalStateException: Unexpected parent dependency id error with spring-boot 2.6.7 description:Reported at IntelliJ IDEA tracker: https://youtrack.jetbrains.com/issue/IDEA-293435### Steps to Reproduce - Clone project from https://bitbucket.org/stefan-puia/intellij-gradle-sync-error/src/master/ in IntelliJ IDEA- Try to import it. It fails with error:```Could not resolve all dependencies for configuration ':service:compileClasspath'.Problems reading data from Binary store in /private/var/folders/92/2yqlfyrj3lqcvrhtdwxj8djc0000gp/T/gradle4764667475555250691.bin offset 86 exists? trueUnexpected parent dependency id 47. Seen ids: [2, 66, 69, 70, 7, 10, 13, 81, 82, 83, 84, 21, 85, 22, 23, 27, 97, 100, 101, 38, 39, 104, 105, 45, 46, 111, 112, 113, 51, 116, 53, 119, 58, 124, 61, 127]* Try:Run with --info or --debug option to get more log output. Run with --scan to get full insights.* Exception is:com.intellij.openapi.externalSystem.model.ExternalSystemException: Could not resolve all dependencies for configuration ':service:compileClasspath'.Problems reading data from Binary store in /private/var/folders/92/2yqlfyrj3lqcvrhtdwxj8djc0000gp/T/gradle4764667475555250691.bin offset 86 exists? trueUnexpected parent dependency id 47. Seen ids: [2, 66, 69, 70, 7, 10, 13, 81, 82, 83, 84, 21, 85, 22, 23, 27, 97, 100, 101, 38, 39, 104, 105, 45, 46, 111, 112, 113, 51, 116, 53, 119, 58, 124, 61, 127]	at org.jetbrains.plugins.gradle.model.ProjectImportAction.addBuildModels(ProjectImportAction.java:346)	at org.jetbrains.plugins.gradle.model.ProjectImportAction.execute(ProjectImportAction.java:127)	at org.jetbrains.plugins.gradle.model.ProjectImportAction.execute(ProjectImportAction.java:42)	at org.gradle.tooling.internal.consumer.connection.InternalBuildActionAdapter.execute(InternalBuildActionAdapter.java:64)	at org.gradle.tooling.internal.provider.runner.AbstractClientProvidedBuildActionRunner$ActionRunningListener.runAction(AbstractClientProvidedBuildActionRunner.java:134)	at org.gradle.tooling.internal.provider.runner.AbstractClientProvidedBuildActionRunner$ActionRunningListener.buildFinished(AbstractClientProvidedBuildActionRunner.java:119)	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)	at org.gradle.internal.event.DefaultListenerManager$ListenerDetails.dispatch(DefaultListenerManager.java:398)	at org.gradle.internal.event.DefaultListenerManager$ListenerDetails.dispatch(DefaultListenerManager.java:380)	at org.gradle.internal.event.AbstractBroadcastDispatch.dispatch(AbstractBroadcastDispatch.java:61)	at org.gradle.internal.event.DefaultListenerManager$EventBroadcast$ListenerDispatch.dispatch(DefaultListenerManager.java:368)	at org.gradle.internal.event.DefaultListenerManager$EventBroadcast$ListenerDispatch.dispatch(DefaultListenerManager.java:355)	at org.gradle.internal.event.AbstractBroadcastDispatch.dispatch(AbstractBroadcastDispatch.java:43)	at org.gradle.internal.event.BroadcastDispatch$SingletonDispatch.dispatch(BroadcastDispatch.java:245)	at org.gradle.internal.event.BroadcastDispatch$SingletonDispatch.dispatch(BroadcastDispatch.java:157)	at org.gradle.internal.event.AbstractBroadcastDispatch.dispatch(AbstractBroadcastDispatch.java:61)	at org.gradle.internal.event.BroadcastDispatch$CompositeDispatch.dispatch(BroadcastDispatch.java:346)	at org.gradle.internal.event.BroadcastDispatch$CompositeDispatch.dispatch(BroadcastDispatch.java:249)	at org.gradle.internal.event.ListenerBroadcast.dispatch(ListenerBroadcast.java:141)	at org.gradle.internal.event.ListenerBroadcast.dispatch(ListenerBroadcast.java:37)	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)	at com.sun.proxy.$Proxy18.buildFinished(Unknown Source)	at org.gradle.initialization.DefaultGradleLauncher.finishBuild(DefaultGradleLauncher.java:193)	at org.gradle.initialization.DefaultGradleLauncher.finishBuild(DefaultGradleLauncher.java:131)	at org.gradle.internal.invocation.GradleBuildController$1.create(GradleBuildController.java:73)	at org.gradle.internal.invocation.GradleBuildController$1.create(GradleBuildController.java:67)	at org.gradle.internal.work.DefaultWorkerLeaseService.withLocks(DefaultWorkerLeaseService.java:213)	at org.gradle.internal.invocation.GradleBuildController.doBuild(GradleBuildController.java:67)	at org.gradle.internal.invocation.GradleBuildController.run(GradleBuildController.java:56)	at org.gradle.tooling.internal.provider.runner.AbstractClientProvidedBuildActionRunner.runClientAction(AbstractClientProvidedBuildActionRunner.java:53)	at org.gradle.tooling.internal.provider.runner.ClientProvidedPhasedActionRunner.run(ClientProvidedPhasedActionRunner.java:47)	at org.gradle.launcher.exec.ChainingBuildActionRunner.run(ChainingBuildActionRunner.java:35)	at org.gradle.launcher.exec.ChainingBuildActionRunner.run(ChainingBuildActionRunner.java:35)	at org.gradle.launcher.exec.BuildOutcomeReportingBuildActionRunner.run(BuildOutcomeReportingBuildActionRunner.java:63)	at org.gradle.tooling.internal.provider.ValidatingBuildActionRunner.run(ValidatingBuildActionRunner.java:32)	at org.gradle.tooling.internal.provider.FileSystemWatchingBuildActionRunner.run(FileSystemWatchingBuildActionRunner.java:77)	at org.gradle.launcher.exec.BuildCompletionNotifyingBuildActionRunner.run(BuildCompletionNotifyingBuildActionRunner.java:41)	at org.gradle.launcher.exec.RunAsBuildOperationBuildActionRunner$3.call(RunAsBuildOperationBuildActionRunner.java:49)	at org.gradle.launcher.exec.RunAsBuildOperationBuildActionRunner$3.call(RunAsBuildOperationBuildActionRunner.java:44)	at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:200)	at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:195)	at org.gradle.internal.operations.DefaultBuildOperationRunner$3.execute(DefaultBuildOperationRunner.java:75)	at org.gradle.internal.operations.DefaultBuildOperationRunner$3.execute(DefaultBuildOperationRunner.java:68)	at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:153)	at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:68)	at org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:62)	at org.gradle.internal.operations.DefaultBuildOperationExecutor.lambda$call$2(DefaultBuildOperationExecutor.java:76)	at org.gradle.internal.operations.UnmanagedBuildOperationWrapper.callWithUnmanagedSupport(UnmanagedBuildOperationWrapper.java:54)	at org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:76)	at org.gradle.launcher.exec.RunAsBuildOperationBuildActionRunner.run(RunAsBuildOperationBuildActionRunner.java:44)	at org.gradle.launcher.exec.InProcessBuildActionExecuter.lambda$execute$0(InProcessBuildActionExecuter.java:54)	at org.gradle.composite.internal.DefaultRootBuildState.run(DefaultRootBuildState.java:86)	at org.gradle.launcher.exec.InProcessBuildActionExecuter.execute(InProcessBuildActionExecuter.java:53)	at org.gradle.launcher.exec.InProcessBuildActionExecuter.execute(InProcessBuildActionExecuter.java:29)	at org.gradle.launcher.exec.BuildTreeScopeLifecycleBuildActionExecuter.lambda$execute$0(BuildTreeScopeLifecycleBuildActionExecuter.java:33)	at org.gradle.internal.buildtree.BuildTreeState.run(BuildTreeState.java:49)	at org.gradle.launcher.exec.BuildTreeScopeLifecycleBuildActionExecuter.execute(BuildTreeScopeLifecycleBuildActionExecuter.java:32)	at org.gradle.launcher.exec.BuildTreeScopeLifecycleBuildActionExecuter.execute(BuildTreeScopeLifecycleBuildActionExecuter.java:27)	at org.gradle.tooling.internal.provider.ContinuousBuildActionExecuter.execute(ContinuousBuildActionExecuter.java:104)	at org.gradle.tooling.internal.provider.ContinuousBuildActionExecuter.execute(ContinuousBuildActionExecuter.java:55)	at org.gradle.tooling.internal.provider.SubscribableBuildActionExecuter.execute(SubscribableBuildActionExecuter.java:64)	at org.gradle.tooling.internal.provider.SubscribableBuildActionExecuter.execute(SubscribableBuildActionExecuter.java:37)	at org.gradle.tooling.internal.provider.SessionScopeLifecycleBuildActionExecuter.lambda$execute$0(SessionScopeLifecycleBuildActionExecuter.java:54)	at org.gradle.internal.session.BuildSessionState.run(BuildSessionState.java:67)	at org.gradle.tooling.internal.provider.SessionScopeLifecycleBuildActionExecuter.execute(SessionScopeLifecycleBuildActionExecuter.java:50)	at org.gradle.tooling.internal.provider.SessionScopeLifecycleBuildActionExecuter.execute(SessionScopeLifecycleBuildActionExecuter.java:36)	at org.gradle.tooling.internal.provider.GradleThreadBuildActionExecuter.execute(GradleThreadBuildActionExecuter.java:36)	at org.gradle.tooling.internal.provider.GradleThreadBuildActionExecuter.execute(GradleThreadBuildActionExecuter.java:25)	at org.gradle.tooling.internal.provider.StartParamsValidatingActionExecuter.execute(StartParamsValidatingActionExecuter.java:59)	at org.gradle.tooling.internal.provider.StartParamsValidatingActionExecuter.execute(StartParamsValidatingActionExecuter.java:31)	at org.gradle.tooling.internal.provider.SessionFailureReportingActionExecuter.execute(SessionFailureReportingActionExecuter.java:55)	at org.gradle.tooling.internal.provider.SessionFailureReportingActionExecuter.execute(SessionFailureReportingActionExecuter.java:41)	at org.gradle.tooling.internal.provider.SetupLoggingActionExecuter.execute(SetupLoggingActionExecuter.java:47)	at org.gradle.tooling.internal.provider.SetupLoggingActionExecuter.execute(SetupLoggingActionExecuter.java:31)	at org.gradle.launcher.daemon.server.exec.ExecuteBuild.doBuild(ExecuteBuild.java:65)	at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:37)	at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)	at org.gradle.launcher.daemon.server.exec.WatchForDisconnection.execute(WatchForDisconnection.java:39)	at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)	at org.gradle.launcher.daemon.server.exec.ResetDeprecationLogger.execute(ResetDeprecationLogger.java:29)	at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)	at org.gradle.launcher.daemon.server.exec.RequestStopIfSingleUsedDaemon.execute(RequestStopIfSingleUsedDaemon.java:35)	at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)	at org.gradle.launcher.daemon.server.exec.ForwardClientInput$2.create(ForwardClientInput.java:78)	at org.gradle.launcher.daemon.server.exec.ForwardClientInput$2.create(ForwardClientInput.java:75)	at org.gradle.util.Swapper.swap(Swapper.java:38)	at org.gradle.launcher.daemon.server.exec.ForwardClientInput.execute(ForwardClientInput.java:75)	at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)	at org.gradle.launcher.daemon.server.exec.LogAndCheckHealth.execute(LogAndCheckHealth.java:55)	at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)	at org.gradle.launcher.daemon.server.exec.LogToClient.doBuild(LogToClient.java:63)	at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:37)	at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)	at org.gradle.launcher.daemon.server.exec.EstablishBuildEnvironment.doBuild(EstablishBuildEnvironment.java:84)	at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:37)	at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)	at org.gradle.launcher.daemon.server.exec.StartBuildOrRespondWithBusy$1.run(StartBuildOrRespondWithBusy.java:52)	at org.gradle.launcher.daemon.server.DaemonStateCoordinator$1.run(DaemonStateCoordinator.java:297)	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)org.gradle.api.artifacts.ResolveException: Could not resolve all dependencies for configuration ':service:compileClasspath'.	at org.gradle.api.internal.artifacts.ivyservice.ErrorHandlingConfigurationResolver.wrapException(ErrorHandlingConfigurationResolver.java:106)	at org.gradle.api.internal.artifacts.ivyservice.ErrorHandlingConfigurationResolver.access$000(ErrorHandlingConfigurationResolver.java:49)	at org.gradle.api.internal.artifacts.ivyservice.ErrorHandlingConfigurationResolver$ErrorHandlingLenientConfiguration.getAllModuleDependencies(ErrorHandlingConfigurationResolver.java:169)	at org.jetbrains.plugins.gradle.tooling.util.resolve.DependencyResolverImpl.resolveDependencies(DependencyResolverImpl.java:201)	at org.jetbrains.plugins.gradle.tooling.util.resolve.DependencyResolverImpl.resolveDependenciesWithDefault(DependencyResolverImpl.java:592)	at org.jetbrains.plugins.gradle.tooling.util.resolve.DependencyResolverImpl.resolveDependencies(DependencyResolverImpl.java:125)	at org.jetbrains.plugins.gradle.tooling.util.DependencyResolver$resolveDependencies.call(Unknown Source)	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:47)	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:115)	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:127)	at org.jetbrains.plugins.gradle.tooling.builder.ExternalProjectBuilderImpl$_getSourceSets_closure2.doCall(ExternalProjectBuilderImpl.groovy:441)	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)	at java.base/java.lang.reflect.Method.invoke(Method.java:566)	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:101)	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)	at org.codehaus.groovy.runtime.metaclass.ClosureMetaClass.invokeMethod(ClosureMetaClass.java:263)	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1041)	at groovy.lang.Closure.call(Closure.java:405)	at groovy.lang.Closure.call(Closure.java:421)	at org.gradle.util.ClosureBackedAction.execute(ClosureBackedAction.java:71)	at org.gradle.util.ConfigureUtil.configureTarget(ConfigureUtil.java:154)	at org.gradle.util.ConfigureUtil.configure(ConfigureUtil.java:105)	at org.gradle.util.ConfigureUtil$WrappedConfigureAction.execute(ConfigureUtil.java:166)	at org.gradle.api.internal.DefaultDomainObjectCollection.all(DefaultDomainObjectCollection.java:163)	at org.gradle.api.internal.DefaultDomainObjectCollection.all(DefaultDomainObjectCollection.java:198)	at org.gradle.api.DomainObjectCollection$all.call(Unknown Source)	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:47)	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:115)	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:127)	at org.jetbrains.plugins.gradle.tooling.builder.ExternalProjectBuilderImpl.getSourceSets(ExternalProjectBuilderImpl.groovy:241)	at org.jetbrains.plugins.gradle.tooling.builder.ExternalProjectBuilderImpl.doBuild(ExternalProjectBuilderImpl.groovy:102)	at org.jetbrains.plugins.gradle.tooling.builder.ExternalProjectBuilderImpl.doBuild(ExternalProjectBuilderImpl.groovy:111)	at org.jetbrains.plugins.gradle.tooling.builder.ExternalProjectBuilderImpl.buildAll(ExternalProjectBuilderImpl.groovy:71)	at org.jetbrains.plugins.gradle.tooling.internal.ExtraModelBuilder.buildAll(ExtraModelBuilder.java:111)	at org.jetbrains.plugins.gradle.tooling.internal.ExtraModelBuilder.buildAll(ExtraModelBuilder.java:78)	at org.gradle.tooling.provider.model.internal.DefaultToolingModelBuilderRegistry$BuilderWithParameter.build(DefaultToolingModelBuilderRegistry.java:192)	at org.gradle.tooling.provider.model.internal.DefaultToolingModelBuilderRegistry$LockSingleProjectBuilder.lambda$build$0(DefaultToolingModelBuilderRegistry.java:211)	at org.gradle.api.internal.project.DefaultProjectStateRegistry$ProjectStateImpl.lambda$withProjectLock$3(DefaultProjectStateRegistry.java:310)	at org.gradle.internal.work.DefaultWorkerLeaseService.withLocks(DefaultWorkerLeaseService.java:213)	at org.gradle.api.internal.project.DefaultProjectStateRegistry$ProjectStateImpl.withProjectLock(DefaultProjectStateRegistry.java:310)	at org.gradle.api.internal.project.DefaultProjectStateRegistry$ProjectStateImpl.fromMutableState(DefaultProjectStateRegistry.java:291)	at org.gradle.tooling.provider.model.internal.DefaultToolingModelBuilderRegistry$LockSingleProjectBuilder.build(DefaultToolingModelBuilderRegistry.java:211)	at org.gradle.tooling.provider.model.internal.DefaultToolingModelBuilderRegistry$BuildOperationWrappingBuilder$1.call(DefaultToolingModelBuilderRegistry.java:246)	at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:200)	at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:195)	at org.gradle.internal.operations.DefaultBuildOperationRunner$3.execute(DefaultBuildOperationRunner.java:75)	at org.gradle.internal.operations.DefaultBuildOperationRunner$3.execute(DefaultBuildOperationRunner.java:68)	at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:153)	at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:68)	at org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:62)	at org.gradle.internal.operations.DefaultBuildOperationExecutor.lambda$call$2(DefaultBuildOperationExecutor.java:76)	at org.gradle.internal.operations.UnmanagedBuildOperationWrapper.callWithUnmanagedSupport(UnmanagedBuildOperationWrapper.java:54)	at org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:76)	at org.gradle.tooling.provider.model.internal.DefaultToolingModelBuilderRegistry$BuildOperationWrappingBuilder.build(DefaultToolingModelBuilderRegistry.java:243)	at org.gradle.tooling.internal.provider.runner.DefaultBuildController.getModel(DefaultBuildController.java:102)	at org.gradle.tooling.internal.consumer.connection.ParameterAwareBuildControllerAdapter.getModel(ParameterAwareBuildControllerAdapter.java:39)	at org.gradle.tooling.internal.consumer.connection.UnparameterizedBuildController.getModel(UnparameterizedBuildController.java:113)	at org.gradle.tooling.internal.consumer.connection.NestedActionAwareBuildControllerAdapter.getModel(NestedActionAwareBuildControllerAdapter.java:31)	at org.gradle.tooling.internal.consumer.connection.UnparameterizedBuildController.findModel(UnparameterizedBuildController.java:97)	at org.gradle.tooling.internal.consumer.connection.NestedActionAwareBuildControllerAdapter.findModel(NestedActionAwareBuildControllerAdapter.java:31)	at org.gradle.tooling.internal.consumer.connection.UnparameterizedBuildController.findModel(UnparameterizedBuildController.java:81)	at org.gradle.tooling.internal.consumer.connection.NestedActionAwareBuildControllerAdapter.findModel(NestedActionAwareBuildControllerAdapter.java:31)	at org.jetbrains.plugins.gradle.model.ProjectImportAction$MyBuildController.findModel(ProjectImportAction.java:557)	at org.jetbrains.plugins.gradle.model.ProjectImportAction$MyBuildController.findModel(ProjectImportAction.java:578)	at org.jetbrains.plugins.gradle.model.ClassSetImportModelProvider.populateBuildModels(ClassSetImportModelProvider.java:27)	at org.jetbrains.plugins.gradle.model.ProjectImportAction.addBuildModels(ProjectImportAction.java:334)	at org.jetbrains.plugins.gradle.model.ProjectImportAction.execute(ProjectImportAction.java:127)	at org.jetbrains.plugins.gradle.model.ProjectImportAction.execute(ProjectImportAction.java:42)	at org.gradle.tooling.internal.consumer.connection.InternalBuildActionAdapter.execute(InternalBuildActionAdapter.java:64)	at org.gradle.tooling.internal.provider.runner.AbstractClientProvidedBuildActionRunner$ActionRunningListener.runAction(AbstractClientProvidedBuildActionRunner.java:134)	at org.gradle.tooling.internal.provider.runner.AbstractClientProvidedBuildActionRunner$ActionRunningListener.buildFinished(AbstractClientProvidedBuildActionRunner.java:119)	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)	at java.base/java.lang.reflect.Method.invoke(Method.java:566)	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)	at org.gradle.internal.event.DefaultListenerManager$ListenerDetails.dispatch(DefaultListenerManager.java:398)	at org.gradle.internal.event.DefaultListenerManager$ListenerDetails.dispatch(DefaultListenerManager.java:380)	at org.gradle.internal.event.AbstractBroadcastDispatch.dispatch(AbstractBroadcastDispatch.java:61)	at org.gradle.internal.event.DefaultListenerManager$EventBroadcast$ListenerDispatch.dispatch(DefaultListenerManager.java:368)	at org.gradle.internal.event.DefaultListenerManager$EventBroadcast$ListenerDispatch.dispatch(DefaultListenerManager.java:355)	at org.gradle.internal.event.AbstractBroadcastDispatch.dispatch(AbstractBroadcastDispatch.java:43)	at org.gradle.internal.event.BroadcastDispatch$SingletonDispatch.dispatch(BroadcastDispatch.java:245)	at org.gradle.internal.event.BroadcastDispatch$SingletonDispatch.dispatch(BroadcastDispatch.java:157)	at org.gradle.internal.event.AbstractBroadcastDispatch.dispatch(AbstractBroadcastDispatch.java:61)	at org.gradle.internal.event.BroadcastDispatch$CompositeDispatch.dispatch(BroadcastDispatch.java:346)	at org.gradle.internal.event.BroadcastDispatch$CompositeDispatch.dispatch(BroadcastDispatch.java:249)	at org.gradle.internal.event.ListenerBroadcast.dispatch(ListenerBroadcast.java:141)	at org.gradle.internal.event.ListenerBroadcast.dispatch(ListenerBroadcast.java:37)	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)	at com.sun.proxy.$Proxy18.buildFinished(Unknown Source)	at org.gradle.initialization.DefaultGradleLauncher.finishBuild(DefaultGradleLauncher.java:193)	at org.gradle.initialization.DefaultGradleLauncher.finishBuild(DefaultGradleLauncher.java:131)	at org.gradle.internal.invocation.GradleBuildController$1.create(GradleBuildController.java:73)	at org.gradle.internal.invocation.GradleBuildController$1.create(GradleBuildController.java:67)	at org.gradle.internal.work.DefaultWorkerLeaseService.withLocks(DefaultWorkerLeaseService.java:213)	at org.gradle.internal.invocation.GradleBuildController.doBuild(GradleBuildController.java:67)	at org.gradle.internal.invocation.GradleBuildController.run(GradleBuildController.java:56)	at org.gradle.tooling.internal.provider.runner.AbstractClientProvidedBuildActionRunner.runClientAction(AbstractClientProvidedBuildActionRunner.java:53)	at org.gradle.tooling.internal.provider.runner.ClientProvidedPhasedActionRunner.run(ClientProvidedPhasedActionRunner.java:47)	at org.gradle.launcher.exec.ChainingBuildActionRunner.run(ChainingBuildActionRunner.java:35)	at org.gradle.launcher.exec.ChainingBuildActionRunner.run(ChainingBuildActionRunner.java:35)	at org.gradle.launcher.exec.BuildOutcomeReportingBuildActionRunner.run(BuildOutcomeReportingBuildActionRunner.java:63)	at org.gradle.tooling.internal.provider.ValidatingBuildActionRunner.run(ValidatingBuildActionRunner.java:32)	at org.gradle.tooling.internal.provider.FileSystemWatchingBuildActionRunner.run(FileSystemWatchingBuildActionRunner.java:77)	at org.gradle.launcher.exec.BuildCompletionNotifyingBuildActionRunner.run(BuildCompletionNotifyingBuildActionRunner.java:41)	at org.gradle.launcher.exec.RunAsBuildOperationBuildActionRunner$3.call(RunAsBuildOperationBuildActionRunner.java:49)	at org.gradle.launcher.exec.RunAsBuildOperationBuildActionRunner$3.call(RunAsBuildOperationBuildActionRunner.java:44)	at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:200)	at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:195)	at org.gradle.internal.operations.DefaultBuildOperationRunner$3.execute(DefaultBuildOperationRunner.java:75)	at org.gradle.internal.operations.DefaultBuildOperationRunner$3.execute(DefaultBuildOperationRunner.java:68)	at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:153)	at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:68)	at org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:62)	at org.gradle.internal.operations.DefaultBuildOperationExecutor.lambda$call$2(DefaultBuildOperationExecutor.java:76)	at org.gradle.internal.operations.UnmanagedBuildOperationWrapper.callWithUnmanagedSupport(UnmanagedBuildOperationWrapper.java:54)	at org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:76)	at org.gradle.launcher.exec.RunAsBuildOperationBuildActionRunner.run(RunAsBuildOperationBuildActionRunner.java:44)	at org.gradle.launcher.exec.InProcessBuildActionExecuter.lambda$execute$0(InProcessBuildActionExecuter.java:54)	at org.gradle.composite.internal.DefaultRootBuildState.run(DefaultRootBuildState.java:86)	at org.gradle.launcher.exec.InProcessBuildActionExecuter.execute(InProcessBuildActionExecuter.java:53)	at org.gradle.launcher.exec.InProcessBuildActionExecuter.execute(InProcessBuildActionExecuter.java:29)	at org.gradle.launcher.exec.BuildTreeScopeLifecycleBuildActionExecuter.lambda$execute$0(BuildTreeScopeLifecycleBuildActionExecuter.java:33)	at org.gradle.internal.buildtree.BuildTreeState.run(BuildTreeState.java:49)	at org.gradle.launcher.exec.BuildTreeScopeLifecycleBuildActionExecuter.execute(BuildTreeScopeLifecycleBuildActionExecuter.java:32)	at org.gradle.launcher.exec.BuildTreeScopeLifecycleBuildActionExecuter.execute(BuildTreeScopeLifecycleBuildActionExecuter.java:27)	at org.gradle.tooling.internal.provider.ContinuousBuildActionExecuter.execute(ContinuousBuildActionExecuter.java:104)	at org.gradle.tooling.internal.provider.ContinuousBuildActionExecuter.execute(ContinuousBuildActionExecuter.java:55)	at org.gradle.tooling.internal.provider.SubscribableBuildActionExecuter.execute(SubscribableBuildActionExecuter.java:64)	at org.gradle.tooling.internal.provider.SubscribableBuildActionExecuter.execute(SubscribableBuildActionExecuter.java:37)	at org.gradle.tooling.internal.provider.SessionScopeLifecycleBuildActionExecuter.lambda$execute$0(SessionScopeLifecycleBuildActionExecuter.java:54)	at org.gradle.internal.session.BuildSessionState.run(BuildSessionState.java:67)	at org.gradle.tooling.internal.provider.SessionScopeLifecycleBuildActionExecuter.execute(SessionScopeLifecycleBuildActionExecuter.java:50)	at org.gradle.tooling.internal.provider.SessionScopeLifecycleBuildActionExecuter.execute(SessionScopeLifecycleBuildActionExecuter.java:36)	at org.gradle.tooling.internal.provider.GradleThreadBuildActionExecuter.execute(GradleThreadBuildActionExecuter.java:36)	at org.gradle.tooling.internal.provider.GradleThreadBuildActionExecuter.execute(GradleThreadBuildActionExecuter.java:25)	at org.gradle.tooling.internal.provider.StartParamsValidatingActionExecuter.execute(StartParamsValidatingActionExecuter.java:59)	at org.gradle.tooling.internal.provider.StartParamsValidatingActionExecuter.execute(StartParamsValidatingActionExecuter.java:31)	at org.gradle.tooling.internal.provider.SessionFailureReportingActionExecuter.execute(SessionFailureReportingActionExecuter.java:55)	at org.gradle.tooling.internal.provider.SessionFailureReportingActionExecuter.execute(SessionFailureReportingActionExecuter.java:41)	at org.gradle.tooling.internal.provider.SetupLoggingActionExecuter.execute(SetupLoggingActionExecuter.java:47)	at org.gradle.tooling.internal.provider.SetupLoggingActionExecuter.execute(SetupLoggingActionExecuter.java:31)	at org.gradle.launcher.daemon.server.exec.ExecuteBuild.doBuild(ExecuteBuild.java:65)	at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:37)	at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)	at org.gradle.launcher.daemon.server.exec.WatchForDisconnection.execute(WatchForDisconnection.java:39)	at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)	at org.gradle.launcher.daemon.server.exec.ResetDeprecationLogger.execute(ResetDeprecationLogger.java:29)	at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)	at org.gradle.launcher.daemon.server.exec.RequestStopIfSingleUsedDaemon.execute(RequestStopIfSingleUsedDaemon.java:35)	at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)	at org.gradle.launcher.daemon.server.exec.ForwardClientInput$2.create(ForwardClientInput.java:78)	at org.gradle.launcher.daemon.server.exec.ForwardClientInput$2.create(ForwardClientInput.java:75)	at org.gradle.util.Swapper.swap(Swapper.java:38)	at org.gradle.launcher.daemon.server.exec.ForwardClientInput.execute(ForwardClientInput.java:75)	at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)	at org.gradle.launcher.daemon.server.exec.LogAndCheckHealth.execute(LogAndCheckHealth.java:55)	at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)	at org.gradle.launcher.daemon.server.exec.LogToClient.doBuild(LogToClient.java:63)	at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:37)	at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)	at org.gradle.launcher.daemon.server.exec.EstablishBuildEnvironment.doBuild(EstablishBuildEnvironment.java:84)	at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:37)	at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)	at org.gradle.launcher.daemon.server.exec.StartBuildOrRespondWithBusy$1.run(StartBuildOrRespondWithBusy.java:52)	at org.gradle.launcher.daemon.server.DaemonStateCoordinator$1.run(DaemonStateCoordinator.java:297)	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)	at java.base/java.lang.Thread.run(Thread.java:829)Caused by: java.lang.RuntimeException: Problems reading data from Binary store in /private/var/folders/92/2yqlfyrj3lqcvrhtdwxj8djc0000gp/T/gradle4764667475555250691.bin offset 86 exists? true	at org.gradle.api.internal.artifacts.ivyservice.resolveengine.store.DefaultBinaryStore$SimpleBinaryData.read(DefaultBinaryStore.java:132)	at org.gradle.api.internal.artifacts.ivyservice.resolveengine.oldresult.TransientConfigurationResultsBuilder.lambda$load$6(TransientConfigurationResu"
20508,0,1133,29,0,0,DPUkyle,0,"title:Possible unexpected state in scheduler causing deadlock description:One of our integration tests has become [flaky](https://gradle.slack.com/archives/C03A0MT6S/p1650461456149339?thread_ts=1650411083.369809&cid=C03A0MT6S), and only when run with the parallel executor.git-bisect tells us the flakiness started with bd4e7a0, but we think there could be related changes in #20419 also.We suspect a concurrency issue where a TaskNode fails and is marked EXECUTING -> EXECUTED, but before its dependency successors can be canceled, a successor's state also shifts to EXECUTED, which is unexpected.If not for the assertion in [Node:266](https://github.com/gradle/gradle/blob/bf05b8f38f733b04fcf6071dd31f5d82b29bf1ab/subprojects/core/src/main/java/org/gradle/execution/plan/Node.java#L266) exposed by the test, this would look like a deadlock in production code and Gradle might hang indefinitely.Steps to reproduce:1. Apply this patch:```Index: subprojects/plugins/src/integTest/groovy/org/gradle/api/plugins/TestReportAggregationPluginIntegrationTest.groovyIDEA additional info:Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP<+>UTF-8===================================================================diff --git a/subprojects/plugins/src/integTest/groovy/org/gradle/api/plugins/TestReportAggregationPluginIntegrationTest.groovy b/subprojects/plugins/src/integTest/groovy/org/gradle/api/plugins/TestReportAggregationPluginIntegrationTest.groovy--- a/subprojects/plugins/src/integTest/groovy/org/gradle/api/plugins/TestReportAggregationPluginIntegrationTest.groovy	(revision 64d7940e8dc191a460604b31e88d9e45134d9150)+++ b/subprojects/plugins/src/integTest/groovy/org/gradle/api/plugins/TestReportAggregationPluginIntegrationTest.groovy	(date 1650472828541)@@ -423,7 +423,7 @@             """"""          when:-        fails("":application:testAggregateTestReport"")+        fails("":application:testAggregateTestReport"", ""--parallel"")          then:         failure.assertHasDescription(""Execution failed for task ':direct:test'."")```2. Run `$ ./gradlew :plugins:embeddedIntegTest --tests ""org.gradle.api.plugins.TestReportAggregationPluginIntegrationTest.test verification failure prevents creation of aggregated report"" -is`. 3. The project under test will fail as expected, but throw an exception after 30 seconds from `org.gradle.execution.plan.Node.cancelExecution(Node.java:266)`.More details in this slack [thread](https://gradle.slack.com/archives/C03A0MT6S/p1650411083369809).
"
20482,1,3726,34,0,1,juanmbellini,0,"title:When using the jacoco report aggregation plugin, some classes are not clickable in the report. description:Maybe I'm not understanding well something about the jacoco-report-aggregation plugin...I have a multi module project with the following structure```.闂傚倷绀侀悿鍥綖婢跺鐝堕柡鍥ュ灩缂佲晠鏌曡箛瀣偓鏇㈡偂濮椻偓閺?buildSrc闂傚倷绀佺壕顓㈠箠閹炬潙顕遍柛鏇ㄥ灡閸?闂傚倷绀侀悿鍥綖婢跺鐝堕柡鍥ュ灩缂佲晠鏌曡箛瀣偓鏇㈡偂濮椻偓閺?build.gradle闂傚倷绀佺壕顓㈠箠閹炬潙顕遍柛鏇ㄥ灡閸?闂傚倷绀侀悿鍥綖婢跺鐝堕柡鍥ュ灩缂佲晠鏌曡箛瀣偓鏇㈡偂濮椻偓閺?gradle.properties闂傚倷绀佺壕顓㈠箠閹炬潙顕遍柛鏇ㄥ灡閸?闂傚倷绀侀悿鍥綖婢舵劕钃熼柨鐔哄Т缂佲晠鏌曡箛瀣偓鏇㈡偂濮椻偓閺?src闂傚倷绀佺壕顓㈠箠閹炬潙顕遍柛鏇ㄥ灡閸?    闂傚倷绀侀悿鍥綖婢舵劕钃熼柨鐔哄Т缂佲晠鏌曡箛瀣偓鏇㈡偂濮椻偓閺?main闂傚倷绀佺壕顓㈠箠閹炬潙顕遍柛鏇ㄥ灡閸?        闂傚倷绀侀悿鍥綖婢舵劕钃熼柨鐔哄Т缂佲晠鏌曡箛瀣偓鏇㈡偂濮椻偓閺?groovy闂傚倷绀佺壕顓㈠箠閹炬潙顕遍柛鏇ㄥ灡閸?            闂傚倷绀侀悿鍥綖婢跺鐝堕柡鍥ュ灩缂佲晠鏌曡箛瀣偓鏇㈡偂濮椻偓閺?java-common-conventions.gradle闂傚倷绀佺壕顓㈠箠閹炬潙顕遍柛鏇ㄥ灡閸?            闂傚倷绀侀悿鍥綖婢跺鐝堕柡鍥ュ灩缂佲晠鏌曡箛瀣偓鏇㈡偂濮椻偓閺?modules-conventions.gradle闂傚倷绀佺壕顓㈠箠閹炬潙顕遍柛鏇ㄥ灡閸?            闂傚倷绀侀悿鍥綖婢舵劕钃熼柨鐔哄Т缂佲晠鏌曡箛瀣偓鏇㈡偂濮椻偓閺?springboot-application-conventions.gradle闂傚倷绀侀悿鍥綖婢跺鐝堕柡鍥ュ灩缂佲晠鏌曡箛瀣偓鏇㈡偂濮椻偓閺?gradle.properties闂傚倷绀侀悿鍥綖婢跺鐝堕柡鍥ュ灩缂佲晠鏌曡箛瀣偓鏇㈡偂濮椻偓閺?gradlew闂傚倷绀侀悿鍥綖婢跺鐝堕柡鍥ュ灩缂佲晠鏌曡箛瀣偓鏇㈡偂濮椻偓閺?gradlew.bat闂傚倷绀侀悿鍥綖婢跺鐝堕柡鍥ュ灩缂佲晠鏌曡箛瀣偓鏇㈡偂濮椻偓閺?modules闂傚倷绀佺壕顓㈠箠閹炬潙顕遍柛鏇ㄥ灡閸?闂傚倷绀侀悿鍥綖婢跺鐝堕柡鍥ュ灩缂佲晠鏌曡箛瀣偓鏇㈡偂濮椻偓閺?adapters闂傚倷绀佺壕顓㈠箠閹炬潙顕遍柛鏇ㄥ灡閸?闂傚倷绀佺壕顓㈠箠閹炬潙顕遍柛鏇ㄥ灡閸?闂傚倷绀侀悿鍥綖婢跺鐝堕柡鍥ュ灩缂佲晠鏌曡箛瀣偓鏇㈡偂濮椻偓閺?spring-data-persistence-adapter闂傚倷绀佺壕顓㈠箠閹炬潙顕遍柛鏇ㄥ灡閸?闂傚倷绀佺壕顓㈠箠閹炬潙顕遍柛鏇ㄥ灡閸?闂傚倷绀侀悿鍥綖婢跺鐝堕柡鍥ュ灩缂佲晠鏌曡箛瀣偓鏇㈡偂濮椻偓閺?spring-security-authentication-adapter闂傚倷绀佺壕顓㈠箠閹炬潙顕遍柛鏇ㄥ灡閸?闂傚倷绀佺壕顓㈠箠閹炬潙顕遍柛鏇ㄥ灡閸?闂傚倷绀侀悿鍥綖婢舵劕钃熼柨鐔哄Т缂佲晠鏌曡箛瀣偓鏇㈡偂濮椻偓閺?spring-webmvc-service-adapter闂傚倷绀佺壕顓㈠箠閹炬潙顕遍柛鏇ㄥ灡閸?闂傚倷绀侀悿鍥綖婢跺鐝堕柡鍥ュ灩缂佲晠鏌曡箛瀣偓鏇㈡偂濮椻偓閺?core闂傚倷绀佺壕顓㈠箠閹炬潙顕遍柛鏇ㄥ灡閸?闂傚倷绀佺壕顓㈠箠閹炬潙顕遍柛鏇ㄥ灡閸?闂傚倷绀侀悿鍥綖婢跺鐝堕柡鍥ュ灩缂佲晠鏌曡箛瀣偓鏇㈡偂濮椻偓閺?model闂傚倷绀佺壕顓㈠箠閹炬潙顕遍柛鏇ㄥ灡閸?闂傚倷绀佺壕顓㈠箠閹炬潙顕遍柛鏇ㄥ灡閸?闂傚倷绀侀悿鍥綖婢跺鐝堕柡鍥ュ灩缂佲晠鏌曡箛瀣偓鏇㈡偂濮椻偓閺?usecase闂傚倷绀佺壕顓㈠箠閹炬潙顕遍柛鏇ㄥ灡閸?闂傚倷绀佺壕顓㈠箠閹炬潙顕遍柛鏇ㄥ灡閸?闂傚倷绀侀悿鍥綖婢舵劕钃熼柨鐔哄Т缂佲晠鏌曡箛瀣偓鏇㈡偂濮椻偓閺?utilities闂傚倷绀佺壕顓㈠箠閹炬潙顕遍柛鏇ㄥ灡閸?闂傚倷绀侀悿鍥綖婢跺鐝堕柡鍥ュ灩缂佲晠鏌曡箛瀣偓鏇㈡偂濮椻偓閺?main闂傚倷绀佺壕顓㈠箠閹炬潙顕遍柛鏇ㄥ灡閸?闂傚倷绀佺壕顓㈠箠閹炬潙顕遍柛鏇ㄥ灡閸?闂傚倷绀侀悿鍥綖婢跺鐝堕柡鍥ュ灩缂佲晠鏌曡箛瀣偓鏇㈡偂濮椻偓閺?build闂傚倷绀佺壕顓㈠箠閹炬潙顕遍柛鏇ㄥ灡閸?闂傚倷绀佺壕顓㈠箠閹炬潙顕遍柛鏇ㄥ灡閸?闂傚倷绀侀悿鍥綖婢跺鐝堕柡鍥ュ灩缂佲晠鏌曡箛瀣偓鏇㈡偂濮椻偓閺?build.gradle闂傚倷绀佺壕顓㈠箠閹炬潙顕遍柛鏇ㄥ灡閸?闂傚倷绀侀悿鍥綖婢跺鐝堕柡鍥ュ灩缂佲晠鏌曡箛瀣偓鏇㈡偂濮椻偓閺?ports闂傚倷绀佺壕顓㈠箠閹炬潙顕遍柛鏇ㄥ灡閸?闂傚倷绀佺壕顓㈠箠閹炬潙顕遍柛鏇ㄥ灡閸?闂傚倷绀侀悿鍥綖婢跺鐝堕柡鍥ュ灩缂佲晠鏌曡箛瀣偓鏇㈡偂濮椻偓閺?authentication-port闂傚倷绀佺壕顓㈠箠閹炬潙顕遍柛鏇ㄥ灡閸?闂傚倷绀佺壕顓㈠箠閹炬潙顕遍柛鏇ㄥ灡閸?闂傚倷绀侀悿鍥綖婢跺鐝堕柡鍥ュ灩缂佲晠鏌曡箛瀣偓鏇㈡偂濮椻偓閺?persistence-port闂傚倷绀佺壕顓㈠箠閹炬潙顕遍柛鏇ㄥ灡閸?闂傚倷绀佺壕顓㈠箠閹炬潙顕遍柛鏇ㄥ灡閸?闂傚倷绀侀悿鍥綖婢舵劕钃熼柨鐔哄Т缂佲晠鏌曡箛瀣偓鏇㈡偂濮椻偓閺?service-port闂傚倷绀佺壕顓㈠箠閹炬潙顕遍柛鏇ㄥ灡閸?闂傚倷绀侀悿鍥綖婢舵劕钃熼柨鐔哄Т缂佲晠鏌曡箛瀣偓鏇㈡偂濮椻偓閺?resources闂傚倷绀佺壕顓㈠箠閹炬潙顕遍柛鏇ㄥ灡閸?    闂傚倷绀侀悿鍥綖婢跺鐝堕柡鍥ュ灩缂佲晠鏌曡箛瀣偓鏇㈡偂濮椻偓閺?build闂傚倷绀佺壕顓㈠箠閹炬潙顕遍柛鏇ㄥ灡閸?    闂傚倷绀侀悿鍥綖婢跺鐝堕柡鍥ュ灩缂佲晠鏌曡箛瀣偓鏇㈡偂濮椻偓閺?build.gradle闂傚倷绀侀悿鍥綖婢舵劕钃熼柨鐔哄Т缂佲晠鏌曡箛瀣偓鏇㈡偂濮椻偓閺?settings.gradle```In the `buildSrc` I have some convention plugins. The `java-common-conventions` plugin is defined as the following:```groovyplugins {    id 'java'    id 'jacoco'    id 'io.spring.dependency-management'}repositories {    mavenCentral()}dependencyManagement {    imports {        mavenBom org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES    }}group = 'com.github.juanmbellini'version = '0.0.1-SNAPSHOT'java {    sourceCompatibility = JavaVersion.VERSION_17    targetCompatibility = JavaVersion.VERSION_17}configurations {    compileOnly {        extendsFrom annotationProcessor    }}compileJava {    options.encoding = 'UTF-8'    options.compilerArgs << '-parameters'}compileTestJava {    options.encoding = 'UTF-8'}ext {    jjwtVersion = ""0.11.2""}dependencies {    compileOnly 'org.projectlombok:lombok'    annotationProcessor 'org.projectlombok:lombok'    implementation 'org.apache.commons:commons-lang3'    testCompileOnly 'org.projectlombok:lombok'    testAnnotationProcessor 'org.projectlombok:lombok'    testImplementation 'org.mockito:mockito-core'    testImplementation 'org.mockito:mockito-junit-jupiter'    testImplementation 'org.junit.jupiter:junit-jupiter-api'    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'}tasks.named('test') {    useJUnitPlatform()}test {    finalizedBy jacocoTestReport}jacocoTestReport {    dependsOn test}```This plugin is used by all subprojects.Then I have a plugin which is only used by the main subproject - i.e the one defining the main method - called : `springboot-application-conventions````groovyplugins {    id 'java-common-conventions'    id 'jacoco-report-aggregation'    id 'org.springframework.boot'}dependencies {    implementation 'org.springframework.boot:spring-boot-starter'    testImplementation 'org.springframework.boot:spring-boot-starter-test'}tasks.named('check') {    dependsOn tasks.named('testCodeCoverageReport', JacocoReport)}```This works perfectly well except for the fact that it only generates report pages for java classes (i.e pages where I can see the code with the green and red highlights, the diamonds, etc.) that are in the main module, but classes in all other modules do not have these pages. I can see coverage percentages for each class and method, but I cannot see the code with the coverage data.### Expected BehaviorAll classes should be clickable in order to gather coverage data in an aggregated way without having to navigate each project.### Current BehaviorOnly classes in the main module (the one with aggregation plugin) are clickable in the report.### ContextNot affecting work right now as I'm learning how to use this plugin. In my case I was able to partially fix it with the  following hack (added to the main subproject `build.gradle`):```groovydef otherModules = [        ':modules:resources',        ':modules:core:model',        ':modules:core:usecase',        ':modules:core:utilities',        ':modules:ports:persistence-port',        ':modules:ports:authentication-port',        ':modules:ports:service-port',        ':modules:adapters:spring-data-persistence-adapter',        ':modules:adapters:spring-security-authentication-adapter',        ':modules:adapters:spring-webmvc-service-adapter']otherModules.each {    evaluationDependsOn it}testCodeCoverageReport {    for (module in otherModules) {        sourceSets project(module).sourceSets.main    }}```The problem with this is that I have to manually add each subproject to the main subproject, which I think it's super error-prone.### Steps to Reproduce I don't have a public project to be shared right now, but I can prepare one.### Environment```------------------------------------------------------------Gradle 7.4.2------------------------------------------------------------Build time:   2022-03-31 15:25:29 UTCRevision:     540473b8118064efcc264694cbcaa4b677f61041Kotlin:       1.5.31Groovy:       3.0.9Ant:          Apache Ant(TM) version 1.10.11 compiled on July 10 2021JVM:          17.0.2 (Homebrew 17.0.2+0)OS:           Mac OS X 11.6 x86_64```
"
20478,0,178,297,0,0,big-guy,0,"title:Incremental java compiler does not detect changes to classes used in type parameters in some cases description:### Expected BehaviorGradle build should fail when Java compilation should fail.### Current BehaviorGradle build succeeds when Java compilation should fail.### ContextGiven these classes:```interface Super <T> { 	T getResult();}interface Sub extends Super<Deleted> { }interface Deleted {}```If I delete `Deleted`, `Sub` should be recompiled (and fail compilation). I found this in the gradle/gradle codebase when deleting some classes.The build fails if `Sub` has a reference to `T` or I disable incremental compilation.A similar thing happens in a slightly simpler example:```interface Sub<T extends Deleted> { }interface Deleted {}```It looks like we ignore the type parameters in some cases.### Steps to Reproduce I reproduced the failure in a test:https://github.com/gradle/gradle/pull/20479### Your EnvironmentThis happens everywhere.I tested 5.0, 6.0, 7.0 and 7.3/7.4/7.5. I think this has never worked. 
"
20473,0,1496,87,0,0,lwasyl,0,"title:`./gradlew projects` fails the second time with configuration cache enabled description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues--><!--- Provide a brief summary of the issue in the title above -->### Expected BehaviorI can run `./gradlew projects` multiple times and it works### Current Behavior<!--- Tell us what happens instead of the expected behavior -->```闂傚倷绀佺壕顓㈠磿閵堝棛鐝堕悗锝庡枛缂佲晠鏌曡箛瀣偓鏇€?./gradlew projects                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Configuration cache is an incubating feature.Reusing configuration cache.> Task :projects FAILEDFAILURE: Build failed with an exception.* What went wrong:Execution failed for task ':projects'.> The value of this property has been discarded during serialization.* Try:> Run with --stacktrace option to get the stack trace.> Run with --info or --debug option to get more log output.> Run with --scan to get full insights.* Get more help at https://help.gradle.orgBUILD FAILED in 655ms1 actionable task: 1 executedConfiguration cache entry reused.```### Context<!--- How has this issue affected you? What are you trying to accomplish? --><!--- Providing context helps us come up with a solution that is most useful in the real world -->### Steps to Reproduce <!---Provide a self-contained example project as an attached archive or a Github project.You can use the following template with a Gradle GitHub action set up to showcase your problem: https://github.com/gradle/gradle-issue-reproducerIn the rare cases where this is infeasible, we will also accept a detailed set of instructions.-->- Create a basic project with `gradle init`- run `.gradlew projects --configuration-cache` twice- observe the error### Your Environment<!--- Include as many relevant details about the environment you experienced the bug in --><!--- A build scan https://scans.gradle.com/get-started is ideal -->Build scan URL:```------------------------------------------------------------Gradle 7.4.2------------------------------------------------------------Build time:   2022-03-31 15:25:29 UTCRevision:     540473b8118064efcc264694cbcaa4b677f61041Kotlin:       1.5.31Groovy:       3.0.9Ant:          Apache Ant(TM) version 1.10.11 compiled on July 10 2021JVM:          18 (Eclipse Adoptium 18+36)OS:           Mac OS X 12.3.1 x86_64```
"
20461,0,0,7,0,0,bingranl,0,"title:""--offline"" execution option should be considered as configuration input description:### Expected Behavior<!--- Tell us what should happen -->Gradle should take `--offline` as configuration input which means configuration cache should be invalid when `--offline` value is changed.### Current Behavior<!--- Tell us what happens instead of the expected behavior -->Configuration cache is reused when `--offline` value is changed.### Context<!--- How has this issue affected you? What are you trying to accomplish? --><!--- Providing context helps us come up with a solution that is most useful in the real world -->AGP respects `--offline`  when download sdk components. Currently the downloading of sdk components(e.g. bootstrap classpath) is triggered during task graph is being built although the computing of sdk component is wrapped by provider.  Basically, if `--offline` option changes, we could do different things regarding to sdk downloading in the configuration phase of the second run, but configuration cache is re-used in the second run which prevents us from going through sdk downloading again
"
20451,1,0,14,0,0,Alexandre05,0,"title:org.gradle.api.internal.artifacts.ivyservice.DefaultLenientConfiguration$ArtifactResolveException: N闂備浇澹堥崑鎰扮嵁?foi poss闂傚倷鐒﹂崕鎶藉极婵傜皞 resolver todos os arquivos para configura闂備礁鍚嬮崕鎶藉焵椤掑倸鏋庨柣銊х彸 ':app:debugCompileClasspath' description:I'm creating an app to adopt street animals, I need to use images to show a carousel, but there's no way. How to solve this problem, when trying to download dependency on android stuido version Bumblebee? 
"
20444,1,437,292,0,1,naturecodevoid,0,"title:Issues with gradle on an exFAT filesystem on MacOS description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues-->I闂傚倷鑳堕崑銊╁磿閺屻儲鍋橀柣?been having this problem for a few months. Whenever I try to run any gradle command, it errors with the following error:```FAILURE: Build failed with an exception.* What went wrong:Gradle could not start your build.> Could not create service of type FileHasher using BuildSessionServices.createFileHasher().   > Timeout waiting to lock file hash cache (project/.gradle/7.4.2/fileHashes). It is currently in use by this Gradle process.Owner Operation: unknown     Our operation:      Lock file: project/.gradle/7.4.2/fileHashes/fileHashes.lock```This error was from a `gradle wrapper` command, it shouldn闂傚倷鑳堕崑銊╁磿閺屻儲鍋?of tried to build anything. I闂傚倷鑳堕崑銊╁磿閺屻儲鍋橀柣?tried deleting `project/.gradle`, `~/.gradle`, restarting my computer, updating gradle, killing all the gradle processes after clearing the .gradle folders, nothing has fixed it. It闂傚倷鑳堕崑銊╁磿閺屻儲鍋?been a few months since I闂傚倷鑳堕崑銊╁磿閺屻儲鍋橀柣?used gradle and I remember there was a fix that would fix it for a build or two, but I can闂傚倷鑳堕崑銊╁磿閺屻儲鍋?remember the details and it never fully fixed it. I闂傚倷鑳堕崑銊╁磿閺屻儲鍋?on MacOS 11.6.2, been happening with Gradle 7.3 and 7.4.2. It will also error for `checksums.lock`, `dependencies-accessors.lock`, and `fileHashes.lock` from any gradle command except `gradle --status`. This issue prevents me from working on almost anything with gradle and java.After further experimentation, it seems to be a problem with the exFAT filesystem type. I copied the project to my main hard drive from my SSD and all gradle commands work perfectly.### Expected BehaviorGradle should work as expected for all filesystems.### Current BehaviorGradle does not work in the exFAT filesystem type.### Context<!--- How has this issue affected you? What are you trying to accomplish? --><!--- Providing context helps us come up with a solution that is most useful in the real world -->For the past few months, I've been almost completely unable to use or develop with java and gradle. It's a been huge pain and has delayed multiple projects. Like I said above, there was a small fix that occurred after some combination of deleting lock files and cache folders but it only fixed it for the next build and the issue persisted after it. ### Steps to Reproduce <!---Provide a self-contained example project as an attached archive or a Github project.You can use the following template with a Gradle GitHub action set up to showcase your problem: https://github.com/gradle/gradle-issue-reproducerIn the rare cases where this is infeasible, we will also accept a detailed set of instructions.-->Running `gradle wrapper --gradle-version=7.4.2 --distribution-type=bin` in an exFAT filesystem should fail with a similar error as seen above. I haven't tested it with any other filesystem types or with other operating systems.### Your Environment<!--- Include as many relevant details about the environment you experienced the bug in --><!--- A build scan https://scans.gradle.com/get-started is ideal -->OS: MacOS 11.6.2 (intel)Java Version: OpenJDK Runtime Environment (build 17+35-2724)Gradle Version: 7.4.2
"
20432,0,0,262,0,0,3flex,0,"title:JaCoCo Report Aggregation Plugin uses JARs not class directories in allCodeCoverageReportClassDirectories configuration description:### Expected BehaviorWhen I apply `jacoco-report-aggregation` plugin to a project and use `jacocoAggregation` to declare project dependencies, the `allCodeCoverageReportClassDirectories` configuration will resolve to class directories for the dependencies, not JAR files.[Current docs](https://docs.gradle.org/7.4.2/userguide/jacoco_report_aggregation_plugin.html#sec:dependency_management) say the `allCodeCoverageReportClassDirectories` configuration> Consumes the project dependencies to from the jacocoAggregation configuration to collect **_all classes directories_**.### Current Behavior`allCodeCoverageReportClassDirectories` configuration resolves to JAR output of the dependencies declared with `jacocoAggregation`.### ContextThe project I use embeds some dependencies in the generated JAR of one of the projects. These are then reported in the generated report. If class directories were resolved the dependencies bundled in the JAR would be correctly excluded.I also can't control which project classes are reported either as it's not possible (or easy?) to exclude elements of the JAR file.### Steps to Reproduce I have simply added a task to print the resolved files from the `allCodeCoverageReportClassDirectories` configuration in `code-coverage-report` project - run `./gradlew :code-coverage-report:printAllCodeCoverageReportClassDirectories` to see the resolved files are JARs.![image](https://user-images.githubusercontent.com/170028/162648736-b042a4d4-6624-4d12-9d6c-0273ebd72483.png)[sample_jvm_multi_project_with_code_coverage_standalone-kotlin-dsl.zip](https://github.com/gradle/gradle/files/8460317/sample_jvm_multi_project_with_code_coverage_standalone-kotlin-dsl.zip)### Your Environment<!--- Include as many relevant details about the environment you experienced the bug in --><!--- A build scan https://scans.gradle.com/get-started is ideal -->Build scan URL:
"
20430,1,0,100,0,0,mozhuanzuojing,0,"title:`ServiceLoader.load(ToolProvider.class)` execute in `Gradle Task`, `JDK Service Provider` not found description:<!--- Provide a brief summary of the issue in the title above -->I want to find and use `com.sun.tools.jdeps.Main$JDepsToolProvider` in `Gradle Task` via execute `ServiceLoader.load(ToolProvider.class)`.### Expected Behavior<!--- Tell us what should happen -->All service providers of `JDK17` can be found via execute `Gradle Task`.### Current Behavior<!--- Tell us what happens instead of the expected behavior -->no `JDK17` service provider has been found.### Context<!--- How has this issue affected you? What are you trying to accomplish? --><!--- Providing context helps us come up with a solution that is most useful in the real world -->- gradle script and gradle plugin cannot use jdk's service provider. E.g `javadoc`, `jmod`, `jlink`, `javac`, `javap`, `jdeps`, `jar`, `jpackage`- I want to call `jdeps` in gradle script or gradle plugin to analyze dependencies of class.- No solution found so far.### Steps to Reproduce <!---Provide a self-contained example project as an attached archive or a Github project.You can use the following template with a Gradle GitHub action set up to showcase your problem: https://github.com/gradle/gradle-issue-reproducerIn the rare cases where this is infeasible, we will also accept a detailed set of instructions.-->1. git clone https://gitee.com/mozhuanzuojing/gradle-jdeps.git2. open `gradle-jdeps` and wait build.3. open file `build.gradle`, please notice task `jdeps`.4. execute task `gradle-jdeps` -> `jdeps` -> `jdeps`> Screenshots![image](https://user-images.githubusercontent.com/63572041/162612043-0eb764be-c612-41db-acd5-f1b310cf7d8d.png)![image](https://user-images.githubusercontent.com/63572041/162612198-139ae1f7-298e-4491-b413-346f5223ef58.png)### Your Environment<!--- Include as many relevant details about the environment you experienced the bug in --><!--- A build scan https://scans.gradle.com/get-started is ideal -->Build scan URL: `https://gradle.com/s/aqo7oundhddws`
"
20427,0,0,251,0,1,ghale,0,"title:Fall back to hashing the zip entry when ABI extraction fails during fingerprinting description:Fixes #20398 
"
20424,1,860,40,0,0,raphiz,0,"title:Kotlin stdlib extension functions cannot be used when applying the precompiled kotlin script plugin (`kotlin-dsl`)  description:### Expected BehaviorIt should still be possible to use extension functions from the Kotlin stdlib (eg. [`Path.writeText`](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.io.path/java.nio.file.-path/write-text.html)) when applying the `kotlin-dsl` plugin. When the code compiles without it, it should continue to compile when this plugin is applied.```kotlinplugins {    `kotlin-dsl`    id(""org.jetbrains.kotlin.jvm"") version ""1.5.31""}``````kotlin// REGULAR Kotlin code (not DSL / *.kts)import java.nio.file.Pathimport kotlin.io.path.writeTextfun thisShouldCompile() {    Path.of(""thisDoesNotWork"").writeText(""Hello World"")}```### Current BehaviorWhen the `kotlin-dsl` plugin is applied, some extension functions from the Kotlin stdlib  (eg. [`Path.writeText`](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.io.path/java.nio.file.-path/write-text.html)) are not recognized anymore, resulting in a compilation failure:```$ ./gradlew compileKotlin> Task :plugin:compileKotlin FAILED'compileJava' task (current target is 17) and 'compileKotlin' task (current target is 1.8) jvm target compatibility should be set to the same Java version.e: /path/to/gradle-kotlin-dsl-plugin-issue/plugin/src/main/kotlin/com/example/Example.kt: (9, 32): Unresolved reference. None of the following candidates is applicable because of receiver type mismatch: public fun File.writeText(text: String, charset: Charset = ...): Unit defined in kotlin.ioFAILURE: Build failed with an exception.```### ContextI have a set of [convention plugins](https://docs.gradle.org/current/samples/sample_convention_plugins.html#compiling_convention_plugins) implemented as [precompiled script plugins](https://docs.gradle.org/current/userguide/custom_plugins.html#sec:precompiled_plugins) in the Gradle Kotlin DSL.I now want to add additional ""regular"" Kotlin code in the same project, for example to define custom tasks. In this additional, non-DSL Kotlin code, I should be able to use all available Kotlin stdlib extension functions.### Steps to Reproduce I created a [repository](https://github.com/raphiz/gradle-kotlin-dsl-plugin-issue) which illustrates problem.Only If you comment out the [`kotlin-dsl` plugin](https://github.com/raphiz/gradle-kotlin-dsl-plugin-issue/blob/main/plugin/build.gradle.kts#L3), the code will compile.### Your EnvironmentI created two build scans, one [with the `kotlin-dsl` plugin enabled](https://scans.gradle.com/s/5cnexspclfpiu) and one [without it](https://scans.gradle.com/s/odmfhlkdjssue)
"
20406,0,0,41,1,1,mdeinum,0,"title:Toolchain not downloading Java18 for specific vendor description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues-->We currently have a build with a toolchain using Java 17. We decided we want to move to Java 18. However this failed. Initially I figured this is due to using the `api.adoptopenjdk.net` and I switched to `api.adoptium.net`, however the result is the same. The URL that is **always** being used is `https://api.adoptium.net/v3/binary/latest/18/ga/windows/x64/jdk/hotspot/normal/adoptopenjdk` even when explicitly setting the vendor to `ADOPTIUM`. When manually entering the URL `https://api.adoptium.net/v3/binary/latest/18/ga/windows/x64/jdk/hotspot/normal/adoptium` a proper JDK for Java 18 is downloaded. It looks like that the Vendor property is totally ignored for downloading a JDK. ### Expected BehaviorDownloading the proper JDK based on the provided vendor. ### Current BehaviorNot downloading the JDK based on the Vendor specified, it will always download the AdoptOpenJdk one. ### ContextWe are trying to move our build (locally and on the server) to Java 18, currently this is impossible as no Java 18 is being downloaded. I can locally do a manual install of Java18 I cannot do this on our server. When supplying a Vendor the proper URL should be used to download the JDK requested and not always the AdoptOpenJdk one. ### Steps to Reproduce Create a java project with a toolchain for java 18, try to build and it will fail. ### Your EnvironmentWindows 10, Intellij IDEA (but the command line fails likewise).Gradle 7.4.2 through the Gradle WrapperThe issue with not using the vendor should have been fixed with https://github.com/gradle/gradle/issues/17148 (but apparently not for other vendors). Probably related: https://github.com/gradle/gradle/issues/20344See also: https://discuss.gradle.org/t/java-toolchain-for-java-18-on-windows-failing/42641
"
20398,0,0,251,0,0,ghale,0,"title:Failing to fingerprint the class API should not fail the entire zip/jar description:When Gradle fingerprints a zip file with compile classpath normalization, it fingerprints the public API of each class in the zip file.  If there's an error calculating the public API (for instance an ASM error while inspecting the class: #20394), it fails for the entire zip file and it falls back to hashing the entire file.In such a case, it should fall back to hashing just the zip entry (the class file) rather than failing the entire zip.  This does mean you could get cache misses on implementation changes in the class (rather than only on API changes) but this is better than hashing the entire zip and getting misses on _any_ change whatsoever.### Expected BehaviorA failure fingerprinting an individual class file should only change the fingerprint for that class file.### Current BehaviorIt falls back to hashing the entire zip.
"
20394,0,0,251,0,0,ghale,0,"title:Support latest JDK features while inspecting classes description:Gradle currently uses ASM 9.1 and supports executing on JDK 17.  However, the class inspection used while calculating classes API surface declares that it only supports up to ASM7:  https://github.com/gradle/gradle/blob/3e1d8e2cebe108e657d21c65d6de5cbe511364b6/subprojects/normalization-java/src/main/java/org/gradle/internal/normalization/java/impl/ApiMemberSelector.java#L58.  ASM7 only supports features up to JDK14.We should upgrade this to ASM9 and address any compatibility issues if they exist.### Expected BehaviorClasses built with JDK15+ and utilizing features from those newer JDK versions can be inspected### Current BehaviorThe inspector fails with an UnsupportedOperationException when it encounters classes that require a newer version of the ASM api.### ContextThis came up in a build that uses Compile Classpath normalization for an input to a task, which uses class inspection to fingerprint the public API of classes.  The input has a class that uses the JDK15 ""sealed"" modifier (https://docs.oracle.com/en/java/javase/15/language/sealed-classes-and-interfaces.html).  When the fingerprinting encounters this, it blows up while inspecting the class and throws `java.lang.UnsupportedOperationException: PermittedSubclasses requires ASM9`.  This then causes the normalization to fail, and Gradle ends up falling back to hashing the whole jar file.
"
20390,0,469,5,0,0,fdaca,0,"title:Using `rename { ... }` in `Copy` task silently breaks configuration cache description:<!--- Provide a brief summary of the issue in the title above -->build.gradle:```groovytasks.register('foo', Copy) {  from('bar') { rename { 'biz' } }}tasks.register('foo2', Copy) {  from('bar')}```When running:```gradle foo --configuration-cachegradle foo2 --configuration-cache```... configuration cache is **stored successfully** for both tasks. But when running it again, it **fails to use stored configuration** for `foo` with:```Could not load the value of field `transformer` of `org.gradle.api.internal.file.copy.RenamingCopyAction` bean found in field `mainSpec` of task `:foo` of type `org.gradle.api.tasks.Copy`.> org.gradle.api.internal.file.copy.CopySpecWrapper$$Lambda$555/1558540076````foo2` is working as expected and properly using stored configuration cache### Expected BehaviorStoring configuration cache for `from('bar') { rename { 'biz' } }` should fail with regular configuration-cache issue discovered.ORConfiguration cache should work for `from('bar') { rename { 'biz' } }`### Your EnvironmentTested on gradle `7.4` and `7.4.2`
"
20383,0,682,282,0,0,hegyibalint,1,"title:Version catalog builders should not accept multiple `toml` files description:Meanwhile reproducing #20282, a new issue came up: multiple `toml` files can be imported into a single version catalog.@ljacomet affirmed that this was the old behavior of the version catalog, and now it should not accept any form of multi-file import.### Expected BehaviorVersion catalog definitions should not accept more than one `toml` file import.### Current BehaviorThe issue relates to calling the `from` method with multiple files.Calling the method multiple times is yielding the expected behavior.### Steps to Reproduce (An all-in-one gist is here: https://gist.github.com/hegyibalint/472f9968df054b514ed855dbce322a41)The core issue is the following, when applied in a `settings.gradle[.kts]`:```kotlindependencyResolutionManagement {    repositories { mavenCentral() }    versionCatalogs {        create(""testLibs"") {            from(files(""gradle/a.versions.toml"", ""gradle/b.versions.toml""))        }    }}```### Your Environment```------------------------------------------------------------Gradle 7.4.2------------------------------------------------------------Build time:   2022-03-31 15:25:29 UTCRevision:     540473b8118064efcc264694cbcaa4b677f61041Kotlin:       1.5.31Groovy:       3.0.9Ant:          Apache Ant(TM) version 1.10.11 compiled on July 10 2021JVM:          11.0.15 (Oracle Corporation 11.0.15+3)OS:           Linux 5.17.1-zen1-1-zen amd64```
"
20376,1,845,0,0,0,benavid,0,"title:Code in doFirst statement inside a task (type: War) that is part of finalizeBy statement doesn not working description:This error is reproducible from gradle 7.4 onwards. In gradle 7.3.3 the expected behaviour is correctly.Code in doFirst statement inside a task (type: War) that is part of finalizeBy statement doesn not workingI have the following gradle task structure (This gradle task structure is simplification of the real structure but is very usefull to reproduce the error)```task taskF (type: War){    outputs.upToDateWhen { false }    doFirst{	    println ""Runninf before taskF""   }   doLast{        println ""Runninf after taskF""  }}task taskE(type: War) {    outputs.upToDateWhen { false }    doFirst{	    println ""Running before taskE""   }   doLast{        println ""println after taskE""  }}task taskD(type: Jar) {    outputs.upToDateWhen { false }    doFirst{        println ""Running before taskD""    }    doLast{        println ""Running after taskD""    }}task taskC {  doFirst {    println ""Running taskC""  }  finalizedBy taskD, taskE, taskF}task taskB{  doFirst {    println ""Running taskB""  }  finalizedBy taskC}task taskA {	doLast{		println ""Running taskA""	}	finalizedBy taskB}taskE.mustRunAfter taskD```### Expected BehaviorWhen I run **./gradlew taskA** I can see the following output:> Task :taskARunning taskA> Task :taskBRunning taskB> Task :taskCRunning taskC> Task :taskDRunning before taskDRunning after taskD> Task :taskERunning before taskERunning after taskE> Task :taskFRunning before taskFRunning after taskF**All the tasks execute correctly**### Current BehaviorWhen I run **./gradlew taskA** I can see the following output:> Task :taskARunning taskA> Task :taskBRunning taskB> Task :taskCRunning taskC> Task :taskDRunning before taskDRunning after taskD**But tasks E and F, that also form part of finalizeBy statement in the task C, does not execute**### ContextThis error is not letting me generate the war to deploy in a client### Steps to Reproduce You can use the example provided for me an execute **./gradlew taskA**Note: if you change the task E and F and remove (type: War), then the code inside doFirst{} statement execute correctly### Your Environment------------------------------------------------------------Gradle 7.4.2------------------------------------------------------------Build time:   2022-03-31 15:25:29 UTCRevision:     540473b8118064efcc264694cbcaa4b677f61041Kotlin:       1.5.31Groovy:       3.0.9Ant:          Apache Ant(TM) version 1.10.11 compiled on July 10 2021JVM:          1.8.0_312 (Private Build 25.312-b07)OS:           Linux 5.13.0-39-generic amd64<!--- A build scan https://scans.gradle.com/get-started is ideal -->after execute **./gradlew taskA --scan**Build scan URL: https://scans.gradle.com/s/tlfetdbw6p77e
"
20375,0,0,296,0,0,runningcode,0,"title:Adjust documentation in Jacoco Report Agreggation plugin and Test Report Aggregation description:The Jacoco Report Agreggation plugin and Test Report Aggregation suggest that they work with the Android application plugin but they don't right now.Adjust documentation in the following documentation pages to remove suggestions that they work with Android:https://docs.gradle.org/current/userguide/jacoco_report_aggregation_plugin.htmlhttps://docs.gradle.org/current/userguide/test_report_aggregation_plugin.html
"
20369,0,259,244,0,0,DanySK,0,"title:Toolchains not working in Gradle 7.4.2 for JDK 9 description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues--><!--- Provide a brief summary of the issue in the title above -->### Expected BehaviorIt is possible to use Java 9 in the toolchains with the default toolchain provider### Current BehaviorBuild fails with``java.io.FileNotFoundException: /home/danysk/LocalProjects/multi-jvm-test-plugin/build/tmp/test/work/.gradle-test-kit/jdks/jdk-9.0.4+11/legal/jdk.dynalink/dynalink.md (Permission denied)``### ContextI maintain a Gradle plugin that [pre-configures the toolchains to run tests with multiple JDKs](https://github.com/DanySK/multi-jvm-test-plugin). The test suite includes verifying that Java 9 works. The update to Gradle 7.4.2 fails due to the aforementioned problem.I could not understand why it does so, the JDK 10 works flawlessly. I inspected the contents/permissions of the tar files downloaded and they seem to match.![image](https://user-images.githubusercontent.com/1991673/161595103-6336ae64-fcd1-4f24-b203-46ab26a006b2.png)### Steps to Reproduce ```bashgit clone https://github.com/DanySK/multi-jvm-test-plugin.gitcd multi-jvm-test-plugingit checkout renovate/gradle-7.x # Note: as I'm writing it is commit fe39ebf1b4fdd4b58511e6cfb753a32529fb3751, but the PR will update with rebase./gradlew check```### Your Environment<!--- Include as many relevant details about the environment you experienced the bug in --><!--- A build scan https://scans.gradle.com/get-started is ideal -->Build scan URL: https://scans.gradle.com/s/h6i3qezgyu634
"
20361,0,239,0,0,0,msogrin,0,"title:Upgrade JNA used for SBT Zinc description:Gradle build on Macosx Monterey fails on `compileScala` task when executed from Intellij IDEA with error```Unable to load library 'c': Native library (darwin/libc.dylib) not found in resource path```The error doesn't happen when build is started from Terminal.The error happens only for some team members, and other people with seemingly identical setup have no issues.The error is similar to https://youtrack.jetbrains.com/issue/IDEA-244962. And the workaround suggested there helped: upgrade JNA to at least 5.6.I upgraded to 5.11.0 using```dependencies {    constraints {        zinc(""net.java.dev.jna:jna:5.11.0"")        zinc(""net.java.dev.jna:jna-platform:5.11.0"")    }}```and it helped to eliminate the error when executed from IDEA. No ill effects were observed yet but the testing wasn't extensive.It would be better if Gradle distribution used a newer version of JNA by default without need for workaround in user build scripts.
"
20359,0,0,0,0,0,guenthermahr,0,"title:Build lifecycle documentation is wrong - Responding to the lifecycle in the build script description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues--><!--- Provide a brief summary of the issue in the title above -->Related documentation: https://docs.gradle.org/current/userguide/build_lifecycle.htmlExample 2 doesn't work  ### Expected Behavior<!--- Tell us what should happen -->According to the docu, Example 2 should work### Current Behavior<!--- Tell us what happens instead of the expected behavior -->The code results in errors because neither ""project.hasTests"" is found  nor the variable hasTests in project-a can be set.### Context<!--- How has this issue affected you? What are you trying to accomplish? --><!--- Providing context helps us come up with a solution that is most useful in the real world -->### Steps to Reproduce <!---Provide a self-contained example project as an attached archive or a Github project.You can use the following template with a Gradle GitHub action set up to showcase your problem: https://github.com/gradle/gradle-issue-reproducerIn the rare cases where this is infeasible, we will also accept a detailed set of instructions.-->In the following way I was able to make it work: 1. I replaced ""project.hasTests"" by project.hasProperty(""hasTests"") 2. I changed the task name to textx (obviously test is already one of the standard tasks)3. I declared ""hasTests"" as an external variable like:ext {   hasTests=""true""}Please correct and explain more thoroughly!### Your Environment<!--- Include as many relevant details about the environment you experienced the bug in -->Gradle: 7.4.2MacOS 15.2.1<!--- A build scan https://scans.gradle.com/get-started is ideal -->Build scan URL:
"
20355,1,2415,267,0,0,akuleshov7,0,"title:JNA: Gradle on latest MAC M1 with Kotlin Native causes a failure to notify build listener description:### How to reproduce:- `git clone https://github.com/akuleshov7/cli-tempate.git`- `./gradlew build`### Environment:```java --versionopenjdk 17.0.1 2021-10-19OpenJDK Runtime Environment (build 17.0.1+12-39)OpenJDK 64-Bit Server VM (build 17.0.1+12-39, mixed mode, sharing)```MacOS 12.1 (21C52)### Will receive the following error:```- Failed to notify build listener.> /Users/akuleshov7/Library/Caches/JNA/temp/jna3774829235971243677.tmp: dlopen(/Users/akuleshov7/Library/Caches/JNA/temp/jna3774829235971243677.tmp, 0x0001): tried: '/Users/akuleshov7/Library/Caches/JNA/temp/jna3774829235971243677.tmp' (fat file, but missing compatible architecture (have 'i386,x86_64', need 'arm64e')), '/usr/lib/jna3774829235971243677.tmp' (no such file)* Exception is:org.gradle.internal.event.ListenerNotificationException: Failed to notify build listener.        at org.gradle.internal.event.AbstractBroadcastDispatch.dispatch(AbstractBroadcastDispatch.java:89)        at org.gradle.internal.event.BroadcastDispatch$CompositeDispatch.dispatch(BroadcastDispatch.java:346)        at org.gradle.internal.event.BroadcastDispatch$CompositeDispatch.dispatch(BroadcastDispatch.java:249)        at org.gradle.internal.event.ListenerBroadcast.dispatch(ListenerBroadcast.java:141)        at org.gradle.internal.event.ListenerBroadcast.dispatch(ListenerBroadcast.java:37)        at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)...Caused by: java.lang.UnsatisfiedLinkError: /Users/akuleshov7/Library/Caches/JNA/temp/jna3774829235971243677.tmp: dlopen(/Users/akuleshov7/Library/Caches/JNA/temp/jna3774829235971243677.tmp, 0x0001): tried: '/Users/akuleshov7/Library/Caches/JNA/temp/jna3774829235971243677.tmp' (fat file, but missing compatible architecture (have 'i386,x86_64', need 'arm64e')), '/usr/lib/jna3774829235971243677.tmp' (no such file)        at java.base/jdk.internal.loader.NativeLibraries.load(Native Method)        at java.base/jdk.internal.loader.NativeLibraries$NativeLibraryImpl.open(NativeLibraries.java:384)        at java.base/jdk.internal.loader.NativeLibraries.loadLibrary(NativeLibraries.java:228)        at java.base/jdk.internal.loader.NativeLibraries.loadLibrary(NativeLibraries.java:170)        at com.sun.jna.Native.loadNativeDispatchLibraryFromClasspath(Native.java:1018)        at com.sun.jna.Native.loadNativeDispatchLibrary(Native.java:988)        at com.sun.jna.Native.<clinit>(Native.java:195)        at com.sun.jna.Structure.setAlignType(Structure.java:280)```I am very sorry if problem is related to Kotlin Native. But I am very confused by the 闂傚倷鑳堕崑銊╁磿閼碱剛鍗氱紓宥囧交led to notify build listener闂?Also very interesting thing is here:`fat file, but missing compatible architecture (have 'i386,x86_64', need 'arm64e')`
"
20351,1,0,8,0,0,Zhiqiang-Wu,0,"title:[maven-publish] runtime description:Why not default?config:![image](https://user-images.githubusercontent.com/56793420/161375172-d518e34e-61c5-47c1-95a4-e8429c7792ad.png)pom file:![image](https://user-images.githubusercontent.com/56793420/161375151-7cc24fa8-85b5-404b-a0ad-327dc1bceb88.png)
"
20350,0,0,103,0,1,ChrisJefferson,0,"title:test --tests does not work with packages which contain capital letters description:<!--- Provide a brief summary of the issue in the title above -->I am on ubuntu 22.04, and used sdkman to install a fresh gradle 7.4.2I use `gradle init` to create a package using: application, java, no, groovy, yes, JUnit jupiter. At the end I either name the project `myproject`, or `MyProject`.If I call it `MyProject`, then `gradle test --tests=""MyProject.*""` finds no tests. If I call it `myproject`, then `gradle test --tests=""myproject.*""` works as expected.### Expected Behavior<!--- Tell us what should happen -->Either forbid package names with capital letters (if they are not intended to be supported), or fix `--tests` filtering to work when packages contain capital letters.
"
20349,0,0,89,0,0,liutikas,0,"title:Start signing pom files in Gradle Plugin portal description:Start signing pom files in Gradle Plugin portal.Today, none of the pom files in Gradle Plugin portal have .asc files associated with them even if the rest of the artifact is signed (e.g. jars). Examples of these include `gradle-enterprise-gradle-plugin` (as of 3.9), `common-custom-user-data-gradle-plugin` (as of 1.6.5)
"
20344,0,450,258,0,0,gotson,0,"title:Toolchain cannot download JDK 18 description:Hello,i have setup my project to use toolchains, but Gradle fails to download JDK 18 when running in Github Actions.This is the error i get:```> Unable to download toolchain matching these requirements: {languageVersion=18, vendor=any, implementation=vendor-specific}         > Unable to download toolchain. This might indicate that the combination (version, architecture, release/early access, ...) for the requested JDK is not available.            > Could not read 'https://api.adoptopenjdk.net/v3/binary/latest/18/ga/linux/x64/jdk/hotspot/normal/adoptopenjdk' as it does not exist.```### Expected BehaviorGradle should be able to download JDK 18.### Current BehaviorGradle fails to download JDK 18.### ContextI am trying to run tests for my project with Github Actions. Given my project will use JDK 8 and 18 to run tests via the Gradle toolchain feature, i haven't installed any JDK via Github Actions, since Gradle is supposed to be able to download them. I also use the [Gradle build action](https://github.com/gradle/gradle-build-action) which can cache the downloaded JDK, so it makes sense to let Gradle download the necessary JDK, keeping my workflow file simpler, and letting Gradle do its magic.### Steps to Reproduce You can check my repo which is public: https://github.com/gotson/NightMonkeys/tree/ciRunning `gradle build` in an environment that doesn't have an installed JDK 18 will fail.### Your Environment[gradle.build file](https://github.com/gotson/NightMonkeys/blob/8a0d355aa0d8b545df8d9e4cf803609ef164fb79/imageio-jxl/build.gradle)[Github Action run that failed](https://github.com/gotson/NightMonkeys/runs/5768501038?check_suite_focus=true)
"
20326,1,865,36,1,0,mathjeff,0,"title:Dependency verification should treat a matching hash as verified even if the signature is untrusted description:### Expected BehaviorIf gradle/verification-metadata.xml mentions trusting a specific hash of artifact, then an artifact with that hash should be considered trusted, even if that artifact also has an untrusted signature.### Current BehaviorWe've observed that even if gradle/verification-metadata.xml mentions trusting the hash of an artifact, then the artifact isn't trusted if an untrusted signature is present.### ContextWe've observed a failure at https://ge.androidx.dev/s/k5ioamh3ghics/failure#1saying:```Dependency verification failed for configuration ':buildSrc:plugins:cacheableImplementation'One artifact failed verification: jvnet-parent-4.pom (net.java:jvnet-parent:4) from repository MavenRepoIf the artifacts are trustworthy, you will need to update the gradle/verification-metadata.xml file by following the instructions at https://docs.gradle.org/7.4/userguide/dependency_verification.html#sec:troubleshooting-verificationOpen this report for more details: file:///home/runner/work/androidx/androidx/activity/build/reports/dependency-verification/at-1648660387370/dependency-verification-report.html```However, https://android.googlesource.com/platform/frameworks/support/+/bc472e51cadc3d8a66f890c8b06c6e7d36476960/gradle/verification-metadata.xml#940says this:```<component group=""net.java"" name=""jvnet-parent"" version=""4"">  <artifact name=""jvnet-parent-4.pom"">  <sha256 value=""471395735549495297c8ff939b9a32e08b91302020ff773586d27e497abb8fbb"" origin=""Generated by Gradle""/>  </artifact></component>```We observe that the hash of the .pom matches the hash listed in the verification-metadata.xml, though. We've also found that if we add the .asc file into our Maven repository directory then this failure appears in an offline build and if we remove the .asc file from our Maven repository directory then this failure stops appearing.Note that this issue wouldn't be as important if https://github.com/gradle/gradle/issues/20194 were resolved, because then it would be less common for us to have a sha256 entry for an artifact for which a signature also exists somewhere (but which we didn't manage to download when regenerating the file, see that bug )
"
20297,0,0,282,0,1,hegyibalint,0,"title:Exclude `buildSrc` sources in settings script model description:Fixes #10417
"
20296,0,613,300,0,0,ZacSweers,0,"title:`-q javaToolchains` is not compatible with configuration cache description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues--><!--- Provide a brief summary of the issue in the title above -->### Expected Behavior<!--- Tell us what should happen -->It should be compatible or at least not fail ungracefully### Current Behavior<!--- Tell us what happens instead of the expected behavior -->It fails### Context<!--- How has this issue affected you? What are you trying to accomplish? --><!--- Providing context helps us come up with a solution that is most useful in the real world -->Run `gradle -q javaToolchains` twice in a gradle build with configuration caching enabled, you will see this failure the second try```gradle -q javaToolchainsFAILURE: Build failed with an exception.* What went wrong:Could not load the value of field `specs` of `org.gradle.api.specs.AndSpec` bean found in task `:javaToolchains` of type `org.gradle.jvm.toolchain.internal.task.ShowToolchainsTask`.> org.gradle.jvm.toolchain.internal.task.ShowToolchainsTask$$Lambda$1901/0x00000008024fd410* Try:> Run with --stacktrace option to get the stack trace.> Run with --info or --debug option to get more log output.> Run with --scan to get full insights.* Get more help at https://help.gradle.orgCONFIGURE FAILED in 876ms```### Steps to Reproduce <!---Provide a self-contained example project as an attached archive or a Github project.You can use the following template with a Gradle GitHub action set up to showcase your problem: https://github.com/gradle/gradle-issue-reproducerIn the rare cases where this is infeasible, we will also accept a detailed set of instructions.-->See above### Your Environment<!--- Include as many relevant details about the environment you experienced the bug in --><!--- A build scan https://scans.gradle.com/get-started is ideal -->Build scan URL: N/A
"
20295,0,0,251,0,1,ghale,0,"title:Fix issue with deadlocking between test task and dependency resolution description:<!--- The issue this PR addresses -->Fixes #20269 This reverts the change in 7.4 where we release only the worker lease, so that we now release both the project lock and worker lease while waiting for tests to complete.  Since the project lock has been split and there is an additional task execution lock, we can release the project lock without releasing the task execution lock, so that other things can reach over into the project, but we can still block other tasks from the same project from starting execution.
"
20292,1,1550,297,0,0,kleinesfilmroellchen,0,"title:Compiled class files are incorrectly deleted by compileJava, leading to unpredictable build failures description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues--><!--- Provide a brief summary of the issue in the title above -->### Expected BehaviorWhen compileJava finds a change in the Java source files, it should recompile and delete the old output. When it doesn't find a change, it should not recompile and keep the old output.<!--- Tell us what should happen -->### Current BehaviorcompileJava deletes ""stale output"" (see below), i.e. class files, then doesn't recompile because no input changed. Therefore, there are no class files for the project and any run action fails.<!--- Tell us what happens instead of the expected behavior -->### ContextI'm trying to compile a very standard Java 17 project with standard project structure using JavaFX.```gradleplugins {	id 'java'	id 'application'	id 'org.openjfx.javafxplugin' version '0.0.10'}repositories {	mavenCentral()}version = '0.1'javafx {	version = '16'	modules = [ 'javafx.controls', 'javafx.graphics' ]}mainClassName = 'module/package.name.MainClassName'java {	modularity.inferModulePath = true	toolchain.languageVersion = JavaLanguageVersion.of(17)}tasks.withType(JavaCompile) {	options.encoding = 'UTF-8'}tasks.named('javadoc') {	options.encoding = 'UTF-8'}compileJava {	options.fork = true	options.encoding = 'UTF-8'}run {	jvmArgs = [		'-Dfile.encoding=UTF-8', 	]}tasks.named('run') {	standardInput = System.in}```This compilation fails due to the above issue, which can be found with `gradle run --info`:```// snipTasks to be executed: [task ':compileJava', task ':processResources', task ':classes', task ':configJavafxRun', task ':mergeClasses', task ':run']Tasks that were excluded: []:compileJava (Thread[Execution worker for ':',5,main]) started.> Task :compileJava UP-TO-DATEDeleting stale output file: path\to\project\build\generated\sources\headers\java\mainDeleting stale output file: path\to\project\build\classes\java\mainDeleting stale output file: path\to\project\build\generated\sources\annotationProcessor\java\mainCaching disabled for task ':compileJava' because:  Build cache is disabledSkipping task ':compileJava' as it is up-to-date.:compileJava (Thread[Execution worker for ':',5,main]) completed. Took 0.025 secs.:processResources (Thread[Execution worker for ':',5,main]) started.// snip```As far as I can tell from this, the Java compile deletes stale output files only to then not regenerate them. I've confirmed that the class files are indeed missing. Leading to standard run issues like ""Main class not found"", ""module blah not found"" etc.A workaround is to change the configuration of compileJava (e.g. changing `options.fork` which doesn't really affect the outcome). This will force compileJava to recompile everything, which means that if I run gradle in this reconfig step, the application runs successfully. On the very next try, however (just rerun the command!), the issue reoccurs.<!--- How has this issue affected you? What are you trying to accomplish? --><!--- Providing context helps us come up with a solution that is most useful in the real world -->### Steps to ReproduceThe repo https://github.com/kleinesfilmroellchen/ToyCpuEmulator should exhibit this behavior. Basically, a very standard Gradle build file with JavaFX and the Java application plugin. Because I can't reproduce this in my other, similar Gradle projects, it may be related to JavaFX but nothing indicates that.<!---Provide a self-contained example project as an attached archive or a Github project.You can use the following template with a Gradle GitHub action set up to showcase your problem: https://github.com/gradle/gradle-issue-reproducerIn the rare cases where this is infeasible, we will also accept a detailed set of instructions.-->### Your Environment* Gradle 7.3.1* OpenJDK 17* Windows 10 21H2Build scan URL: https://scans.gradle.com/s/pq5yunmivplya
"
20287,0,0,251,0,1,ghale,0,"title:Fix issue with mustRunAfter and ordinal node dependencies description:Fixes #20272
"
20275,1,0,7,0,0,bingranl,0,"title:org.gradle.plugins.signing.Sign not compatible with config caching description:### Expected Behavior<!--- Tell us what should happen -->Sign task should be compatible with configuration caching. ([user guide](https://docs.gradle.org/current/userguide/configuration_cache.html) lists gradle plugins which are not compatible with config caching including Sign plugin. But there doesn't seem to be a ticket tracking the incompatibility of Sign plugin.)### Current Behavior<!--- Tell us what happens instead of the expected behavior -->When config caching enabled(warning mode), we observed that1. Warnings are raised in the first run complaining about type cannot be serialized (e.g. `org.gradle.api.internal.artifacts.configurations.DefaultConfiguration`)2. Sign task doesn't work as expected and ""asc"" files are missing for all published artifacts.3. Build fails in the following ""config cached"" run with error message ""Could not load the value of field `toSignGenerator` of `org.gradle.plugins.signing.Signature`""The most concerning thing is the fact that asc files are missing when running with config caching. This means we couldn't get the correct result even with `task.notCompatibleWithConfigurationCache` and it would potentially block making config caching on by default.### Steps to Reproduce 1. update `sdk.dir` in gradle.properties2. run with config caching warning mode `./gradlew publishToMavenLocal`3. check published artifacts in local maven repo, asc files are missing[MyApplication.tar.gz](https://github.com/gradle/gradle/files/8346444/MyApplication.tar.gz)
"
20272,0,69,251,0,0,ghale,0,"title:Tasks that show up later on the command line can be mysteriously skipped description:There is an issue in the logic introduced in 7.4 to better ensure command line order is honored.  When a task gets pulled in from an earlier command line selector has a `mustRunAfter` relationship to a task that does not get executed, tasks pulled in by later command line selectors can be skipped.For example, if I run `clean build` on the command line, and clean has `mustRunAfter foo` but the foo task is not a part of the build (i.e. neither clean nor build pull in foo), then the producer tasks pulled in by build will get skipped.### Expected BehaviorAll tasks should execute### Current BehaviorTasks from selectors later on the command line simply do not execute### Steps to Reproduce ```plugins {    id 'java'}task fooclean.mustRunAfter foo```Run: `clean build`
"
20269,0,0,251,0,1,ghale,0,"title:Deadlock between test task execution and dependency resolution description:With dd8ac8a9276e8d16bcb14dbb9074c79614618e10, when the test task is waiting for tests to execute, it releases the worker lease, but retains the project lock.  This now creates a deadlock scenario where if another task tries to resolve an included build dependency on the same project, it will block waiting on the project lock.  So you end up with the test task holding the project lock, waiting to reacquire a worker lease, and a dependency resolution thread holding a worker lease, waiting to acquire the project lock.  If this happens enough times, it can fill up max-workers with these blocked threads.There are really three issues here that all conspire to create the deadlock:- The test task holds the project lock while waiting on the worker lease (this is new)- The dependency resolution thread holds the worker lease while waiting on the project lock (this has been around for a while)- The resolved node in the included build is thrown away if the configuration is not used by anything else in the included build, causing the input snapshotting of tasks outside of the included build to re-resolve the configuration (this has also been around for a while)Fixing any one of those things _should_ remove the possibility of the deadlock.### Expected BehaviorThe build does not deadlock.### Current BehaviorThe build deadlocks.### ContextThis came up in a composite with around 200 included builds.  Because of the high number of included builds, there are lots of opportunity for this issue to surface.
"
20254,0,1684,176,0,0,breskeby,0,"title:Build with included builds fails with ""Unable to make progress running work"" description:When running our plugin examples with our elasticsearch build included using the latest 7.5 snapshot the build fails with the following error:```> Task :custom-suggester:yamlRestTestWARNING: A terminally deprecated method in java.lang.System has been calledWARNING: System::setSecurityManager has been called by org.gradle.api.internal.tasks.testing.worker.TestWorker (file:/Users/rene/.gradle/wrapper/dists/gradle-7.5-20220318231621+0000-all/aqjfveoxemck6xhxte170t4aj/gradle-7.5-20220318231621+0000/lib/plugins/gradle-testing-base-7.5.jar)WARNING: Please consider reporting this to the maintainers of org.gradle.api.internal.tasks.testing.worker.TestWorkerWARNING: System::setSecurityManager will be removed in a future releaseUnable to make progress running work. The following items are queued for execution but none of them can be started:  - :elasticsearch-master:distribution:archives:buildDarwinTar (not ready)  - SymbolicLinkPreservingUntarTransform (dependencies not complete)  - :painless-whitelist:yamlRestTest (dependencies not complete)  - :painless-whitelist:check (dependencies not complete)  - :painless-whitelist:build (dependencies not complete)  - SymbolicLinkPreservingUntarTransform (dependencies not complete)  - :security-authorization-engine:javaRestTest (dependencies not complete)  - :security-authorization-engine:check (dependencies not complete)  - :security-authorization-engine:build (dependencies not complete)  - producer locations for task group 0 (dependencies not complete)<============-> 98% EXECUTING [5m 53s]> IDLE> IDLE> IDLE> IDLE> IDLE> IDLE> IDLE> IDLE> IDLE> IDLE> IDLE> IDLE> IDLE> IDLE> IDLE> IDLE> IDLE> IDLE> IDLE> IDLE> :elasticsearch-master:distribution:archives:buildDarwinTar> IDLE> IDLE> IDLE```We never saw this with Gradle 7.4.1. I've also attached a build scan dump as our regular build scan is too large for gradle.com. As you can Seefrom the build scan the task `:elasticsearch-master:distribution:archives:buildDarwinTar` has been executed successfully. Though this complaint. Also notice that the root project of the included build is named `:elasticsearch-master` though it is configuredas `elasticsearch` in its settings.gradle file.We do not hit this issue in all builds. It's more likely to happen when more work is done during the build like building against a clean repo and an empty gradle user home. To reproduce this this should work:1. git clone https://github.com/breskeby/elasticsearch.git2. git checkout update-to-gradle-7-53. cd plugins/example4. ./gradlew build --include-build ../.. -g .guhThe build scan dump:- just rename to dj34bn6lpv6de.scandump[dj34bn6lpv6de.scandump.zip](https://github.com/gradle/gradle/files/8331134/dj34bn6lpv6de.scandump.zip)
"
20246,0,0,215,0,0,adammurdoch,0,"title:NPE when VerificationException is thrown by a task and configuration cache is enabled description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues-->Gradle 7.4 adds `VerificationException` which is treated specially by the work scheduling to potentially continue execution on such a failure. This handling is broken when the configuration cache is enabled.### Expected Behavior`VerificationException` is handled correctly when the configuration cache is enabled.### Current BehaviorNPE is thrown when a task throws a `VerificationException`### Context<!--- How has this issue affected you? What are you trying to accomplish? --><!--- Providing context helps us come up with a solution that is most useful in the real world -->### Steps to Reproduce <!---Provide a self-contained example project as an attached archive or a Github project.You can use the following template with a Gradle GitHub action set up to showcase your problem: https://github.com/gradle/gradle-issue-reproducerIn the rare cases where this is infeasible, we will also accept a detailed set of instructions.-->### Your Environment<!--- Include as many relevant details about the environment you experienced the bug in --><!--- A build scan https://scans.gradle.com/get-started is ideal -->Build scan URL:
"
20244,1,630,151,0,0,KeyrisXdSnow,0,"title:Groovy enums parsing using GroovyRecognizer description:Hello team,We recently upgraded to gradle version 7.4.1 and ran into problem with parsing groovy enums.Environment:- Java SDK 11- Gradle 7.4.1- Groovy 2.5.15 ( This is version of our project, but parser and all the required entities are imported from gradle -> groovy 3.0.9)We try parse groovy enums using GroovyRecognizer. Groovy code:```SourceBuffer sourceBuffer = new SourceBuffer()UnicodeEscapingReader unicodeReader = new UnicodeEscapingReader(new StringReader(闂傚倷鑳堕崑銊╁磿閺屻儱围闁宠宸pleEnum.groovy'), sourceBuffer)GroovyLexer lexer = new GroovyLexer(unicodeReader)unicodeReader.setLexer(lexer)parser = GroovyRecognizer.make(lexer)parser.setSourceBuffer(sourceBuffer)parser.compilationUnit()```Enum example:```@APIpublic enum ExampleEnum implements Serializable {	@API	ITEM1(1),	@API	ITEM2(2),	@API	ITEM3(3);		private Integer value;	public TaggableClasses(Integer value) {		this.value = value;	}	public Integer getValue() {		return this.value;}	```.compilationUnit() method throws an exception ""Parsing failed for 'ExampleEnum.groovy' due to: unexpected token: 2""Token is value of ITEM2.Groovy class and interfaces parsing work correctly.Could you please advise how we can solve this problem?Thanks.
"
20234,1,537,298,0,0,Goooler,0,"title:Dependency verification failed for configuration ':buildSrc:runtimeClasspath' description:### Expected BehaviorCan pass the verification and build.### Current Behavior```Execution failed for task ':buildSrc:generatePrecompiledScriptPluginAccessors'.> Dependency verification failed for configuration ':buildSrc:runtimeClasspath'  2 artifacts failed verification:    - gradle-download-task-4.1.1.pom (de.undercouch:gradle-download-task:4.1.1) from repository Gradle Central Plugin Repository    - gradle-download-task-4.1.1.pom (de.undercouch:gradle-download-task:4.1.1) from repository MavenRepo  This can indicate that a dependency has been compromised. Please carefully verify the checksums.```### ContextI'm using version catalogs in buildSrc with dependency verification enabled, following the troubleshooting to run `gradle --write-verification-metadata pgp,sha256 help`, but nothing helped.### Steps to Reproduce In https://github.com/Goooler/ktlint/pull/19### Your EnvironmentGradle 7.4
"
20224,0,0,9,0,0,xuewan-seven,0,"title:gradle depends on an insecure third-party JAR package that contains the CVE vulnerability description:gradle version: 7.3package : gradle-7.3-bin.zipjar file:     gradle-7.3/lib/jcl-over-slf4j-1.7.30.jar    gradle-7.3/lib/jul-to-slf4j-1.7.30.jar    gradle-7.3/lib/log4j-over-slf4j-1.7.30.jar    gradle-7.3/lib/slf4j-api-1.7.30.jar    gradle-7.3/lib/commons-io-2.6.jarCVE:    CVE-2022-23307    CVE-2022-23305    CVE-2022-23302    CVE-2021-29425jar file:  gradle-7.3/lib/plugins/maven-builder-support-3.6.3.jar  gradle-7.3/lib/plugins/maven-model-3.6.3.jar  gradle-7.3/lib/plugins/maven-repository-metadata-3.6.3.jar  gradle-7.3/lib/plugins/maven-settings-3.6.3.jar  gradle-7.3/lib/plugins/maven-settings-builder-3.6.3.jarCVE:  CVE-2021-26291jar file:    gradle-7.3/lib/gradle-base-annotations-7.3.jar    gradle-7.3/lib/gradle-base-services-7.3.jar    gradle-7.3/lib/gradle-base-services-groovy-7.3.jar    gradle-7.3/lib/gradle-bootstrap-7.3.jar    gradle-7.3/lib/gradle-build-cache-7.3.jar    gradle-7.3/lib/gradle-build-cache-base-7.3.jar    gradle-7.3/lib/gradle-build-cache-packaging-7.3.jarCVE:    CVE-2022-23630 do these vulnerabilities affect the latest Gradle version?
"
20206,0,0,282,0,1,hegyibalint,0,"title:Modify Signature task keying description:Change the keying of the signatures to only take the filename into account, instead of the Maven coordinates (name, ext, classifier, etc...).The reason being that previous keying can't differentiate between files that are on a different path but have the same filename.Fixes #20166
"
20203,0,786,230,0,1,EdricChan03,0,"title:Using a Version Catalog plugin in the `plugins` block still produces an `@Incubating` warning in 7.4.1 description:<!--- Please use our bug report template to report problems with something that has never worked.  Regressions reports are greatly appreciated during our RC phase and before a final release.--><!--- Provide a brief summary of the issue in the title above -->### Expected Behavior<!--- Tell us what should happen -->A plugin defined in a Version Catalog should not produce an incubating feature warning when used in the `plugins { }` block.### Current Behavior<!--- Tell us what happens instead of the expected behavior -->An incubating feature warning is produced:```'alias(org.gradle.api.provider.Provider<org.gradle.plugin.use.PluginDependency>)' is unstable because its signature references unstable interface 'org.gradle.plugin.use.PluginDependency' marked with @Incubating ```![Warning when using Version Catalog plugin in `plugins` block](https://user-images.githubusercontent.com/20047125/158829613-635b2a73-d275-46d2-a28e-f49ac4b89e8b.png)### Context<!--- Which version did this stop working with? Which version do you know it works? --><!--- How has this issue affected you? What are you trying to accomplish? --><!--- Providing context helps us come up with a solution that is most useful in the real world -->The Version Catalogs feature was [promoted to a stable feature in 7.4.0](https://docs.gradle.org/7.4.1/release-notes.html#promoted-features), and an additional fix was pushed to address any existing incubating warnings to do with Version Catalogs, especially when used with the `plugins` block (#19940). However, the underlying `PluginDependency.java` class used for declaring plugins is still annotated with the `@Incubating` annotation:https://github.com/gradle/gradle/blob/d5e521483f43c5b0132c3bd3159395d2aac00bec/subprojects/core-api/src/main/java/org/gradle/plugin/use/PluginDependency.java#L26-L27### Steps to Reproduce <!--- Provide a self-contained example project (as an attached archive or a Github project). --><!--- In the rare cases where this is infeasible, we will also accept a detailed set of instructions. -->1. Create a new Gradle project.2. Set the Gradle wrapper version (in `gradle/wrapper/gradle-wrapper.properties`) to 7.4.1:    ```properties    distributionBase=GRADLE_USER_HOME    distributionPath=wrapper/dists    distributionUrl=https\://services.gradle.org/distributions/gradle-7.4.1-bin.zip    zipStoreBase=GRADLE_USER_HOME    zipStorePath=wrapper/dists    ```3. Create a Version Catalogs TOML file (`gradle/libs.versions.toml`) with the following contents:    ```toml    [plugins]    gradleVersions = ""com.github.ben-manes.versions:0.42.0""    gradleVersions-catalog = ""nl.littlerobots.version-catalog-update:0.3.1""    ```4. In the `build.gradle.kts` file, insert the following:    ```kts    @Suppress(""DSL_SCOPE_VIOLATION"")    plugins {        alias(libs.plugins.gradleVersions)        alias(libs.plugins.gradleVersions.catalog)    }    ```5. `alias` should be marked as yellow in the IDE, with the following warning:    ![Reproduction of `alias` warning](https://user-images.githubusercontent.com/20047125/158829929-7baeda8f-d080-47fd-a138-2d2af9d18cdf.png)### Your Environment<!--- Include as many relevant details about the environment you experienced the bug in --><!--- A build scan https://scans.gradle.com/get-started is ideal -->Build scan URL: (N/A)#### IDEAndroid Studio Chipmunk | 2021.2.1 Beta 4Build #AI-212.5712.43.2112.8233820, built on March 1, 2022Runtime version: 11.0.12+7-b1504.28-7817840 amd64VM: OpenJDK 64-Bit Server VM by Oracle CorporationWindows 10 10.0GC: G1 Young Generation, G1 Old GenerationMemory: 1280MCores: 8Registry: external.system.auto.import.disabled=true, documentation.show.toolbar=trueNon-Bundled Plugins: com.wakatime.intellij.plugin (13.1.14)
"
20199,1,645,0,0,1,wangdaqi77,0,"title:Failed to calculate the value of task ':lib-common:compileDebugJavaWithJavac' property 'options.generatedSourceOutputDirectory'. description:### Expected BehaviorLet the task execute successfully### Current BehaviorFailed### Steps to Reproduce https://github.com/wangdaqi77/P2M/tree/adapt_AGP7.0/example./gradlew clean assembleDebug -s -i```Execution failed for task ':lib-common:compileDebugJavaWithJavac'.Failed to calculate the value of task ':lib-common:compileDebugJavaWithJavac' property 'options.generatedSourceOutputDirectory'. > Querying the mapped value of map(java.io.File property(org.gradle.api.file.Directory, fixed(class org.gradle.api.internal.file.DefaultFilePropertyFactory$FixedDirectory, /Users/wongki/AndroidStudioProjects/P2M/example/lib-common/build/generated/ap_generated_sources/debug/out)) org.gradle.api.internal.file.DefaultFilePropertyFactory$ToFileTransformer@7d9cb9cf) before task ':lib-common:compileDebugJavaWithJavac' has completed is not supported```not actively fetching `options.generatedSourceOutputDirectory` in place闂傚倷鐒︾€笛呯矙閹达附鍋╅柣銊ヨ溅 running the task is failing### Your EnvironmentGradle 7.4,**Android Gradle plugin 7.1.2**,Kotlin 1.5.21,macOS 10.14.6 (18G87)Build scan URL:https://scans.gradle.com/s/f7bcx5rnry2ws
"
20195,0,0,251,0,0,ghale,0,"title:A task that is finalized by a task specified earlier on the command line causes the build to hang description:For example, if I have a task `generateFoo` that is finalized by `cleanupFoo` but then I specify `cleanupFoo generateFoo` on the command line, then I end up with a situation where `cleanUpFoo` must run after `generateFoo`, but `generateFoo` cannot run because the dependencies of `cleanupFoo` (i.e. `generateFoo`) have not completed.  The command line ordering rules conflict with the finalization relationship and cause the build to hang.### Expected BehaviorThis conflict should be handled gracefully such that the finalization is honored, even if the command line order is not.### Current BehaviorThe build hangs.
"
20189,0,0,218,0,1,ljacomet,0,"title:Support constraints without version in GMM [Backport 6.9.x] description:See #20182 for details and #20188 for fix
"
20182,0,924,282,0,0,melix,0,"title:Imported BOM parsing fails if published with Gradle Module Metadata description:### Expected BehaviorConsuming a BOM which imports another BOM should behave consistently independently of the fact it was published with Gradle Metadata or no.### Current BehaviorThe [Micronaut SQL BOM](https://repo1.maven.org/maven2/io/micronaut/sql/micronaut-sql-bom/4.2.0/) includes a ""imported"" BOM:```xml<dependency>   <groupId>org.jdbi</groupId>   <artifactId>jdbi3-bom</artifactId>   <version>3.20.1</version>   <type>pom</type>   <scope>import</scope></dependency>```Consuming the SQL BOM into a simple build triggers a `NullPointerException` when Gradle serializes the parsed metadata: https://scans.gradle.com/s/m645kc5luamsi/failure#1### ContextMicronaut publishes a number of BOMs which themselves may import other BOMs. After we published the latest release of Micronaut SQL, we had builds starting to fail with NPEs: https://github.com/micronaut-projects/micronaut-core/issues/7068This is quite critical for us since we're in the progress of ""aggregating"" more BOMs instead of duplicating those into our own BOMs.### Steps to Reproduce Use the following build file:```gradleplugins {   id 'java-library'}repositories {   mavenCentral()}dependencies {   api(platform(""io.micronaut.sql:micronaut-sql-bom:4.2.0""))   implementation ""org.jdbi:jdbi3-core""}tasks.register(""fail"") {   doFirst {       println configurations.compileClasspath.files   }}```Run the build with `gradle -g ghome --no-daemon fail` (the new Gradle home and no daemon are to make sure we get fresh metadata and serialize it with the next step). See the build fail.Now, replace the repository definition with:```gradleplugins {   id 'java-library'}repositories {      mavenCentral {       metadataSources {           mavenPom()           ignoreGradleMetadataRedirection()       }   }}dependencies {   api(platform(""io.micronaut.sql:micronaut-sql-bom:4.2.0""))   implementation ""org.jdbi:jdbi3-core""}tasks.register(""fail"") {   doFirst {       println configurations.compileClasspath.files   }}```Run `rm -Rf ghome/caches && gradle -g ghome --no-daemon fail`. This time the build **passes**, so its the introduction of Gradle Module Metadata which makes the build fail.Note that directly using the imported BOM, `org.jdbi:jdbi3-bom:3.20.1` instead of `micronaut-sql-bom` works too, so it's really the _import_ which is causing troubles, probably because `jdbi3-bom` itself is not published with Gradle Metadata.### Your EnvironmentBuild scan URL: https://scans.gradle.com/s/m645kc5luamsi
"
20180,0,0,277,0,0,Kotori316,0,"title:`bad option '-target:16' was ignored` when compiling scala code with Scala3 library description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues-->'16' means Java 16.The option passed to scala3 compiler contains invalid argument, '-target'### Expected Behavior'-target:16' should be '-Xtarget:16', as described in [here](https://docs.scala-lang.org/scala3/guides/migration/options-lookup.html)### Current Behavior'-target:16' is passed to scala compiler and causes warning### Context<!--- How has this issue affected you? What are you trying to accomplish? --><!--- Providing context helps us come up with a solution that is most useful in the real world -->In scala 2.13.x, '-target:' option is valid. In scala3, the option is replaced to '-Xtarget:'(https://docs.scala-lang.org/scala3/guides/migration/options-lookup.html).The option which will be passed to scala compiler is created in these codes.https://github.com/gradle/gradle/blob/4f9c0e1ab5812115b44e857d9e12d20a8c92b371/subprojects/scala/src/main/java/org/gradle/api/internal/tasks/scala/ZincScalaCompiler.java#L106-L111(#19864 seems to change code in ZincScalaCompiler but this issue may not be solved.)The last `withJavacOptions` seems to add '-target:16' because it should be passed to javac, but '-target:16' is no longer valid option in scala3.If you set other parameters such as `-Wconf:cat=deprecation:w,any:e`, the warning changes to an error and the compilation fails.### Steps to Reproduce <!---Provide a self-contained example project as an attached archive or a Github project.You can use the following template with a Gradle GitHub action set up to showcase your problem: https://github.com/gradle/gradle-issue-reproducerIn the rare cases where this is infeasible, we will also accept a detailed set of instructions.-->1. Add Scala 3 to dependency. `implementation(group: 'org.scala-lang', name: 'scala3-library_3', version: '3.1.2-RC2')`2. Set Java version with `java.toolchain.languageVersion = JavaLanguageVersion.of(16)`. In my code, I use Java 16 but the version does not matter.   1. This issue also reproduced with `sourceCompatibility = targetCompatibility = JavaVersion.VERSION_16`repo: https://github.com/Kotori316/gradle-issue-scala-option### Your Environment* Gradle: 7.4.1* Scala 3.1.2-RC2* Java 16* Windows 10
"
20166,0,1162,1,0,0,davidjlynn,0,"title:Signing plugin only signs the first File artefact when they have the same name. description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues--><!--- Provide a brief summary of the issue in the title above -->When publishing, it is possible to add arbitrary files which should be published, this can be done by path, and these files then get published to maven local.These files can be differentiated by providing the ""classifier"" and ""extension"" information to the publication.However, the signing plugin is intended to sign all files in a publication. When this is applied, only the first publication by a certain file name will be signed. This does not seem like intended behaviour.### Expected BehaviorThe signing plugin signs all files in the publication.### Current BehaviorThe signing plugin only signs the first file with a certain filename.### Context<!--- How has this issue affected you? What are you trying to accomplish? --><!--- Providing context helps us come up with a solution that is most useful in the real world -->While trying to publish to Maven Central, all files need to be signed.This bug meant that following the default publication steps the artefacts could not be published.Please note that this can be worked around by renaming files, for example I worked around this bug using the following task:```// A strange issue with signing meant that only the first files (with the same name) got signed.// To workaround this, rename all executables to include architecture.tasks.register('flattenDistDirectory', Copy) {  from(""$projectDir/dist"") {    include ""**/test""    include ""**/test.txt""    eachFile { file ->      file.name = file.relativePath.parent.lastName      file.relativePath = new RelativePath(true, file.relativePath.segments.drop(1))    }    includeEmptyDirs = false    }  into ""$buildDir/dist""}publish.dependsOn flattenDistDirectorysignMavenPublication.mustRunAfter flattenDistDirectory ```However this workaround should really not be needed.### Steps to Reproduce I created a simple demo here:https://github.com/davidjlynn/gradle-signing-fail-exampleI tested this by providing my GPG keys and running `./gradlew publishToMavenLocal`.The resulting files were:```tree /fFolder PATH listingC:.闂傚倷绀侀悿鍥綖婢舵劕钃熼柨鐔哄Т缂佲晠鏌曡箛瀣偓鏇㈡偂濮椻偓閺屽秷顧侀柛鎾跺枛瀹曟椽鎮欓崫鍕姦闂佽崵鍋熷Λ缍糳le-snapshot-fail-example    闂?  maven-metadata-local.xml    闂?   闂傚倷绀侀悿鍥綖婢舵劕钃熼柨鐔哄Т缂佲晠鏌曡箛瀣偓鏇㈡偂濮椻偓閺屽秷顧侀柛鎾跺枛瀹曟椽鎮欓崫鍕姦?.0.1            gradle-snapshot-fail-example-0.0.1-base.txt            gradle-snapshot-fail-example-0.0.1-base.txt.asc            gradle-snapshot-fail-example-0.0.1-fail.txt            gradle-snapshot-fail-example-0.0.1-pass.txt            gradle-snapshot-fail-example-0.0.1-pass.txt.asc            gradle-snapshot-fail-example-0.0.1.pom            gradle-snapshot-fail-example-0.0.1.pom.asc```Notice the missing .asc file for `gradle-snapshot-fail-example-0.0.1-fail.txt`<!---Provide a self-contained example project as an attached archive or a Github project.You can use the following template with a Gradle GitHub action set up to showcase your problem: https://github.com/gradle/gradle-issue-reproducerIn the rare cases where this is infeasible, we will also accept a detailed set of instructions.-->### Your Environment<!--- Include as many relevant details about the environment you experienced the bug in --><!--- A build scan https://scans.gradle.com/get-started is ideal -->Build scan URL:
"
20156,0,490,297,0,0,big-guy,0,"title:`gradle init` is skipped after generating one project with the configuration cache enabled description:If you have the configuration cache enabled and generate a project with `gradle init`, you cannot generate another project (even in another directory) until you disable configuration caching or delete the first project.### Expected BehaviorYou should be able to run `gradle init` many times with the configuration cache enabled.### Current BehaviorYou can only run `gradle init` once if configuration cache is enabled unless you delete the first project generated.### ContextThe reproducer below uses `--configuration-cache`, but this was found because @tresat had the configuration cache enabled in his ~/.gradle/gradle.properties.This was reproduced with 7.3 and 7.4, but not 7.2.If you look at the `--debug` output from the build, it looks like the configuration cache is using `~/.gradle/undefined-build` as the project cache dir and this gets shared across all builds.### Steps to Reproduce This script will reproduce the problem:```#!/bin/shrm -rf first secondmkdir firstmkdir secondecho "">>>> creating the first project""cd firstgradle --configuration-cache init --type basic </dev/nullecho "">>>> creating the second project, init will be skipped, but it shouldn't""cd ../secondgradle --configuration-cache init --type basic </dev/nullecho "">>>> clearing the first project, and rerunning init in second works now""rm -rf ../firstgradle --configuration-cache init --type basic </dev/null```
"
20140,0,225,89,0,0,liutikas,0,"title:Key exporting writes out duplicate keys description:Running `./gradlew -M sha256 --export-keys --dry-run` writes out duplicate keys to gradle/verification-keyring-dryrun.keys### Expected BehaviorThere should be no duplicate key entries in gradle/verification-keyring-dryrun.keys or gradle/verification-keyring.keys### Current BehaviorRunning `./gradlew -M sha256 --export-keys --dry-run` writes out duplicate keys to gradle/verification-keyring-dryrun.keys### ContextGeneration of gradle/verification-keyring.keys seems to be non-deterministic. Ideally, this file would be sorted and only contain one entry for every pub/uid/sub combination.### Steps to Reproduce ```git clone git@github.com:androidx/androidx.gitcd androidx/room./gradlew bOS --dry-run -M sha256 --export-keys```look at  `gradle/verification-keyring-dryrun.keys`one example, I got 3 copies of ```pub    0315BFB7970A144Fuid    EE4J Automated Build <tomas.kraus@oracle.com>sub    7CD1B9BD808646B7```### Your EnvironmentBuild scan URL: N/A
"
20098,0,1808,5,0,0,dsaff,0,"title:Dependency verification fails for signed klib artifacts description:### Expected Behavior(On Linux)1. Check out [androidx-main](https://cs.android.com/androidx/platform/frameworks/support/+/androidx-main)2. Verify that native tests pass:```cd frameworks/support./gradlew --offline --no-configuration-cache -Pandroidx.kmp.linux.enabled=true collection2:collection2:linuxX64Test```3. Comment out the checksum entries for atomicfu-linuxx64, which should be unnecessary, because we have signatures for these libraries:https://cs.android.com/androidx/platform/frameworks/support/+/androidx-main:gradle/verification-metadata.xml;l=958;drc=b272bd6b539052144693f444342085d10cf9943b4. Repeat command from step 2.5. Expect that this command also passes.### Current Behavior5. Fails with```> Task :collection2:collection2:compileKotlinLinuxX64 FAILEDFAILURE: Build failed with an exception.* What went wrong:Execution failed for task ':collection2:collection2:compileKotlinLinuxX64'.> Dependency verification failed for configuration ':collection2:collection2:linuxX64CompileKlibraries':    - On artifact atomicfu-cinterop-interop.klib (org.jetbrains.kotlinx:atomicfu-linuxx64:0.14.4) in repository 'maven2': checksum is missing from verification metadata.    - On artifact atomicfu.klib (org.jetbrains.kotlinx:atomicfu-linuxx64:0.14.4) in repository 'maven2': checksum is missing from verification metadata.    If the artifacts are trustworthy, you will need to update the gradle/verification-metadata.xml file by following the instructions at https://docs.gradle.org/7.4/userguide/dependency_verification.html#sec:troubleshooting-verification    These files failed verification:    - GRADLE_USER_HOME/caches/modules-2/files-2.1/org.jetbrains.kotlinx/atomicfu-linuxx64/0.14.4/5327c22844c66040e3ef8023f47cd1a6db8ab4e5/atomicfu.klib    - GRADLE_USER_HOME/caches/modules-2/files-2.1/org.jetbrains.kotlinx/atomicfu-linuxx64/0.14.4/d8fae915484834b47fab9a42596349589b3b03dd/atomicfu-cinterop-interop.klib    GRADLE_USER_HOME = /usr/local/google/home/saff/.gradle    These files failed verification:    - GRADLE_USER_HOME/caches/modules-2/files-2.1/org.jetbrains.kotlinx/atomicfu-linuxx64/0.14.4/5327c22844c66040e3ef8023f47cd1a6db8ab4e5/atomicfu.klib    - GRADLE_USER_HOME/caches/modules-2/files-2.1/org.jetbrains.kotlinx/atomicfu-linuxx64/0.14.4/d8fae915484834b47fab9a42596349589b3b03dd/atomicfu-cinterop-interop.klib```### ContextWe want to verify signatures on all of our dependencies, for build chain security.
"
20096,1,500,54,0,0,frispete,0,"title:Packaging gradle 7.4.0 for openSUSE description:## ObjectiveAttempt to package the current gradle 7.4.0 as rpm [here](https://build.opensuse.org/project/monitor/home:frispete:java)### Steps, being takenPrepared a gradle-kit package (a helper package, that provides the full offline environment for building and using gradle)After I found out, that building the gradle-kit package in a path containing colons fails, I managed to build it in a colon free area and that seemed to be working fine.### Building gradleThe gradle build itself fails with:```[  124s] * What went wrong:[  124s] Execution failed for task ':base-annotations:compileJava'.[  124s] > Error while evaluating property 'javaCompiler' of task ':base-annotations:compileJava'[  124s]    > Failed to calculate the value of task ':base-annotations:compileJava' property 'javaCompiler'.[  124s]       > No compatible toolchains found for request filter: {languageVersion=11, vendor=ADOPTIUM, implementation=vendor-specific} (auto-detect false, auto-download false)[  124s] ```but no matter, how I treat the java.toolchain in build-logic/jvm/src/main/kotlin/gradlebuild.unittest-and-compile.gradle.kts- vendor.set(JvmVendorSpec.ADOPTOPENJDK)- switch to other language versions (8)- setting specific implementations implementation.set(JvmImplementation.VENDOR_SPECIFIC) it results in variations of above error.### General concernsThe major problem with packaging is, that everything needs to be available (offline build) in order to be reproducible.It would be nice to limit the number of used JVMs for the build to just one, if possible. We have 8, 11, 12, 13, 14, 15, 16, 17 available.### EnvironmentopenSUSE Tumbleweed Kernel 5.16.11Most packages are pretty current[Full debug build log](https://build.opensuse.org/public/build/home:frispete:java/openSUSE_Tumbleweed/x86_64/gradle/_log)
"
20084,1,2539,298,0,0,Goooler,0,"title:The request for this plugin could not be satisfied because the plugin is already on the classpath with an unknown version description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues--><!--- Provide a brief summary of the issue in the title above -->### Expected BehaviorCan `implementation` plugins declared in version catalogs under `buildSrc`.### Current BehaviorThrow:```Build file 'C:\Users\Administrator\AndroidStudioProjects\I18nDemo\build.gradle.kts' line: 1Error resolving plugin [id: 'com.android.application', version: '7.1.2', apply: false]> The request for this plugin could not be satisfied because the plugin is already on the classpath with an unknown version, so compatibility cannot be checked.* Try:> Run with --info or --debug option to get more log output.> Run with --scan to get full insights.* Exception is:org.gradle.api.GradleException: Error resolving plugin [id: 'com.android.application', version: '7.1.2', apply: false]	at org.gradle.plugin.use.internal.DefaultPluginRequestApplicator.resolveToFoundResult(DefaultPluginRequestApplicator.java:237)	at org.gradle.plugin.use.internal.DefaultPluginRequestApplicator.lambda$resolvePluginRequests$3(DefaultPluginRequestApplicator.java:169)	at org.gradle.util.internal.CollectionUtils.collect(CollectionUtils.java:207)	at org.gradle.util.internal.CollectionUtils.collect(CollectionUtils.java:201)	at org.gradle.plugin.use.internal.DefaultPluginRequestApplicator.resolvePluginRequests(DefaultPluginRequestApplicator.java:167)	at org.gradle.plugin.use.internal.DefaultPluginRequestApplicator.applyPlugins(DefaultPluginRequestApplicator.java:102)	at org.gradle.kotlin.dsl.provider.PluginRequestsHandler.handle(PluginRequestsHandler.kt:48)	at org.gradle.kotlin.dsl.provider.StandardKotlinScriptEvaluator$InterpreterHost.applyPluginsTo(KotlinScriptEvaluator.kt:195)	at org.gradle.kotlin.dsl.execution.Interpreter$ProgramHost.applyPluginsTo(Interpreter.kt:398)	at Program.execute(Unknown Source)```### ContextMy root `build.gradle.kts`:```kotlinplugins {  alias(libs.plugins.android.application) apply false  alias(libs.plugins.android.library) apply false  alias(libs.plugins.kotlin.android) apply false}```My `build.gradle.kts` in `buildSrc`:```kotlinplugins {  `kotlin-dsl`}repositories {  google()  mavenCentral()  gradlePluginPortal()}dependencies {  implementation(libs.gradlePlugin.android)  implementation(libs.gradlePlugin.kotlin)}```My version catalog:```toml[versions]agp = ""7.1.2""kotlin = ""1.6.10""[plugins]android-application = { id = ""com.android.application"", version.ref = ""agp"" }android-library = { id = ""com.android.library"", version.ref = ""agp"" }kotlin-android = { id = ""org.jetbrains.kotlin.android"", version.ref = ""kotlin"" }[libraries]gradlePlugin-android = { module = ""com.android.tools.build:gradle"", version.ref = ""agp"" }gradlePlugin-kotlin = { module = ""org.jetbrains.kotlin:kotlin-gradle-plugin"", version.ref = ""kotlin"" }```### Steps to Reproduce In this PR https://github.com/Goooler/I18nDemo/pull/4.### Your EnvironmentGradle 7.4
"
20081,0,0,11,0,0,andrgn,0,"title:Gradle doesn't recognize disabled parameterized junit5 tests  description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues--><!--- Provide a brief summary of the issue in the title above -->### Expected BehaviorIf there's disabled parameterized test then after execution `./gradlew clean test` there's information in console-log that this test is skipped (e.g. `ParameterizedTest > parameterizedTest() SKIPPED`) and also in `*.xml` file located in `build/test-results/` there's information about this test with skipped attribute### Current BehaviorGradle doesn't indicate disabled parameterized tests as skipped tests or as tests at all and there isn't information about this tests in console-log and in `*.xml`### Context<!--- How has this issue affected you? What are you trying to accomplish? --><!--- Providing context helps us come up with a solution that is most useful in the real world -->So, I'm trying to get reliable information about executed tests wich can help me to analyse what is checked and what isn't### Steps to Reproduce <!---Provide a self-contained example project as an attached archive or a Github project.You can use the following template with a Gradle GitHub action set up to showcase your problem: https://github.com/gradle/gradle-issue-reproducerIn the rare cases where this is infeasible, we will also accept a detailed set of instructions.-->- clone [this repo](https://github.com/andrgn/gradle-disabled-parameterized-test-issue)- execute `./gradlew clean test`### Your Environment<!--- Include as many relevant details about the environment you experienced the bug in --><!--- A build scan https://scans.gradle.com/get-started is ideal -->Build scan URL: https://scans.gradle.com/s/otul5mw7yy75u### P.S.I've looked into this problem and found out that junit5 works properly (It recognizes such tests). And the behaviour is correct too, if maven is used instead of gradle. ![mvn-1](https://user-images.githubusercontent.com/23133790/156775965-dba731d7-27e9-48b4-9948-4093d3323883.png)![mvn-2](https://user-images.githubusercontent.com/23133790/156776009-ec84518c-b824-4f14-80c0-10dff4891b69.png)Thus the problem is on gradle side, to my knowledge
"
20071,1,0,0,0,1,bobpaige,0,"title:Eclipse Doesn't See Members on java-test-fixtures Classes  description:JUnit tests executed in Eclipse that access classes in a subproject that use the java-test-fixtures plugin fail with an exception that the members don't exist.### Expected BehaviorExecuting tests in Eclipse that extend classes from a java-test-fixtures subproject are successful.### Current BehaviorExecuting tests in Eclipse that extend classes from a java-test-fixtures subproject fail with a NoSuchMethodError.I'm trying to use the test-fixtures-plugin where one subproject has base classes for junit tests, imported by other subprojects for their tests. For example, a ""mytestbase"" subproject has a class ""SampleBaseTest"" with a method ""getName()"". Another subproject has a test ""ExtnededSampleBaseTest"" that extends ""SampleBaseTest"" and calls ""getName()"". This works from Gradle/CLI, but when I import the Gradle project into Eclipse, the tests fail to execute, claiming the methods don't exist on the base class.### ContextI am trying to reuse base classes and utilities across subprojects in a single Gradle project. For example, environment initialization is in a ""SampleBaseTest"" class and other subprojects extend that class.### Steps to Reproduce Sample project: https://github.com/bobpaige/SampleTestFixtures1. Clone project and build with ""./gradlew build""; success2. Import project into Eclipse as a Gradle project and run the ""ExtendedSampleBaseTest"" class; failureThis test executes appropriately from the CLI, as verified by the junit HTML output (all tests from the base and extended class are executed with no errors).BUT, when running within Eclipse, tests from the base class are not attempted and anything that calls ""getName()"" fails with a NoMethodFoundException.Further, I tried, in the extended class, to use reflection to list the declared methods (calling ""SampleBaseTest.class.getDeclaredMethods()""). This returns an empty array. Repeating that but calling ""SampleBaseTest.class.getMethods()"" returns an array of just the methods from Object (""wait"", ""getClass"", ""notify"", etc.).### Your EnvironmentEclipse: Spring Tool Suite 4, Version 4.10.0.RELEASE, BuildId: 202103111225Java: Coretto-11.0.9.12.1
"
20062,1,0,141,0,1,DanielThomas,0,"title:Regression in primary task ordering description:We have projects that call a number of tasks on the command line, with the previous and documented contract being that those tasks would be executed in the order specified:> You can also specify multiple tasks. For example, the following will execute the test and deploy tasks in the order that they are listed on the command-line and will also execute the dependencies for each task.https://docs.gradle.org/current/userguide/command_line_interface.html#executing_multiple_tasksHowever in 7.4 the task order is no longer ensured, it appears we're seeing the later specified tasks execute first.### Expected BehaviorTask order should reflect the command line task request order (allowing for individual task dependencies of course).### Current BehaviorThe order appears to be ignored, or at least, that order has changed. We assume this is due to the fixes for `clean` task ordering:https://github.com/gradle/gradle/pull/18904### ContextProjects that previously implicitly on this task ordering (no declared dependencies or output/inputs tracked) are seeing failures due to missing inputs. This can also cause an artifact to be released without tests being successful.### Steps to Reproduce I can't come up with a reduced scenario for this so far, as this contract does seem to hold for simple task graphs. Believe it occurs when `clean` appears in the task requests.### Your EnvironmentGradle 7.4
"
20060,0,383,0,0,0,lchen8,0,"title:Version catalogs run into unexpected namespace conflicts description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues--><!--- Provide a brief summary of the issue in the title above -->I've noticed that when parsing a version catalog, the namespace `x.y` will result in some type of conflict with the namespace `xy`.Concretely, when I have the following two lines in my version catalog toml file:```com-googlecode-json-simple = ""com.googlecode.json-simple:json-simple:1.1.1""com-google-code-gson = ""com.google.code.gson:gson:2.8.2""```The second line fails with the error:```> Could not create an instance of type org.gradle.accessors.dm.LibrariesForLibs.   > org/gradle/accessors/dm/LibrariesForLibs$ComGooglecodeLibraryAccessors (wrong name: org/gradle/accessors/dm/LibrariesForLibs$ComGoogleCodeLibraryAccessors)```The lowercase ""code"" in `ComGooglecodeLibraryAccessors` suggests that it's searching in the `googlecode` namespace and not `google-code`.I've done my best to verify that this behavior shows up if and only if I have both `xy` and `x.y` in the toml file.### Expected BehaviorGradle can parse this version catalog without error.### Current BehaviorGradle runs into the error described above.### ContextWe noticed this error while migrating to using version catalogs.Firstly, the error message was vague and hard to debug.Secondly, this requires us to manually edit these namespace ""conflicts"" which shouldn't be really conflicts.### Steps to Reproduce This error is reproducible with my following sample repo: https://github.com/lchen8/gradle-bug-test-application/It fails upon trying to sync/config with Gradle.Within the sample repo, I've commented in [libs.versions.toml L9](https://github.com/lchen8/gradle-bug-test-application/blob/main/gradle/libs.versions.toml#L9) where the problem stems from.### Your EnvironmentThis problem appears both during Gradle sync (from Android studio) and any gradle command from terminalEdited to add: We are using Gradle 7.4Build scan URL: (The build scan was not published due to a configuration problem.)
"
20049,1,0,286,0,0,uschindler,0,"title:Toolchain API checks for targetCompatibility in all/unrelated scopes, 2nd try description:Because of bad behaviour in previous issue and suddenly closing an issue without verifying or talking to persons I open it again. See #20045 for details.
"
20045,1,0,0,0,0,kiwiwings,0,"title:Toolchain API checks for targetCompatibility in all/unrelated scopes description:<!--- Provide a brief summary of the issue in the title above -->If a plugin uses the ""targetCompatibility"" as a property, the toolchain API won't allow it to be set and gradle quits early.As example [forbiddenApis](https://github.com/policeman-tools/forbidden-apis) is such a case and its issue [#191](https://github.com/policeman-tools/forbidden-apis/issues/191), where we think it's gradle handling to be modified.### Expected BehaviorGradle should ignore targetCompatibility properties outside the usual suspects like compile, javadoc, javaexec.Maybe check for the availability of an JavaCompiler, JavaLauncher, JavadocTool type in that scope, to see if the targetCompatibility tag needs to conform to the existing policy.### Current BehaviorIf the toolchain settings are used and a plugin uses the property ""targetCompatibility"", gradle quits early.### ContextIn the [POI project](https://svn.apache.org/viewvc/poi/trunk/build.gradle?view=log) I was trying to limit the targetCompatibility of the forbiddenApis plugin. The code was compiled with JDK-18, but forbiddenApis only supports up to JDK-14 and fails beyond that, because it doesn't check for availability of the necessary resource bundles and simply uses the value gradle gives it.If you look at [#191](https://github.com/policeman-tools/forbidden-apis/issues/191), there are arguably workarounds, but gradles behaviour is also not straight forward. ### Steps to Reproduce <!---Provide a self-contained example project as an attached archive or a Github project.You can use the following template with a Gradle GitHub action set up to showcase your problem: https://github.com/gradle/gradle-issue-reproducerIn the rare cases where this is infeasible, we will also accept a detailed set of instructions.-->Take an empty gradle project and use the gradle.build of the following:https://github.com/kiwiwings/gradleToolchainConflict/tree/groovy-dsl### Your EnvironmentGradle 7.3
"
20039,0,36190,25,0,1,LexManos,0,"title:Toolchain binaries may contain `.` directory causing unpacking to fail. description:Some archives that adoptopenjdk provide have a root folder of '.' in the archive. Causing the [root directory detection](https://github.com/gradle/gradle/blob/846ec1db23a3c234b13b71af8533cc5cb3c4f079/subprojects/platform-jvm/src/main/java/org/gradle/jvm/toolchain/install/internal/JdkCacheDirectory.java#L131) to grab the archive name, not the proper folder.In my case, it is the linux J9 archive at https://api.adoptopenjdk.net/v3/binary/latest/9/ga/linux/x64/jdk/hotspot/normal/adoptopenjdkI've tested the 8-17 archives for this environment, and only 9 has the issue. But I have not tested all possible permutations.Unfortunately, it appears that AdoptOpenJDK, {now Adoptium} do not have plans to release a fixed J9 toolchain as it is not LTS. So it leaves it to gradle to be more robust. Plus it just makes sense to sanitize the folder names.Gradle: 7.4```[16:55:52] :	 [Step 4/9] Selected primary task 'build' from project :[16:55:53] :	 [Step 4/9] Downloading https://api.adoptopenjdk.net/v3/binary/latest/9/ga/linux/x64/jdk/hotspot/normal/adoptopenjdk to /home/gradle/.gradle/jdks/adoptium-9-x64-hotspot-linux.tar.gz[16:56:12] :	 [Step 4/9] Installed adoptium-9-x64-hotspot-linux.tar.gz into /home/gradle/.gradle/jdks/adoptium-9-x64-hotspot-linux[16:56:24] :	 [Step 4/9] Installed adoptium-9-x64-hotspot-linux.tar.gz into /home/gradle/.gradle/jdks/adoptium-9-x64-hotspot-linux[16:56:24]W:	 [Step 4/9] [16:56:24]W:	 [Step 4/9] FAILURE: Build failed with an exception.[16:56:24]W:	 [Step 4/9] [16:56:24]W:	 [Step 4/9] * What went wrong:[16:56:24]W:	 [Step 4/9] Could not determine the dependencies of task ':ForgeFlower:compileJava9Java'.[16:56:25]E:	 [Step 4/9] java.io.IOException: No such file or directory[16:56:24]W:	 [Step 4/9] > Could not resolve all dependencies for configuration ':ForgeFlower:java9CompileClasspath'.[16:56:24]W:	 [Step 4/9]    > Failed to calculate the value of task ':ForgeFlower:compileJava9Java' property 'javaCompiler'.[16:56:24]W:	 [Step 4/9]       > Unable to download toolchain matching these requirements: {languageVersion=9, vendor=any, implementation=vendor-specific}[16:56:24]W:	 [Step 4/9]          > Unable to create .ok file[16:56:24]W:	 [Step 4/9] [16:56:24]W:	 [Step 4/9] * Try:[16:56:24]W:	 [Step 4/9] > Run with --debug option to get more log output.[16:56:24]W:	 [Step 4/9] > Run with --scan to get full insights.[16:56:24]W:	 [Step 4/9] [16:56:24]W:	 [Step 4/9] * Exception is:[16:56:24]W:	 [Step 4/9] org.gradle.api.internal.tasks.TaskDependencyResolveException: Could not determine the dependencies of task ':ForgeFlower:compileJava9Java'.[16:56:24]W:	 [Step 4/9] 	at org.gradle.api.internal.tasks.CachingTaskDependencyResolveContext.getDependencies(CachingTaskDependencyResolveContext.java:71)[16:56:24]W:	 [Step 4/9] 	at org.gradle.execution.plan.TaskDependencyResolver.resolveDependenciesFor(TaskDependencyResolver.java:49)[16:56:24]W:	 [Step 4/9] 	at org.gradle.execution.plan.LocalTaskNode.getDependencies(LocalTaskNode.java:168)[16:56:24]W:	 [Step 4/9] 	at org.gradle.execution.plan.LocalTaskNode.resolveDependencies(LocalTaskNode.java:133)[16:56:24]W:	 [Step 4/9] 	at org.gradle.execution.plan.DefaultExecutionPlan.doAddNodes(DefaultExecutionPlan.java:202)[16:56:24]W:	 [Step 4/9] 	at org.gradle.execution.plan.DefaultExecutionPlan.addEntryTasks(DefaultExecutionPlan.java:166)[16:56:24]W:	 [Step 4/9] 	at org.gradle.execution.plan.DefaultExecutionPlan.addEntryTasks(DefaultExecutionPlan.java:148)[16:56:24]W:	 [Step 4/9] 	at org.gradle.execution.TaskNameResolvingBuildConfigurationAction.configure(TaskNameResolvingBuildConfigurationAction.java:47)[16:56:24]W:	 [Step 4/9] 	at org.gradle.execution.DefaultBuildConfigurationActionExecuter.configure(DefaultBuildConfigurationActionExecuter.java:52)[16:56:24]W:	 [Step 4/9] 	at org.gradle.execution.DefaultBuildConfigurationActionExecuter.access$000(DefaultBuildConfigurationActionExecuter.java:26)[16:56:24]W:	 [Step 4/9] 	at org.gradle.execution.DefaultBuildConfigurationActionExecuter$1.proceed(DefaultBuildConfigurationActionExecuter.java:65)[16:56:24]W:	 [Step 4/9] 	at org.gradle.execution.DefaultTasksBuildExecutionAction.configure(DefaultTasksBuildExecutionAction.java:48)[16:56:24]W:	 [Step 4/9] 	at org.gradle.execution.DefaultBuildConfigurationActionExecuter.configure(DefaultBuildConfigurationActionExecuter.java:52)[16:56:24]W:	 [Step 4/9] 	at org.gradle.execution.DefaultBuildConfigurationActionExecuter.lambda$select$0(DefaultBuildConfigurationActionExecuter.java:39)[16:56:24]W:	 [Step 4/9] 	at org.gradle.internal.Factories$1.create(Factories.java:31)[16:56:24]W:	 [Step 4/9] 	at org.gradle.internal.work.DefaultWorkerLeaseService.withoutLocks(DefaultWorkerLeaseService.java:332)[16:56:24]W:	 [Step 4/9] 	at org.gradle.api.internal.project.DefaultProjectStateRegistry.lambda$withMutableStateOfAllProjects$0(DefaultProjectStateRegistry.java:154)[16:56:24]W:	 [Step 4/9] 	at org.gradle.internal.work.DefaultWorkerLeaseService.withLocks(DefaultWorkerLeaseService.java:270)[16:56:24]W:	 [Step 4/9] 	at org.gradle.api.internal.project.DefaultProjectStateRegistry.withMutableStateOfAllProjects(DefaultProjectStateRegistry.java:154)[16:56:24]W:	 [Step 4/9] 	at org.gradle.api.internal.project.DefaultProjectStateRegistry.withMutableStateOfAllProjects(DefaultProjectStateRegistry.java:143)[16:56:24]W:	 [Step 4/9] 	at org.gradle.execution.DefaultBuildConfigurationActionExecuter.select(DefaultBuildConfigurationActionExecuter.java:38)[16:56:24]W:	 [Step 4/9] 	at org.gradle.initialization.DefaultTaskExecutionPreparer.prepareForTaskExecution(DefaultTaskExecutionPreparer.java:42)[16:56:24]W:	 [Step 4/9] 	at org.gradle.initialization.VintageBuildModelController.lambda$scheduleRequestedTasks$1(VintageBuildModelController.java:81)[16:56:24]W:	 [Step 4/9] 	at org.gradle.internal.model.StateTransitionController.lambda$inState$1(StateTransitionController.java:98)[16:56:24]W:	 [Step 4/9] 	at org.gradle.internal.model.StateTransitionController.lambda$inState$2(StateTransitionController.java:113)[16:56:24]W:	 [Step 4/9] 	at org.gradle.internal.work.DefaultSynchronizer.withLock(DefaultSynchronizer.java:44)[16:56:24]W:	 [Step 4/9] 	at org.gradle.internal.model.StateTransitionController.inState(StateTransitionController.java:109)[16:56:24]W:	 [Step 4/9] 	at org.gradle.internal.model.StateTransitionController.inState(StateTransitionController.java:97)[16:56:24]W:	 [Step 4/9] 	at org.gradle.initialization.VintageBuildModelController.scheduleRequestedTasks(VintageBuildModelController.java:81)[16:56:24]W:	 [Step 4/9] 	at org.gradle.internal.build.DefaultBuildLifecycleController$DefaultWorkGraphBuilder.addRequestedTasks(DefaultBuildLifecycleController.java:244)[16:56:24]W:	 [Step 4/9] 	at org.gradle.internal.build.DefaultBuildLifecycleController.lambda$populateWorkGraph$4(DefaultBuildLifecycleController.java:150)[16:56:24]W:	 [Step 4/9] 	at org.gradle.internal.build.DefaultBuildWorkPreparer.populateWorkGraph(DefaultBuildWorkPreparer.java:41)[16:56:24]W:	 [Step 4/9] 	at org.gradle.internal.build.BuildOperationFiringBuildWorkPreparer$PopulateWorkGraph.populateTaskGraph(BuildOperationFiringBuildWorkPreparer.java:132)[16:56:24]W:	 [Step 4/9] 	at org.gradle.internal.build.BuildOperationFiringBuildWorkPreparer$PopulateWorkGraph.run(BuildOperationFiringBuildWorkPreparer.java:88)[16:56:24]W:	 [Step 4/9] 	at org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:29)[16:56:24]W:	 [Step 4/9] 	at org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:26)[16:56:24]W:	 [Step 4/9] 	at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)[16:56:24]W:	 [Step 4/9] 	at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)[16:56:24]W:	 [Step 4/9] 	at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)[16:56:24]W:	 [Step 4/9] 	at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)[16:56:24]W:	 [Step 4/9] 	at org.gradle.internal.operations.DefaultBuildOperationRunner.run(DefaultBuildOperationRunner.java:47)[16:56:24]W:	 [Step 4/9] 	at org.gradle.internal.operations.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:68)[16:56:24]W:	 [Step 4/9] 	at org.gradle.internal.build.BuildOperationFiringBuildWorkPreparer.populateWorkGraph(BuildOperationFiringBuildWorkPreparer.java:65)[16:56:24]W:	 [Step 4/9] 	at org.gradle.internal.build.DefaultBuildLifecycleController.lambda$populateWorkGraph$5(DefaultBuildLifecycleController.java:150)[16:56:24]W:	 [Step 4/9] 	at org.gradle.internal.model.StateTransitionController.lambda$inState$1(StateTransitionController.java:98)[16:56:24]W:	 [Step 4/9] 	at org.gradle.internal.model.StateTransitionController.lambda$inState$2(StateTransitionController.java:113)[16:56:24]W:	 [Step 4/9] 	at org.gradle.internal.work.DefaultSynchronizer.withLock(DefaultSynchronizer.java:44)[16:56:24]W:	 [Step 4/9] 	at org.gradle.internal.model.StateTransitionController.inState(StateTransitionController.java:109)[16:56:24]W:	 [Step 4/9] 	at org.gradle.internal.model.StateTransitionController.inState(StateTransitionController.java:97)[16:56:24]W:	 [Step 4/9] 	at org.gradle.internal.build.DefaultBuildLifecycleController.populateWorkGraph(DefaultBuildLifecycleController.java:150)[16:56:24]W:	 [Step 4/9] 	at org.gradle.internal.build.DefaultBuildWorkGraphController$DefaultBuildWorkGraph.populateWorkGraph(DefaultBuildWorkGraphController.java:120)[16:56:24]W:	 [Step 4/9] 	at org.gradle.composite.internal.DefaultBuildController.populateWorkGraph(DefaultBuildController.java:82)[16:56:24]W:	 [Step 4/9] 	at org.gradle.composite.internal.DefaultIncludedBuildTaskGraph$DefaultBuildTreeWorkGraphBuilder.withWorkGraph(DefaultIncludedBuildTaskGraph.java:116)[16:56:24]W:	 [Step 4/9] 	at org.gradle.internal.buildtree.DefaultBuildTreeWorkPreparer.lambda$scheduleRequestedTasks$0(DefaultBuildTreeWorkPreparer.java:34)[16:56:24]W:	 [Step 4/9] 	at org.gradle.composite.internal.DefaultIncludedBuildTaskGraph$DefaultBuildTreeWorkGraph$1.run(DefaultIncludedBuildTaskGraph.java:144)[16:56:24]W:	 [Step 4/9] 	at org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:29)[16:56:24]W:	 [Step 4/9] 	at org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:26)[16:56:24]W:	 [Step 4/9] 	at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)[16:56:24]W:	 [Step 4/9] 	at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)[16:56:24]W:	 [Step 4/9] 	at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)[16:56:24]W:	 [Step 4/9] 	at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)[16:56:24]W:	 [Step 4/9] 	at org.gradle.internal.operations.DefaultBuildOperationRunner.run(DefaultBuildOperationRunner.java:47)[16:56:24]W:	 [Step 4/9] 	at org.gradle.internal.operations.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:68)[16:56:24]W:	 [Step 4/9] 	at org.gradle.composite.internal.DefaultIncludedBuildTaskGraph$DefaultBuildTreeWorkGraph.scheduleWork(DefaultIncludedBuildTaskGraph.java:141)[16:56:24]W:	 [Step 4/9] 	at org.gradle.internal.buildtree.DefaultBuildTreeWorkPreparer.scheduleRequestedTasks(DefaultBuildTreeWorkPreparer.java:34)[16:56:24]W:	 [Step 4/9] 	at org.gradle.internal.buildtree.DefaultBuildTreeLifecycleController.lambda$doScheduleAndRunTasks$2(DefaultBuildTreeLifecycleController.java:89)[16:56:24]W:	 [Step 4/9] 	at org.gradle.composite.internal.DefaultIncludedBuildTaskGraph.withNewWorkGraph(DefaultIncludedBuildTaskGraph.java:75)[16:56:24]W:	 [Step 4/9] 	at org.gradle.internal.buildtree.DefaultBuildTreeLifecycleController.doScheduleAndRunTasks(DefaultBuildTreeLifecycleController.java:88)[16:56:24]W:	 [Step 4/9] 	at org.gradle.internal.buildtree.DefaultBuildTreeLifecycleController.lambda$runBuild$4(DefaultBuildTreeLifecycleController.java:106)[16:56:24]W:	 [Step 4/9] 	at org.gradle.internal.model.StateTransitionController.lambda$transition$6(StateTransitionController.java:166)[16:56:24]W:	 [Step 4/9] 	at org.gradle.internal.model.StateTransitionController.doTransition(StateTransitionController.java:238)[16:56:24]W:	 [Step 4/9] 	at org.gradle.internal.model.StateTransitionController.lambda$transition$7(StateTransitionController.java:166)[16:56:24]W:	 [Step 4/9] 	at org.gradle.internal.work.DefaultSynchronizer.withLock(DefaultSynchronizer.java:44)[16:56:24]W:	 [Step 4/9] 	at org.gradle.internal.model.StateTransitionController.transition(StateTransitionController.java:166)[16:56:24]W:	 [Step 4/9] 	at org.gradle.internal.buildtree.DefaultBuildTreeLifecycleController.runBuild(DefaultBuildTreeLifecycleController.java:103)[16:56:24]W:	 [Step 4/9] 	at org.gradle.internal.buildtree.DefaultBuildTreeLifecycleController.scheduleAndRunTasks(DefaultBuildTreeLifecycleController.java:69)[16:56:24]W:	 [Step 4/9] 	at org.gradle.tooling.internal.provider.ExecuteBuildActionRunner.run(ExecuteBuildActionRunner.java:31)[16:56:24]W:	 [Step 4/9] 	at org.gradle.launcher.exec.ChainingBuildActionRunner.run(ChainingBuildActionRunner.java:35)[16:56:24]W:	 [Step 4/9] 	at org.gradle.internal.buildtree.ProblemReportingBuildActionRunner.run(ProblemReportingBuildActionRunner.java:49)[16:56:24]W:	 [Step 4/9] 	at org.gradle.launcher.exec.BuildOutcomeReportingBuildActionRunner.run(BuildOutcomeReportingBuildActionRunner.java:69)[16:56:24]W:	 [Step 4/9] 	at org.gradle.tooling.internal.provider.FileSystemWatchingBuildActionRunner.run(FileSystemWatchingBuildActionRunner.java:119)[16:56:24]W:	 [Step 4/9] 	at org.gradle.launcher.exec.BuildCompletionNotifyingBuildActionRunner.run(BuildCompletionNotifyingBuildActionRunner.java:41)[16:56:24]W:	 [Step 4/9] 	at org.gradle.launcher.exec.RootBuildLifecycleBuildActionExecutor.lambda$execute$0(RootBuildLifecycleBuildActionExecutor.java:40)[16:56:24]W:	 [Step 4/9] 	at org.gradle.composite.internal.DefaultRootBuildState.run(DefaultRootBuildState.java:128)[16:56:24]W:	 [Step 4/9] 	at org.gradle.launcher.exec.RootBuildLifecycleBuildActionExecutor.execute(RootBuildLifecycleBuildActionExecutor.java:40)[16:56:24]W:	 [Step 4/9] 	at org.gradle.internal.buildtree.DefaultBuildTreeContext.execute(DefaultBuildTreeContext.java:40)[16:56:24]W:	 [Step 4/9] 	at org.gradle.launcher.exec.BuildTreeLifecycleBuildActionExecutor.lambda$execute$0(BuildTreeLifecycleBuildActionExecutor.java:65)[16:56:24]W:	 [Step 4/9] 	at org.gradle.internal.buildtree.BuildTreeState.run(BuildTreeState.java:53)[16:56:24]W:	 [Step 4/9] 	at org.gradle.launcher.exec.BuildTreeLifecycleBuildActionExecutor.execute(BuildTreeLifecycleBuildActionExecutor.java:65)[16:56:24]W:	 [Step 4/9] 	at org.gradle.launcher.exec.RunAsBuildOperationBuildActionExecutor$3.call(RunAsBuildOperationBuildActionExecutor.java:61)[16:56:24]W:	 [Step 4/9] 	at org.gradle.launcher.exec.RunAsBuildOperationBuildActionExecutor$3.call(RunAsBuildOperationBuildActionExecutor.java:57)[16:56:24]W:	 [Step 4/9] 	at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)[16:56:24]W:	 [Step 4/9] 	at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)[16:56:24]W:	 [Step 4/9] 	at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)[16:56:24]W:	 [Step 4/9] 	at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)[16:56:24]W:	 [Step 4/9] 	at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)[16:56:24]W:	 [Step 4/9] 	at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)[16:56:24]W:	 [Step 4/9] 	at org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)[16:56:24]W:	 [Step 4/9] 	at org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)[16:56:24]W:	 [Step 4/9] 	at org.gradle.launcher.exec.RunAsBuildOperationBuildActionExecutor.execute(RunAsBuildOperationBuildActionExecutor.java:57)[16:56:24]W:	 [Step 4/9] 	at org.gradle.launcher.exec.RunAsWorkerThreadBuildActionExecutor.lambda$execute$0(RunAsWorkerThreadBuildActionExecutor.java:36)[16:56:24]W:	 [Step 4/9] 	at org.gradle.internal.work.DefaultWorkerLeaseService.withLocks(DefaultWorkerLeaseService.java:270)[16:56:24]W:	 [Step 4/9] 	at org.gradle.internal.work.DefaultWorkerLeaseService.runAsWorkerThread(DefaultWorkerLeaseService.java:119)[16:56:24]W:	 [Step 4/9] 	at org.gradle.launcher.exec.RunAsWorkerThreadBuildActionExecutor.execute(RunAsWorkerThreadBuildActionExecutor.java:36)[16:56:24]W:	 [Step 4/9] 	at org.gradle.tooling.internal.provider.ContinuousBuildActionExecutor.execute(ContinuousBuildActionExecutor.java:103)[16:56:24]W:	 [Step 4/9] 	at org.gradle.tooling.internal.provider.SubscribableBuildActionExecutor.execute(SubscribableBuildActionExecutor.java:64)[16:56:24]W:	 [Step 4/9] 	at org.gradle.internal.session.DefaultBuildSessionContext.execute(DefaultBuildSessionContext.java:46)[16:56:24]W:	 [Step 4/9] 	at org.gradle.tooling.internal.provider.BuildSessionLifecycleBuildActionExecuter$ActionImpl.apply(BuildSessionLifecycleBuildActionExecuter.java:100)[16:56:24]W:	 [Step 4/9] 	at org.gradle.tooling.internal.provider.BuildSessionLifecycleBuildActionExecuter$ActionImpl.apply(BuildSessionLifecycleBuildActionExecuter.java:88)[16:56:24]W:	 [Step 4/9] 	at org.gradle.internal.session.BuildSessionState.run(BuildSessionState.java:69)[16:56:24]W:	 [Step 4/9] 	at org.gradle.tooling.internal.provider.BuildSessionLifecycleBuildActionExecuter.execute(BuildSessionLifecycleBuildActionExecuter.java:62)[16:56:24]W:	 [Step 4/9] 	at org.gradle.tooling.internal.provider.BuildSessionLifecycleBuildActionExecuter.execute(BuildSessionLifecycleBuildActionExecuter.java:41)[16:56:24]W:	 [Step 4/9] 	at org.gradle.tooling.internal.provider.StartParamsValidatingActionExecuter.execute(StartParamsValidatingActionExecuter.java:63)[16:56:24]W:	 [Step 4/9] 	at org.gradle.tooling.internal.provider.StartParamsValidatingActionExecuter.execute(StartParamsValidatingActionExecuter.java:31)[16:56:24]W:	 [Step 4/9] 	at org.gradle.tooling.internal.provider.SessionFailureReportingActionExecuter.execute(SessionFailureReportingActionExecuter.java:58)[16:56:24]W:	 [Step 4/9] 	at org.gradle.tooling.internal.provider.SessionFailureReportingActionExecuter.execute(SessionFailureReportingActionExecuter.java:42)[16:56:24]W:	 [Step 4/9] 	at org.gradle.tooling.internal.provider.SetupLoggingActionExecuter.execute(SetupLoggingActionExecuter.java:47)[16:56:24]W:	 [Step 4/9] 	at org.gradle.tooling.internal.provider.SetupLoggingActionExecuter.execute(SetupLoggingActionExecuter.java:31)[16:56:24]W:	 [Step 4/9] 	at org.gradle.launcher.daemon.server.exec.ExecuteBuild.doBuild(ExecuteBuild.java:65)[16:56:24]W:	 [Step 4/9] 	at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:37)[16:56:24]W:	 [Step 4/9] 	at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)[16:56:24]W:	 [Step 4/9] 	at org.gradle.launcher.daemon.server.exec.WatchForDisconnection.execute(WatchForDisconnection.java:39)[16:56:24]W:	 [Step 4/9] 	at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)[16:56:24]W:	 [Step 4/9] 	at org.gradle.launcher.daemon.server.exec.ResetDeprecationLogger.execute(ResetDeprecationLogger.java:29)[16:56:24]W:	 [Step 4/9] 	at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)[16:56:24]W:	 [Step 4/9] 	at org.gradle.launcher.daemon.server.exec.RequestStopIfSingleUsedDaemon.execute(RequestStopIfSingleUsedDaemon.java:35)[16:56:24]W:	 [Step 4/9] 	at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)[16:56:24]W:	 [Step 4/9] 	at org.gradle.launcher.daemon.server.exec.ForwardClientInput$2.create(ForwardClientInput.java:78)[16:56:24]W:	 [Step 4/9] 	at org.gradle.launcher.daemon.server.exec.ForwardClientInput$2.create(ForwardClientInput.java:75)[16:56:24]W:	 [Step 4/9] 	at org.gradle.util.internal.Swapper.swap(Swapper.java:38)[16:56:24]W:	 [Step 4/9] 	at org.gradle.launcher.daemon.server.exec.ForwardClientInput.execute(ForwardClientInput.java:75)[16:56:24]W:	 [Step 4/9] 	at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)[16:56:24]W:	 [Step 4/9] 	at org.gradle.launcher.daemon.server.exec.LogAndCheckHealth.execute(LogAndCheckHealth.java:50)[16:56:24]W:	 [Step 4/9] 	at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)[16:56:24]W:	 [Step 4/9] 	at org.gradle.launcher.daemon.server.exec.LogToClient.doBuild(LogToClient.java:63)[16:56:24]W:	 [Step 4/9] 	at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:37)[16:56:24]W:	 [Step 4/9] 	at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)[16:56:24]W:	 [Step 4/9] 	at org.gradle.launcher.daemon.server.exec.EstablishBuildEnvironment.doBuild(EstablishBuildEnvironment.java:84)[16:56:24]W:	 [Step 4/9] 	at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:37)[16:56:24]W:	 [Step 4/9] 	at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)[16:56:24]W:	 [Step 4/9] 	at org.gradle.launcher.daemon.server.exec.StartBuildOrRespondWithBusy$1.run(StartBuildOrRespondWithBusy.java:52)[16:56:24]W:	 [Step 4/9] 	at org.gradle.launcher.daemon.server.DaemonStateCoordinator$1.run(DaemonStateCoordinator.java:297)[16:56:24]W:	 [Step 4/9] 	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)[16:56:24]W:	 [Step 4/9] 	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)[16:56:24]W:	 [Step 4/9] Caused by: org.gradle.api.artifacts.ResolveException: Could not resolve all dependencies for configuration ':ForgeFlower:java9CompileClasspath'.[16:56:24]W:	 [Step 4/9] 	at org.gradle.api.internal.artifacts.ivyservice.ErrorHandlingConfigurationResolver.wrapException(ErrorHandlingConfigurationResolver.java:107)[16:56:24]W:	 [Step 4/9] 	at org.gradle.api.internal.artifacts.ivyservice.ErrorHandlingConfigurationResolver.resolveBuildDependencies(ErrorHandlingConfigurationResolver.java:67)[16:56:24]W:	 [Step 4/9] 	at org.gradle.api.internal.artifacts.configurations.DefaultConfiguration.lambda$resolveGraphForBuildDependenciesIfRequired$6(DefaultConfiguration.java:862)[16:56:24]W:	 [Step 4/9] 	at org.gradle.api.internal.project.DefaultProjectStateRegistry$CalculatedModelValueImpl.update(DefaultProjectStateRegistry.java:464)[16:56:24]W:	 [Step 4/9] 	at org.gradle.api.internal.artifacts.configurations.DefaultConfiguration.resolveGraphForBuildDependenciesIfRequired(DefaultConfiguration.java:858)[16:56:24]W:	 [Step 4/9] 	at org.gradle.api.internal.artifacts.configurations.DefaultConfiguration.access$1800(DefaultConfiguration.java:159)[16:56:24]W:	 [Step 4/9] 	at org.gradle.api.internal.artifacts.configurations.DefaultConfiguration$SelectedArtifactsProvider.getTaskDependencyValue(DefaultConfiguration.java:1416)[16:56:24]W:	 [Step 4/9] 	at org.gradle.api.internal.artifacts.configurations.DefaultConfiguration$SelectedArtifactsProvider.getTaskDependencyValue(DefaultConfiguration.java:1412)[16:56:24]W:	 [Step 4/9] 	at org.gradle.api.internal.artifacts.configurations.DefaultConfiguration$ConfigurationFileCollection.visitDependencies(DefaultConfiguration.java:1457)[16:56:24]W:	 [Step 4/9] 	at org.gradle.api.internal.tasks.CachingTaskDependencyResolveContext$TaskGraphImpl.getNodeValues(CachingTaskDependencyResolveContext.java:114)[16:56:24]W:	 [Step 4/9] 	at org.gradle.internal.graph.CachingDirectedGraphWalker$GraphWithEmptyEdges.getNodeValues(CachingDirectedGraphWalker.java:213)[16:56:24]W:	 [Step 4/9] 	at org.gradle.internal.graph.CachingDirectedGraphWalker.doSearch(CachingDirectedGraphWalker.java:121)[16:56:24]W:	 [Step 4/9] 	at org.gradle.internal.graph.CachingDirectedGraphWalker.findValues(CachingDirectedGraphWalker.java:73)[16:56:24]W:	 [Step 4/9] 	at org.gradle.api.internal.tasks.CachingTaskDependencyResolveContext.getDependencies(CachingTaskDependencyResolveContext.java:69)[16:56:24]W:	 [Step 4/9] 	... 143 more[16:56:24]W:	 [Step 4/9] Caused by: org.gradle.api.internal.provider.AbstractProperty$PropertyQueryException: Failed to calculate the value of task ':ForgeFlower:compileJava9Java' property 'javaCompiler'.[16:56:24]W:	 [Step 4/9] 	at org.gradle.api.internal.provider.AbstractProperty.finalizeNow(AbstractProperty.java:239)[16:56:24]W:	 [Step 4/9] 	at org.gradle.api.internal.provider.AbstractProperty.beforeRead(AbstractProperty.java:230)[16:56:24]W:	 [Step 4/9] 	at org.gradle.api.internal.provider.AbstractProperty.calculatePresence(AbstractProperty.java:56)[16:56:24]W:	 [Step 4/9] 	at org.gradle.api.internal.provider.AbstractMinimalProvider.isPresent(AbstractMinimalProvider.java:74)[16:56:24]W:	 [Step 4/9] 	at org.gradle.api.plugins.JavaBasePlugin.lambda$determineCompatibility$7(JavaBasePlugin.java:290)[16:56:24]W:	 [Step 4/9] 	at org.gradle.util.internal.GUtil.uncheckedCall(GUtil.java:458)[16:56:24]W:	 [Step 4/9] 	at org.gradle.internal.extensibility.ConventionAwareHelper$2.doGetValue(ConventionAwareHelper.java:96)[16:56:24]W:	 [Step 4/9] 	at org.gradle.internal.extensibility.ConventionAwareHelper$MappedPropertyImpl.getValue(ConventionAwareHelper.java:147)[16:56:24]W:	 [Step 4/9] 	at org.gradle.internal.extensibility.ConventionAwareHelper.getConventionValue(ConventionAwareHelper.java:129)[16:56:24]W:	 [Step 4/9] 	at org.gradle.api.tasks.compile.JavaCompile_Decorated.getTargetCompatibility(Unknown Source)[16:56:24]W:	 [Step 4/9] 	at org.gradle.api.plugins.jvm.internal.DefaultJvmPluginServices.lambda$configureDefaultTargetPlatform$5(DefaultJvmPluginServices.java:228)[16:56:24]W:	 [Step 4/9] 	at org.gradle.internal.Actions$CompositeAction.execute(Actions.java:114)[16:56:24]W:	 [Step 4/9] 	at org.gradle.api.internal.artifacts.configurations.DefaultConfiguration.preventFromFurtherMutation(DefaultConfiguration.java:1092)[16:56:24]W:	 [Step 4/9] 	at org.gradle.api.internal.artifacts.ivyservice.moduleconverter.DefaultLocalComponentMetadataBuilder.createConfiguration(DefaultLocalComponentMetadataBuilder.java:70)[16:56:24]W:	 [Step 4/9] 	at org.gradle.api.internal.artifacts.ivyservice.moduleconverter.DefaultLocalComponentMetadataBuilder.addConfiguration(DefaultLocalComponentMetadataBuilder.java:44)[16:56:24]W:	 [Step 4/9] 	at org.gradle.api.internal.artifacts.ivyservice.moduleconverter.DefaultRootComponentMetadataBuilder.addConfiguration(DefaultRootComponentMetadataBuilder.java:112)[16:56:24]W:	 [Step 4/9] 	at org.gradle.api.internal.artifacts.ivyservice.moduleconverter.DefaultRootComponentMetadataBuilder.getRootComponentMetadata(DefaultRootComponentMetadataBuilder.java:106)[16:56:24]W:	 [Step 4/9] 	at org.gradle.api.internal.artifacts.ivyservice.moduleconverter.DefaultRootComponentMetadataBuilder.lambda$buildRootComponentMetadata$0(DefaultRootComponentMetadataBuilder.java:96)[16:56:24]W:	 [Step 4/9] 	at org.gradle.api.internal.project.DefaultProjectStateRegistry$ProjectStateImpl.fromMutableState(DefaultProjectStateRegistry.java:378)[16:56:24]W:	 [Step 4/9] 	at org.gradle.api.internal.artifacts.ivyservice.moduleconverter.DefaultRootComponentMetadataBuilder.buildRootComponentMetadata(DefaultRootComponentMetadataBuilder.java:94)[16:56:24]W:	 [Step 4/9] 	at org.gradle.api.internal.artifacts.ivyservice.moduleconverter.DefaultRootComponentMetadataBuilder.toRootComponentMetaData(DefaultRootComponentMetadataBuilder.java:80)[16:56:24]W:	 [Step 4/9] 	at org.gradle.api.internal.artifacts.configurations.DefaultConfiguration.toRootComponentMetaData(DefaultConfiguration.java:1275)[16:56:24]W:	 [Step 4/9] 	at org.gradle.api.internal.artifacts.ivyservice.resolveengine.DefaultArtifactDependencyResolver$DefaultResolveContextToComponentResolver.resolve(DefaultArtifactDependencyResolver.java:223)[16:56:24]W:	 [Step 4/9] 	at org.gradle.api.internal.artifacts.ivyservice.resolveengine.graph.builder.DependencyGraphBuilder.resolve(DependencyGraphBuilder.java:141)[16:56:24]W:	 [Step 4/9] 	at org.gradle.api.internal.artifacts.ivyservice.resolveengine.DefaultArtifactDependencyResolver.resolve(DefaultArtifactDependencyResolver.java:141)[16:56:24]W:	 [Step 4/9] 	at org.gradle.api.internal.artifacts.ivyservice.DefaultConfigurationResolver.resolveBuildDependencies(DefaultConfigurationResolver.java:138)[16:56:24]W:	 [Step 4/9] 	at org.gradle.api.internal.artifacts.ivyservice.ShortCircuitEmptyConfigurationResolver.resolveBuildDependencies(ShortCircuitEmptyConfigurationResolver.java:76)[16:56:24]W:	 [Step 4/9] 	at org.gradle.api.internal.artifacts.ivyservice.ErrorHandlingConfigurationResolver.resolveBuildDependencies(ErrorHandlingConfigurationResolver.java:65)[16:56:24]W:	 [Step 4/9] 	... 155 more[16:56:24]W:	 [Step 4/9] Caused by: org.gradle.jvm.toolchain.install.internal.DefaultJavaToolchainProvisioningService$MissingToolchainException: Unable to download toolchain matching these requirements: {languageVersion=9, vendor=any, implementation=vendor-specific}[16:56:24]W:	 [Step 4/9] 	at org.gradle.jvm.toolchain.install.internal.DefaultJavaToolchainProvisioningService.provisionInstallation(DefaultJavaToolchainProvisioningService.java:80)[16:56:24]W:	 [Step 4/9] 	at org.gradle.jvm.toolchain.install.internal.DefaultJavaToolchainProvisioningService.tryInstall(DefaultJavaToolchainProvisioningService.java:67)[16:56:24]W:	 [Step 4/9] 	at org.gradle.jvm.toolchain.internal.JavaToolchainQueryService.downloadToolchain(JavaToolchainQueryService.java:88)[16:56:24]W:	 [Step 4/9] 	at org.gradle.jvm.toolchain.internal.JavaToolchainQueryService.lambda$query$3(JavaToolchainQueryService.java:84)[16:56:24]W:	 [Step 4/9] 	at org.gradle.jvm.toolchain.internal.JavaToolchainQueryService.query(JavaToolchainQueryService.java:84)[16:56:24]W:	 [Step 4/9] 	at org.gradle.jvm.toolchain.internal.JavaToolchainQueryService.lambda$findMatchingToolchain$0(JavaToolchainQueryService.java:62)[16:56:24]W:	 [Step 4/9] 	at org.gradle.jvm.toolchain.internal.JavaToolchainQueryService.lambda$findMatchingToolchain$1(JavaToolchainQueryService.java:62)[16:56:24]W:	 [Step 4/9] 	at org.gradle.api.internal.provider.DefaultProvider.calculateOwnValue(DefaultProvider.java:72)[16:56:24]W:	 [Step 4/9] 	at org.gradle.api.internal.provider.AbstractMinimalProvider.calculateValue(AbstractMinimalProvider.java:103)[16:56:24]W:	 [Step 4/9] 	at org.gradle.api.internal.provider.TransformBackedProvider.calculateOwnValue(TransformBackedProvider.java:64)[16:56:24]W:	 [Step 4/9] 	at org.gradle.api.internal.provider.AbstractMinimalProvider.calculateValue(AbstractMinimalProvider.java:103)[16:56:24]W:	 [Step 4/9] 	at org.gradle.api.internal.provider.MappingProvider.calculateOwnValue(MappingProvider.java:55)[16:56:24]W:	 [Step 4/9] 	at org.gradle.api.internal.provider.AbstractMinimalProvider.calculateValue(AbstractMinimalProvider.java:103)[16:56:24]W:	 [Step 4/9] 	at org.gradle.api.internal.provider.AbstractMinimalProvider.withFinalValue(AbstractMinimalProvider.java:159)[16:56:24]W:	 [Step 4/9] 	at org.gradle.api.internal.provider.DefaultProperty.finalValue(DefaultProperty.java:133)[16:56:24]W:	 [Step 4/9] 	at org.gradle.api.internal.provider.DefaultProperty.finalValue(DefaultProperty.java:26)[16:56:24]W:	 [Step 4/9] 	at org.gradle.api.internal.provider.AbstractProperty.finalizeNow(AbstractProperty.java:236)[16:56:24]W:	 [Step 4/9] 	... 182 more[16:56:24]W:	 [Step 4/9] Caused by: org.gradle.api.UncheckedIOException: Unable to create .ok file[16:56:24]W:	 [Step 4/9] 	at org.gradle.jvm.toolchain.install.internal.JdkCacheDirectory.markAsReady(JdkCacheDirectory.java:102)[16:56:24]W:	 [Step 4/9] 	at org.gradle.jvm.toolchain.install.internal.JdkCacheDirectory.provisionFromArchive(JdkCacheDirectory.java:94)[16:56:24]W:	 [Step 4/9] 	at org.gradle.jvm.toolchain.install.internal.DefaultJavaToolchainProvisioningService.lambda$provisionJdk$1(DefaultJavaToolchainProvisioningService.ja"
19976,1,0,13,0,0,abbas-gadhia,0,"title:Gradle build stuck during test execution description:I have a build that gets stuck everytime we execute our tests. The build is a multi-project build. We're running gradle 7.3.3 with jdk 11.With a thread dump, I see 3 TaskProcessors all trying to stop the tests but all of them seem to be waiting on a condition that i cant seem to figure out. It seems that i can't reproduce this issue on a physical machine, but this is occurring consistently within a docker container. The docker container base image is centos 7. Also, interestingly, when the build is executed a second time on the same folder, it doesnt get stuck.Following is the thread dump. https://gist.github.com/abbas-gadhia/b3cf0eed9552795e67dbd02b5d44e71bPlease help if possible.
"
19959,0,1905,7,0,0,bingranl,0,"title:notCompatibleWithConfigurationCache failed to force errors into warnings description:### ContextAndroid Gradle Plugin is adopting the new API `notCompatibleWithConfigurationCache` to let Gradle know which tasks are not compatible with config caching.### Steps to Reproduce With the sample project attached, ""androidDependencies"" task has been specified as incompatible with config cache in app build file.1. run `./gradlew androidDependencies`, and expect the build to finish2. run `./gradlew androidDependencies --configuration-cache`, the build would fail unexpectedly### Expected Behavior<!--- Tell us what should happen -->With `notCompatibleWithConfigurationCache`, Gradle would force config cache errors into warnings### Current Behavior<!--- Tell us what happens instead of the expected behavior -->The build failed hard with errors like ```Configuration cache state could not be cached: field '__nestedComponents__' from type 'com.android.build.gradle.internal.tasks.DependencyReportTask': error writing value of type 'org.gradle.api.internal.provider.DefaultListProperty'> Configuration cache state could not be cached: field 'delegate$delegate' from type 'com.android.build.api.component.impl.AndroidTestImpl': error writing value of type 'kotlin.SynchronizedLazyImpl'   > Configuration cache state could not be cached: field 'value' from type 'kotlin.InitializedLazyImpl': error writing value of type 'com.android.build.api.component.impl.AndroidTestCreationConfigImpl'      > Configuration cache state could not be cached: field 'globalScope' from type 'com.android.build.api.component.impl.AndroidTestCreationConfigImpl': error writing value of type 'com.android.build.gradle.internal.scope.GlobalScope'         > Configuration cache state could not be cached: field 'extension' from type 'com.android.build.gradle.internal.scope.GlobalScope': error writing value of type 'com.android.build.gradle.internal.dsl.BaseAppModuleExtension'            > Configuration cache state could not be cached: field 'publicExtensionImpl' from type 'com.android.build.gradle.internal.dsl.BaseAppModuleExtension': error writing value of type 'com.android.build.gradle.internal.dsl.ApplicationExtensionImpl$AgpDecorated'               > Configuration cache state could not be cached: field 'sdkComponents$delegate' from type 'com.android.build.gradle.internal.dsl.ApplicationExtensionImpl$AgpDecorated': error writing value of type 'kotlin.SynchronizedLazyImpl'                  > Could not create an instance of type com.android.build.gradle.internal.dsl.SdkComponentsImpl.                     > Unable to determine constructor argument #6: missing parameter of type Provider, or no service of type Provider<Provider<List<RegularFile>>>.```[TaskNotCompatibleWithConfigCache.tar.gz](https://github.com/gradle/gradle/files/8093423/TaskNotCompatibleWithConfigCache.tar.gz)
"
19955,0,0,29,0,0,DPUkyle,0,"title:`test-aggregation-plugin` and `jacoco-aggregation-plugin` should eagerly configure objects description:As pointed out by @melix [here](https://gradle-community.slack.com/archives/CA745PZHN/p1644937634103949), the new aggregation core plugins are using the lazy `configureEach` API on containers which don't support lazy configuration.This is part of a larger issue of lazy APIs being present on containers which do not correctly implement the desired lazy behavior - leading to confusion when lazily registering objects which are never realized.`ReportContainer` and `PublicationContainer` are just two examples out of many.
"
19937,1,1816,37,0,0,bachhavdipak,0,"title:Unable to use serenity-core with the Gradle 7.1 implementation group description:I have already reported this issue with serenity but they suggested checking with Gradle: https://github.com/serenity-bdd/serenity-core/issues/2709I am trying to run my automation test using serenity BDD and I am using the 3.2.0 version with Gradle 7.1 but while running the test getting the below issue if I ran my test using the below group.`implementation group: 'net.serenity-bdd', name: 'serenity-core', version: '3.2.0'`But if I change it to testRuntimeOnly then it's working fine`testRuntimeOnly(""net.serenity-bdd:serenity-core:3.2.0"")`I want to run my test using the implementation group only so that transitive dependencies are available in both compile and run time. Is there any way to resolve this issue?Error:Build info: version: '4.0.0', revision: '3a21814679'System info: host: 'UKC-DSEV023991', ip: '110.4.197.09', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_281'Driver info: io.appium.java_client.ios.IOSDriverCommand: [null, newSession {capabilities=[{appium:accessKey=546456gfgdfgk, appium:app=cloud:com.experitest.ExperiBank, appium:bundleId=com.experitest.ExperiBank, appium:deviceName= IPad (5th Generation) SPEC-0002, appium:deviceQuery=@os='ios' and @category='TABLET', platformName=iOS, appium:platformVersion=8.1, appium:testName=Quick Start iOS Native Demo}], desiredCapabilities=Capabilities {accessKey: eyJ4cC51IjoxMywieHAucCI6MSw..., app: cloud:com.experitest.Experi..., bundleId: com.experitest.ExperiBank, deviceName:  IPad (5th Generation) SPEC..., deviceQuery: @os='ios' and @category='TA..., platformName: iOS, platformVersion: 8.1, testName: Quick Start iOS Native Demo}}]Capabilities {}Code:```protected IOSDriver driver = null;DesiredCapabilities dc = new DesiredCapabilities();@BeforeEachpublic void setUp()  {    dc.setCapability(""testName"", ""Quick Start iOS Native Demo"");    dc.setCapability(""accessKey"", accessKey);    dc.setCapability(""deviceQuery"", ""@os='ios' and @category='TABLET'"");    dc.setCapability(MobileCapabilityType.APP, ""cloud:com.experitest.ExperiBank"");    dc.setCapability(IOSMobileCapabilityType.BUNDLE_ID, ""com.experitest.ExperiBank"");    try {        driver = new IOSDriver(new URL(""https://specsavers.experitest.com/wd/hub""), dc);       } catch (MalformedURLException e) {        e.printStackTrace();    }}@Testpublic void quickStartiOSNativeDemo() {    driver.rotate(ScreenOrientation.PORTRAIT);    driver.findElement(By.xpath(""//*[@id='usernameTextField']"")).sendKeys(""company"");    driver.hideKeyboard();    driver.findElement(By.xpath(""//*[@id='passwordTextField']"")).sendKeys(""company"");    driver.findElement(By.xpath(""//*[@id='loginButton']"")).click();    driver.findElement(By.xpath(""//*[@id='makePaymentButton']"")).click();    driver.findElement(By.xpath(""//*[@id='phoneTextField']"")).sendKeys(""0541234567"");    driver.findElement(By.xpath(""//*[@id='nameTextField']"")).sendKeys(""Jon Snow"");    driver.findElement(By.xpath(""//*[@id='amountTextField']"")).sendKeys(""50"");    driver.findElement(By.xpath(""//*[@id='countryButton']"")).click();    driver.findElement(By.xpath(""//*[@id='Switzerland']"")).click();    driver.findElement(By.xpath(""//*[@id='sendPaymentButton']"")).click();    driver.findElement(By.xpath(""//*[@id='Yes']"")).click();}@AfterEachpublic void tearDown() {    System.out.println(""Report URL: ""+ driver.getCapabilities().getCapability(""reportUrl""));    driver.quit();}```
"
19930,1,2607,1,0,0,pbanka-17,0,"title:Gradle ignores org.gradle.internal.http.socketTimeout, org.gradle.internal.http.connectionTimeout when daemon is set to false (org.gradle.daemon=false) description:When we are running Gradle with daemon disabled it, errors out with `Read timed out` while downloading Gradle wrapper. Even when we tried by adding `org.gradle.internal.http.socketTimeout` and `org.gradle.internal.http.connectionTimeout` flags it was timing out. Only when we ran Gradle with daemon enabled and with the timeout flags set, it worked for us.Since we are running the builds in CI env, we would probably don't want to run with daemon enabled, but unless we do so we are running into intermittent issue of `Read timed out` while downloading gradle wrapper. Below is the stack trace, ```06:13:58  Exception in thread ""main"" java.io.IOException: Downloading from <internal nexus repo>/nexus/content/repositories/gradle-distributions/gradle-6.8.3-bin.zip failed: timeout06:13:58  	at org.gradle.wrapper.Download.downloadInternal(Download.java:110)06:13:58  	at org.gradle.wrapper.Download.download(Download.java:67)06:13:58  	at org.gradle.wrapper.Install$1.call(Install.java:68)06:13:58  	at org.gradle.wrapper.Install$1.call(Install.java:48)06:13:58  	at org.gradle.wrapper.ExclusiveFileAccessManager.access(ExclusiveFileAccessManager.java:69)06:13:58  	at org.gradle.wrapper.Install.createDist(Install.java:48)06:13:58  	at org.gradle.wrapper.WrapperExecutor.execute(WrapperExecutor.java:107)06:13:58  	at org.gradle.wrapper.GradleWrapperMain.main(GradleWrapperMain.java:63)06:13:58  Caused by: java.net.SocketTimeoutException: Read timed out06:13:58  	at java.base/java.net.SocketInputStream.socketRead0(Native Method)06:13:58  	at java.base/java.net.SocketInputStream.socketRead(SocketInputStream.java:115)06:13:58  	at java.base/java.net.SocketInputStream.read(SocketInputStream.java:168)06:13:58  	at java.base/java.net.SocketInputStream.read(SocketInputStream.java:140)06:13:58  	at java.base/sun.security.ssl.SSLSocketInputRecord.read(SSLSocketInputRecord.java:478)06:13:58  	at java.base/sun.security.ssl.SSLSocketInputRecord.readHeader(SSLSocketInputRecord.java:472)06:13:58  	at java.base/sun.security.ssl.SSLSocketInputRecord.bytesInCompletePacket(SSLSocketInputRecord.java:70)06:13:58  	at java.base/sun.security.ssl.SSLSocketImpl.readApplicationRecord(SSLSocketImpl.java:1374)06:13:58  	at java.base/sun.security.ssl.SSLSocketImpl$AppInputStream.read(SSLSocketImpl.java:985)06:13:58  	at java.base/java.io.BufferedInputStream.fill(BufferedInputStream.java:252)06:13:58  	at java.base/java.io.BufferedInputStream.read1(BufferedInputStream.java:292)06:13:58  	at java.base/java.io.BufferedInputStream.read(BufferedInputStream.java:351)06:13:58  	at java.base/sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:754)06:13:58  	at java.base/sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:689)06:13:58  	at java.base/sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1615)06:13:58  	at java.base/sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1520)06:13:58  	at java.base/sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:250)06:13:58  	at org.gradle.wrapper.Download.downloadInternal(Download.java:87)```### Expected BehaviorWith daemon disabled, `socketTimeout` and `connectionTimeout` should have been honored and it should have been been able to download Gradle wrapper.### Current BehaviorOnly with daemon enabled and with the timeout flags set, it worked for us.### ContextWe are running the builds in CI env and would probably don't want to run builds with daemon enabled.### Steps to Reproduce Running Gradle builds in CI env, by disabling daemon and not setting `org.gradle.internal.http.socketTimeout, org.gradle.internal.http.connectionTimeout` flags.### Your EnvironmentRunning Gradle versions 6.8.3 and 7.2
"
19921,1,707,20,0,0,swpalmer,0,"title:Application plugin startScripts task uses deprecated JavaExec.main and CreateStartScripts.mainClassName properties description:### Expected BehaviorUsing ```--warning-mode all``` with the application plugin should not result in warnings the user has no control over.### Current BehaviorUsing ```--warning-mode all``` with the application plugin results in:```> Task :startScriptsThe JavaExec.main property has been deprecated. This is scheduled to be removed in Gradle 8.0. Please use the mainClass property instead. See https://docs.gradle.org/7.4/dsl/org.gradle.api.tasks.JavaExec.html#org.gradle.api.tasks.JavaExec:main for more details.The CreateStartScripts.mainClassName property has been deprecated. This is scheduled to be removed in Gradle 8.0. Please use the mainClass property instead. See https://docs.gradle.org/7.4/dsl/org.gradle.jvm.application.tasks.CreateStartScripts.html#org.gradle.jvm.application.tasks.CreateStartScripts:mainClassName for more details.```### ContextWarning-free builds with ```--warning-mode all``` should be possible### Steps to Reproduce Apply the 'application' plugin, then execute:```gradle --warning-mode all build```### Your EnvironmentGradle 7.4 on macOS 12.2.1 with JDK 17.0.2
"
19899,1,268,296,0,0,SgtSilvio,0,"title:IntelliJ Idea sync does not mark test suite sources description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues--><!--- Provide a brief summary of the issue in the title above -->Using Gradle 7.4 which has the new feature to ""Mark additional test source directories as tests in IntelliJ IDEA"" (https://docs.gradle.org/current/release-notes.html#idea-test-sources)### Expected Behavior<!--- Tell us what should happen -->When the jvm-test-suite plugin and the idea plugin are applied, the IntelliJ sync should mark the source folders of the test suites as test sources in the IDE. I expect this because of the release notes for Gradle 7.4: https://docs.gradle.org/current/release-notes.html#idea-test-sources### Current Behavior<!--- Tell us what happens instead of the expected behavior -->When the jvm-test-suite plugin and the idea plugin are applied, the IntelliJ sync does not mark the source folders of the test suites as test sources in the IDE, but rather normal sources.### Context<!--- How has this issue affected you? What are you trying to accomplish? --><!--- Providing context helps us come up with a solution that is most useful in the real world -->The following is my guess what the problem is, it might be wrong:`IdeaModule.getTestSourceDirs` does not delegate to the new API method `IdeaModule.getTestSources` and the IntelliJ sync directly relies on the old method.Maybe it would make sense to implement the old method like so:```    public Set<File> getTestSourceDirs() {-        return testSourceDirs;+        return testSources.getFiles();    }```### Steps to Reproduce <!---Provide a self-contained example project as an attached archive or a Github project.You can use the following template with a Gradle GitHub action set up to showcase your problem: https://github.com/gradle/gradle-issue-reproducerIn the rare cases where this is infeasible, we will also accept a detailed set of instructions.-->- Using Gradle 7.4: `./gradlew wrapper --gradle-version=7.4`- build.gradle.kts:  ```kotlin  plugins {      java      idea  }    testing {      suites.register<JvmTestSuite>(""integrationTest"") {      }  }  ```- Sync in IntelliJ and see that `src/integrationTest/java` is not marked as test sources### Your Environment<!--- Include as many relevant details about the environment you experienced the bug in --><!--- A build scan https://scans.gradle.com/get-started is ideal --><!--Build scan URL:-->
"
19889,1,0,0,0,0,wangxu163,0,"title:adoptopenjdk can not find description:<img width=""1141"" alt=""image"" src=""https://user-images.githubusercontent.com/30898306/153582311-f60410fa-fbb8-4613-a858-44e0ffaa1c95.png"">how can i solve this problem闂?"
19882,0,1024,2,0,0,alanv,0,"title:Dependency constraint on project with newer version does not upgrade dependency on Maven artifact description:Gradle version: 7.1### Expected BehaviorDependency on Maven artifact should resolve to project with newer version when dependency constraint specifies project.### Current BehaviorDependency is not resolved to newer `project` revision (`compileClasspath`) or fails to resolve (`runtimeClasspath`). In more complex cases (e.g. AndroidX) dependency resolution also fails to recognize project versions set by a plugin at configuration time (e.g. shows `{unspecified}` as the version).```compileClasspath - Compile classpath for source set 'main'.+--- project :bar\--- org.example:foo:1.0runtimeClasspath - Runtime classpath of source set 'main'.+--- org.example:foo:1.0 -> 1.1 FAILED\--- project :bar     \--- org.example:foo:{require 1.1} -> 1.1 FAILED```### ContextThe AndroidX team is implementing same-version requirements for modules using Gradle dependency constraints. For certain Maven `groupId`s, we would like all artifacts within the group to resolve to the same version even when they are not directly dependent on one another.For example, assume `foo` and `bar` express a same-version requirement:`bar/build.gradle`:```version = '1.1'dependencies {    // foo must be same version as bar, if present    constraints {        implementation(project("":foo"")) {            because 'Same-version group'        }    }}````foo/build.gradle`:```version = '1.1'dependencies {    implementation(project("":bar""))}```If a developer includes `foo:1.0` and `bar:1.1`, we expect the `requires` constraint to resolve `foo:1.1` and `bar:1.1`. This work as expected for setups involving only Maven artifact dependencies; however, if we have a mix of Maven artifacts and projects then we do not see the expected result.`baz/build.gradle`:```dependencies {    implementation(""org.example:foo:1.0"") // foo depends on bar    implementation(project("":bar"")) // bar is constrained to same-version foo}```This yields an unexpected dependency set and a dependency resolution failure:```compileClasspath - Compile classpath for source set 'main'.+--- project :bar\--- org.example:foo:1.0runtimeClasspath - Runtime classpath of source set 'main'.+--- org.example:foo:1.0 -> 1.1 FAILED\--- project :bar     \--- org.example:foo:{require 1.1} -> 1.1 FAILED```### Steps to ReproduceThe above example has been uploaded to GitHub:https://github.com/alanv/gradle_constraint_reproWe also have a (much) more complicated example involving the AndroidX plugin where we specify versions at configuration time as part of a Gradle plugin.
"
19874,1,1050,10,0,0,aleksanderlech,0,"title:Gradle toolchain fails on M1 macs description:Hello,Our company is fully ""gradlified"" and we are now having trouble with the new M1 Macs and support for the Gradle Java Toolchains.Basically for most of the images the gradle will fail to auto-download arm64 compatible JDK and fail as follows:```Starting a Gradle Daemon, 2 incompatible Daemons could not be reused, use --status for detailsFAILURE: Build failed with an exception.* What went wrong:Could not determine the dependencies of task ':lib:compileJava'.> Could not resolve all dependencies for configuration ':lib:compileClasspath'.   > Failed to calculate the value of task ':lib:compileJava' property 'javaCompiler'.      > Unable to download toolchain matching these requirements: {languageVersion=16, vendor=any, implementation=vendor-specific}         > Unable to download toolchain. This might indicate that the combination (version, architecture, release/early access, ...) for the requested JDK is not available.            > Could not read 'https://api.adoptopenjdk.net/v3/binary/latest/16/ga/mac/aarch64/jdk/hotspot/normal/adoptopenjdk' as it does not exist.```### Expected Behavior- Try to fallback to amd64 architecture when M1 is not available- Consider support for AZUL builds that seem to cover M1 pretty well### Current Behavior- Builds breaks on trying to auto-download JDK that is not present in the target repository.### Context- Compiling Java projects### Steps to Reproduce - Using M1 based device create the following project:```plugins {    id 'java-library'}repositories {    mavenCentral()}java {    toolchain {        languageVersion.set(JavaLanguageVersion.of(16))    }}dependencies {}```- execute `./gradlew build`### Your EnvironmentSystem: MacOS 12.1 (21C52)CPU: Apple M1 MaxGradle: 7.4Build scan URL: https://scans.gradle.com/s/nc6ef5nzu4tx4
"
19853,0,0,275,0,0,octylFractal,0,"title:Type-safe dependency accessors are reported as an incubating feature despite version catalog stabilization description:### Expected BehaviorNo message should be printed for a stable feature.### Current BehaviorThe following is printed:> Type-safe dependency accessors is an incubating feature.### ContextThe message implies that something is unstable in the build, even though version catalogs are no longer unstable.### Steps to Reproduce 1. Make a version catalog with at least one dependency.2. Run any gradle task and see the message in the output.### Your EnvironmentGradle Version: 7.4
"
19842,0,1207,24,0,1,yogurtearl,0,"title:`publish` task from `maven-publish` plugin should work with configuration cache description:With gradle `7.4-rc-2`### Expected Behavior`publish` task from `maven-publish` plugin ""just works"" with config cache### Current Behavior<!--- Tell us what happens instead of the expected behavior -->```cannot serialize object of type org.gradle.api.internal.artifacts.repositories.DefaultMavenArtifactRepository濠碘槅鍋撶徊浠嬪疮椤栫偛绠? a subtype of org.gradle.api.artifacts.repositories.ArtifactRepository濠碘槅鍋撶徊浠嬪疮椤栫偛绠? as these are not supported with the configuration cache.[ ?](https://docs.gradle.org/7.4-rc-2/userguide/configuration_cache.html#config_cache:requirements:disallowed_types)闂傚倷绀侀崯鍨暦椤掑嫬鍨傜紒渚ldrepository濠碘槅鍋撶徊浠嬪疮椤栫偛绠?of org.gradle.api.publish.maven.tasks.PublishToMavenRepository$RepositorySpec$UnsupportedRepositorySpec濠碘槅鍋撶徊浠嬪疮椤栫偛绠氶柡宥庡幗閻撳啴鏌涘Δ鍐ㄤ粶闁诲繒灏僡n of type org.gradle.api.publish.maven.tasks.PublishToMavenRepository$RepositorySpec$UnsupportedRepositorySpec濠碘槅鍋撶徊浠嬪疮椤栫偛绠氶柡宥庡幗閻撳啴鏌涘Δ鍐ㄤ粶闁诲繒顥宔ldrepository濠碘槅鍋撶徊浠嬪疮椤栫偛绠?of org.gradle.api.publish.maven.tasks.PublishToMavenRepository$PublishSpec濠碘槅鍋撶徊浠嬪疮椤栫偛绠氶柡宥庡幗閻撳啴鏌涘Δ鍐ㄤ粶闁诲繒灏僡n of type org.gradle.api.publish.maven.tasks.PublishToMavenRepository$PublishSpec濠碘槅鍋撶徊浠嬪疮椤栫偛绠氶柡宥庡幗閻撳啴鏌涘Δ鍐ㄤ粶闁诲繒顥宔ldvalue濠碘槅鍋撶徊浠嬪疮椤栫偛绠?of org.gradle.internal.Try$Success濠碘槅鍋撶徊浠嬪疮椤栫偛绠氶柡宥庡幗閻撳啴鏌涘Δ鍐ㄤ粶闁诲繒灏僡n of type org.gradle.internal.Try$Success濠碘槅鍋撶徊浠嬪疮椤栫偛绠氶柡宥庡幗閻撳啴鏌涘Δ鍐ㄤ粶闁诲繒顥宔ldresult濠碘槅鍋撶徊浠嬪疮椤栫偛绠?of org.gradle.internal.serialization.Cached$Fixed濠碘槅鍋撶徊浠嬪疮椤栫偛绠氶柡宥庡幗閻撳啴鏌涘Δ鍐ㄤ粶闁诲繒灏僡n of type org.gradle.internal.serialization.Cached$Fixed濠碘槅鍋撶徊浠嬪疮椤栫偛绠氶柡宥庡幗閻撳啴鏌涘Δ鍐ㄤ粶闁诲繒顥宔ldspec濠碘槅鍋撶徊浠嬪疮椤栫偛绠?of org.gradle.api.publish.maven.tasks.PublishToMavenRepository濠碘槅鍋撶徊浠嬪疮椤栫偛绠氶柡宥庡幗閻撳啴鏌ゆ慨鎰偓鏇㈡倶閸㈢皧kpublishMavenPublicationToExampleRepository濠碘槅鍋撶徊浠嬪疮椤栫偛绠?of type org.gradle.api.publish.maven.tasks.PublishToMavenRepository濠碘槅鍋撶徊浠嬪疮椤栫偛绠氶柡鍫㈠牎`### ContextWould like to be able to use config cache when publishing### Steps to Reproduce Use `publish` task from `maven-publish` plugin with config cache turned on. 
"
19837,1,0,102,0,1,oehme,0,"title:Dependency resolution hangs with IDEA parallel model fetch description:I've been working with @nskvortsov to improve IDEA's new ""parallel model fetch"" feature, which computes the tooling API models for each subproject in parallel. In a large build that I'm currently working on, this sometimes gets stuck in dependency resolution. The really odd thing is that all build operation threads seem to be waiting for a lock, yet the thread dump does not show anybody actually holding that lock.I can't provide the project, so the [attached thread dump](https://github.com/gradle/gradle/files/8013819/stack.txt) will have to do. Let me know if there's any other way I can help fix this.@adammurdoch might be interested, since he recently fixed similar issues.
"
19817,0,5140,158,0,0,3ll3d00d,0,"title:Setting bootClasspath can cause build failure with obscure message on Windows only after upgrade to 7.3.x description:### Expected BehaviorAny of the following is reasonable1. Compilation should complete normally (as per behaviour on MacOS and Linux)2. Attempt to use an illegal value for bootclasspath (or `project.files`) should fail eagerly3. A more informative error should be thrown at runtime### Current BehaviorOn linux or MacOS, the build completes normally when running under 7.3.xOn Windows, the build completes normally when running under 7.1.1 or 7.2On Windows, the following exception is throw when a (java) compilation task attempts to execute when running in 7.3.x```Execution failed for task ':compileJava'.> Changes are not tracked, unable determine incremental changes.```Running with debug shows the actual error is```2022-02-03T11:50:11.258+0000 [INFO] [org.gradle.api.internal.tasks.execution.TaskExecution] Cannot access input property 'options.bootstrapClasspath' of task ':compileJava'org.gradle.api.UncheckedIOException: Could not stat file C:\Users\me\dev\libs\openjdk1.8.0_311\jre\lib\rt.jar\jsse.jar;C:\Users\me\dev\libs\openjdk1.8.0_311\jre\lib\rt.jar\jce.jar;C:\Users\me\dev\libs\openjdk1.8.0_311\jre\lib\rt.jar\charsets.jar;C:\Users\me\dev\libs\openjdk1.8.0_311\jre\lib\rt.jar        at org.gradle.internal.nativeintegration.filesystem.services.NativePlatformBackedFileMetadataAccessor.stat(NativePlatformBackedFileMetadataAccessor.java:43)        at org.gradle.internal.nativeintegration.filesystem.services.GenericFileSystem.stat(GenericFileSystem.java:107)        at org.gradle.internal.vfs.impl.DefaultFileSystemAccess.snapshot(DefaultFileSystemAccess.java:147)        at org.gradle.internal.vfs.impl.DefaultFileSystemAccess.lambda$readLocation$6(DefaultFileSystemAccess.java:171)        at java.base/java.util.Optional.orElseGet(Optional.java:369)        at org.gradle.internal.vfs.impl.DefaultFileSystemAccess.lambda$readSnapshotFromLocation$7(DefaultFileSystemAccess.java:196)        at org.gradle.internal.vfs.impl.DefaultFileSystemAccess$StripedProducerGuard.guardByKey(DefaultFileSystemAccess.java:219)        at org.gradle.internal.vfs.impl.DefaultFileSystemAccess.lambda$readSnapshotFromLocation$8(DefaultFileSystemAccess.java:193)        at java.base/java.util.Optional.orElseGet(Optional.java:369)        at org.gradle.internal.vfs.impl.DefaultFileSystemAccess.readSnapshotFromLocation(DefaultFileSystemAccess.java:193)        at org.gradle.internal.vfs.impl.DefaultFileSystemAccess.readSnapshotFromLocation(DefaultFileSystemAccess.java:178)        at org.gradle.internal.vfs.impl.DefaultFileSystemAccess.readLocation(DefaultFileSystemAccess.java:171)        at org.gradle.internal.vfs.impl.DefaultFileSystemAccess.read(DefaultFileSystemAccess.java:83)        at org.gradle.internal.fingerprint.impl.DefaultFileCollectionSnapshotter$SnapshottingVisitor.visitCollection(DefaultFileCollectionSnapshotter.java:61)        at org.gradle.api.internal.file.AbstractOpaqueFileCollection.visitContents(AbstractOpaqueFileCollection.java:55)...Caused by: net.rubygrapefruit.platform.NativeException: Could not get file details of C:\Users\me\dev\libs\openjdk1.8.0_311\jre\lib\rt.jar\jsse.jar;C:\Users\me\dev\libs\openjdk1.8.0_311\jre\lib\rt.jar\jce.jar;C:\Users\me\dev\libs\openjdk1.8.0_311\jre\lib\rt.jar\charsets.jar;C:\Users\me\dev\libs\openjdk1.8.0_311\jre\lib\rt.jar: could not file attributes (errno 123)        at net.rubygrapefruit.platform.internal.DefaultWindowsFiles.stat(DefaultWindowsFiles.java:38)        at net.rubygrapefruit.platform.internal.DefaultWindowsFiles.stat(DefaultWindowsFiles.java:28)        at org.gradle.internal.nativeintegration.filesystem.services.NativePlatformBackedFileMetadataAccessor.stat(NativePlatformBackedFileMetadataAccessor.java:41)        ... 105 more```### ContextThis issue prevents java compilation on Windows when setting the boot classpathThe error occurs when a single string containing n paths (concatenated with pathSeparator) is passed to `project.files` as opposed n strings (1 for each path). Probably this is wrong use of `project.files` however it works without a problem on both Linux and MacOS & Windows with versions <=7.2 so the inconsistency is confusing.### Steps to Reproduce I can't upload to github from here, run the following build on Windows under 7.3.3 then 7.2 ensure some jdk8 is available at the path specified by bootClasspathRoot```apply plugin: 'java'sourceCompatibility = '8'targetCompatibility = '8'def bootClasspathRoot = 'C:/Users/me/dev/libs/openjdk1.8.0_311'def rtJarFile = project.file(""${bootClasspathRoot}/jre/lib/rt.jar"")def extraJars = ['jsse', 'jce', 'charsets']def extraJarFiles = extraJars.collect { new File(rtJarFile, ""${it}.jar"").absolutePath }def bootstrapJars = (extraJarFiles + [rtJarFile])def bootstrapClasspath1 = project.files(bootstrapJars.join(File.pathSeparator))def bootstrapClasspath2 = project.files(bootstrapJars)logger.error(""Adding ${bootstrapJars}"")def bootstrapClasspath = hasProperty('breakme') ? bootstrapClasspath1 : bootstrapClasspath2tasks.withType(JavaCompile).configureEach {    it.options.bootstrapClasspath = bootstrapClasspath}```with breakme set on 7.3.3```gradlew.bat -Pbreakme=true build> Configure project :Adding [C:\Users\me\dev\libs\openjdk1.8.0_311\jre\lib\rt.jar\jsse.jar, C:\Users\me\dev\libs\openjdk1.8.0_311\jre\lib\rt.jar\jce.jar, C:\Users\me\dev\libs\openjdk1.8.0_311\jre\lib\rt.jar\charsets.jar, C:\Users\me\dev\libs\openjdk1.8.0_311\jre\lib\rt.jar]> Task :compileJava FAILEDFAILURE: Build failed with an exception.* What went wrong:Execution failed for task ':compileJava'.> Changes are not tracked, unable determine incremental changes.```and without on 7.3.3```gradlew.bat clean build> Configure project :Adding [C:\Users\me\dev\libs\openjdk1.8.0_311\jre\lib\rt.jar\jsse.jar, C:\Users\me\dev\libs\openjdk1.8.0_311\jre\lib\rt.jar\jce.jar, C:\Users\me\dev\libs\openjdk1.8.0_311\jre\lib\rt.jar\charsets.jar, C:\Users\me\dev\libs\openjdk1.8.0_311\jre\lib\rt.jar]BUILD SUCCESSFUL in 1s```and with on 7.2```gradlew.bat -Pbreakme=true clean build> Configure project :Adding [C:\Users\me\dev\libs\openjdk1.8.0_311\jre\lib\rt.jar\jsse.jar, C:\Users\me\dev\libs\openjdk1.8.0_311\jre\lib\rt.jar\jce.jar, C:\Users\me\dev\libs\openjdk1.8.0_311\jre\lib\rt.jar\charsets.jar, C:\Users\me\dev\libs\openjdk1.8.0_311\jre\lib\rt.jar]BUILD SUCCESSFUL in 1s```### Your EnvironmentI can't upload build scans, build is run under java11 on Windows 10 or Windows 7
"
19814,1,0,61,0,0,fyeeme,0,"title:how to avoid generate `Generated source roots` in spring boot program  description:![image](https://user-images.githubusercontent.com/6078758/152335674-25fbc1d6-927c-468c-b567-1ba8c6ac4ffb.png)
"
19793,0,58,1,0,0,PhilGlass,0,"title:`ISE: GradleProperties has not been loaded yet` for included build when restoring from the configuration cache description:### Expected BehaviorThe build succeeds standalone and when included in another build.### Current BehaviorThe build succeeds standalone but fails when included in another build.### ContextAny included builds that use kapt fail when restoring from the configuration cache. I believe this is a problem with Gradle rather than kapt because the included build runs fine on its own, but I'm happy to file on the Kotlin issue tracker if this is a kapt issue!### Steps to Reproduce Clone https://github.com/PhilGlass/included-build-config-cache-repro and run:```./gradlew app:build --scan./gradlew app:build --scan```Note that running the included build on its own (`./gradlew -p included-build build`) always works.Curiously I get a different failure storing the configuration cache entry the first time I run the build if I omit the `--scan`, but after that it behaves the same. I think this one _is_ a problem with kapt - a read of `Task.project` at execution time - but I can't reproduce it with our real build, only the demo project.### Your EnvironmentGradle **7.4-rc-1**, but it also reproduces with **7.3.3**.闂?Scan for the first build: https://scans.gradle.com/s/oqe62q4hhhp3y闂?Scan for the second build (restoring from the configuration cache): https://scans.gradle.com/s/mwyarhfb3qoya
"
19783,0,0,297,0,0,tresat,1,"title:Revert expectation of parallel execution from tests in Gradle build description:Reverts some tests which were failing due to unexpected changes causing tasks within a project to run in parallel. 
"
19782,1,422,300,0,0,ZacSweers,0,"title:Running tests from IDE always breaks configuration cache when running different test suites description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues--><!--- Provide a brief summary of the issue in the title above -->### Expected Behavior<!--- Tell us what should happen -->Rerunning tests from IntelliJ/Studio with changed sources should be able to reuse configuration cache### Current Behavior<!--- Tell us what happens instead of the expected behavior -->It breaks because of some random init script that gradle is factoring in from the IDE?```Executing tasks: [:services:drafts:testReleaseUnitTest] in project /Users/zsweers/dev/slack/slack-android-ngConfiguration cache is an incubating feature.Calculating task graph as configuration cache cannot be reused because content of 3rd init script, '../../../../../private/var/folders/2k/xmqm2vp118q00xsnp80x6lrh0000gp/T/ijtestinit3.gradle', has changed.Type-safe project accessors is an incubating feature.```### Context<!--- How has this issue affected you? What are you trying to accomplish? --><!--- Providing context helps us come up with a solution that is most useful in the real world -->It prevents use of configuration cache benefits### Steps to Reproduce <!---Provide a self-contained example project as an attached archive or a Github project.You can use the following template with a Gradle GitHub action set up to showcase your problem: https://github.com/gradle/gradle-issue-reproducerIn the rare cases where this is infeasible, we will also accept a detailed set of instructions.-->Run a specific junit test suite from the IDE, observe it breaks CC when you run a different suite from the same project.### Your Environment<!--- Include as many relevant details about the environment you experienced the bug in --><!--- A build scan https://scans.gradle.com/get-started is ideal -->Gradle 7.4-rc-1
"
19780,0,0,273,0,0,bamboo,0,"title:Pattern `fileCollection.filter(predicate).getAsFileTree().matching(patternSet)` is not supported by the configuration cache description:The file collection will be resolved eagerly and thus, new matching elements would not be detected in a 2nd run from the cache.
"
19771,0,0,3,0,0,martin-sladecek,0,"title:Gradle worker should not open any packages during tests description:### Expected BehaviorOn JDK 17, when unit tests pass, there should be no module access errors when running the distribution package.### Current BehaviorIf the application is manipulating with java.util or java.lang classes using some reflection (e.g. by using some lib), this will fail at runtime, even though the unit tests passed, because java.base/java.lang and java.base/java.util are automatically opened for gradle workers. ### ContextWe are using jersey declarative linking, which is automatically traversing all classes using reflection. This can be controlled by an annotation, however a missing annotation cannot be caught by a test because it will work on the gradle worker.### Steps to Reproduce Field.setAccessible(true) on some field from the packages above will work in tests, but not in standalone app.### Your EnvironmentGradle 7.3.3
"
19769,0,1401,49,0,0,bvschaik,0,"title:Wrong Gradle module metadata json when multiple publications share the same component description:We have a project that publishes artifacts to multiple Maven coordinates with different publications (from the same component). In our case, we publish either release or snapshot versions, depending on which Gradle task we run:```publishing {    publications {        release(MavenPublication) {            groupId = 'com.example'            artifactId = 'test-library'            version = '1.0'            from components.java        }        snapshot(MavenPublication) {            groupId = 'com.example'            artifactId = 'test-library'            version = '1.0-SNAPSHOT'            from components.java        }    }}```Gradle also pushes a "".module"" file to Maven for gradle-specific module metadata. Upon inspecting these files we found that the coordinates listed in there are not correct.### Expected BehaviorThe generated module metadata has the correct maven coordinates from the publication. Specifically, for ""release"" we expect:```{  ""formatVersion"": ""1.1"",  ""component"": {    ""group"": ""com.example"",    ""module"": ""test-library"",    ""version"": ""1.0"",    ""attributes"": {      ""org.gradle.status"": ""release""    }  },  ...```### Current BehaviorThe generated module metadata has the maven coordinates from the alphabetically last publication with the same component, in our case from ""snapshot"".```{  ""formatVersion"": ""1.1"",  ""component"": {    ""group"": ""com.example"",    ""module"": ""test-library"",    ""version"": ""1.0-SNAPSHOT"",    ""attributes"": {      ""org.gradle.status"": ""integration""    }  },  ...```### ContextWe want to publish the same artifact to different coordinates (which are tied to different physical repositories) without having to edit the .gradle files every time we wish to push a release, and have been using the above approach to accomplish that. It worked fine until we recently moved from Gradle 5.6.x to 7 (I know, long overdue maintenance) in which the maven publish plugin publishes .module files. If there's a better way to achieve the same goal, we are happy to implement that.For now we disabled metadata generation to work around the issue.### Steps to Reproduce See reproducer: https://github.com/bvschaik/gradle-wrong-module-metadata-reproducer1. Add two publications to `build.gradle`:```plugins {    id 'java'    id 'maven-publish'}repositories {    mavenCentral()}publishing {    publications {        release(MavenPublication) {            groupId = 'com.example'            artifactId = 'test-library'            version = '1.0'            from components.java        }        snapshot(MavenPublication) {            groupId = 'com.example'            artifactId = 'test-library'            version = '1.0-SNAPSHOT'            from components.java        }    }}```2. Run the `generateMetadataFileFor[..]Publication` tasks.3. Inspect the generated module files### Your EnvironmentBuilding locally on MacOS, building on CI on Linux. Environment doesn't influence reproducibility. I tried Gradle 7.0.2, 7.3.3, and locally built from latest source (7.5) which all have the issue.### Additional infoI looked into the source of Gradle:- `GenerateModuleMetadata.computeModuleMetadataSpec()` creates a ModuleMetadataSpec using the builder- `ModuleMetadataSpecBuilder()` constructor calls `collectCoordinates()` which creates a map from the publications: `publication.component` to `ComponentData` which is later used to get the maven coordinates for the metadata file- Since both publications use the same component (`java`), the last one will overwrite the earlier's data
"
19765,0,1790,300,0,0,ZacSweers,0,"title:`notCompatibleWithConfigurationCache` fails the build on CC issues rather than disable CC in 7.4-rc-1 description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues--><!--- Provide a brief summary of the issue in the title above -->### Expected BehaviorThe documentation implies that if a task denoted with `notCompatibleWithConfigurationCache` is scheduled for execution, configuration cache will be automatically disabled. I expect that to be the case.### Current Behavior<!--- Tell us what happens instead of the expected behavior -->It fails the build anyway upon encountering such a task if it's set via `configureEach`.### Context<!--- How has this issue affected you? What are you trying to accomplish? --><!--- Providing context helps us come up with a solution that is most useful in the real world -->We can't opt-out of non-compliant tasks without this API working as intended### Steps to Reproduce <!---Provide a self-contained example project as an attached archive or a Github project.You can use the following template with a Gradle GitHub action set up to showcase your problem: https://github.com/gradle/gradle-issue-reproducerIn the rare cases where this is infeasible, we will also accept a detailed set of instructions.-->Disable a problematic task like so and then try to configure```kotlintasks.withType<SomeProblematicTask>().configureEach {  notCompatibleWithConfigurationCache(""Testing"")}```Or a more concrete example from our repo with the Microsoft intune gradle plugin![image](https://user-images.githubusercontent.com/1361086/151731802-1d52fc92-e6a8-4621-b65d-495cecef6e14.png)Then run `./gradlew problematicTask --dry-run` and observe it fails the build anyway like so```1 problem was found storing the configuration cache.- Task `:app:transformClassesWithMamifyTransformForIntuneRelease` of type `com.android.build.gradle.internal.pipeline.TransformTask`: cannot serialize object of type 'org.gradle.api.internal.project.DefaultProject', a subtype of 'org.gradle.api.Project', as these are not supported with the configuration cache.  See https://docs.gradle.org/7.4-rc-1/userguide/configuration_cache.html#config_cache:requirements:disallowed_typesSee the complete report at file:///Users/zsweers/dev/slack/android3/build/reports/configuration-cache/75mg9pggd0y9brklyefbmeyal/7kbj64fszuuzeq6o3mlywy094/configuration-cache-report.htmlFAILURE: Build failed with an exception.* What went wrong:Configuration cache state could not be cached: input property '$3' of ':app:transformClassesWithMamifyTransformForIntuneRelease': error writing value of type 'org.gradle.api.internal.file.FilteredFileTree'> Querying the mapped value of provider(interface java.util.Set) before task ':app:compileIntuneReleaseKotlin' has completed is not supported* Try:> Run with --stacktrace option to get the stack trace.> Run with --info or --debug option to get more log output.> Run with --scan to get full insights.* Get more help at https://help.gradle.orgDeprecated Gradle features were used in this build, making it incompatible with Gradle 8.0.You can use '--warning-mode all' to show the individual deprecation warnings and determine if they come from your own scripts or plugins.See https://docs.gradle.org/7.4-rc-1/userguide/command_line_interface.html#sec:command_line_warningsBUILD FAILED in 1m 10s```### Your Environment<!--- Include as many relevant details about the environment you experienced the bug in --><!--- A build scan https://scans.gradle.com/get-started is ideal -->Build scan URL:
"
19762,1,9140,5,0,1,kov-serg,0,"title:gradle 7.2 fail to build anything description:After upgrading to Gradle 7.2 it fails to bulding anything. All daemon dies with error 127.Old projects with gradle 6.5 works fine.<!--- Provide a brief summary of the issue in the title above -->Android Studio 2021.1.1Just create basic activityPush build  ... fail to buildGo to command lineType:```kovserg@vortex:~/AndroidStudioProjects/app7$ ./gradlew --daemonStarting a Gradle Daemon, 4 busy and 9 stopped Daemons could not be reused, use --status for details> Task :helpWelcome to Gradle 7.2.To run a build, run gradlew <task> ...To see a list of available tasks, run gradlew tasksTo see a list of command-line options, run gradlew --helpTo see more detail about a task, run gradlew help --task <task>For troubleshooting, visit https://help.gradle.orgBUILD SUCCESSFUL in 8s1 actionable task: 1 executed```It starts daemon```kovserg@vortex:~/AndroidStudioProjects/app7$ ./gradlew --status   PID STATUS   INFO 22427 IDLE     7.2 17752 STOPPED  (stop command received) 16515 STOPPED  (by user or operating system) 16775 STOPPED  (by user or operating system) 17048 STOPPED  (by user or operating system) 17247 STOPPED  (by user or operating system) 17515 STOPPED  (by user or operating system) 17988 STOPPED  (by user or operating system) 19061 STOPPED  (by user or operating system) 19451 STOPPED  (by user or operating system) 19913 STOPPED  (by user or operating system) 20605 STOPPED  (by user or operating system) 20796 STOPPED  (by user or operating system) 20988 STOPPED  (by user or operating system)Only Daemons for the current Gradle version are displayed. See https://docs.gradle.org/7.2/userguide/gradle_daemon.html#sec:status```but if I try to build --  ""daemon disappeared unexpectedly""```./gradlew buildThe message received from the daemon indicates that the daemon has disappeared.Build request sent: Build{id=ba5f6f82-ea41-4ca9-944d-28d5d8a925ca, currentDir=/home/kovserg/AndroidStudioProjects/app7}Attempting to read last messages from the daemon log...Daemon pid: 22427  log file: /home/kovserg/.gradle/daemon/7.2/daemon-22427.out.log----- Last  20 lines from daemon log file - daemon-22427.out.log -----2022-01-30T18:50:49.956+0300 [DEBUG] [org.gradle.launcher.daemon.server.SynchronizedDispatchConnection] thread 140: received class org.gradle.launcher.daemon.protocol.Build2022-01-30T18:50:49.956+0300 [DEBUG] [org.gradle.launcher.daemon.server.DefaultDaemonConnection] thread 140: Received non-IO message from client: Build{id=ba5f6f82-ea41-4ca9-944d-28d5d8a925ca, currentDir=/home/kovserg/AndroidStudioProjects/app7}2022-01-30T18:50:49.956+0300 [INFO] [org.gradle.launcher.daemon.server.DefaultIncomingConnectionHandler] Received command: Build{id=ba5f6f82-ea41-4ca9-944d-28d5d8a925ca, currentDir=/home/kovserg/AndroidStudioProjects/app7}.2022-01-30T18:50:49.957+0300 [DEBUG] [org.gradle.launcher.daemon.server.DefaultIncomingConnectionHandler] Starting executing command: Build{id=ba5f6f82-ea41-4ca9-944d-28d5d8a925ca, currentDir=/home/kovserg/AndroidStudioProjects/app7} with connection: socket connection from /127.0.0.1:34288 to /127.0.0.1:43980.2022-01-30T18:50:49.959+0300 [DEBUG] [org.gradle.launcher.daemon.server.DaemonStateCoordinator] Command execution: started DaemonCommandExecution[command = Build{id=ba5f6f82-ea41-4ca9-944d-28d5d8a925ca, currentDir=/home/kovserg/AndroidStudioProjects/app7}, connection = DefaultDaemonConnection: socket connection from /127.0.0.1:34288 to /127.0.0.1:43980] after 1.0 minutes of idle2022-01-30T18:50:49.959+0300 [INFO] [org.gradle.launcher.daemon.server.DaemonRegistryUpdater] Marking the daemon as busy, address: [1c4ef40e-1989-4fab-adae-0a5ded826767 port:34288, addresses:[localhost/127.0.0.1]]2022-01-30T18:50:49.960+0300 [DEBUG] [org.gradle.launcher.daemon.registry.PersistentDaemonRegistry] Marking busy by address: [1c4ef40e-1989-4fab-adae-0a5ded826767 port:34288, addresses:[localhost/127.0.0.1]]2022-01-30T18:50:49.960+0300 [DEBUG] [org.gradle.cache.internal.DefaultFileLockManager] Waiting to acquire exclusive lock on daemon addresses registry.2022-01-30T18:50:49.961+0300 [DEBUG] [org.gradle.cache.internal.DefaultFileLockManager] Lock acquired on daemon addresses registry.2022-01-30T18:50:49.963+0300 [DEBUG] [org.gradle.cache.internal.DefaultFileLockManager] Releasing lock on daemon addresses registry.2022-01-30T18:50:49.964+0300 [DEBUG] [org.gradle.launcher.daemon.server.DaemonStateCoordinator] resetting idle timer2022-01-30T18:50:49.965+0300 [DEBUG] [org.gradle.launcher.daemon.server.DaemonStateCoordinator] daemon is running. Sleeping until state changes.2022-01-30T18:50:49.965+0300 [INFO] [org.gradle.launcher.daemon.server.exec.StartBuildOrRespondWithBusy] Daemon is about to start building Build{id=ba5f6f82-ea41-4ca9-944d-28d5d8a925ca, currentDir=/home/kovserg/AndroidStudioProjects/app7}. Dispatching build started information...2022-01-30T18:50:49.965+0300 [DEBUG] [org.gradle.launcher.daemon.server.SynchronizedDispatchConnection] thread 142: dispatching org.gradle.launcher.daemon.protocol.BuildStarted@1b0551152022-01-30T18:50:49.967+0300 [DEBUG] [org.gradle.launcher.daemon.server.exec.EstablishBuildEnvironment] Configuring env variables: [PATH, LC_MEASUREMENT, XAUTHORITY, HISTCONTROL, XMODIFIERS, LC_TELEPHONE, XDG_DATA_DIRS, GDMSESSION, MANDATORY_PATH, LC_TIME, PAPERSIZE, TEXTDOMAINDIR, GTK_IM_MODULE, DBUS_SESSION_BUS_ADDRESS, DEFAULTS_PATH, XDG_CURRENT_DESKTOP, COLORTERM, UPSTART_SESSION, QT4_IM_MODULE, LC_PAPER, SESSION_MANAGER, LOGNAME, JOB, PWD, IM_CONFIG_PHASE, LANGUAGE, WINDOWID, SHELL, LESSOPEN, LC_ADDRESS, INSTANCE, OLDPWD, GNOME_DESKTOP_SESSION_ID, GTK_MODULES, CLUTTER_IM_MODULE, XDG_SESSION_PATH, TEXTDOMAIN, COMPIZ_BIN_PATH, SESSIONTYPE, LS_COLORS, SHLVL, LC_IDENTIFICATION, LESSCLOSE, LC_MONETARY, MC_SID, COMPIZ_CONFIG_PROFILE, QT_IM_MODULE, COMP_WORDBREAKS, PTOOLSPATH, TERM, XDG_CONFIG_DIRS, LANG, GNOME_KEYRING_CONTROL, XDG_SEAT_PATH, XDG_SESSION_ID, SELINUX_INIT, DISPLAY, LC_NAME, _, GDM_LANG, XDG_GREETER_DATA_DIR, GPG_AGENT_INFO, DESKTOP_SESSION, SESSION, USER, XDG_MENU_PREFIX, VTE_VERSION, LC_NUMERIC, SSH_AUTH_SOCK, XDG_SEAT, MC_TMPDIR, QT_QPA_PLATFORMTHEME, XDG_VTNR, XDG_RUNTIME_DIR, HOME, GNOME_KEYRING_PID]2022-01-30T18:50:49.969+0300 [DEBUG] [org.gradle.launcher.daemon.server.exec.LogToClient] About to start relaying all logs to the client via the connection.2022-01-30T18:50:49.970+0300 [INFO] [org.gradle.launcher.daemon.server.exec.LogToClient] The client will now receive all logging from the daemon (pid: 22427). The daemon log file: /home/kovserg/.gradle/daemon/7.2/daemon-22427.out.log2022-01-30T18:50:49.972+0300 [INFO] [org.gradle.launcher.daemon.server.exec.LogAndCheckHealth] Starting 2nd build in daemon [uptime: 1 mins 45.308 secs, performance: 99%]2022-01-30T18:50:49.974+0300 [DEBUG] [org.gradle.launcher.daemon.server.exec.ExecuteBuild] The daemon has started executing the build.2022-01-30T18:50:49.974+0300 [DEBUG] [org.gradle.launcher.daemon.server.exec.ExecuteBuild] Executing build with daemon context: DefaultDaemonContext[uid=8ab911a4-8ba5-4fde-ba62-ed90b335bec2,javaHome=/usr/lib/jvm/java-11-openjdk-amd64,daemonRegistryDir=/home/kovserg/.gradle/daemon,pid=22427,idleTimeout=10800000,priority=NORMAL,daemonOpts=--add-opens,java.base/java.util=ALL-UNNAMED,--add-opens,java.base/java.lang=ALL-UNNAMED,--add-opens,java.base/java.lang.invoke=ALL-UNNAMED,--add-opens,java.base/java.util=ALL-UNNAMED,--add-opens,java.prefs/java.util.prefs=ALL-UNNAMED,--add-opens,java.prefs/java.util.prefs=ALL-UNNAMED,--add-opens,java.base/java.nio.charset=ALL-UNNAMED,--add-opens,java.base/java.net=ALL-UNNAMED,--add-opens,java.base/java.util.concurrent.atomic=ALL-UNNAMED,-Xmx2048m,-Dfile.encoding=UTF-8,-Duser.country=US,-Duser.language=en,-Duser.variant]----- End of the daemon log -----FAILURE: Build failed with an exception.* What went wrong:Gradle build daemon disappeared unexpectedly (it may have been killed or may have crashed)* Try:Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights.* Get more help at https://help.gradle.org```This is  last record in logs: https://github.com/gradle/gradle/blob/febabe9800120fb6f9ff3b6938f34122cef69d48/subprojects/launcher/src/main/java/org/gradle/launcher/daemon/server/exec/ExecuteBuild.java#L51If I attach with strace to daemon. It wait in futex and after build command it just dies with 127 error code with no additional information.```sudo strace -p 22427Process 22427 attachedfutex(0x7f5977cef9d0, FUTEX_WAIT, 22851, NULL <unfinished ...>+++ exited with 127 +++```### Expected BehaviorIt should work or write anything it wants to work.<!--- Tell us what should happen -->### Current Behavior<!--- Tell us what happens instead of the expected behavior -->Daemons just dies then I try to build anything.### Context<!--- How has this issue affected you? What are you trying to accomplish? -->after upgrade to gradle 7.2 from 6.5 it stop working at all.![app7](https://user-images.githubusercontent.com/5946122/151708507-2e1847e8-caa1-4796-bf08-b57a77dd0961.png)![gradlew](https://user-images.githubusercontent.com/5946122/151708511-d93593f4-f30e-4f2d-97ed-ad07e029f46d.png)<!--- Providing context helps us come up with a solution that is most useful in the real world -->### Steps to Reproduce <!---Provide a self-contained example project as an attached archive or a Github project.You can use the following template with a Gradle GitHub action set up to showcase your problem: https://github.com/gradle/gradle-issue-reproducerIn the rare cases where this is infeasible, we will also accept a detailed set of instructions.-->Create simple activity and try to build it.### Your Environment<!--- Include as many relevant details about the environment you experienced the bug in -->```lsb_release -aNo LSB modules are available.Distributor ID:	UbuntuDescription:	Ubuntu 14.04.6 LTSRelease:	14.04Codename:	trustyuname -aLinux vortex 3.13.0-170-generic #220-Ubuntu SMP Thu May 9 12:40:49 UTC 2019 x86_64 x86_64 x86_64 GNU/Linuxjava -versionopenjdk version ""11.0.14"" 2022-01-18OpenJDK Runtime Environment (build 11.0.14+9-Ubuntu-0ubuntu2.14.04)OpenJDK 64-Bit Server VM (build 11.0.14+9-Ubuntu-0ubuntu2.14.04, mixed mode, sharing)./gradlew --version------------------------------------------------------------Gradle 7.2------------------------------------------------------------Build time:   2021-08-17 09:59:03 UTCRevision:     a773786b58bb28710e3dc96c4d1a7063628952adKotlin:       1.5.21Groovy:       3.0.8Ant:          Apache Ant(TM) version 1.10.9 compiled on September 27 2020JVM:          11.0.14 (Ubuntu 11.0.14+9-Ubuntu-0ubuntu2.14.04)OS:           Linux 3.13.0-170-generic amd64```<!--- A build scan https://scans.gradle.com/get-started is ideal -->Build scan fail with same error:``` ./gradlew build --scan...FAILURE: Build failed with an exception.* What went wrong:Gradle build daemon disappeared unexpectedly (it may have been killed or may have crashed)```with out build: ./gradlew --scanBuild scan URL: https://gradle.com/s/3njxyosfryz3y
"
19758,1,0,15,0,0,Dkhusainov,0,"title:Cannot use providers.systemProperty inside init script description:I have an init script which reads systemProp from gradle.properties via System.properties. When I do that gradle configuration cache complains about unsafe reads:`Initialization script 'Z:\g\init.d\gradle-init.init.gradle': read system property 'ARTIFACTORY_PSW'`Documentation says I should use providers service, which is not available during that phase. How can I read ENV/systemProp in init script without gradle complaining?
"
19756,1,0,21,0,0,chubbard,0,"title:SimpleHttpFileServerFactory doesn't properly close down the socket leaving it running description:When using the `SimpleHttpFileServerFactory` to create a server the `SimpleHttpFileServer` is passed a `Stoppable` in to shutdown the server when `stop()` method is called.  However, inside that `Stoppable` defined in `SimpleHttpFileServerFactory` it calls the wrong thing to stop and doesn't properly close the socket.  Since the gradle process continues to run in the background after the task is over the socket stays open and can't be closed without killing the process.  Here is an example of how to reproduce this:    ext {        httpHome = property(""user.home"")        port = 8085    }    task serve {       doLast {                SimpleHttpFileServerFactory factory = new SimpleHttpFileServerFactory()                HttpFileServer server = factory.start(ext.httpHome, ext.port)                try {                    println(""URL: http://localhost:8085/index.html"")                    println(""Server Started on ${server.port} enter to kill it"")                    System.in.read()                } finally {                    server.stop()                }       }    }If you press enter the task completes successfully, but the server is still running even though you've called `stop()`.  I think when the author wrote this they used `Ctrl+c` which killed the process and that just happened to free up the server, but when running these in Intellij or other IDEs using `Ctrl+c` is often ignored.Here is the code containing the bug from `SimpleHttpFileServerFactory`(line 30):            final Server server = new ContainerServer(container);            Connection connection = new SocketConnection(server);            InetSocketAddress address = new InetSocketAddress(port);            InetSocketAddress usedAddress = (InetSocketAddress)connection.connect(address);            return new SimpleHttpFileServer(contentRoot, usedAddress.getPort(), new Stoppable() {                public void stop() {                    try {                        server.stop();     // this should be connection.close()                    } catch (IOException var2) {                        throw new UncheckedIOException(var2);                    }                }            });So calling `server.stop()` doesn't close the socket because the socket is owned by `SocketConnection`, and it's `close` method is never called.  Futhermore, all you need to do is swap `Server.stop()` for `SocketConnection.close()` because `SocketConnection.close()` will call `Server.stop()`.
"
19755,0,0,297,0,1,tresat,0,"title:Fix potential bugs in DefaultMutableAttributeContainer, simplify toString for easier debugging description:<!--- The issue this PR addresses -->Fixes #19753 
"
19753,0,0,297,0,1,tresat,0,"title:Fix DefaultMutableAttributeContainer behavior when updating attributes using both eager and lazy values description:1) The `DefaultMutableAttributeContainer` class doesn't handle adding lazy and eager values for the same `Attribute` well.  The desired behavior should be ""last update wins"" regardless of which update used lazy vs. eager values.2) The `toString` call which modifies the container class makes debugging particularly difficult.
"
19752,0,1123,20,0,0,ylexus,0,"title:VERSION_CATALOGS feature fails if any dir in project path starts with character ""u"": ""illegal unicode escape"" description:```FAILURE: Build failed with an exception.* What went wrong:org.gradle.api.internal.catalog.GeneratedClassCompilationException: Unable to compile generated sources:  - File LibrariesForUnity.java, line: 31, illegal unicode escape  - File LibrariesForUnity.java, line: 53, illegal unicode escape> Unable to compile generated sources:    - File LibrariesForUnity.java, line: 31, illegal unicode escape    - File LibrariesForUnity.java, line: 53, illegal unicode escape```This is because ""\u"" is treated as a unicode escape even in comments:`LibrariesForUnity.java` generated by gradle - note `\u` in the javadoc:```java...        /**         * Creates a dependency provider for platform (com.xxx:unity-xxx)         * This dependency was declared in settings file '..\unityxxx\settings.gradle'         */        public Provider<MinimalExternalModuleDependency> getXxxxxx() { return create(""xxxxxx""); }...```This is happening when importing such project to IntelliJ IDEA version 2021.3.2 RC Build #IU-213.6777.38.`unityxxx/settings.gradle`:```groovyinclude 'aaa', 'bbb'enableFeaturePreview('VERSION_CATALOGS')dependencyResolutionManagement {    versionCatalogs {        unity {            version('unity', '3+')            alias('p').to('com.xxx.xxx', 'unity-p').versionRef('unity')        }    }}````unityxxx/bbb/build.gradle`:```groovydependencies {    implementation unity.p}```
"
19751,0,3506,6,0,1,scottsteen,0,"title:Default checkstyle version does not support sealed modifier description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues-->The default version of `checkstyle` bundled with the current (`7.3.3`) distribution does not support Java's `sealed` modifier.This is outlined in their issue tracker - https://github.com/checkstyle/checkstyle/issues/8989And a fix included in version `8.42` - https://checkstyle.sourceforge.io/releasenotes.html#Release_8.42### Expected BehaviorCheckstyle tasks should correctly parse the Java grammar.### Current BehaviorThe build fails with an error. Stacktrace taken from linked project.```Execution failed for task ':checkstyleMain'.> Unable to process files: [{absolute path}\gradle-checkstyle-issue\src\main\java\com\github\scottsteen\SealedClass.java]* Try:> Run with --info or --debug option to get more log output.> Run with --scan to get full insights.* Exception is:org.gradle.api.tasks.TaskExecutionException: Execution failed for task ':checkstyleMain'.	at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.lambda$executeIfValid$1(ExecuteActionsTaskExecuter.java:145)	... 32 moreCaused by: : Unable to process files: [{absolute path}\gradle-checkstyle-issue\src\main\java\com\github\scottsteen\SealedClass.java]	at com.puppycrawl.tools.checkstyle.ant.CheckstyleAntTask.processFiles(CheckstyleAntTask.java:371)	at com.puppycrawl.tools.checkstyle.ant.CheckstyleAntTask.realExecute(CheckstyleAntTask.java:331)	at com.puppycrawl.tools.checkstyle.ant.CheckstyleAntTask.execute(CheckstyleAntTask.java:302)	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:299)	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:99)	... 139 moreCaused by: com.puppycrawl.tools.checkstyle.api.CheckstyleException: Exception was thrown while processing {absolute path}\gradle-checkstyle-issue\src\main\java\com\github\scottsteen\SealedClass.java	at com.puppycrawl.tools.checkstyle.Checker.processFiles(Checker.java:311)	at com.puppycrawl.tools.checkstyle.Checker.process(Checker.java:221)	at com.puppycrawl.tools.checkstyle.ant.CheckstyleAntTask.processFiles(CheckstyleAntTask.java:365)	... 146 moreCaused by: com.puppycrawl.tools.checkstyle.api.CheckstyleException: IllegalStateException occurred while parsing file {absolute path}\gradle-checkstyle-issue\src\main\java\com\github\scottsteen\SealedClass.java.	at com.puppycrawl.tools.checkstyle.JavaParser.parse(JavaParser.java:120)	at com.puppycrawl.tools.checkstyle.TreeWalker.processFiltered(TreeWalker.java:149)	at com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck.process(AbstractFileSetCheck.java:87)	at com.puppycrawl.tools.checkstyle.Checker.processFile(Checker.java:337)	at com.puppycrawl.tools.checkstyle.Checker.processFiles(Checker.java:298)	... 148 moreCaused by: java.lang.IllegalStateException: {absolute path}\gradle-checkstyle-issue\src\main\java\com\github\scottsteen\SealedClass.java:3:8: unexpected token: sealed	at com.puppycrawl.tools.checkstyle.JavaParser$1.reportError(JavaParser.java:108)	at com.puppycrawl.tools.checkstyle.grammar.GeneratedJavaRecognizer.typeDefinition(GeneratedJavaRecognizer.java:424)	at com.puppycrawl.tools.checkstyle.grammar.GeneratedJavaRecognizer.compilationUnit(GeneratedJavaRecognizer.java:212)	at com.puppycrawl.tools.checkstyle.JavaParser.parse(JavaParser.java:114)	... 152 moreCaused by: {absolute path}\gradle-checkstyle-issue\src\main\java\com\github\scottsteen\SealedClass.java:3:8: unexpected token: sealed	at com.puppycrawl.tools.checkstyle.grammar.GeneratedJavaRecognizer.typeDefinitionInternal(GeneratedJavaRecognizer.java:596)	at com.puppycrawl.tools.checkstyle.grammar.GeneratedJavaRecognizer.typeDefinition(GeneratedJavaRecognizer.java:402)	... 154 more```### ContextOur dev team uses Checkstyle & Gradle. We've pinned the checkstyle version to the latest `8.x` release, but would prefer to leave the version handling to Gradle.### Steps to Reproduce Example project here -> https://github.com/scottsteen/gradle-checkstyle-issue-reproductionRunning `gradlew checkstyleMain --stacktrace` reproduces the issue.### Your EnvironmentJava 17Gradle 7.3.3
"
19749,1,0,18,0,0,realdadfish,0,"title:Build convention plugin applies 3rd party plugin from different plugin   description:I have a build conventions module that has two plugins in it. `my-module-plugin.gradle.kts` has a `plugins {}` block that loads a 3rd party plugin (the Sonarqube plugin), while `my-root-plugin.gradle.kts` has no `plugins {}` block or other configuration, but just provides an extension whose data are fetched by the `my-module-plugin.gradle.kts`.Naturally, the `build.gradle.kts` of the conventions module has an implementation dependency to the Maven coordinates of the 3rd party plugin. What I figured out now today was that if I apply only `my-root-plugin` in my production root module, the `plugins {}` block of `my-module-plugin` is still evaluated. I know that because when I then execute `gradle -p product module:sonarqube` I receive a `ClassNotFoundException` for the `BaseVariant` type in the Sonarqube plugin ([stemming from here](https://github.com/SonarSource/sonar-scanner-gradle/blob/master/src/main/java/org/sonarqube/gradle/SonarQubePlugin.java#L130)), even though `module` has the `com.android.application` plugin applied that provides this type.I had a hard time debugging this, but in the end I solved it by separating both plugins in different build convention modules.A sample project showing the issue is here: https://github.com/realdadfish/gradle-issue-19749This is Gradle 7.3.3.
"
19720,1,2342,300,1,0,bjhargrave,0,"title:[com.gradle.plugin-publish] 0.20.0 deprecation warnings description:There are issues with the operation of the `publishPluginMavenPublicationTo*` tasks of the `maven-publish` plugin when the `build` task is part of the same gradle execution. (Note I am not using the `publishPlugins` task of the `com.gradle.plugin-publish` plugin to publish to the Gradle Plugin Portal here.)```zsh闂? bnd git:(master) 闂?gradle :gradle-plugins:biz.aQute.bnd.gradle:build :gradle-plugins:biz.aQute.bnd.gradle:publishexecuting gradlew instead of gradle> Task :gradle-plugins:biz.aQute.bnd.gradle:publishPluginMavenPublicationToDistRepositoryExecution optimizations have been disabled for task ':gradle-plugins:biz.aQute.bnd.gradle:publishPluginMavenPublicationToDistRepository' to ensure correctness due to the following reasons:  - Gradle detected a problem with the following location: '/Users/hargrave/git/bnd/gradle-plugins/biz.aQute.bnd.gradle/build/libs/biz.aQute.bnd.gradle-6.2.0-SNAPSHOT-javadoc.jar'. Reason: Task ':gradle-plugins:biz.aQute.bnd.gradle:publishPluginMavenPublicationToDistRepository' uses this output of task ':gradle-plugins:biz.aQute.bnd.gradle:publishPluginJavaDocsJar' without declaring an explicit or implicit dependency. This can lead to incorrect results being produced, depending on what order the tasks are executed. Please refer to https://docs.gradle.org/7.3.3/userguide/validation_problems.html#implicit_dependency for more details about this problem.  - Gradle detected a problem with the following location: '/Users/hargrave/git/bnd/gradle-plugins/biz.aQute.bnd.gradle/build/libs/biz.aQute.bnd.gradle-6.2.0-SNAPSHOT-sources.jar'. Reason: Task ':gradle-plugins:biz.aQute.bnd.gradle:publishPluginMavenPublicationToDistRepository' uses this output of task ':gradle-plugins:biz.aQute.bnd.gradle:publishPluginJar' without declaring an explicit or implicit dependency. This can lead to incorrect results being produced, depending on what order the tasks are executed. Please refer to https://docs.gradle.org/7.3.3/userguide/validation_problems.html#implicit_dependency for more details about this problem.Deprecated Gradle features were used in this build, making it incompatible with Gradle 8.0.You can use '--warning-mode all' to show the individual deprecation warnings and determine if they come from your own scripts or plugins.See https://docs.gradle.org/7.3.3/userguide/command_line_interface.html#sec:command_line_warningsExecution optimizations have been disabled for 1 invalid unit(s) of work during this build to ensure correctness.Please consult deprecation warnings for more details.BUILD SUCCESSFUL in 1m 30s25 actionable tasks: 19 executed, 6 up-to-date```_Originally posted by @bjhargrave in https://github.com/gradle/gradle/issues/19458#issuecomment-1017859423_
"
19711,1,0,89,0,0,liutikas,0,"title:Repositories added through settings.gradle are not observable via project.repositories description:Repositories added through settings.gradle are not observable via `project.repositories`### Expected BehaviorCalling `project.repositories` includes repositories added at [the centralized place in plugin management in settings.gradle](https://docs.gradle.org/current/userguide/declaring_repositories.html#sub:centralized-repository-declaration)### Current Behavior`project.repositories` only returns repositories added within `repositories {}` block of individual project and not ones from the central place of settings.gradle### ContextWe have a plugin that does some validation on which repository a dependency is coming from, so we need to be able to get a list of all the repositories used in a given project. ### Steps to Reproduce https://github.com/liutikas/gradle-repository-propagation### Your EnvironmentBuild scan URL: https://scans.gradle.com/s/bmydded3siydi
"
19693,0,0,93,0,1,EdGue42,0,"title:Inconsistent Javadoc annotations for org.gradle.api.tasks.testing.TestReport (gradle 7.4) description:The gradle 7.4 RC1 javadoc has inconsistent annotations, [getDestinationDir()](https://docs.gradle.org/7.4-rc-1/javadoc/org/gradle/api/tasks/testing/TestReport.html#getDestinationDir--) is marked **deprecated**, to be replaced with ** getDestinationDirectory()**. How can something be deprecated when the replacement is considered EXPERIMENTAL?<!--- Provide a brief summary of the issue in the title above -->### Expected Behavior<!--- Tell us what should happen -->Not applicable: code documentation only### Current Behavior<!--- Tell us what happens instead of the expected behavior -->Not applicable: code documentation only### Context<!--- How has this issue affected you? What are you trying to accomplish? --><!--- Providing context helps us come up with a solution that is most useful in the real world -->We are using the ""Deprecated"" method calls. But in order to fix them, I have to use new APIs ... that are also creating a warning because ""incubating""?!### Steps to Reproduce <!---Provide a self-contained example project as an attached archive or a Github project.You can use the following template with a Gradle GitHub action set up to showcase your problem: https://github.com/gradle/gradle-issue-reproducerIn the rare cases where this is infeasible, we will also accept a detailed set of instructions.-->Skipped, problem is obvious from the Javadoc alone.### Your Environment<!--- Include as many relevant details about the environment you experienced the bug in --><!--- A build scan https://scans.gradle.com/get-started is ideal -->Not applicable: code documentation only
"
19683,0,0,273,0,0,bigdaz,0,"title:Project dependency jar does not exist when resolving project dependency  description:When upgrading to Gradle 7.4, the AndroidX project is getting an exception when resolving a dependency configuration that contains a project dependency.Build scan with the failure: https://ge.androidx.dev/s/5o64irjkosg5q/failure#1On completion of the build, the target file `/home/runner/work/androidx/androidx/out/lifecycle-playground/lifecycle-playground/lifecycle/lifecycle-common/build/libs/lifecycle-common-2.5.0-alpha01.jar` does exist.### Steps to Reproduce - Clone fork of AndroidX: https://github.com/bigdaz/androidx- `cd lifecycle`- `./gradlew clean buildOnServer --no-configuration-cache --max-workers=2`Note that this fails consistently with `--max-workers=2` and does not seem to fail when run with `--max-workers=8`. This build does not fail when executed with `Gradle 7.3.3`.### Your EnvironmentBuild scan URL: https://ge.androidx.dev/s/5o64irjkosg5q
"
19682,0,181,13,0,0,roomscape,0,"title:Unix start script doesn't respect JAVA_OPTS when xargs isn't installed description:### Expected Behavior- Given I have a Java application that has been built and packaged using the `distribution` plugin- and I build a docker image containing the application along with a minimal OS- and I set the image's entrypoint to be the Unix start script generated by Gradle- and I set some configuration in the `JAVA_OPTS` environment variable- When I start the container- Then I expect that my `JAVA_OPTS` configuration should be included in the command line used to launch the java process### Current BehaviorThe Unix startup script uses `xargs` ""to parse quoted args"". The minimal OS image I'm using doesn't contain `xargs`. When I run the startup script, I see a warning:```line 233: xargs: command not found```At this point I expect the script to fail. However, the script continues and the application starts up anyway. `JAVA_OPTS` is **not included** in the command line.### ContextI use `JAVA_OPTS` to set the heap size appropriately for the size of the container I'm deploying. For example, in a 1GB container I might set `JAVA_OPTS=-Xmx700m`, to allocate 700 megabytes of heap and leave 300 megabytes of headroom. This worked fine under Gradle 6.After upgrading to Gradle 7, the application doesn't respect `JAVA_OPTS` and starts up with the default amount of memory, which is 1/4 of the available memory. In my 1GB container, the application starts up with 250MB of heap.My **automated tests didn't catch the issue**, because the container still starts up fine and has enough memory to respond to requests. The application only starts to fail when deployed and under load.**If the start script requires `xargs`, I expect it to fail when `xargs` is not installed.**### Steps to Reproduce https://github.com/roomscape/gradle-start-scriptThe linked repository contains a Gradle application and a Dockerfile that reproduces the problem. I reproduced the problem in docker since it's an easy way to create an environment where `xargs` isn't installed.When running the docker container with `--env JAVA_OPTS=""-Dfoo=bar""`, the application should print out ```Application was started with -Dfoo=bar```Instead it prints```/example/bin/example: line 233: xargs: command not foundApplication was started with -Dfoo=null```### Your EnvironmentBuilding with Gradle 7.3.3 on OpenJDK 17Running in Docker on redhat/ubi8-minimal:8.5-218
"
19663,0,0,89,0,0,liutikas,0,"title:Gradle caches keyserver information even when it is disabled description:Gradle caches keyserver information even when it is disabled### Expected BehaviorWhen the user disables remote keyservers, gradle should invalidate signature verification data and rerun all of it.### Current BehaviorGradle caches keychains fetched from previous builds even though keyservers is disabled.### ContextAs part of enabling Gradle signature verification for our build, we ran into this incorrect behavior.### Steps to Reproduce 0. Checkout https://github.com/liutikas/gradle-disabled-keyservers1. `./gradlew jar` <- build succeeds as expected2. Modify `gradle/verification-metadata.xml` to uncomment `<key-servers enabled=""false""/>`3. `./gradlew jar`## ExpectedBuild fails because we are missing keychains that are only available online## ActualBuilds succeeds### Your EnvironmentLinuxGradle 7.4-rc-1 (same is true for 7.3)
"
19658,0,677,17,0,1,gavra0,0,"title:Configuration cache fails to serialize chain of mapped `Provider`s description:Gradle: 7.4-rc-1Using the code below:```abstract class MyTask extends DefaultTask {    @Input    abstract Property<String> getMyValue();    @TaskAction    void doAction() {        println(""Value is: ---->>>>>   "" + getMyValue().get())    }}def ciBuildNumer = providers.environmentVariable(""BUILD_NUMBER"")        .orElse(providers.environmentVariable(""BUILDKITE_BUILD_NUMBER""))def userProvider = ciBuildNumer        .map { """" }        .orElse(project.providers.environmentVariable(""USER""))Provider<String> versionNameProvider = userProvider.map { user ->    ""prefix-$user""}tasks.register(""mytask"", MyTask.class) { task ->    task.getMyValue().set(versionNameProvider)}```and running `./gradlew mytask --configuration-cache && ./gradlew mytask --configration-cache` fails on the second run. It looks like chain of mapped providers is not serialized correctly.
"
19649,0,679,17,0,0,gavra0,0,"title:Configuration cache fails to store zipped `Provider` description:Gradle version: `7.4-RC-1`Using the code below:```def userProvider = project.providers.environmentVariable(""CI_BUILD"")        .map { """" }        .orElse(project.providers.environmentVariable(""USER""))def versionMajorProvider = project.providers.gradleProperty(""versionMajor"").orElse(""1"")def versionMinorProvider = project.providers.gradleProperty(""versionMinor"").orElse(""2"")Provider<String> versionNameProvider = versionMajorProvider        .zip(versionMinorProvider) { major, minor ->            ""$major.$minor""        }        .zip(userProvider) { prev, user ->            ""$prev-$user""        }tasks.register(""mytask"", MyTask.class) { task ->    task.getMyValue().set(versionNameProvider)}```and running `./gradlew mytask --configuration-cache && ./gradlew mytask --configuration-cache` fails with `  - Type 'MyTask' property 'myValue' doesn't have a configured value.`.It looks like using `.zip` twice causes the problem.
"
19645,0,1463,2,0,0,dawi,0,"title:The IntelliJ IDEA Plugin does not mark JVM Test Suite sources as test source in the IDE description:### Expected BehaviorAccording to the [gradle 7.4-rc-1 release notes](https://docs.gradle.org/7.4-rc-1/release-notes.html#idea-test-sources), the [IntelliJ IDEA Plugin](https://docs.gradle.org/7.4-rc-1/userguide/idea_plugin.html) should mark all source directories used by a JVM Test Suite as test source directories within the IDE.### Current BehaviorI have created an example build file where this does not work as expected. All source directories are marked as ""sources"" (blue) instead of ""tests"" (green).<img width=""380"" alt=""intellij project layout screenshot"" src=""https://user-images.githubusercontent.com/129870/150300398-5f383bbf-91f0-4a7f-adb7-ce4a0cc134c1.png"">### Context* IntelliJ IDEA 2021.3.1 (Ultimate Edition)* Build #IU-213.6461.79, built on December 28, 2021### Steps to Reproduce #### build.gradle.kts```kotlinplugins {    `java-library`    `jvm-test-suite`    idea}repositories {    mavenCentral()}testing {    suites {        val unitTest by registering(JvmTestSuite::class) {            sources {                java {                    setSrcDirs(listOf(""src/test/unitTest/java""))                }                resources {                    setSrcDirs(listOf(""src/test/unitTest/resources""))                }            }            dependencies {                implementation(project)            }        }        val integrationTest by registering(JvmTestSuite::class) {            sources {                java {                    setSrcDirs(listOf(""src/test/integrationTest/java""))                }                resources {                    setSrcDirs(listOf(""src/test/integrationTest/resources""))                }            }            dependencies {                implementation(project)            }        }        val test by getting(JvmTestSuite::class) {            testType.set(""default-unit-test"")        }    }}```If I configure the test sources manually like below, IntelliJ recognizes them correctly. But `testSourceDirs` are now deprecated and I couldn't figure out yet, how to configure the proposed alternative `testSources` via Kotlin DSL. The examples for are only written in Groovy. Or maybe it is the same issue there, and I had configured them correctly and IntelliJ just does not configure the test sources accordingly.```kotlinidea {    module {        testSourceDirs = setOf(            file(""src/test/unitTest/java""),            file(""src/test/integrationTest/java"")        )        testResourceDirs = setOf(            file(""src/test/unitTest/resources""),            file(""src/test/integrationTest/resources"")        )    }}```
"
19634,0,0,262,0,0,3flex,0,"title:jacoco-report-aggregation should gracefully handle missing execution data description:### Expected BehaviorWhen a dependency of the aggregation project is missing execution data the JaCoCo report aggregation task should not fail.### Current BehaviorA project may have the jacoco & JVM test suite plugins applied to subprojects through usage of a conventions plugin applied to all projects, but some subprojects may not have any tests. Because there are no tests, there will be no JaCoCo test coverage generated, and the aggregation task will fail.### ContextI'm trying to migrate from the old manual code coverage aggregation setup in a project which is closely aligned to the [existing sample](https://docs.gradle.org/current/samples/sample_jvm_multi_project_with_code_coverage.html), though with transitive dependencies disabled on `coverageDataPath` configuration.The behaviour of the new plugin is surprising because in general Gradle gracefully handles cases like missing test sources by skipping related tasks with `NO-SOURCE`, so I would expect similar behaviour when lack of tests means no coverage data is created.I acknowledge that changes to the build setup could work around this issue, but it means creating a separate conventions plugin for ""untested"" projects vs ""tested"" projects, which is extra overhead and makes adoption more difficult. On balance I would instead just stick with the working manual config instead of using the new plugin.### Steps to Reproduce 1. Download sample https://docs.gradle.org/7.4-rc-1/samples/sample_jvm_multi_project_with_code_coverage_standalone.html2. Delete `utilities/src/test`3. Run `gradlew :testCodeCoverageReport`4. See failure: `Unable to read execution data file C:\path\to\sample_jvm_multi_project_with_code_coverage_standalone-kotlin-dsl\utilities\build\jacoco\test.exec`### Your EnvironmentBuild scan URL: N/A
"
19633,1,0,7,0,0,bingranl,0,"title:UP-TO-DATE check ignores empty directory in 7.4-rc-1 description:Given the android library project attached[UpToDateCheckRepo.tar.gz](https://github.com/gradle/gradle/files/7901402/UpToDateCheckRepo.tar.gz)1. Run `gradle lib:bundleLibResDebug`2. Add a empty directory `testDir` under `UpToDateCheckRepo/lib/src/main/resources/`(there is already a dummy file `foo.txt` under resources directory)3. Run `gradle lib:bundleLibResDebug --console=plain` and check the status of `> Task :lib:bundleLibResDebug`### Expected Behavior<!--- Tell us what should happen -->`:lib:bundleLibResDebug` should be executed when running with gradle 7.3.3 and 7.4-rc-1### Current Behavior<!--- Tell us what happens instead of the expected behavior -->`:lib:bundleLibResDebug` is UP-TO-DATE when running with 7.4-rc-1(it got executed with 7.3.3)### Context<!--- How has this issue affected you? What are you trying to accomplish? --><!--- Providing context helps us come up with a solution that is most useful in the real world -->Android Gradle Plugin is trying to upgrade gradle version from 7.3.3 to 7.4-rc-1.
"
19627,0,218,297,0,1,big-guy,0,"title:Aggregated test report does not respect java.testReportDir in some cases description:Given an application project that's aggregating the test results from its dependencies:```plugins {    id 'org.gradle.test-report-aggregation'    id 'java'}java {    testReportDir = layout.buildDirectory.dir(""non-default-location"")}dependencies {    implementation project("":direct"")}```### Expected BehaviorThe aggregated test results should go into `build/non-default-location`.### Current BehaviorThe aggregated test results go into `build/reports/tests`.### ContextThe TestReportAggregationPlugin checks for the existence of the Java plugin extension once and does not react to the application of the Java plugin. This means the order of the application of the plugins matters. Reversing `id 'org.gradle.test-report-aggregation'` and `id 'java'` ""fixes"" the problem.  But this should not be required.
"
19623,1,0,297,0,0,tresat,0,"title:Update JvmTestSuite DSL Reference with Test Type Propery description:The 7.4-rc-1 documentation's [JvmTestSuite DSL page](https://docs.gradle.org/7.4-rc-1/dsl/org.gradle.api.plugins.jvm.JvmTestSuite.html#getTestType) is missing the testType property.  This should be added.
"
19622,0,0,296,0,0,JavierSegoviaCordoba,0,"title:`notCompatibleWithConfigurationCache` and `org.gradle.unsafe.configuration-cache-problems=warn` description:If `org.gradle.unsafe.configuration-cache-problems` is set to `warn`, `notCompatibleWithConfigurationCache` doesn't work and the cache is stored when the task is executed.Repro: https://github.com/Reproducers/configuration-cache-reproTask marked as not compatible: `./gradlew spotlessCheck`
"
19614,1,3853,0,0,0,akar1492,0,"title:GradleProperties has not been loaded yet Error. description:Unit test Case failureUsing Gradle 6.8.1 and springboot 2.6.2.```Caused by: org.gradle.api.tasks.TaskInstantiationException: Could not create task of type 'BuildInfo'.    at org.gradle.api.internal.project.taskfactory.TaskFactory$1.call(TaskFactory.java:97)    at org.gradle.api.internal.project.taskfactory.TaskFactory$1.call(TaskFactory.java:84)    at org.gradle.util.GUtil.uncheckedCall(GUtil.java:452)    at org.gradle.api.internal.AbstractTask.injectIntoNewInstance(AbstractTask.java:202)    at org.gradle.api.internal.project.taskfactory.TaskFactory.create(TaskFactory.java:84)    at org.gradle.api.internal.project.taskfactory.AnnotationProcessingTaskFactory.create(AnnotationProcessingTaskFactory.java:48)    at org.gradle.api.internal.tasks.DefaultTaskContainer.createTask(DefaultTaskContainer.java:326)    at org.gradle.api.internal.tasks.DefaultTaskContainer.access$200(DefaultTaskContainer.java:77)    at org.gradle.api.internal.tasks.DefaultTaskContainer$TaskCreatingProvider.createDomainObject(DefaultTaskContainer.java:701)    at org.gradle.api.internal.tasks.DefaultTaskContainer$TaskCreatingProvider.createDomainObject(DefaultTaskContainer.java:658)    at org.gradle.api.internal.DefaultNamedDomainObjectCollection$AbstractDomainObjectCreatingProvider.tryCreate(DefaultNamedDomainObjectCollection.java:941)... 19 moreCaused by: java.lang.IllegalStateException: GradleProperties has not been loaded yet.    at org.gradle.initialization.DefaultGradlePropertiesController$NotLoaded.gradleProperties(DefaultGradlePropertiesController.java:80)    at org.gradle.initialization.DefaultGradlePropertiesController$SharedGradleProperties.gradleProperties(DefaultGradlePropertiesController.java:63)    at org.gradle.initialization.DefaultGradlePropertiesController$SharedGradleProperties.find(DefaultGradlePropertiesController.java:54)    at org.gradle.api.internal.provider.sources.GradlePropertyValueSource.obtain(GradlePropertyValueSource.java:36)    at org.gradle.api.internal.provider.sources.GradlePropertyValueSource.obtain(GradlePropertyValueSource.java:24)    at org.gradle.api.internal.provider.DefaultValueSourceProviderFactory$LazilyObtainedValue.lambda$obtainValueForThe1stTime$0(DefaultValueSourceProviderFactory.java:344)    at org.gradle.internal.Try.ofFailable(Try.java:39)    at org.gradle.api.internal.provider.DefaultValueSourceProviderFactory$LazilyObtainedValue.obtainValueForThe1stTime(DefaultValueSourceProviderFactory.java:344)    at org.gradle.api.internal.provider.DefaultValueSourceProviderFactory$LazilyObtainedValue.obtain(DefaultValueSourceProviderFactory.java:333)    at org.gradle.api.internal.provider.DefaultValueSourceProviderFactory$ValueSourceProvider.calculateOwnValue(DefaultValueSourceProviderFactory.java:299)    at org.gradle.api.internal.provider.AbstractMinimalProvider.getOrNull(AbstractMinimalProvider.java:93)    at org.springframework.boot.gradle.tasks.buildinfo.BuildInfoProperties.projectVersion(BuildInfoProperties.java:72)    at org.springframework.boot.gradle.tasks.buildinfo.BuildInfoProperties.(BuildInfoProperties.java:63)    at org.springframework.boot.gradle.tasks.buildinfo.BuildInfo.(BuildInfo.java:46)    at org.gradle.internal.instantiation.generator.AsmBackedClassGenerator$InvokeConstructorStrategy.newInstance(AsmBackedClassGenerator.java:1969)    at org.gradle.internal.instantiation.generator.AbstractClassGenerator$GeneratedClassImpl$GeneratedConstructorImpl.newInstance(AbstractClassGenerator.java:468)    at org.gradle.internal.instantiation.generator.DependencyInjectingInstantiator.doCreate(DependencyInjectingInstantiator.java:64)    at org.gradle.internal.instantiation.generator.DependencyInjectingInstantiator.newInstanceWithDisplayName(DependencyInjectingInstantiator.java:50)    at org.gradle.api.internal.project.taskfactory.TaskFactory$1.call(TaskFactory.java:90)```
"
19609,1,620,289,0,0,Vampire,0,"title:Using a version catalog entry with children with a configuration closure does not work description:If in Gradle 7.3.3 you have in your version catalog TOML file the libraries `foo` and `foo-bar` definedand then try to use it like `implementation(libs.foo) { exclude(""..."", ""..."") }` you only get```None of the following functions can be called with the arguments supplied: public fun <T : Dependency> DependencyHandler.implementation(dependency: TypeVariable(T), action: Action<TypeVariable(T)>): TypeVariable(T) defined in org.gradle.kotlin.dslpublic fun DependencyHandler.implementation(dependencyNotation: String, dependencyConfiguration: Action<ExternalModuleDependency>): ExternalModuleDependency defined in org.gradle.kotlin.dslpublic fun DependencyHandler.implementation(dependencyNotation: Provider<*>, dependencyConfiguration: Action<ExternalModuleDependency>): Unit defined in org.gradle.kotlin.dsl```If you change `foo-bar` to `fooBar`, the same code works.
"
19605,0,245,259,0,0,asodja,0,"title:Remove https://keys.fedoraproject.org from key servers description:From: [https://fedoraproject.org/wiki/Infrastructure/graveyard](https://fedoraproject.org/wiki/Infrastructure/graveyard):```- Keys. keys.fedoraproject.org was for looking up and adding GPG key data for users.   However due to problems with the SKS keysystem being hacked, we ended service.  For lookups, users should look at other services like keys.openpgp.org```So we should remove it.
"
19604,0,0,11,0,0,pkubowicz,0,"title:jacoco-report-aggregation does not handle dependencies without version description:### Expected Behavior[jacoco-report-aggregation](https://docs.gradle.org/7.4-rc-1/release-notes.html#generate-a-single-jacoco-code-coverage-from-multiple-projects) works when one of project declares a dependency without a version, thanks to importing a platform (BOM).### Current BehaviorThe new plugin stops working when you add a dependency without a version. Code compiles, tests run, standard jacocoTestReport works, but `testCodeCoverageReport` task crashes.### ContextI use Spring Boot BOM to omit versions for some dependencies.### Steps to Reproduce See the GitHub action result inhttps://github.com/pkubowicz/gradle-jacoco-aggregation-platform-bug### Your EnvironmentGradle 7.4-rc-1Build scan URL: https://scans.gradle.com/s/3vp6wbtg7ps2a
"
19603,1,566,2,0,0,dawi,0,"title:Custom test suite named unitTest conflicts with default test suite description:We have configured multiple `JvmTestSuites` to have their source roots under `src/test`. E.g.```src/test/unitTestsrc/test/webMvcTestsrc/test/integrationTestsrc/test/seleniumTest```Instead of using the default test suite for unit tests, we have decided to add a custom unit test test suite as follows:```val unitTest by registering(JvmTestSuite::class) {    sources {        java {            setSrcDirs(listOf(""src/test/unitTest/java""))        }        resources {            setSrcDirs(listOf(""src/test/unitTest/resources""))        }    }    dependencies {        implementation(project)    }}```So we don't use the default test suite at all.Now, with Gradel 7.4.0-RC1, the following error occurs:```Could not configure suite: 'unitTest'. Another test suite: 'test' uses the type: 'unit-test' and has already been configured in project: 'gradle-build'.```The obvious solution is to use the default test suite for unit tests again.I still wanted to file this issue, because I am not sure why this kind of setup should not be supported.And one last point: The release notes say that the IntelliJ IDEA Plugin plugin will now automatically mark all source directories used by a JVM Test Suite as test source directories within the IDE.This does not work for our custom integrationTest test suite. Maybe this is due to the fact that we have the test under src/test/integrationTest.
"
19600,1,0,0,0,0,tischober,0,"title:incrementalScalaAnalysisFormain failed on initial project (gradle init) description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues--><!--- Provide a brief summary of the issue in the title above -->### Expected Behavior<!--- Tell us what should happen -->I created with Gradle init a small scala project. Then I run ./gradlew :app:dependencies and I expected there no errors, because it is a initial project without any changes.### Current Behavior<!--- Tell us what happens instead of the expected behavior -->But I got errors for incrementalScalaAnalysisFormain and incrementalScalaAnalysisFortestpart of the logs:incrementalScalaAnalysisFormain - Incremental compilation analysis files for main+--- org.scala-lang:scala-library:2.13.1 FAILED\--- com.google.guava:guava:30.1.1-jre FAILEDincrementalScalaAnalysisFortest - Incremental compilation analysis files for test+--- org.scala-lang:scala-library:2.13.1 FAILED+--- com.google.guava:guava:30.1.1-jre FAILED+--- junit:junit:4.13.2 FAILED+--- org.scalatest:scalatest_2.13:3.2.9 FAILED\--- org.scalatestplus:junit-4-13_2.13:3.2.2.0 FAILED### Context<!--- How has this issue affected you? What are you trying to accomplish? --><!--- Providing context helps us come up with a solution that is most useful in the real world -->### Steps to Reproduce gradle init ( for scala with Gradle config in Kotlin)./gradlew :app:dependencies<!---Provide a self-contained example project as an attached archive or a Github project.You can use the following template with a Gradle GitHub action set up to showcase your problem: https://github.com/gradle/gradle-issue-reproducerIn the rare cases where this is infeasible, we will also accept a detailed set of instructions.-->### Your Environment<!--- Include as many relevant details about the environment you experienced the bug in --><!--- A build scan https://scans.gradle.com/get-started is ideal -->Build scan URL:
"
19585,0,2311,279,0,0,vlsi,0,"title:org.gradle.logging.level=lifecycle fails in tr_TR locale description:Gradle 7.3.3:```_JAVA_OPTIONS=""-Duser.country=TR -Duser.language=tr"" ./gradlew help  -Dorg.gradle.logging.level=lifecycle``````* Exception is:java.lang.IllegalArgumentException: Value 'lifecycle' given for org.gradle.logging.level Gradle property is invalid (must be one of quiet, warn, lifecycle, info, or debug))	at org.gradle.internal.buildoption.Origin$GradlePropertyOrigin.handleInvalidValue(Origin.java:58)	at org.gradle.internal.logging.LoggingConfigurationBuildOptions$LogLevelOption.parseLogLevel(LoggingConfigurationBuildOptions.java:138)	at org.gradle.internal.logging.LoggingConfigurationBuildOptions$LogLevelOption.applyFromProperty(LoggingConfigurationBuildOptions.java:103)	at org.gradle.internal.logging.LoggingConfigurationBuildOptions$LogLevelOption.applyFromProperty(LoggingConfigurationBuildOptions.java:76)	at org.gradle.internal.buildoption.BuildOptionSet$2.convert(BuildOptionSet.java:64)	at org.gradle.launcher.cli.converter.BuildOptionBackedConverter.convert(BuildOptionBackedConverter.java:36)	at org.gradle.launcher.cli.DefaultCommandLineActionFactory$WithLogging.execute(DefaultCommandLineActionFactory.java:226)	at org.gradle.launcher.Main.doAction(Main.java:35)	at org.gradle.launcher.bootstrap.EntryPoint.run(EntryPoint.java:50)	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)	at java.lang.reflect.Method.invoke(Method.java:498)	at org.gradle.launcher.bootstrap.ProcessBootstrap.runNoExit(ProcessBootstrap.java:60)	at org.gradle.launcher.bootstrap.ProcessBootstrap.run(ProcessBootstrap.java:37)	at org.gradle.launcher.GradleMain.main(GradleMain.java:31)	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)	at java.lang.reflect.Method.invoke(Method.java:498)	at org.gradle.wrapper.BootstrapMainStarter.start(BootstrapMainStarter.java:35)	at org.gradle.wrapper.WrapperExecutor.execute(WrapperExecutor.java:108)	at org.gradle.wrapper.GradleWrapperMain.main(GradleWrapperMain.java:63)```---Workaround: `-Dorg.gradle.logging.level=LIFECYCLE`
"
19576,1,363,1,0,0,aasitnikov,0,"title:Version catalog does not support resolving specific artifacts description:Gradle version: 7.3.3Gradle dependency notation supports specifying artifacts, as discribed [here](https://docs.gradle.org/current/userguide/declaring_dependencies.html#sec:resolve_specific_artifacts_from_dependency). But if some library in version catalog contains artifact, then dependency won't resolve.For example:```// libs.versions.toml[libraries]appsflyer = ""com.appsflyer:af-android-sdk-beta:6.3.2-rc3@aar""// build.gradledependencies {    implementation(""com.appsflyer:af-android-sdk-beta:6.3.2-rc3@aar"") // works as expected    implementation(libs.appsflyer) // configures, but dependency is not resolved, can be easily seen by calling :dependencies task}```
"
19560,0,2129,13,0,0,aanno,0,"title:toolchain feature fails to use IBM java VM description:## toolchain feature fails to use IBM java VM### Expected BehaviorIf gradle (7.3.3) lists a VM with `gradle -q javaToolchains`, it should be used when it fits.### Current BehaviorIBM java VM is listed with `gradle -q javaToolchains` ```$ ~/.sdkman/candidates/gradle/current/bin/gradle -q javaToolchains + Options     | Auto-detection:     Enabled     | Auto-download:      Enabled + Eclipse Adoptium JDK 11.0.13+8     | Location:           C:\dev\jdk-11.0.13+8     | Language Version:   11     | Vendor:             Eclipse Adoptium     | Is JDK:             true     | Detected by:        environment variable 'JDK11_HOME' + Eclipse Adoptium JDK 17.0.1+12     | Location:           C:\dev\jdk-17.0.1+12     | Language Version:   17     | Vendor:             Eclipse Adoptium     | Is JDK:             true     | Detected by:        environment variable 'JDK17_HOME' + IBM JDK 8.0.7.0 - pwa6480sr7-20211025_01(SR7)     | Location:           C:\Programme\IBM\WebSphere\AppServer\java\8.0     | Language Version:   8     | Vendor:             IBM     | Is JDK:             true     | Detected by:        Current JVM + Oracle JRE 1.8.0_291-b10     | Location:           C:\Program Files (x86)\Java\jre1.8.0_291     | Language Version:   8     | Vendor:             Oracle     | Is JDK:             false     | Detected by:        Windows Registry + Temurin JDK 1.8.0_312-b07     | Location:           C:\dev\jdk8u312-b07     | Language Version:   8     | Vendor:             Temurin     | Is JDK:             true     | Detected by:        environment variable 'JDK8_HOME_ADOPTIUM'```But using it with ```kotlinjava {    toolchain {        languageVersion.set(JavaLanguageVersion.of(8))        vendor.set(JvmVendorSpec.IBM)    }}```fails```$ gradle build> Task :compileJava FAILEDFAILURE: Build failed with an exception.* What went wrong:Execution failed for task ':compileJava'.> Error while evaluating property 'javaCompiler' of task ':compileJava'   > Failed to calculate the value of task ':compileJava' property 'javaCompiler'.      > No compatible toolchains found for request filter: {languageVersion=8, vendor=IBM, implementation=vendor-specific} (auto-detect true, auto-download true)```### Steps to Reproduce Trivial.```org.gradle.java.installations.fromEnv=JDK8_HOME,JDK8_HOME_ADOPTIUM,JDK11_HOME,JDK17_HOME```where each of the env variable points to a valid Java VM implementation.### Your EnvironmentBuild scan URL: https://gradle.com/s/xzqki6undf6e6
"
19528,0,339,299,0,0,turansky,0,"title:`com.gradle.plugin-publish` Unable to add new plugin to group description:Unable to add one more plugin to group `com.github.turansky.kfc`### Steps to Reproduce0. Existed plugins:    * `com.github.turansky.kfc.application`    * `com.github.turansky.kfc.library`1. Add:    * `com.github.turansky.kfc.react`2. Publish all plugins    ### Expected Behavior2. All plugins published### Current Behavior2. Publish error for new plugin```Execution failed for task ':kfc-gradle-plugin:publishPlugins'.> Failed to post to server.  Server responded with:  Group id must not start with 'gradle.plugin'  Plugin id 'com.github.turansky.kfc.react' and group id 'gradle.plugin.com.github.turansky.kfc' must use same top level namespace, like 'gradle.plugin' or 'com.github'```### Context* [KFC plugins](https://github.com/turansky/kfc-plugins)* [Add plugin commit](https://github.com/turansky/kfc-plugins/commit/b41d920e7f12ca7780d929bcc1ec96c893c9fac1)
"
19522,1,405,229,0,0,jbartok,0,"title:Copy task doesn't handle directories as first class citizens description:All transformations defined in CopySpecs, ie. transformations applied to files being copied are only applied to actual files and are not applied to directories too. Yet, directories are copied too (ie. the basic copy action does get applied to directories). This usually isn't visible but can be in certain circumstances. For example if you attempt to change something in the path of files being copied. See [reproducer](https://github.com/jbartok/gradle-issue-19522). A directory hierarchy is being copied and we want to rename ""folderA"" to ""folderB"" at the destination. There is no reason for ""folderA"" to be present in the destination at all, yet it will be. Extending the example from the reproducer (have to write it out, since I can't commit empty folders). If you copy a directory hierarchy like the following (doing the same folderA --> folderB rename as in the reproducer), the result is quite weird:```files闂傚倷绀侀悿鍥綖婢跺鐝堕柡鍥ュ灩缂佲晠鏌曡箛瀣偓鏇㈡偂濮椻偓閺?a.txt闂傚倷绀侀悿鍥綖婢跺鐝堕柡鍥ュ灩缂佲晠鏌曡箛瀣偓鏇㈡偂濮椻偓閺?folderA闂傚倷绀佺壕顓㈠箠閹炬潙顕遍柛鏇ㄥ灡閸?闂傚倷绀侀悿鍥綖婢跺鐝堕柡鍥ュ灩缂佲晠鏌曡箛瀣偓鏇㈡偂濮椻偓閺?c.txt闂傚倷绀佺壕顓㈠箠閹炬潙顕遍柛鏇ㄥ灡閸?闂傚倷绀侀悿鍥綖婢跺鐝堕柡鍥ュ灩缂佲晠鏌曡箛瀣偓鏇㈡偂濮椻偓閺?empty_subfolder闂傚倷绀佺壕顓㈠箠閹炬潙顕遍柛鏇ㄥ灡閸?闂傚倷绀侀悿鍥綖婢舵劕钃熼柨鐔哄Т缂佲晠鏌曡箛瀣偓鏇㈡偂濮椻偓閺?non_empty_subfolder闂傚倷绀佺壕顓㈠箠閹炬潙顕遍柛鏇ㄥ灡閸?    闂傚倷绀侀悿鍥綖婢舵劕钃熼柨鐔哄Т缂佲晠鏌曡箛瀣偓鏇㈡偂濮椻偓閺?d.txt闂傚倷绀侀悿鍥綖婢舵劕钃熼柨鐔哄Т缂佲晠鏌曡箛瀣偓鏇㈡偂濮椻偓閺?some_folder    闂傚倷绀侀悿鍥綖婢舵劕钃熼柨鐔哄Т缂佲晠鏌曡箛瀣偓鏇㈡偂濮椻偓閺?b.txt```becomes```copiedFiles闂傚倷绀侀悿鍥綖婢舵劕钃熼柨鐔哄Т缂佲晠鏌曡箛瀣偓鏇㈡偂濮椻偓閺?files    闂傚倷绀侀悿鍥綖婢跺鐝堕柡鍥ュ灩缂佲晠鏌曡箛瀣偓鏇㈡偂濮椻偓閺?a.txt    闂傚倷绀侀悿鍥綖婢跺鐝堕柡鍥ュ灩缂佲晠鏌曡箛瀣偓鏇㈡偂濮椻偓閺?folderA    闂傚倷绀佺壕顓㈠箠閹炬潙顕遍柛鏇ㄥ灡閸?闂傚倷绀侀悿鍥綖婢跺鐝堕柡鍥ュ灩缂佲晠鏌曡箛瀣偓鏇㈡偂濮椻偓閺?empty_subfolder    闂傚倷绀佺壕顓㈠箠閹炬潙顕遍柛鏇ㄥ灡閸?闂傚倷绀侀悿鍥綖婢舵劕钃熼柨鐔哄Т缂佲晠鏌曡箛瀣偓鏇㈡偂濮椻偓閺?non_empty_subfolder    闂傚倷绀侀悿鍥綖婢跺鐝堕柡鍥ュ灩缂佲晠鏌曡箛瀣偓鏇㈡偂濮椻偓閺?folderB    闂傚倷绀佺壕顓㈠箠閹炬潙顕遍柛鏇ㄥ灡閸?闂傚倷绀侀悿鍥綖婢跺鐝堕柡鍥ュ灩缂佲晠鏌曡箛瀣偓鏇㈡偂濮椻偓閺?c.txt    闂傚倷绀佺壕顓㈠箠閹炬潙顕遍柛鏇ㄥ灡閸?闂傚倷绀侀悿鍥綖婢舵劕钃熼柨鐔哄Т缂佲晠鏌曡箛瀣偓鏇㈡偂濮椻偓閺?non_empty_subfolder    闂傚倷绀佺壕顓㈠箠閹炬潙顕遍柛鏇ㄥ灡閸?    闂傚倷绀侀悿鍥綖婢舵劕钃熼柨鐔哄Т缂佲晠鏌曡箛瀣偓鏇㈡偂濮椻偓閺?d.txt    闂傚倷绀侀悿鍥綖婢舵劕钃熼柨鐔哄Т缂佲晠鏌曡箛瀣偓鏇㈡偂濮椻偓閺?some_folder        闂傚倷绀侀悿鍥綖婢舵劕钃熼柨鐔哄Т缂佲晠鏌曡箛瀣偓鏇㈡偂濮椻偓閺?b.txt```folderA and all its subfolders still show up & empty subfolders don't get copied at all.In the implementation see the difference between [CopyFileVisitorImpl.processDir](https://github.com/gradle/gradle/blob/44ebd55523a899477062a4b03ad00c294a3c4121/subprojects/core/src/main/java/org/gradle/api/internal/file/copy/CopyFileVisitorImpl.java#L55) and [CopyFileVisitorImpl.processFile](https://github.com/gradle/gradle/blob/44ebd55523a899477062a4b03ad00c294a3c4121/subprojects/core/src/main/java/org/gradle/api/internal/file/copy/CopyFileVisitorImpl.java#L51).
"
19516,1,377,13,0,0,aanno,0,"title:war plugin: create manifest with jar-manifest-attributes description:### Expected Behaviorjar-manifest-attributes of war plugin should write manifest attributes to WAR path `META-INF/MANIFEST.MF````kotlintasks {    jar {        manifest {            attributes(                ""Implementation-Title"" to ""MyWeb Application"",                ""Implementation-Version"" to ""1.0"",                ""Implementation-Vendor-Id"" to ""com.readlearncode.servlet4.mapping"",                ""Created-By"" to ""Gradle""            )        }    }}```### Current BehaviorContent of `META-INF/MANIFEST.MF` is always:```Manifest-Version: 1.0```i.e. there are no attributes.### ContextThis is critical as jakarta-ee/jee needs the 'Class-Path' attribute in WAR files.### Steps to Reproduce I set up a minimal example at https://github.com/aanno/Servlet-4.0-Sampler/tree/bugs/gradle7-war-manifest for the issue.### Your EnvironmentBuild scan URL:https://gradle.com/s/pnjfgghxqwhqo
"
19507,1,1605,31,0,0,akefirad,0,"title:Provisioned toolchain Java 17 could not be probed. description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues--><!--- Provide a brief summary of the issue in the title above -->My build job on AWS CodeBuild suddenly started failing with the error:```Downloading https://services.gradle.org/distributions/gradle-7.3.2-bin.zip--64 | ...........10%...........20%...........30%...........40%...........50%...........60%...........70%...........80%...........90%...........100%65 | 闂?6 | Welcome to Gradle 7.3.2!67 | 闂?8 | Here are the highlights of this release:69 | - Easily declare new test suites in Java projects70 | - Support for Java 1771 | - Support for Scala 372 | 闂?3 | For more details see https://docs.gradle.org/7.3.2/release-notes.html74 | 闂?5 | To honour the JVM settings for this build a single-use Daemon process will be forked. See https://docs.gradle.org/7.3.2/userguide/gradle_daemon.html#sec:disabling_the_daemon.76 | Daemon will be stopped at the end of the build77 | 闂?8 | FAILURE: Build failed with an exception.79 | 闂?0 | * What went wrong:81 | Could not determine the dependencies of task ':bootJar'.82 | > Could not resolve all dependencies for configuration ':runtimeClasspath'.83 | > Failed to calculate the value of task ':compileJava' property 'javaCompiler'.84 | > Provisioned toolchain '/root/.gradle/jdks/jdk-17.0.1+12' could not be probed.```### Expected BehaviorThe build should proceed by downloading the specified toolchain.### Current BehaviorIt fails to ""probe"" the ""provisioned toolchain"".### ContextNOTE: the issue is NOT reproducible locally or on AWS CodeBuild locally (with Amazon Linux 2). Our build job are using Ubuntu.Also, the build job used to work previously and started failing today.It's pretty similar to #17565 but for Java 17 and also I didn't specify any vendor, just Java version.BTW, removing `~/.gradle/jdks` folder didn't help (as I found it somewhere as a solution)I'm not sure this is an issue for Gradle or AWS CodeBuild, TBH.### Steps to Reproduce 1. Create a simple Gradle app (use start.spring.io or download [demo.zip](https://github.com/gradle/gradle/files/7829786/demo.zip))2. Create a simple AWS CodeBuild with the given details above and add a simple spec to build the project:```yamlversion: 0.2env:  shell: bash  git-credential-helper: yes  variables:    GRADLE_USER_HOME: /root/.gradle    GRADLE_OPTS: >      -Dgradle.user.home=/root/.gradle      -Dorg.gradle.console=plain      -Dorg.gradle.daemon=false      -Dorg.gradle.caching=true      -Dorg.gradle.vfs.watch=falsephases:  install:    runtime-versions:      java: corretto11.x  build:    commands:      - ./gradlew build```3. And run the build project.### Your EnvironmentBuild Env: AWS CodeBuild, Image: `aws/codebuild/standard:5.0`, latest version (after `21.01.08`, since for the old version it seems it's working)Build scan URL: https://scans.gradle.com/s/nk5qqxfwhqv3o
"
19497,0,0,2,0,0,vab2048,0,"title:Bug with test in integrationTest(JvmTestSuite) - class file not found (failure to compile). description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues--><!--- Provide a brief summary of the issue in the title above -->### Expected Behavior<!--- Tell us what should happen -->Test should not fail to compile.### Current Behavior<!--- Tell us what happens instead of the expected behavior -->Test in the 'test' suite is working fine.Exact same test in the 'integrationTest' suite fails to compile.### Steps to Reproduce <!---Provide a self-contained example project as an attached archive or a Github project.You can use the following template with a Gradle GitHub action set up to showcase your problem: https://github.com/gradle/gradle-issue-reproducerIn the rare cases where this is infeasible, we will also accept a detailed set of instructions.-->See https://github.com/vab2048/gradle-testsuite-bug-demo for demo and steps to reproduce.
"
19490,1,13788,291,0,0,zml2008,0,"title:Task input property of type `ArtifactCollection` fails to be serialized description:<!--- Provide a brief summary of the issue in the title above -->Based on the [guidance from Configuration Cache documentation](https://docs.gradle.org/current/userguide/configuration_cache.html#config_cache:requirements:disallowed_types), I've used an `ArtifactCollection` as a task input for a situation where I need to access both resolved artifacts, and information about their coordinates. In one project where I've used it, this works sucessfully, but in every other time I've tried to use `ArtifactCollection`, task input snapshotting has failed with an error described below.It seems this issue is only triggered when a task with an `ArtifactCollection` input also has outputs -- I suppose no fingerprinting is attempted otherwise.### Expected BehaviorAn input parameter of type `ArtifactCollection`  should function without error, the same way an input parameter of type `Configuration` would work.### Current BehaviorA build using a task with a parameter of type `ArtifactCollection` fails at execution with the following error:<detail>Stacktrace```4: Task failed with an exception.-----------* What went wrong:Execution failed for task ':adventure-text-serializer-gson:generateOfflineLinks'.> Cannot fingerprint input property 'linkableArtifacts': value 'org.gradle.api.internal.artifacts.configurations.DefaultConfiguration$ConfigurationArtifactCollection@4df1d2ba' cannot be serialized.* Try:> Run with --info or --debug option to get more log output.> Run with --scan to get full insights.* Exception is:org.gradle.api.tasks.TaskExecutionException: Execution failed for task ':adventure-text-serializer-gson:generateOfflineLinks'.        at org.gradle.api.internal.tasks.execution.CatchExceptionTaskExecuter.execute(CatchExceptionTaskExecuter.java:38)        at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.executeTask(EventFiringTaskExecuter.java:77)        at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.call(EventFiringTaskExecuter.java:55)        at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.call(EventFiringTaskExecuter.java:52)        at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)        at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)        at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)        at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)        at org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)        at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter.execute(EventFiringTaskExecuter.java:52)        at org.gradle.execution.plan.LocalTaskNodeExecutor.execute(LocalTaskNodeExecutor.java:74)        at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$InvokeNodeExecutorsAction.execute(DefaultTaskExecutionGraph.java:402)        at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$InvokeNodeExecutorsAction.execute(DefaultTaskExecutionGraph.java:389)        at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$BuildOperationAwareExecutionAction.execute(DefaultTaskExecutionGraph.java:382)        at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$BuildOperationAwareExecutionAction.execute(DefaultTaskExecutionGraph.java:368)        at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.lambda$run$0(DefaultPlanExecutor.java:127)        at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.execute(DefaultPlanExecutor.java:191)        at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.executeNextNode(DefaultPlanExecutor.java:182)        at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.run(DefaultPlanExecutor.java:124)        at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)        at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)        at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)        at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)        at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:61)        at java.base/java.lang.Thread.run(Thread.java:833)Caused by: org.gradle.internal.execution.fingerprint.InputFingerprinter$InputFingerprintingException: Cannot fingerprint input property 'linkableArtifacts': value 'org.gradle.api.internal.artifacts.configurations.DefaultConfiguration$ConfigurationArtifactCollection@4df1d2ba' cannot be serialized.        at org.gradle.internal.execution.fingerprint.impl.DefaultInputFingerprinter$InputCollectingVisitor.visitInputProperty(DefaultInputFingerprinter.java:106)        at org.gradle.api.internal.tasks.execution.TaskExecution.visitRegularInputs(TaskExecution.java:312)        at org.gradle.internal.execution.fingerprint.impl.DefaultInputFingerprinter.fingerprintInputProperties(DefaultInputFingerprinter.java:54)        at org.gradle.internal.execution.steps.CaptureStateBeforeExecutionStep.captureExecutionStateWithOutputs(CaptureStateBeforeExecutionStep.java:193)        at org.gradle.internal.execution.steps.CaptureStateBeforeExecutionStep.lambda$captureExecutionState$1(CaptureStateBeforeExecutionStep.java:141)        at org.gradle.internal.execution.steps.BuildOperationStep$1.call(BuildOperationStep.java:37)        at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)        at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)        at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)        at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)        at org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)        at org.gradle.internal.execution.steps.BuildOperationStep.operation(BuildOperationStep.java:34)        at org.gradle.internal.execution.steps.CaptureStateBeforeExecutionStep.captureExecutionState(CaptureStateBeforeExecutionStep.java:130)        at org.gradle.internal.execution.steps.CaptureStateBeforeExecutionStep.lambda$execute$0(CaptureStateBeforeExecutionStep.java:75)        at java.base/java.util.Optional.flatMap(Optional.java:289)        at org.gradle.internal.execution.steps.CaptureStateBeforeExecutionStep.execute(CaptureStateBeforeExecutionStep.java:75)        at org.gradle.internal.execution.steps.CaptureStateBeforeExecutionStep.execute(CaptureStateBeforeExecutionStep.java:50)        at org.gradle.internal.execution.steps.SkipEmptyWorkStep.lambda$execute$2(SkipEmptyWorkStep.java:93)        at java.base/java.util.Optional.orElseGet(Optional.java:364)        at org.gradle.internal.execution.steps.SkipEmptyWorkStep.execute(SkipEmptyWorkStep.java:93)        at org.gradle.internal.execution.steps.SkipEmptyWorkStep.execute(SkipEmptyWorkStep.java:34)        at org.gradle.internal.execution.steps.legacy.MarkSnapshottingInputsStartedStep.execute(MarkSnapshottingInputsStartedStep.java:38)        at org.gradle.internal.execution.steps.LoadPreviousExecutionStateStep.execute(LoadPreviousExecutionStateStep.java:43)        at org.gradle.internal.execution.steps.LoadPreviousExecutionStateStep.execute(LoadPreviousExecutionStateStep.java:31)        at org.gradle.internal.execution.steps.AssignWorkspaceStep.lambda$execute$0(AssignWorkspaceStep.java:40)        at org.gradle.api.internal.tasks.execution.TaskExecution$3.withWorkspace(TaskExecution.java:284)        at org.gradle.internal.execution.steps.AssignWorkspaceStep.execute(AssignWorkspaceStep.java:40)        at org.gradle.internal.execution.steps.AssignWorkspaceStep.execute(AssignWorkspaceStep.java:30)        at org.gradle.internal.execution.steps.IdentityCacheStep.execute(IdentityCacheStep.java:37)        at org.gradle.internal.execution.steps.IdentityCacheStep.execute(IdentityCacheStep.java:27)        at org.gradle.internal.execution.steps.IdentifyStep.execute(IdentifyStep.java:44)        at org.gradle.internal.execution.steps.IdentifyStep.execute(IdentifyStep.java:33)        at org.gradle.internal.execution.impl.DefaultExecutionEngine$1.execute(DefaultExecutionEngine.java:76)        at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeIfValid(ExecuteActionsTaskExecuter.java:142)        at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.execute(ExecuteActionsTaskExecuter.java:131)        at org.gradle.api.internal.tasks.execution.CleanupStaleOutputsExecuter.execute(CleanupStaleOutputsExecuter.java:77)        at org.gradle.api.internal.tasks.execution.FinalizePropertiesTaskExecuter.execute(FinalizePropertiesTaskExecuter.java:46)        at org.gradle.api.internal.tasks.execution.ResolveTaskExecutionModeExecuter.execute(ResolveTaskExecutionModeExecuter.java:51)        at org.gradle.api.internal.tasks.execution.SkipTaskWithNoActionsExecuter.execute(SkipTaskWithNoActionsExecuter.java:57)        at org.gradle.api.internal.tasks.execution.SkipOnlyIfTaskExecuter.execute(SkipOnlyIfTaskExecuter.java:56)        at org.gradle.api.internal.tasks.execution.CatchExceptionTaskExecuter.execute(CatchExceptionTaskExecuter.java:36)        at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.executeTask(EventFiringTaskExecuter.java:77)        at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.call(EventFiringTaskExecuter.java:55)        at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.call(EventFiringTaskExecuter.java:52)        at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)        at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)        at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)        at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)        at org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)        at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter.execute(EventFiringTaskExecuter.java:52)        at org.gradle.execution.plan.LocalTaskNodeExecutor.execute(LocalTaskNodeExecutor.java:74)        at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$InvokeNodeExecutorsAction.execute(DefaultTaskExecutionGraph.java:402)        at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$InvokeNodeExecutorsAction.execute(DefaultTaskExecutionGraph.java:389)        at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$BuildOperationAwareExecutionAction.execute(DefaultTaskExecutionGraph.java:382)        at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$BuildOperationAwareExecutionAction.execute(DefaultTaskExecutionGraph.java:368)        at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.lambda$run$0(DefaultPlanExecutor.java:127)        at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.execute(DefaultPlanExecutor.java:191)        at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.executeNextNode(DefaultPlanExecutor.java:182)        at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.run(DefaultPlanExecutor.java:124)        at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)        at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)        at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)        at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)        at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:61)        at java.base/java.lang.Thread.run(Thread.java:833)Caused by: org.gradle.internal.snapshot.ValueSnapshottingException: Could not serialize value of type DefaultConfiguration.ConfigurationArtifactCollection        at org.gradle.internal.snapshot.impl.DefaultValueSnapshotter.serialize(DefaultValueSnapshotter.java:182)        at org.gradle.internal.snapshot.impl.DefaultValueSnapshotter.processValue(DefaultValueSnapshotter.java:168)        at org.gradle.internal.snapshot.impl.DefaultValueSnapshotter.snapshot(DefaultValueSnapshotter.java:55)        at org.gradle.internal.execution.fingerprint.impl.DefaultInputFingerprinter$InputCollectingVisitor.visitInputProperty(DefaultInputFingerprinter.java:99)        ... 70 moreCaused by: java.io.NotSerializableException: org.gradle.api.internal.artifacts.configurations.DefaultConfiguration$ConfigurationArtifactCollection        at java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1197)        at java.base/java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:354)        at org.gradle.internal.snapshot.impl.DefaultValueSnapshotter.serialize(DefaultValueSnapshotter.java:176)        ... 73 more```</detail>### ContextI'm trying to capture both the component identifier and path of resolution results of a configuration:**Failing task property:** https://github.com/KyoriPowered/indra/blob/e2afe579a8a947a178b712b64e1fbedf22ac6caa/indra-crossdoc/src/main/java/net/kyori/indra/crossdoc/GenerateOfflineLinks.java#L76**Configuration of the task in question:** https://github.com/KyoriPowered/indra/blob/e2afe579a8a947a178b712b64e1fbedf22ac6caa/indra-crossdoc/src/main/java/net/kyori/indra/crossdoc/CrossdocPlugin.java#L187### Steps to Reproduce I've finally managed to reproduce this issue in: https://github.com/zml2008/gradle-artifact-collection-issueThe full setup that I originally experienced this issue in was with the projcets:- The `indra` gradle plugin, on branch [feature/crossdoc](https://github.com/KyoriPowered/indra/tree/e2afe579a8a947a178b712b64e1fbedf22ac6caa)- The adventure project, checked out to branch [temp/crossdoc-update-reproducer](https://github.com/KyoriPowered/adventure/tree/84e08287935734fedb4d847ae44324bd7e614a7d)building `adventure` with the command line:  `./gradlew --include-build ../indra generateOfflineLinks --stacktrace --scan --no-configure-on-demand`, which fails across multiple subprojects.### Your EnvironmentBuild scan URL: https://scans.gradle.com/s/7nvvmhcphvujm
"
19488,1,1043,2,0,1,dawi,0,"title:Clarify jvm_test_suite_plugin documentation description:I have a few things regarding the `jvm_test_suite_plugin` [documentation](https://docs.gradle.org/7.3.3/userguide/jvm_test_suite_plugin.html). First I wanted to ask this on stackoverflow, but then I thought that it might be worth to update the docs. So here we go:1. It is not clear to me which framework is used per default for new test suites.The documentation only mentions that JUnit4 is used in the built-in test suite for backwards compatibility reasons.It seems that `useJUnitJupiter()` is the default for custom test suits, but it is not stated in the docs. 2. It is not clear to me what happens if `useJUnitJupiter()` is used. For example if I have already configured a specific junit jupiter version via `spring-boot-dependencies` and `spring-boot-starter-test`, which version will then be used? Or in other words, how can I let gradle use the libraries that are already on the test classpath.3. Is it ok to mix both kind of configuration? Or does it have any disadvantages?E.g. I liked the possibility to configure common parameters for all test tasks in one place.```kotlintesting {    suites {            val test by getting(JvmTestSuite::class) {            useJUnitJupiter()        }        val integrationTest by registering(JvmTestSuite::class) {             useJUnitJupiter()            dependencies {                implementation(project)             }        }                val webMvcTest by registering(JvmTestSuite::class) {             useJUnitJupiter()            dependencies {                implementation(project)             }        }    }}tasks.withType<Test> {    useJUnitPlatform()    filter.isFailOnNoMatchingTests = false    testLogging.exceptionFormat = TestExceptionFormat.FULL    testLogging.showStandardStreams = false        systemProperties[""config.directory""] = if (isGitLab) ...}```4. An example of how to use test fixtures for custom test suits would be nice. I still have not figured out how to configure this. I expected something like this to work:```val integrationTest by registering(JvmTestSuite::class) {     dependencies {        implementation(project)        // implementation(testFixtures(project)) this is not working as in `DependencyHandlerScope`.    }}```Regards, Daniel
"
19480,0,0,283,0,0,altrisi,0,"title:Gradle keeps the wrapper's dist zip in the `.gradle` folder after unzipping, using double the space description:### Expected BehaviorGradle should remove the wrapper's dist zip file after it has been unzipped right next to it.### Current BehaviorThe zip is kept, wasting double the space on the hard drive for a no longer used file.### ContextI was looking at cleaning disk space by removing some of my old files, and thought about removing old wrapper distributions. To my surprise, when I opened the  `{userdir}/.gradle/wrapper/dists` folder, I found that each wrapper I had used also kept the zip file that was used to download it, therefore wasting double the space. Given each one of those distributions are over 100MB each _zipped_ (with Gradle 7.3's zip being 110MB on my machine), this is an enormous waste of space, specially if you have multiple wrapper versions from normally updating Gradle. In my case I had 12 versions, meaning that over 1GB was wasted storing only the unused zips.### Steps to Reproduce - Run some gradle script that causes the download of a distribution.- Go to `{userdir}/.gradle/wrapper/dists/gradle-{version}-bin/{random characters}`.- Find that there's a zip whose contents are unzipped directly next to it### Your EnvironmentBuild scan URL: Not relevantOS: Windows 10.
"
19476,0,0,251,0,1,ghale,0,"title:Only display the build scan hint when the Gradle Enterprise plugin is not applied description:Fixes #18956This changes the error message at the end of a build to only suggest using `--scan` when the Gradle Enterprise plugin has not been applied.One implication of this is that the `use --scan` suggestion will no longer be printed in scenarios where the GE plugin is applied, but for some reason build scan publishing is disabled.  This is not a situation we could handle without either 1) making Gradle build tool know more about the internals of the GE plugin or 2) allowing the GE plugin to somehow modify the suggestions when there is a failed build.  This seems like an unlikely case given the vast majority of our users configure `publishAlways()`.
"
19467,1,1524,0,0,0,peterfigure,0,"title:java-gradle-plugin doesn't support lazy version for the marker publication dependencies description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues--><!--- Provide a brief summary of the issue in the title above -->### Expected BehaviorThe published plugin marker POM contains a reference to the plugin publication of itself, it should match the actual version### Current BehaviorThe published plugin marker POM contains a reference to the plugin publication of itself, however as project version is set lazily by a semver plugin, ""unspecified"" ends up inside the POM, even though the path and actual published jar contains the correct version. The semver plugin makes uses of an extension with PropertyS and hence uses `afterEvaluate` to calculate the version. ```./io.github.nefilim.gradle.catalog-plugin.gradle.plugin./io.github.nefilim.gradle.catalog-plugin.gradle.plugin/0.1.1./io.github.nefilim.gradle.catalog-plugin.gradle.plugin/0.1.1/io.github.nefilim.gradle.catalog-plugin.gradle.plugin-0.1.1.pom./io.github.nefilim.gradle.catalog-plugin.gradle.plugin/maven-metadata-local.xml./0.1.1./0.1.1/catalog-plugin-0.1.1.jar./0.1.1/catalog-plugin-0.1.1.pom./0.1.1/catalog-plugin-0.1.1.module./0.1.1/catalog-plugin-0.1.1-javadoc.jar./0.1.1/catalog-plugin-0.1.1-sources.jar./maven-metadata-local.xml``````xml闂?cat io.github.nefilim.gradle.catalog-plugin.gradle.plugin/0.1.1/io.github.nefilim.gradle.catalog-plugin.gradle.plugin-0.1.1.pom <?xml version=""1.0"" encoding=""UTF-8""?><project xmlns=""http://maven.apache.org/POM/4.0.0"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:schemaLocation=""http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd"">  <modelVersion>4.0.0</modelVersion>  <groupId>io.github.nefilim.gradle.catalog-plugin</groupId>  <artifactId>io.github.nefilim.gradle.catalog-plugin.gradle.plugin</artifactId>  <version>0.1.1</version> ======> CORRECT  <packaging>pom</packaging>  <name>Gradle Catalog Plugin</name>  <description>Generate catalogs</description>  <dependencies>    <dependency>      <groupId>io.github.nefilim.gradle</groupId>      <artifactId>catalog-plugin</artifactId>      <version>unspecified</version> =======> INCORRECT    </dependency>  </dependencies></project>```
"
19466,1,0,0,0,0,KazakEz,0,"title:/del description:/del
"
19465,0,0,0,0,0,BerndFarkaDyna,0,"title:AdoptOpenJdkRemoteBinary doesn't respect libc description:<!--- --><!--- Provide a brief summary of the issue in the title above -->AdoptOpenJdkRemoteBinary doesn't respect the libC on Linux, for example if you run you build on Alpine it should add the parameter for MUSL libC to the REST Url which would be supported by the api.adoptjdk.net### Expected BehaviorIf the build is running on Alpine Linux the correct SDK should be fetched.### Current BehaviorThe libC parameter isn't set -> defaulting to GlibC### ContextRunning a Gradle build on an Alpine Container with enabled JVM Auto Provisioning
"
19461,1,0,0,0,0,astro-yoas,0,"title:Could not find method dependencyResolutionManagement() description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues--><!--- Provide a brief summary of the issue in the title above -->Hi I'm working on new project, build with button run and debug are fine, but when i tried to run gradle command its failingmy environment:`arctic fox 2020.3.1 patch 4``https\://services.gradle.org/distributions/gradle-7.0.2-bin.zip``com.android.tools.build:gradle:7.0.4`### Expected Behavior<!--- Tell us what should happen -->gradle run successfully### Current Behavior<!--- Tell us what happens instead of the expected behavior -->show error `> Could not find method dependencyResolutionManagement() for arguments [settings_9od9c2tr6j1qkv3kyo2nos18e$_run_closure1@22690f55] on settings 'astro-android' of type org.gradle.initialization.DefaultSettings.`### Context<!--- How has this issue affected you? What are you trying to accomplish? --><!--- Providing context helps us come up with a solution that is most useful in the real world -->### Steps to Reproduce <!--- Provide a self-contained example project (as an attached archive or a Github project). --><!--- In the rare cases where this is infeasible, we will also accept a detailed set of instructions. -->build with gradle comamnd `gradle --build`### Your Environment<!--- Include as many relevant details about the environment you experienced the bug in --><!--- A build scan https://scans.gradle.com/get-started is ideal -->Build scan URL:
"
19458,0,4168,300,0,0,bjhargrave,0,"title:[com.gradle.plugin-publish] 0.19.0 uses deprecated configurations description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues--><!--- Provide a brief summary of the issue in the title above -->### Expected Behavior<!--- Tell us what should happen -->The `com.gradle.plugin-publish` plugin should not use deprecated configurations for any version of Gradle being used.### Current Behavior<!--- Tell us what happens instead of the expected behavior -->The `com.gradle.plugin-publish` plugin uses deprecated configurations (as of Gradle 7.3) which emits warnings and, if `--warning-mode=fail` is in effect, fails the build.### Context<!--- How has this issue affected you? What are you trying to accomplish? --><!--- Providing context helps us come up with a solution that is most useful in the real world -->In my gradle plugin build, I use `com.gradle.plugin-publish` plugin in my  gradle plugin project using Gradle 7.3. When updating the `com.gradle.plugin-publish` plugin version from 0.18.0 to 0.19.0, my build fails because the build uses `--warning-mode=fail` and the 0.19.0 plugin uses deprecated configurations.See <https://github.com/bndtools/bnd/runs/4668447723?check_suite_focus=true#step:5:447> for an example.```> Configure project :gradle-plugins:biz.aQute.bnd.gradleThe apiElements configuration has been deprecated for dependency declaration. This will fail with an error in Gradle 8.0. Please use the implementation or api or compileOnly configuration instead. Consult the upgrading guide for further information: https://docs.gradle.org/7.3.2/userguide/upgrading_version_5.html#dependencies_should_no_longer_be_declared_using_the_compile_and_runtime_configurationsThe runtimeElements configuration has been deprecated for dependency declaration. This will fail with an error in Gradle 8.0. Please use the implementation or api or compileOnly or runtimeOnly configuration instead. Consult the upgrading guide for further information: https://docs.gradle.org/7.3.2/userguide/upgrading_version_5.html#dependencies_should_no_longer_be_declared_using_the_compile_and_runtime_configurationsThe compileClasspath configuration has been deprecated for dependency declaration. This will fail with an error in Gradle 8.0. Please use the implementation or api or compileOnly configuration instead. Consult the upgrading guide for further information: https://docs.gradle.org/7.3.2/userguide/upgrading_version_5.html#dependencies_should_no_longer_be_declared_using_the_compile_and_runtime_configurationsThe archives configuration has been deprecated for dependency declaration. This will fail with an error in Gradle 8.0. Please use the implementation or api configuration instead. Consult the upgrading guide for further information: https://docs.gradle.org/7.3.2/userguide/upgrading_version_5.html#dependencies_should_no_longer_be_declared_using_the_compile_and_runtime_configurationsThe default configuration has been deprecated for dependency declaration. This will fail with an error in Gradle 8.0. Please use the implementation or api configuration instead. Consult the upgrading guide for further information: https://docs.gradle.org/7.3.2/userguide/upgrading_version_5.html#dependencies_should_no_longer_be_declared_using_the_compile_and_runtime_configurationsThe dslCompileClasspath configuration has been deprecated for dependency declaration. This will fail with an error in Gradle 8.0. Please use the dslImplementation or dslCompileOnly configuration instead. Consult the upgrading guide for further information: https://docs.gradle.org/7.3.2/userguide/upgrading_version_5.html#dependencies_should_no_longer_be_declared_using_the_compile_and_runtime_configurationsThe dslRuntimeClasspath configuration has been deprecated for dependency declaration. This will fail with an error in Gradle 8.0. Please use the dslImplementation or dslCompileOnly or dslRuntimeOnly configuration instead. Consult the upgrading guide for further information: https://docs.gradle.org/7.3.2/userguide/upgrading_version_5.html#dependencies_should_no_longer_be_declared_using_the_compile_and_runtime_configurationsThe runtimeClasspath configuration has been deprecated for dependency declaration. This will fail with an error in Gradle 8.0. Please use the implementation or api or compileOnly or runtimeOnly configuration instead. Consult the upgrading guide for further information: https://docs.gradle.org/7.3.2/userguide/upgrading_version_5.html#dependencies_should_no_longer_be_declared_using_the_compile_and_runtime_configurationsThe testCompileClasspath configuration has been deprecated for dependency declaration. This will fail with an error in Gradle 8.0. Please use the testImplementation or testCompileOnly configuration instead. Consult the upgrading guide for further information: https://docs.gradle.org/7.3.2/userguide/upgrading_version_5.html#dependencies_should_no_longer_be_declared_using_the_compile_and_runtime_configurationsThe testRuntimeClasspath configuration has been deprecated for dependency declaration. This will fail with an error in Gradle 8.0. Please use the testImplementation or testCompileOnly or testRuntimeOnly configuration instead. Consult the upgrading guide for further information: https://docs.gradle.org/7.3.2/userguide/upgrading_version_5.html#dependencies_should_no_longer_be_declared_using_the_compile_and_runtime_configurations```### Steps to Reproduce <!--- Provide a self-contained example project (as an attached archive or a Github project). --><!--- In the rare cases where this is infeasible, we will also accept a detailed set of instructions. -->Use version 0.19.0 of the `com.gradle.plugin-publish` plugin with Gradle 7.3 (and optionally `--warning-mode=fail` to fail the build).### Your Environment<!--- Include as many relevant details about the environment you experienced the bug in --><!--- A build scan https://scans.gradle.com/get-started is ideal -->Build scan URL: https://scans.gradle.com/s/lt2reuzn4x62q
"
19456,1,1282,0,0,1,sacchettom,0,"title:Toolchains + java 8 + scala 2.10 can pass wrong target parameter to the compiler description:### Expected BehaviorSpecifying JDK 8 in the java toolchain, all scala 2.10.x builds should work correctly building with and targeting JDK8.### Current BehaviorTested this in gradle 7.3.2 and 7.3.3. With a toolchain defined as```groovyjava {    toolchain {        languageVersion = JavaLanguageVersion.of(8)    }}```The success of the build with scala 2.10.x depends on the scala library version that's being used as compile dependencies in the build - only the latest `2.10.7` will actually work out. The other versions will fail with the error```'jvm-1.8' is not a valid choice for '-target'bad option: '-target:jvm-1.8'```### ContextWe are switching from gradle 6 to 7 and are starting to use toolchains everywhere. We still have a few old builds that must be maintained with java 8 and scala 2.10.Settings as before```groovyjava {    sourceCompatibility = '1.8'    targetCompatibility = '1.8'}```works, but we would like to use toolchains instead especially as in the future Gradle may require running on java 11 only.### Steps to Reproduce A minimal `build.gradle` like this shows the problem (gradle 7.3.3):```groovyapply plugin: 'scala'repositories {    mavenCentral()}java {    toolchain {        languageVersion = JavaLanguageVersion.of(8)    }}dependencies {    implementation 'org.scala-lang:scala-library:2.10.4'}```Just add a sample scala source, i.e. taken from scala docs put a `point.scala` in `src/main/scala/org/test/`:```class Point(var x: Int, var y: Int) {  def move(dx: Int, dy: Int): Unit = {    x = x + dx    y = y + dy  }  override def toString: String =    s""($x, $y)""}```Launch `./gradlew clean compileScala -si` - the build will fail because of the bad target parameter.```Started Gradle worker daemon (0.608 secs) with fork options DaemonForkOptions{executable=/Library/Java/JavaVirtualMachines/jdk1.8.0_144.jdk/Contents/Home/bin/java, minHeapSize=null, maxHeapSize=null, jvmArgs=[], keepAliveMode=SESSION}.Compiling with Zinc Scala compiler.Prepared Zinc Scala inputs: 0.114 secsCompiling 1 Scala source to /Users/*******/code/test-toolchain/build/classes/scala/main ...'jvm-1.8' is not a valid choice for '-target'bad option: '-target:jvm-1.8'> Task :compileScala FAILED```Current fixes:- update the dependency to 2.10.7, or- remove the toolchain definition and go back to the old block```groovyjava {    sourceCompatibility = '1.8'    targetCompatibility = '1.8'}```### Your EnvironmentGradle 7.3.3 on OsX
"
19453,0,481,298,0,0,nassimus26,0,"title:Incremental cache lost after a compilation error when using Micronaut description:The cache is lost after any compilation error when Micronaut-inject is shipped with the project, so for example :1- Build this project a first time2- Make a build error, for example by removing any parentheses on the line 12 ( `log.debug` ) of the `test.Application` class in the `/grails-app/init` folder, please note that Micronaut injection must be triggered in the code, that's why I added the first line `TriggerMicronaut.getDeclaredField(""name"")` by calling reflection API3- Build the project, so the build will fails4- Correct the code, to succeed the next compilation5- Rebuild the project, here, instead of having an incremental build (just one file), we got the message :```> Task :compileGroovyBuild cache key for task ':compileGroovy' is 8155b9162e73ad3dbcf1e6e45d38c585Task ':compileGroovy' is not up-to-date because:  Task has failed previously.The input changes require a full rebuild for incremental task ':compileGroovy'.Groovy compilation avoidance is an incubating feature.Full recompilation is required because no incremental change information is available. This is usually caused by clean builds or changing compiler arguments.```I am using Gradle 7.3.3 ( latest version ), with open JDK 16[micronaut-cache-conflict.zip](https://github.com/gradle/gradle/files/7791258/micronaut-cache-conflict.zip)
"
19440,1,2690,298,0,0,nassimus26,0,"title:Gradle cache and incremental compiling is not working with Micronaut 3 description:Hi I am using Gradle 6.9.1 and Micronaut-inject-groovy 3.2.3, the project is fully recompiled when I changed just one file,it complains for not finding the source of the generated class from Micronaut so it recompiles everything !here the debug info :```> Task :compileGroovyCaching disabled for task ':compileGroovy' because:  Gradle does not know how file 'build/classes/groovy/main/uberall/admin/AdminListingController$_listGoogleEnterprise_closure3$_closure43.class' was created (output property 'destinationDirectory'). Task output caching requires exclusive access to output paths to guarantee correctness (i.e. multiple tasks are not allowed to produce output in the same location).Task ':compileGroovy' is not up-to-date because:  Input property 'stableSources' file /Users/nmoualek/IdeaProjects/company/grails-app/controllers/company/admin/AdminBusinessController.groovy has changed.Groovy compilation avoidance is an incubating feature.Created classpath snapshot for incremental compilation in 0.712 secs. 8018 duplicate classes found in classpath (see all with --debug).Class dependency analysis for incremental compilation took 3.494 secs.Full recompilation is required because unable to find source file of class uberall.admin.AdminBusinessController$__tt__show_closure24$_closure53. Analysis took 4.251 secs.Starting process 'Gradle Worker Daemon 1'. Working directory: /Users/nmoualek/.gradle/workers Command: /Library/Java/JavaVirtualMachines/jdk-15.0.2.jdk/Contents/Home/bin/java --add-opens java.base/java.lang=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.prefs/java.util.prefs=ALL-UNNAMED @/private/var/folders/8m/mzc27cy502j7fhgn_f7nmd9c0000gn/T/gradle-worker-classpath12571877760384959526txt -Xms512m -Xmx4096m -Dfile.encoding=UTF-8 -Duser.country=FR -Duser.language=en -Duser.variant worker.org.gradle.process.internal.worker.GradleWorkerMain 'Gradle Worker Daemon 1'Successfully started process 'Gradle Worker Daemon 1'Started Gradle worker daemon (0.483 secs) with fork options DaemonForkOptions{executable=/Library/Java/JavaVirtualMachines/jdk-15.0.2.jdk/Contents/Home/bin/java, minHeapSize=512m, maxHeapSize=4096m, jvmArgs=[--add-opens, java.base/java.lang=ALL-UNNAMED, --add-opens, java.base/java.lang.invoke=ALL-UNNAMED, --add-opens, java.prefs/java.util.prefs=ALL-UNNAMED], keepAliveMode=SESSION}.This JVM does not support getting OS memory, so no OS memory status updates will be broadcast> Task :compileGroovy12:36:38.937 [/127.0.0.1:58739 to /127.0.0.1:58738 workers] DEBUG io.micronaut.core.optim.StaticOptimizations - No optimizations class io.micronaut.core.io.service.SoftServiceLoader$Optimizations foundCompiling with JDK Java compiler API.12:38:45.066 [/127.0.0.1:58739 to /127.0.0.1:58738 workers] DEBUG io.micronaut.core.optim.StaticOptimizations - No optimizations class io.micronaut.core.reflect.ClassUtils$Optimizations found```
"
19426,0,416,226,0,0,mlopatkin,0,"title:Relative paths for detected file inputs are wrong in the configuration cache report description:Consider the following build file:```groovy// Creating files is irrelevant to the issue, it is here to make the sample self-containednew File(""provider.txt"").text = ""provider""new File(""fis.txt"").text = ""fis""def provider = providers.fileContents(layout.file(providers.provider { new File(""provider.txt"") }))println(""provider = ${provider.asText.get()}"")def fis = new FileInputStream(""fis.txt"")println(""fis = ${fis.text}"")fis.close()```executed with configuration cache enabled: `gradle --configuration-cache`### Expected BehaviorBoth file inputs are detected and the configuration cache report shows paths relative to the project directory: `provider.txt` and `fis.txt`.### Current BehaviorBoth file inputs are properly detected but the configuration cache report shows the weird (and wrong) path to the file opened with the FileInputStream:![image](https://user-images.githubusercontent.com/7620037/147364836-469dc2e4-3cd1-43ec-9635-c3232e0d8088.png)This problem only affects the report, changes to the file are correctly handled.### Your EnvironmentGradle 7.5 nightly (`7.5-20211223145946+0000`)<!--- A build scan https://scans.gradle.com/get-started is ideal -->Build scan URL: https://scans.gradle.com/s/hhdk6ppeghdye
"
19415,0,0,251,0,1,ghale,0,"title:Fix flakiness in destroyer command line ordering test description:There were two issues here:* In the multiple destroyers test, the mechanism we use for synching the tasks via `BlockingHttpServer` alsoreleases the project lock.  This allows the other task in the same project to sometimes jump in and runconcurrently while it is calling the http server to release the sync.  So although the task we expect to runfirst does run first, it can sometimes complete _after_ the second task, throwing off the expectations.  Theexpectations have been updated to account for this possibility.* In the destroyer-in-a-different-project test, the destroyer wasn't actually destroying the same directoryas the producer, which allowed them to sometimes run in parallel, throwing off the expectations.  Now thatthey destroy the same directory, the producer should always run after.
"
19408,0,0,218,0,0,ljacomet,0,"title:Take filename into account for caching artifact transform results description:When a transform produces identical results, it does not account for the produced filename.However this name is part of the `ComponentArtifactIdentifier` returned by the transform.This means that different execution timings can result in logically equivalent outputs but with different identity in `ComponentArtifactIdentifier`Gradle should consider the artifact filename either as an input always or perform a rename while unpacking the cache entry.Related Android issue: https://issuetracker.google.com/205968564Related Gradle issue: #17213
"
19383,0,0,273,0,0,bigdaz,0,"title:Changes to toolChain implementation are ignored description:When the `java.toolchain` specification is changed by adding/removing/changing the `implementation`, this change is ignored and the previously configured toolchain will be used.This problem is presumably because the download file name does not encode this information.Note that a similar issue occurs with Gradle 7.4 nightly, when changing the `vendor` from `ADOPTIUM` to `IBM_SEMERU`.### Expected BehaviorThe specified toolchain should be downloaded, provisioned and used.### Current BehaviorThe change to toolchain spec is ignored.### Steps to Reproduce 1. Checkout the `main` branch of https://github.com/bigdaz/gradle-toolchain-issues2. Run `./gradlew -g HOME build` : the build should fail as described in #19382 3. Change the `build.gradle` file to comment out the `implementation` set on the Java toolchain spec.4. Run `./gradlew -g HOME build` again : the same error will occur.5. `rm -rf HOME` to start with a clean Gradle User Home6. Run `./gradlew -g HOME build` again : this time the toolchain is successfully extracted.
"
19382,0,1027,273,0,0,bigdaz,0,"title:Error extracting downloaded toolchain for `JvmImplementation.J9` description:When choosing the ""Open J9"" Java Toolchain implementation [as described in the docs](https://docs.gradle.org/current/userguide/toolchains.html#selecting_toolchains_by_their_virtual_machine_implementation), there is an error extracting the the downloaded Toolchain distribution, resulting in a build failure.### Expected BehaviorThe J9 toolchain distribution should be successfully downloaded, provisioned and used.### Current BehaviorThe build fails with this error occurring when extracting the toolchain:```* What went wrong:Execution failed for task ':compileJava'.> Error while evaluating property 'javaCompiler' of task ':compileJava'   > Failed to calculate the value of task ':compileJava' property 'javaCompiler'.      > Unable to download toolchain matching these requirements: {languageVersion=11, vendor=ADOPTOPENJDK, implementation=J9}         > Could not copy tar entry /Users/daz/dev/playground/java-tool/HOME/jdks/adoptopenjdk-11-x64-mac.tar.gz!1413453464414134534642/./ to '/Users/daz/dev/playground/java-tool/HOME/.tmp/expandedArchives/adoptopenjdk-11-x64-mac.tar.gz_09fc3ceb3762da51449cb5292ffc4737/1413453464414134534642/.'.            > Failed to create parent directory '/Users/daz/dev/playground/java-tool/HOME/.tmp/expandedArchives/adoptopenjdk-11-x64-mac.tar.gz_09fc3ceb3762da51449cb5292ffc4737/1413453464414134534642' when creating directory '/Users/daz/dev/playground/java-tool/HOME/.tmp/expandedArchives/adoptopenjdk-11-x64-mac.tar.gz_09fc3ceb3762da51449cb5292ffc4737/1413453464414134534642/.'```### Steps to Reproduce 1. Checkout the `main` branch of https://github.com/bigdaz/gradle-toolchain-issues2. `./gradlew -g HOME build`Build scan URL: https://scans.gradle.com/s/ri37b7rtrdmf6/failure#1
"
19379,1,0,89,0,0,liutikas,0,"title:Jar docs list many @Internal properties description:### Expected BehaviorWhen you open documentation for Jar task it only show public API### Current BehaviorWhen you open documentation for Jar task you see @Internal APIFor example [archiveBaseName](https://docs.gradle.org/current/dsl/org.gradle.api.tasks.bundling.Jar.html#org.gradle.api.tasks.bundling.Jar:archiveBaseName) that is [marked as @Internal](https://cs.android.com/android-studio/gradle/+/master:subprojects/core/src/main/java/org/gradle/api/tasks/bundling/AbstractArchiveTask.java;l=271)### ContextIt makes it really unclear if these APIs are ok to be used.### Steps to Reproduce Simply open docs### Your EnvironmentN/A
"
19371,1,0,15,0,0,GianfrancoMS,0,"title:Weird memory issue after upgrading to Gradle 7.3.2 from Gradle 7.3.0 description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues--><!--- Provide a brief summary of the issue in the title above -->### Expected Behavior<!--- Tell us what should happen -->Compilation finishes without warning or errors.### Current Behavior<!--- Tell us what happens instead of the expected behavior -->The VM is generating a heap dump.### Context<!--- How has this issue affected you? What are you trying to accomplish? --><!--- Providing context helps us come up with a solution that is most useful in the real world -->We just updated to Gradle 7.3.2 from Gradle 7.3.0 and we are presenting weird memory issues. Our project is a big Android application with many modules and a lot of code; however, it has been working just fine until the update to Gradle 7.3.2.### Steps to Reproduce <!--- Provide a self-contained example project (as an attached archive or a Github project). --><!--- In the rare cases where this is infeasible, we will also accept a detailed set of instructions. -->Unfortunately, I can't share our Android repo because it is private; however, it's been working fine until we updated to Gradle 7.3.2. (We were in version 7.3.0)It is generating a heap dump even before executing our command (`./gradlew :app:bundleDebug`), so it's really weird. And we haven't changed our CI machines configuration for a while.[dump.txt](https://github.com/gradle/gradle/files/7748055/dump.txt)[daemon-182.out.log](https://github.com/gradle/gradle/files/7770591/daemon-182.out.log)### Your Environment<!--- Include as many relevant details about the environment you experienced the bug in --><!--- A build scan https://scans.gradle.com/get-started is ideal -->- Gradle 7.3.2- OpenJDK Runtime Environment (build 11.0.13+8-Ubuntu-0ubuntu1.18.04)OpenJDK 64-Bit Server VM (build 11.0.13+8-Ubuntu-0ubuntu1.18.04, mixed mode, sharing)javac 11.0.13- Jenkins 2.190.1- Build Cache Node 9.11
"
19368,0,1872,1,0,0,sdavids,0,"title:Dependency verification keys for SpotBugs artifact cannot be written description:The keys for the SpotBugs artifact cannot be written.### Expected BehaviorKeys being written.### Current Behavior`Invalid UTF-8 input` exception### Contexthttps://docs.gradle.org/current/userguide/dependency_verification.html#sec:local-keyring### Steps to Reproduce build.gradle.kts```kotlinrepositories.mavenCentral()plugins {    `java-library`    id(""com.github.spotbugs"").version(""5.0.3"")}```*Note*: This is a regression in Gradle 7.2.```shell$ ./gradlew wrapper --gradle-version=7.1.1$ ./gradlew --write-verification-metadata pgp,sha256 build --export-keysStarting a Gradle Daemon, 3 stopped Daemons could not be reused, use --status for detailsExported 15 keys to /Users/dev/tmp/gradle-bug/gradle/verification-keyring.gpgBUILD SUCCESSFUL in 2s$ ./gradlew wrapper --gradle-version=7.2$ ./gradlew --write-verification-metadata pgp,sha256 build --export-keysFAILURE: Build failed with an exception.* What went wrong:Invalid UTF-8 input```### Your Environment```------------------------------------------------------------Gradle 7.3.2------------------------------------------------------------Build time:   2021-12-15 11:22:31 UTCRevision:     26c186eb63b2b02e68d83b0dbc6ec69ab118653aKotlin:       1.5.31Groovy:       3.0.9Ant:          Apache Ant(TM) version 1.10.11 compiled on July 10 2021JVM:          17.0.1 (BellSoft 17.0.1+12-LTS)OS:           Mac OS X 12.1 aarch64``````$ uname -aDarwin dawnfly-mini.local 21.2.0 Darwin Kernel Version 21.2.0: Sun Nov 28 20:29:10 PST 2021; root:xnu-8019.61.5~1/RELEASE_ARM64_T8101 arm64$ uname -parm$ gpg --versiongpg (GnuPG/MacGPG2) 2.2.32libgcrypt 1.8.8Copyright (C) 2021 Free Software Foundation, Inc.License GNU GPL-3.0-or-later <https://gnu.org/licenses/gpl.html>This is free software: you are free to change and redistribute it.There is NO WARRANTY, to the extent permitted by law.Home: /Users/dev/.gnupgSupported algorithms:Pubkey: RSA, ELG, DSA, ECDH, ECDSA, EDDSACipher: IDEA, 3DES, CAST5, BLOWFISH, AES, AES192, AES256, TWOFISH,        CAMELLIA128, CAMELLIA192, CAMELLIA256Hash: SHA1, RIPEMD160, SHA256, SHA384, SHA512, SHA224Compression: Uncompressed, ZIP, ZLIB, BZIP2```Build scan URL: https://scans.gradle.com/s/enil4hzdxkwkk
"
19353,0,0,0,0,0,blindpirate,0,"title:Java compiler constant analysis seems to be broken on 8u301 description:After upgrading JDK from 8u291 to 8u301, some tests start failing: https://ge.gradle.org/s/upnw3rem6jm4i/tests/overviewThere might be some internal change in JDK compiler.Steps to reproduce:- Install JDK 8u301.- `./gradlew -PtestJavaVersion=8 -PtestJavaVendor=oracle :language-java:eIT --tests CrossTaskConstantChangesIncrementalJavaCompilationUsingJarIntegrationTest`
"
19352,0,1171,133,0,1,codecholeric,0,"title:Gradle JUnit Platform support doesn't support non-standard test descriptors with filter patterns description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues--><!--- Provide a brief summary of the issue in the title above -->When Gradle's JUnit Platform support is configured to exclude some test pattern, then all non-standard test descriptors will be ignored, even if they have no relation to the filter.Take for example```test {  useJUnitPlatform()  filter {    excludeTestsMatching ""*IT""  }}```and the [ArchUnit test engine](https://www.archunit.org/userguide/html/000_Index.html#_junit_5). Furthermore, take a test ```@AnalyzeClasses(packages = ""example"")public class SomeArchTest {    @ArchTest    public static final ArchRule example = classes().should().bePublic();}```### Expected Behavior<!--- Tell us what should happen -->The specified filter pattern should not exclude the rule `example` from being run, since it's neither in a class ending with `IT` nor a test name ending with `IT`.### Current Behavior<!--- Tell us what happens instead of the expected behavior -->The rule `example` is skipped.### Context<!--- How has this issue affected you? What are you trying to accomplish? --><!--- Providing context helps us come up with a solution that is most useful in the real world -->I'm trying to solve the following issue on the ArchUnit issue tracker: https://github.com/TNG/ArchUnit/issues/743### Steps to Reproduce <!--- Provide a self-contained example project (as an attached archive or a Github project). --><!--- In the rare cases where this is infeasible, we will also accept a detailed set of instructions. -->I pushed the example here: https://github.com/codecholeric/issue-743The project shows the described setup, i.e. activates JUnit Platform support, a filter for tests and one JUnit Jupiter and one JUnit ArchUnit test, of which only the Jupiter test is run when the pattern is active.### Your Environment<!--- Include as many relevant details about the environment you experienced the bug in --><!--- A build scan https://scans.gradle.com/get-started is ideal -->Build scan URL: https://gradle.com/s/a2b2afnrgtojy### Responsible Gradle CodeWithin `org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.ClassMethodNameFilter` I can see the following code:```private boolean shouldRun(TestDescriptor descriptor) {    Optional<TestSource> source = descriptor.getSource();    if (!source.isPresent()) {        return true;    }    if (source.get() instanceof MethodSource) {        MethodSource methodSource = (MethodSource) source.get();        return matcher.matchesTest(methodSource.getClassName(), methodSource.getMethodName());    } else if (source.get() instanceof ClassSource) {        for (TestDescriptor child : descriptor.getChildren()) {            if (shouldRun(child)) {                return true;            }        }        if (descriptor.getChildren().isEmpty()) {            String className = ((ClassSource) source.get()).getClassName();            return matcher.matchesTest(className, null)                    || matcher.matchesTest(className, descriptor.getLegacyReportingName());        }    }    return false;}```ArchUnit however uses a custom `TestSource` for the arch rule `@ArchTest example`, namely a [`FieldSource`](https://github.com/TNG/ArchUnit/blob/main/archunit-junit/junit5/engine-api/src/main/java/com/tngtech/archunit/junit/FieldSource.java). Unfortunately, the fallback behavior will decide to exclude this ""unknown"" type of source, even though it's not matched by the pattern.I can try to provide some PR to fix this if you want, but I want to discuss first what the desired behavior is here. And what the reasoning behind the current implementation is. Spontaneously I could for example imagine to examine the sections of the test descriptor as fallback, and apply the pattern to each section? Or at least let tests run if their source is unknown instead of just skipping them? That would at least be consistent with the behavior when there is no source present... :thinking: However, applying the pattern to the test descriptor would have the advantage that the DSL would work for descriptors like ArchUnit's rule fields as well, instead of just silently ignoring those tests when applying the pattern. 
"
19347,1,28000,59,0,0,XhstormR,0,"title:VERSION_CATALOGS feature cannot be used in subprojects code block description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues--><!--- Provide a brief summary of the issue in the title above -->### Expected Behavior<!--- Tell us what should happen -->Can successfully build### Current Behavior<!--- Tell us what happens instead of the expected behavior -->An exception occurred:```Extension with name 'libs' does not exist. Currently registered extension names: [ext, ktlint, base, defaultArtifacts, sourceSets, reporting, java, javaToolchains, testing, dependencyManagement]* Try:> Run with --info or --debug option to get more log output.> Run with --scan to get full insights.* Exception is:org.gradle.api.UnknownDomainObjectException: Extension with name 'libs' does not exist. Currently registered extension names: [ext, ktlint, base, defaultArtifacts, sourceSets, reporting, java, javaToolchains, testing, dependencyManagement]	at org.gradle.internal.extensibility.ExtensionsStorage.unknownExtensionException(ExtensionsStorage.java:144)	at org.gradle.internal.extensibility.ExtensionsStorage.getByName(ExtensionsStorage.java:123)	at org.gradle.internal.extensibility.DefaultConvention.getByName(DefaultConvention.java:174)	at org.gradle.kotlin.dsl.accessors.runtime.RuntimeKt.extensionOf(Runtime.kt:33)	at Build_gradle$6$2.invoke(build.gradle.kts:163)	at Build_gradle$6$2.invoke(build.gradle.kts:1)	at org.gradle.kotlin.dsl.ProjectExtensionsKt.dependencies(ProjectExtensions.kt:178)	at Build_gradle$6.execute(build.gradle.kts:157)	at Build_gradle$6.execute(build.gradle.kts:1)	at org.gradle.api.internal.DefaultMutationGuard$2.execute(DefaultMutationGuard.java:44)	at org.gradle.internal.Actions.with(Actions.java:249)	at org.gradle.api.internal.project.BuildOperationCrossProjectConfigurator$1.run(BuildOperationCrossProjectConfigurator.java:69)	at org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:29)	at org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:26)	at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)	at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)	at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)	at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)	at org.gradle.internal.operations.DefaultBuildOperationRunner.run(DefaultBuildOperationRunner.java:47)	at org.gradle.internal.operations.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:68)	at org.gradle.api.internal.project.BuildOperationCrossProjectConfigurator.lambda$runProjectConfigureAction$0(BuildOperationCrossProjectConfigurator.java:66)	at org.gradle.api.internal.project.BuildOperationCrossProjectConfigurator$$Lambda$1211/0x00000000c1e46f70.accept(Unknown Source)	at org.gradle.api.internal.project.DefaultProjectStateRegistry$ProjectStateImpl.lambda$applyToMutableState$0(DefaultProjectStateRegistry.java:366)	at org.gradle.api.internal.project.DefaultProjectStateRegistry$ProjectStateImpl$$Lambda$755/0x00000000c0c57c80.apply(Unknown Source)	at org.gradle.api.internal.project.DefaultProjectStateRegistry$ProjectStateImpl.lambda$withProjectLock$3(DefaultProjectStateRegistry.java:426)	at org.gradle.api.internal.project.DefaultProjectStateRegistry$ProjectStateImpl$$Lambda$756/0x00000000c0c57f40.create(Unknown Source)	at org.gradle.internal.work.DefaultWorkerLeaseService.withLocks(DefaultWorkerLeaseService.java:211)	at org.gradle.api.internal.project.DefaultProjectStateRegistry$ProjectStateImpl.withProjectLock(DefaultProjectStateRegistry.java:426)	at org.gradle.api.internal.project.DefaultProjectStateRegistry$ProjectStateImpl.lambda$fromMutableState$2(DefaultProjectStateRegistry.java:404)	at org.gradle.api.internal.project.DefaultProjectStateRegistry$ProjectStateImpl$$Lambda$1533/0x00000000c45625c8.create(Unknown Source)	at org.gradle.internal.work.DefaultWorkerLeaseService.withoutLocks(DefaultWorkerLeaseService.java:282)	at org.gradle.api.internal.project.DefaultProjectStateRegistry$ProjectStateImpl.fromMutableState(DefaultProjectStateRegistry.java:404)	at org.gradle.api.internal.project.DefaultProjectStateRegistry$ProjectStateImpl.applyToMutableState(DefaultProjectStateRegistry.java:365)	at org.gradle.api.internal.project.BuildOperationCrossProjectConfigurator.runProjectConfigureAction(BuildOperationCrossProjectConfigurator.java:66)	at org.gradle.api.internal.project.BuildOperationCrossProjectConfigurator.access$100(BuildOperationCrossProjectConfigurator.java:32)	at org.gradle.api.internal.project.BuildOperationCrossProjectConfigurator$BlockConfigureBuildOperation.run(BuildOperationCrossProjectConfigurator.java:111)	at org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:29)	at org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:26)	at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)	at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)	at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)	at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)	at org.gradle.internal.operations.DefaultBuildOperationRunner.run(DefaultBuildOperationRunner.java:47)	at org.gradle.internal.operations.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:68)	at org.gradle.api.internal.project.BuildOperationCrossProjectConfigurator.runBlockConfigureAction(BuildOperationCrossProjectConfigurator.java:62)	at org.gradle.api.internal.project.BuildOperationCrossProjectConfigurator.subprojects(BuildOperationCrossProjectConfigurator.java:48)	at org.gradle.api.internal.project.DefaultProject.subprojects(DefaultProject.java:717)	at org.gradle.api.internal.project.DefaultProject.subprojects(DefaultProject.java:712)	at Build_gradle.<init>(build.gradle.kts:149)	at Program.execute(Unknown Source)	at org.gradle.kotlin.dsl.execution.Interpreter$ProgramHost.eval(Interpreter.kt:531)	at org.gradle.kotlin.dsl.execution.Interpreter$ProgramHost.evaluateSecondStageOf(Interpreter.kt:455)	at Program.execute(Unknown Source)	at org.gradle.kotlin.dsl.execution.Interpreter$ProgramHost.eval(Interpreter.kt:531)	at org.gradle.kotlin.dsl.execution.Interpreter.eval(Interpreter.kt:204)	at org.gradle.kotlin.dsl.provider.StandardKotlinScriptEvaluator.evaluate(KotlinScriptEvaluator.kt:114)	at org.gradle.kotlin.dsl.provider.KotlinScriptPluginFactory$create$1.invoke(KotlinScriptPluginFactory.kt:51)	at org.gradle.kotlin.dsl.provider.KotlinScriptPluginFactory$create$1.invoke(KotlinScriptPluginFactory.kt:36)	at org.gradle.kotlin.dsl.provider.KotlinScriptPlugin.apply(KotlinScriptPlugin.kt:34)	at org.gradle.configuration.BuildOperationScriptPlugin$1.run(BuildOperationScriptPlugin.java:65)	at org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:29)	at org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:26)	at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)	at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)	at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)	at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)	at org.gradle.internal.operations.DefaultBuildOperationRunner.run(DefaultBuildOperationRunner.java:47)	at org.gradle.internal.operations.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:68)	at org.gradle.configuration.BuildOperationScriptPlugin.lambda$apply$0(BuildOperationScriptPlugin.java:62)	at org.gradle.configuration.BuildOperationScriptPlugin$$Lambda$257/0x00000000bf6f1130.execute(Unknown Source)	at org.gradle.configuration.internal.DefaultUserCodeApplicationContext.apply(DefaultUserCodeApplicationContext.java:44)	at org.gradle.configuration.BuildOperationScriptPlugin.apply(BuildOperationScriptPlugin.java:62)	at org.gradle.configuration.project.BuildScriptProcessor$$Lambda$839/0x00000000c0d95a30.accept(Unknown Source)	at org.gradle.api.internal.project.DefaultProjectStateRegistry$ProjectStateImpl.lambda$applyToMutableState$0(DefaultProjectStateRegistry.java:366)	at org.gradle.api.internal.project.DefaultProjectStateRegistry$ProjectStateImpl$$Lambda$755/0x00000000c0c57c80.apply(Unknown Source)	at org.gradle.api.internal.project.DefaultProjectStateRegistry$ProjectStateImpl.fromMutableState(DefaultProjectStateRegistry.java:393)	at org.gradle.api.internal.project.DefaultProjectStateRegistry$ProjectStateImpl.applyToMutableState(DefaultProjectStateRegistry.java:365)	at org.gradle.configuration.project.BuildScriptProcessor.execute(BuildScriptProcessor.java:42)	at org.gradle.configuration.project.BuildScriptProcessor.execute(BuildScriptProcessor.java:26)	at org.gradle.configuration.project.ConfigureActionsProjectEvaluator.evaluate(ConfigureActionsProjectEvaluator.java:35)	at org.gradle.configuration.project.LifecycleProjectEvaluator$EvaluateProject.lambda$run$0(LifecycleProjectEvaluator.java:100)	at org.gradle.configuration.project.LifecycleProjectEvaluator$EvaluateProject$$Lambda$833/0x00000000c0d8f268.accept(Unknown Source)	at org.gradle.api.internal.project.DefaultProjectStateRegistry$ProjectStateImpl.lambda$applyToMutableState$0(DefaultProjectStateRegistry.java:366)	at org.gradle.api.internal.project.DefaultProjectStateRegistry$ProjectStateImpl$$Lambda$755/0x00000000c0c57c80.apply(Unknown Source)	at org.gradle.api.internal.project.DefaultProjectStateRegistry$ProjectStateImpl.lambda$withProjectLock$3(DefaultProjectStateRegistry.java:426)	at org.gradle.api.internal.project.DefaultProjectStateRegistry$ProjectStateImpl$$Lambda$756/0x00000000c0c57f40.create(Unknown Source)	at org.gradle.internal.work.DefaultWorkerLeaseService.withLocks(DefaultWorkerLeaseService.java:211)	at org.gradle.api.internal.project.DefaultProjectStateRegistry$ProjectStateImpl.withProjectLock(DefaultProjectStateRegistry.java:426)	at org.gradle.api.internal.project.DefaultProjectStateRegistry$ProjectStateImpl.fromMutableState(DefaultProjectStateRegistry.java:407)	at org.gradle.api.internal.project.DefaultProjectStateRegistry$ProjectStateImpl.applyToMutableState(DefaultProjectStateRegistry.java:365)	at org.gradle.configuration.project.LifecycleProjectEvaluator$EvaluateProject.run(LifecycleProjectEvaluator.java:91)	at org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:29)	at org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:26)	at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)	at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)	at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)	at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)	at org.gradle.internal.operations.DefaultBuildOperationRunner.run(DefaultBuildOperationRunner.java:47)	at org.gradle.internal.operations.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:68)	at org.gradle.configuration.project.LifecycleProjectEvaluator.evaluate(LifecycleProjectEvaluator.java:63)	at org.gradle.api.internal.project.DefaultProject.evaluate(DefaultProject.java:751)	at org.gradle.api.internal.project.DefaultProject.evaluate(DefaultProject.java:151)	at org.gradle.api.internal.project.DefaultProjectStateRegistry$ProjectStateImpl.ensureConfigured(DefaultProjectStateRegistry.java:339)	at org.gradle.execution.TaskPathProjectEvaluator.configure(TaskPathProjectEvaluator.java:41)	at org.gradle.execution.TaskPathProjectEvaluator.configureHierarchy(TaskPathProjectEvaluator.java:57)	at org.gradle.configuration.DefaultProjectsPreparer.prepareProjects(DefaultProjectsPreparer.java:48)	at org.gradle.configuration.BuildTreePreparingProjectsPreparer.prepareProjects(BuildTreePreparingProjectsPreparer.java:64)	at org.gradle.configuration.BuildOperationFiringProjectsPreparer$ConfigureBuild.run(BuildOperationFiringProjectsPreparer.java:52)	at org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:29)	at org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:26)	at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)	at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)	at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)	at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)	at org.gradle.internal.operations.DefaultBuildOperationRunner.run(DefaultBuildOperationRunner.java:47)	at org.gradle.internal.operations.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:68)	at org.gradle.configuration.BuildOperationFiringProjectsPreparer.prepareProjects(BuildOperationFiringProjectsPreparer.java:40)	at org.gradle.initialization.VintageBuildModelController.lambda$prepareProjects$1(VintageBuildModelController.java:93)	at org.gradle.initialization.VintageBuildModelController$$Lambda$484/0x00000000c02bb160.run(Unknown Source)	at org.gradle.internal.build.StateTransitionController.lambda$doTransition$1(StateTransitionController.java:222)	at org.gradle.internal.build.StateTransitionController$$Lambda$195/0x00000000bf330608.get(Unknown Source)	at org.gradle.internal.build.StateTransitionController.doTransition(StateTransitionController.java:243)	at org.gradle.internal.build.StateTransitionController.doTransition(StateTransitionController.java:221)	at org.gradle.internal.build.StateTransitionController.transitionIfNotPreviously(StateTransitionController.java:190)	at org.gradle.initialization.VintageBuildModelController.prepareProjects(VintageBuildModelController.java:93)	at org.gradle.initialization.VintageBuildModelController.doBuildStages(VintageBuildModelController.java:77)	at org.gradle.initialization.VintageBuildModelController.getConfiguredModel(VintageBuildModelController.java:58)	at org.gradle.internal.build.DefaultBuildLifecycleController$$Lambda$2248/0x00000000aaf3c0e8.get(Unknown Source)	at org.gradle.internal.build.StateTransitionController.notInStateIgnoreOtherThreads(StateTransitionController.java:89)	at org.gradle.internal.build.DefaultBuildLifecycleController.getConfiguredBuild(DefaultBuildLifecycleController.java:98)	at org.gradle.internal.build.AbstractBuildState.ensureProjectsConfigured(AbstractBuildState.java:65)	at org.gradle.internal.buildtree.DefaultBuildTreeModelCreator$DefaultBuildToolingModelController.locateBuilderForTarget(DefaultBuildTreeModelCreator.java:90)	at org.gradle.internal.buildtree.DefaultBuildTreeModelCreator$DefaultBuildToolingModelController.locateBuilderForDefaultTarget(DefaultBuildTreeModelCreator.java:82)	at org.gradle.tooling.internal.provider.runner.DefaultBuildController$DefaultTargetModel.locate(DefaultBuildController.java:239)	at org.gradle.tooling.internal.provider.runner.DefaultBuildController.getToolingModelBuilder(DefaultBuildController.java:184)	at org.gradle.tooling.internal.provider.runner.DefaultBuildController.getModel(DefaultBuildController.java:98)	at org.gradle.tooling.internal.consumer.connection.ParameterAwareBuildControllerAdapter.getModel(ParameterAwareBuildControllerAdapter.java:39)	at org.gradle.tooling.internal.consumer.connection.UnparameterizedBuildController.getModel(UnparameterizedBuildController.java:113)	at org.gradle.tooling.internal.consumer.connection.NestedActionAwareBuildControllerAdapter.getModel(NestedActionAwareBuildControllerAdapter.java:31)	at org.gradle.tooling.internal.consumer.connection.UnparameterizedBuildController.findModel(UnparameterizedBuildController.java:97)	at org.gradle.tooling.internal.consumer.connection.NestedActionAwareBuildControllerAdapter.findModel(NestedActionAwareBuildControllerAdapter.java:31)	at org.gradle.tooling.internal.consumer.connection.UnparameterizedBuildController.findModel(UnparameterizedBuildController.java:81)	at org.gradle.tooling.internal.consumer.connection.NestedActionAwareBuildControllerAdapter.findModel(NestedActionAwareBuildControllerAdapter.java:31)	at org.gradle.tooling.internal.consumer.connection.UnparameterizedBuildController.findModel(UnparameterizedBuildController.java:66)	at org.gradle.tooling.internal.consumer.connection.NestedActionAwareBuildControllerAdapter.findModel(NestedActionAwareBuildControllerAdapter.java:31)	at org.jetbrains.plugins.gradle.model.ProjectImportAction.execute(ProjectImportAction.java:116)	at org.jetbrains.plugins.gradle.model.ProjectImportAction.execute(ProjectImportAction.java:42)	at org.gradle.tooling.internal.consumer.connection.InternalBuildActionAdapter.execute(InternalBuildActionAdapter.java:64)	at org.gradle.tooling.internal.provider.runner.AbstractClientProvidedBuildActionRunner$ActionAdapter.runAction(AbstractClientProvidedBuildActionRunner.java:131)	at org.gradle.tooling.internal.provider.runner.AbstractClientProvidedBuildActionRunner$ActionAdapter.beforeTasks(AbstractClientProvidedBuildActionRunner.java:99)	at org.gradle.internal.buildtree.DefaultBuildTreeModelCreator.beforeTasks(DefaultBuildTreeModelCreator.java:57)	at org.gradle.internal.buildtree.DefaultBuildTreeLifecycleController.lambda$fromBuildModel$1(DefaultBuildTreeLifecycleController.java:72)	at org.gradle.internal.buildtree.DefaultBuildTreeLifecycleController$$Lambda$2240/0x00000000ab558880.get(Unknown Source)	at org.gradle.internal.buildtree.DefaultBuildTreeLifecycleController.lambda$runBuild$4(DefaultBuildTreeLifecycleController.java:103)	at org.gradle.internal.buildtree.DefaultBuildTreeLifecycleController$$Lambda$191/0x00000000bf32ff10.get(Unknown Source)	at org.gradle.internal.build.StateTransitionController.lambda$transition$0(StateTransitionController.java:145)	at org.gradle.internal.build.StateTransitionController$$Lambda$192/0x00000000bf351d00.get(Unknown Source)	at org.gradle.internal.build.StateTransitionController.doTransition(StateTransitionController.java:243)	at org.gradle.internal.build.StateTransitionController.transition(StateTransitionController.java:145)	at org.gradle.internal.buildtree.DefaultBuildTreeLifecycleController.runBuild(DefaultBuildTreeLifecycleController.java:100)	at org.gradle.internal.buildtree.DefaultBuildTreeLifecycleController.fromBuildModel(DefaultBuildTreeLifecycleController.java:71)	at org.gradle.tooling.internal.provider.runner.AbstractClientProvidedBuildActionRunner.runClientAction(AbstractClientProvidedBuildActionRunner.java:43)	at org.gradle.tooling.internal.provider.runner.ClientProvidedPhasedActionRunner.run(ClientProvidedPhasedActionRunner.java:53)	at org.gradle.launcher.exec.ChainingBuildActionRunner.run(ChainingBuildActionRunner.java:35)	at org.gradle.internal.buildtree.ProblemReportingBuildActionRunner.run(ProblemReportingBuildActionRunner.java:49)	at org.gradle.launcher.exec.BuildOutcomeReportingBuildActionRunner.run(BuildOutcomeReportingBuildActionRunner.java:69)	at org.gradle.tooling.internal.provider.FileSystemWatchingBuildActionRunner.run(FileSystemWatchingBuildActionRunner.java:114)	at org.gradle.launcher.exec.BuildCompletionNotifyingBuildActionRunner.run(BuildCompletionNotifyingBuildActionRunner.java:41)	at org.gradle.launcher.exec.RootBuildLifecycleBuildActionExecutor.lambda$execute$0(RootBuildLifecycleBuildActionExecutor.java:40)	at org.gradle.launcher.exec.RootBuildLifecycleBuildActionExecutor$$Lambda$150/0x00000000bf338480.apply(Unknown Source)	at org.gradle.composite.internal.DefaultRootBuildState.run(DefaultRootBuildState.java:155)	at org.gradle.launcher.exec.RootBuildLifecycleBuildActionExecutor.execute(RootBuildLifecycleBuildActionExecutor.java:40)	at org.gradle.internal.buildtree.DefaultBuildTreeContext.execute(DefaultBuildTreeContext.java:40)	at org.gradle.launcher.exec.BuildTreeLifecycleBuildActionExecutor.lambda$execute$0(BuildTreeLifecycleBuildActionExecutor.java:65)	at org.gradle.launcher.exec.BuildTreeLifecycleBuildActionExecutor$$Lambda$99/0x00000000bea9f560.apply(Unknown Source)	at org.gradle.internal.buildtree.BuildTreeState.run(BuildTreeState.java:53)	at org.gradle.launcher.exec.BuildTreeLifecycleBuildActionExecutor.execute(BuildTreeLifecycleBuildActionExecutor.java:65)	at org.gradle.launcher.exec.RunAsBuildOperationBuildActionExecutor$3.call(RunAsBuildOperationBuildActionExecutor.java:61)	at org.gradle.launcher.exec.RunAsBuildOperationBuildActionExecutor$3.call(RunAsBuildOperationBuildActionExecutor.java:57)	at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)	at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)	at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)	at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)	at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)	at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)	at org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)	at org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)	at org.gradle.launcher.exec.RunAsBuildOperationBuildActionExecutor.execute(RunAsBuildOperationBuildActionExecutor.java:57)	at org.gradle.launcher.exec.RunAsWorkerThreadBuildActionExecutor.lambda$execute$0(RunAsWorkerThreadBuildActionExecutor.java:38)	at org.gradle.launcher.exec.RunAsWorkerThreadBuildActionExecutor$$Lambda$98/0x00000000bea85830.create(Unknown Source)	at org.gradle.internal.work.DefaultWorkerLeaseService.withLocks(DefaultWorkerLeaseService.java:211)	at org.gradle.launcher.exec.RunAsWorkerThreadBuildActionExecutor.execute(RunAsWorkerThreadBuildActionExecutor.java:38)	at org.gradle.tooling.internal.provider.ContinuousBuildActionExecutor.execute(ContinuousBuildActionExecutor.java:103)	at org.gradle.tooling.internal.provider.SubscribableBuildActionExecutor.execute(SubscribableBuildActionExecutor.java:64)	at org.gradle.internal.session.DefaultBuildSessionContext.execute(DefaultBuildSessionContext.java:46)	at org.gradle.tooling.internal.provider.BuildSessionLifecycleBuildActionExecuter$ActionImpl.apply(BuildSessionLifecycleBuildActionExecuter.java:100)	at org.gradle.tooling.internal.provider.BuildSessionLifecycleBuildActionExecuter$ActionImpl.apply(BuildSessionLifecycleBuildActionExecuter.java:88)	at org.gradle.internal.session.BuildSessionState.run(BuildSessionState.java:69)	at org.gradle.tooling.internal.provider.BuildSessionLifecycleBuildActionExecuter.execute(BuildSessionLifecycleBuildActionExecuter.java:62)	at org.gradle.tooling.internal.provider.BuildSessionLifecycleBuildActionExecuter.execute(BuildSessionLifecycleBuildActionExecuter.java:41)	at org.gradle.tooling.internal.provider.GradleThreadBuildActionExecuter.execute(GradleThreadBuildActionExecuter.java:36)	at org.gradle.tooling.internal.provider.GradleThreadBuildActionExecuter.execute(GradleThreadBuildActionExecuter.java:25)	at org.gradle.tooling.internal.provider.StartParamsValidatingActionExecuter.execute(StartParamsValidatingActionExecuter.java:63)	at org.gradle.tooling.internal.provider.StartParamsValidatingActionExecuter.execute(StartParamsValidatingActionExecuter.java:31)	at org.gradle.tooling.internal.provider.SessionFailureReportingActionExecuter.execute(SessionFailureReportingActionExecuter.java:58)	at org.gradle.tooling.internal.provider.SessionFailureReportingActionExecuter.execute(SessionFailureReportingActionExecuter.java:42)	at org.gradle.tooling.internal.provider.SetupLoggingActionExecuter.execute(SetupLoggingActionExecuter.java:47)	at org.gradle.tooling.internal.provider.SetupLoggingActionExecuter.execute(SetupLoggingActionExecuter.java:31)	at org.gradle.launcher.daemon.server.exec.ExecuteBuild.doBuild(ExecuteBuild.java:65)	at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:37)	at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)	at org.gradle.launcher.daemon.server.exec.WatchForDisconnection.execute(WatchForDisconnection.java:39)	at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)	at org.gradle.launcher.daemon.server.exec.ResetDeprecationLogger.execute(ResetDeprecationLogger.java:29)	at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)	at org.gradle.launcher.daemon.server.exec.RequestStopIfSingleUsedDaemon.execute(RequestStopIfSingleUsedDaemon.java:35)	at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)	at org.gradle.launcher.daemon.server.exec.ForwardClientInput$2.create(ForwardClientInput.java:78)	at org.gradle.launcher.daemon.server.exec.ForwardClientInput$2.create(ForwardClientInput.java:75)	at org.gradle.util.internal.Swapper.swap(Swapper.java:38)	at org.gradle.launcher.daemon.server.exec.ForwardClientInput.execute(ForwardClientInput.java:75)	at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)	at org.gradle.launcher.daemon.server.exec.LogAndCheckHealth.execute(LogAndCheckHealth.java:55)	at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)	at org.gradle.launcher.daemon.server.exec.LogToClient.doBuild(LogToClient.java:63)	at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:37)	at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)	at org.gradle.launcher.daemon.server.exec.EstablishBuildEnvironment.doBuild(EstablishBuildEnvironment.java:84)	at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:37)	at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)	at org.gradle.launcher.daemon.server.exec.StartBuildOrRespondWithBusy$1.run(StartBuildOrRespondWithBusy.java:52)	at org.gradle.launcher.daemon.server.DaemonStateCoordinator$1.run(DaemonStateCoordinator.java:297)	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:61)```### Context<!--- How has this issue affected you? What are you trying to accomplish? --><!--- Providing context helps us come up with a solution that is most useful in the real world -->### Steps to Reproduce <!--- Provide a self-contained example project (as an attached archive or a Github project). --><!--- In the rare cases where this is infeasible, we will also accept a detailed set of instructions. -->settings.gradle.kts:```enableFeaturePreview(""VERSION_CATALOGS"")```build.gradle.kts:```subprojects {    apply {        plugin(""org.gradle.java-library"")        plugin(""io.spring.dependency-management"")    }    dependencies {        kapt(variantOf(libs.querydsl.apt) { classifier(""jpa"") })        kapt(libs.bundles.spring.boot.kapt)        runtimeOnly(libs.bundles.spring.boot.runtimeOnly)        implementation(libs.bundles.spring.boot.implementation)        developmentOnly(libs.spring.boot.devtools)    }}```### Your Environment<!--- Include as many relevant details about the environment you experienced the bug in --><!--- A build scan https://scans.gradle.com/get-started is ideal -->Gradle 7.3
"
19343,1,19321,59,0,0,XhstormR,0,"title:Gradle's VERSION_CATALOGS feature does not support maven classifier description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues--><!--- Provide a brief summary of the issue in the title above -->### Expected Behavior<!--- Tell us what should happen -->Can successfully build### Current Behavior<!--- Tell us what happens instead of the expected behavior -->An exception occurred:```org.gradle.api.InvalidUserDataException: Invalid TOML catalog definition:  - Problem: In version catalog libs, on alias 'querydsl-apt' notation 'com.querydsl:querydsl-apt:+:jpa' is not a valid dependency notation.* Try:> Run with --info or --debug option to get more log output.> Run with --scan to get full insights.* Exception is:java.lang.RuntimeException: org.gradle.api.InvalidUserDataException: Invalid TOML catalog definition:  - Problem: In version catalog libs, on alias 'querydsl-apt' notation 'com.querydsl:querydsl-apt:+:jpa' is not a valid dependency notation.        Reason: When using a string to declare library coordinates, you must use a valid dependency notation.        Possible solution: Make sure that the coordinates consist of 3 parts separated by colons, eg: my.group:artifact:1.2.        Please refer to https://docs.gradle.org/7.3/userguide/version_catalog_problems.html#invalid_dependency_notation for more details about this problem.	at org.gradle.api.internal.catalog.DefaultDependenciesAccessors.generateAccessors(DefaultDependenciesAccessors.java:140)	at org.gradle.configuration.BuildTreePreparingProjectsPreparer.generateDependenciesAccessorsAndAssignPluginVersions(BuildTreePreparingProjectsPreparer.java:87)	at org.gradle.configuration.BuildTreePreparingProjectsPreparer.prepareProjects(BuildTreePreparingProjectsPreparer.java:54)	at org.gradle.configuration.BuildOperationFiringProjectsPreparer$ConfigureBuild.run(BuildOperationFiringProjectsPreparer.java:52)	at org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:29)	at org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:26)	at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)	at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)	at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)	at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)	at org.gradle.internal.operations.DefaultBuildOperationRunner.run(DefaultBuildOperationRunner.java:47)	at org.gradle.internal.operations.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:68)	at org.gradle.configuration.BuildOperationFiringProjectsPreparer.prepareProjects(BuildOperationFiringProjectsPreparer.java:40)	at org.gradle.initialization.VintageBuildModelController.lambda$prepareProjects$1(VintageBuildModelController.java:93)	at org.gradle.initialization.VintageBuildModelController$$Lambda$484/0x00000000e72d0160.run(Unknown Source)	at org.gradle.internal.build.StateTransitionController.lambda$doTransition$1(StateTransitionController.java:222)	at org.gradle.internal.build.StateTransitionController$$Lambda$195/0x00000000e62afc70.get(Unknown Source)	at org.gradle.internal.build.StateTransitionController.doTransition(StateTransitionController.java:243)	at org.gradle.internal.build.StateTransitionController.doTransition(StateTransitionController.java:221)	at org.gradle.internal.build.StateTransitionController.transitionIfNotPreviously(StateTransitionController.java:190)	at org.gradle.initialization.VintageBuildModelController.prepareProjects(VintageBuildModelController.java:93)	at org.gradle.initialization.VintageBuildModelController.doBuildStages(VintageBuildModelController.java:77)	at org.gradle.initialization.VintageBuildModelController.getConfiguredModel(VintageBuildModelController.java:58)	at org.gradle.internal.build.DefaultBuildLifecycleController$$Lambda$1810/0x00000000ce99fff8.get(Unknown Source)	at org.gradle.internal.build.StateTransitionController.notInStateIgnoreOtherThreads(StateTransitionController.java:89)	at org.gradle.internal.build.DefaultBuildLifecycleController.getConfiguredBuild(DefaultBuildLifecycleController.java:98)	at org.gradle.internal.build.AbstractBuildState.ensureProjectsConfigured(AbstractBuildState.java:65)	at org.gradle.internal.buildtree.DefaultBuildTreeModelCreator$DefaultBuildToolingModelController.locateBuilderForTarget(DefaultBuildTreeModelCreator.java:90)	at org.gradle.internal.buildtree.DefaultBuildTreeModelCreator$DefaultBuildToolingModelController.locateBuilderForDefaultTarget(DefaultBuildTreeModelCreator.java:82)	at org.gradle.tooling.internal.provider.runner.DefaultBuildController$DefaultTargetModel.locate(DefaultBuildController.java:239)	at org.gradle.tooling.internal.provider.runner.DefaultBuildController.getToolingModelBuilder(DefaultBuildController.java:184)	at org.gradle.tooling.internal.provider.runner.DefaultBuildController.getModel(DefaultBuildController.java:98)	at org.gradle.tooling.internal.consumer.connection.ParameterAwareBuildControllerAdapter.getModel(ParameterAwareBuildControllerAdapter.java:39)	at org.gradle.tooling.internal.consumer.connection.UnparameterizedBuildController.getModel(UnparameterizedBuildController.java:113)	at org.gradle.tooling.internal.consumer.connection.NestedActionAwareBuildControllerAdapter.getModel(NestedActionAwareBuildControllerAdapter.java:31)	at org.gradle.tooling.internal.consumer.connection.UnparameterizedBuildController.findModel(UnparameterizedBuildController.java:97)	at org.gradle.tooling.internal.consumer.connection.NestedActionAwareBuildControllerAdapter.findModel(NestedActionAwareBuildControllerAdapter.java:31)	at org.gradle.tooling.internal.consumer.connection.UnparameterizedBuildController.findModel(UnparameterizedBuildController.java:81)	at org.gradle.tooling.internal.consumer.connection.NestedActionAwareBuildControllerAdapter.findModel(NestedActionAwareBuildControllerAdapter.java:31)	at org.gradle.tooling.internal.consumer.connection.UnparameterizedBuildController.findModel(UnparameterizedBuildController.java:66)	at org.gradle.tooling.internal.consumer.connection.NestedActionAwareBuildControllerAdapter.findModel(NestedActionAwareBuildControllerAdapter.java:31)	at org.jetbrains.plugins.gradle.model.ProjectImportAction.execute(ProjectImportAction.java:116)	at org.jetbrains.plugins.gradle.model.ProjectImportAction.execute(ProjectImportAction.java:42)	at org.gradle.tooling.internal.consumer.connection.InternalBuildActionAdapter.execute(InternalBuildActionAdapter.java:64)	at org.gradle.tooling.internal.provider.runner.AbstractClientProvidedBuildActionRunner$ActionAdapter.runAction(AbstractClientProvidedBuildActionRunner.java:131)	at org.gradle.tooling.internal.provider.runner.AbstractClientProvidedBuildActionRunner$ActionAdapter.beforeTasks(AbstractClientProvidedBuildActionRunner.java:99)	at org.gradle.internal.buildtree.DefaultBuildTreeModelCreator.beforeTasks(DefaultBuildTreeModelCreator.java:57)	at org.gradle.internal.buildtree.DefaultBuildTreeLifecycleController.lambda$fromBuildModel$1(DefaultBuildTreeLifecycleController.java:72)	at org.gradle.internal.buildtree.DefaultBuildTreeLifecycleController$$Lambda$1675/0x00000000ea62fa88.get(Unknown Source)	at org.gradle.internal.buildtree.DefaultBuildTreeLifecycleController.lambda$runBuild$4(DefaultBuildTreeLifecycleController.java:103)	at org.gradle.internal.buildtree.DefaultBuildTreeLifecycleController$$Lambda$191/0x00000000e6333c48.get(Unknown Source)	at org.gradle.internal.build.StateTransitionController.lambda$transition$0(StateTransitionController.java:145)	at org.gradle.internal.build.StateTransitionController$$Lambda$192/0x00000000e6354d00.get(Unknown Source)	at org.gradle.internal.build.StateTransitionController.doTransition(StateTransitionController.java:243)	at org.gradle.internal.build.StateTransitionController.transition(StateTransitionController.java:145)	at org.gradle.internal.buildtree.DefaultBuildTreeLifecycleController.runBuild(DefaultBuildTreeLifecycleController.java:100)	at org.gradle.internal.buildtree.DefaultBuildTreeLifecycleController.fromBuildModel(DefaultBuildTreeLifecycleController.java:71)	at org.gradle.tooling.internal.provider.runner.AbstractClientProvidedBuildActionRunner.runClientAction(AbstractClientProvidedBuildActionRunner.java:43)	at org.gradle.tooling.internal.provider.runner.ClientProvidedPhasedActionRunner.run(ClientProvidedPhasedActionRunner.java:53)	at org.gradle.launcher.exec.ChainingBuildActionRunner.run(ChainingBuildActionRunner.java:35)	at org.gradle.internal.buildtree.ProblemReportingBuildActionRunner.run(ProblemReportingBuildActionRunner.java:49)	at org.gradle.launcher.exec.BuildOutcomeReportingBuildActionRunner.run(BuildOutcomeReportingBuildActionRunner.java:69)	at org.gradle.tooling.internal.provider.FileSystemWatchingBuildActionRunner.run(FileSystemWatchingBuildActionRunner.java:114)	at org.gradle.launcher.exec.BuildCompletionNotifyingBuildActionRunner.run(BuildCompletionNotifyingBuildActionRunner.java:41)	at org.gradle.launcher.exec.RootBuildLifecycleBuildActionExecutor.lambda$execute$0(RootBuildLifecycleBuildActionExecutor.java:40)	at org.gradle.launcher.exec.RootBuildLifecycleBuildActionExecutor$$Lambda$150/0x00000000e633b480.apply(Unknown Source)	at org.gradle.composite.internal.DefaultRootBuildState.run(DefaultRootBuildState.java:155)	at org.gradle.launcher.exec.RootBuildLifecycleBuildActionExecutor.execute(RootBuildLifecycleBuildActionExecutor.java:40)	at org.gradle.internal.buildtree.DefaultBuildTreeContext.execute(DefaultBuildTreeContext.java:40)	at org.gradle.launcher.exec.BuildTreeLifecycleBuildActionExecutor.lambda$execute$0(BuildTreeLifecycleBuildActionExecutor.java:65)	at org.gradle.launcher.exec.BuildTreeLifecycleBuildActionExecutor$$Lambda$99/0x00000000e5997560.apply(Unknown Source)	at org.gradle.internal.buildtree.BuildTreeState.run(BuildTreeState.java:53)	at org.gradle.launcher.exec.BuildTreeLifecycleBuildActionExecutor.execute(BuildTreeLifecycleBuildActionExecutor.java:65)	at org.gradle.launcher.exec.RunAsBuildOperationBuildActionExecutor$3.call(RunAsBuildOperationBuildActionExecutor.java:61)	at org.gradle.launcher.exec.RunAsBuildOperationBuildActionExecutor$3.call(RunAsBuildOperationBuildActionExecutor.java:57)	at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)	at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)	at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)	at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)	at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)	at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)	at org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)	at org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)	at org.gradle.launcher.exec.RunAsBuildOperationBuildActionExecutor.execute(RunAsBuildOperationBuildActionExecutor.java:57)	at org.gradle.launcher.exec.RunAsWorkerThreadBuildActionExecutor.lambda$execute$0(RunAsWorkerThreadBuildActionExecutor.java:38)	at org.gradle.launcher.exec.RunAsWorkerThreadBuildActionExecutor$$Lambda$98/0x00000000e597d830.create(Unknown Source)	at org.gradle.internal.work.DefaultWorkerLeaseService.withLocks(DefaultWorkerLeaseService.java:211)	at org.gradle.launcher.exec.RunAsWorkerThreadBuildActionExecutor.execute(RunAsWorkerThreadBuildActionExecutor.java:38)	at org.gradle.tooling.internal.provider.ContinuousBuildActionExecutor.execute(ContinuousBuildActionExecutor.java:103)	at org.gradle.tooling.internal.provider.SubscribableBuildActionExecutor.execute(SubscribableBuildActionExecutor.java:64)	at org.gradle.internal.session.DefaultBuildSessionContext.execute(DefaultBuildSessionContext.java:46)	at org.gradle.tooling.internal.provider.BuildSessionLifecycleBuildActionExecuter$ActionImpl.apply(BuildSessionLifecycleBuildActionExecuter.java:100)	at org.gradle.tooling.internal.provider.BuildSessionLifecycleBuildActionExecuter$ActionImpl.apply(BuildSessionLifecycleBuildActionExecuter.java:88)	at org.gradle.internal.session.BuildSessionState.run(BuildSessionState.java:69)	at org.gradle.tooling.internal.provider.BuildSessionLifecycleBuildActionExecuter.execute(BuildSessionLifecycleBuildActionExecuter.java:62)	at org.gradle.tooling.internal.provider.BuildSessionLifecycleBuildActionExecuter.execute(BuildSessionLifecycleBuildActionExecuter.java:41)	at org.gradle.tooling.internal.provider.GradleThreadBuildActionExecuter.execute(GradleThreadBuildActionExecuter.java:36)	at org.gradle.tooling.internal.provider.GradleThreadBuildActionExecuter.execute(GradleThreadBuildActionExecuter.java:25)	at org.gradle.tooling.internal.provider.StartParamsValidatingActionExecuter.execute(StartParamsValidatingActionExecuter.java:63)	at org.gradle.tooling.internal.provider.StartParamsValidatingActionExecuter.execute(StartParamsValidatingActionExecuter.java:31)	at org.gradle.tooling.internal.provider.SessionFailureReportingActionExecuter.execute(SessionFailureReportingActionExecuter.java:58)	at org.gradle.tooling.internal.provider.SessionFailureReportingActionExecuter.execute(SessionFailureReportingActionExecuter.java:42)	at org.gradle.tooling.internal.provider.SetupLoggingActionExecuter.execute(SetupLoggingActionExecuter.java:47)	at org.gradle.tooling.internal.provider.SetupLoggingActionExecuter.execute(SetupLoggingActionExecuter.java:31)	at org.gradle.launcher.daemon.server.exec.ExecuteBuild.doBuild(ExecuteBuild.java:65)	at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:37)	at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)	at org.gradle.launcher.daemon.server.exec.WatchForDisconnection.execute(WatchForDisconnection.java:39)	at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)	at org.gradle.launcher.daemon.server.exec.ResetDeprecationLogger.execute(ResetDeprecationLogger.java:29)	at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)	at org.gradle.launcher.daemon.server.exec.RequestStopIfSingleUsedDaemon.execute(RequestStopIfSingleUsedDaemon.java:35)	at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)	at org.gradle.launcher.daemon.server.exec.ForwardClientInput$2.create(ForwardClientInput.java:78)	at org.gradle.launcher.daemon.server.exec.ForwardClientInput$2.create(ForwardClientInput.java:75)	at org.gradle.util.internal.Swapper.swap(Swapper.java:38)	at org.gradle.launcher.daemon.server.exec.ForwardClientInput.execute(ForwardClientInput.java:75)	at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)	at org.gradle.launcher.daemon.server.exec.LogAndCheckHealth.execute(LogAndCheckHealth.java:55)	at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)	at org.gradle.launcher.daemon.server.exec.LogToClient.doBuild(LogToClient.java:63)	at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:37)	at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)	at org.gradle.launcher.daemon.server.exec.EstablishBuildEnvironment.doBuild(EstablishBuildEnvironment.java:84)	at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:37)	at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)	at org.gradle.launcher.daemon.server.exec.StartBuildOrRespondWithBusy$1.run(StartBuildOrRespondWithBusy.java:52)	at org.gradle.launcher.daemon.server.DaemonStateCoordinator$1.run(DaemonStateCoordinator.java:297)	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:61)Caused by: org.gradle.api.InvalidUserDataException: Invalid TOML catalog definition:  - Problem: In version catalog libs, on alias 'querydsl-apt' notation 'com.querydsl:querydsl-apt:+:jpa' is not a valid dependency notation.        Reason: When using a string to declare library coordinates, you must use a valid dependency notation.        Possible solution: Make sure that the coordinates consist of 3 parts separated by colons, eg: my.group:artifact:1.2.        Please refer to https://docs.gradle.org/7.3/userguide/version_catalog_problems.html#invalid_dependency_notation for more details about this problem.	at org.gradle.api.internal.catalog.problems.DefaultCatalogProblemBuilder.maybeThrowError(DefaultCatalogProblemBuilder.java:66)	at org.gradle.api.internal.catalog.parser.TomlCatalogFileParser.throwVersionCatalogProblem(TomlCatalogFileParser.java:541)	at org.gradle.api.internal.catalog.parser.TomlCatalogFileParser.parseLibrary(TomlCatalogFileParser.java:259)	at org.gradle.api.internal.catalog.parser.TomlCatalogFileParser.parseLibraries(TomlCatalogFileParser.java:154)	at org.gradle.api.internal.catalog.parser.TomlCatalogFileParser.parse(TomlCatalogFileParser.java:100)	at org.gradle.api.internal.catalog.DefaultVersionCatalogBuilder.importCatalogFromFile(DefaultVersionCatalogBuilder.java:237)	at org.gradle.api.internal.catalog.DefaultVersionCatalogBuilder.lambda$maybeImportCatalogs$4(DefaultVersionCatalogBuilder.java:178)	at org.gradle.api.internal.catalog.DefaultVersionCatalogBuilder$$Lambda$522/0x00000000e73d8af0.run(Unknown Source)	at org.gradle.api.internal.catalog.DefaultVersionCatalogBuilder.withContext(DefaultVersionCatalogBuilder.java:133)	at org.gradle.api.internal.catalog.DefaultVersionCatalogBuilder.lambda$maybeImportCatalogs$5(DefaultVersionCatalogBuilder.java:178)	at org.gradle.api.internal.catalog.DefaultVersionCatalogBuilder$$Lambda$521/0x00000000e73d87f0.accept(Unknown Source)	at org.gradle.api.internal.catalog.DefaultVersionCatalogBuilder.maybeImportCatalogs(DefaultVersionCatalogBuilder.java:176)	at org.gradle.api.internal.catalog.DefaultVersionCatalogBuilder.doBuild(DefaultVersionCatalogBuilder.java:140)	at org.gradle.api.internal.catalog.DefaultVersionCatalogBuilder$$Lambda$488/0x00000000e730ed50.get(Unknown Source)	at org.gradle.internal.lazy.UnsafeLazy.ensureValue(UnsafeLazy.java:39)	at org.gradle.internal.lazy.UnsafeLazy.get(UnsafeLazy.java:34)	at org.gradle.api.internal.catalog.DefaultVersionCatalogBuilder.build(DefaultVersionCatalogBuilder.java:126)	at org.gradle.api.internal.catalog.DefaultDependenciesAccessors.generateAccessors(DefaultDependenciesAccessors.java:124)	... 130 more```### Context<!--- How has this issue affected you? What are you trying to accomplish? --><!--- Providing context helps us come up with a solution that is most useful in the real world -->### Steps to Reproduce <!--- Provide a self-contained example project (as an attached archive or a Github project). --><!--- In the rare cases where this is infeasible, we will also accept a detailed set of instructions. -->settings.gradle.kts:```enableFeaturePreview(""VERSION_CATALOGS"")```gradle/libs.versions.toml:```[libraries]querydsl-apt = ""com.querydsl:querydsl-apt:+:jpa""```### Your Environment<!--- Include as many relevant details about the environment you experienced the bug in --><!--- A build scan https://scans.gradle.com/get-started is ideal -->Gradle 7.3
"
19341,1,0,297,0,0,bayandin,0,"title:Wrong checksum for gradle-7.3.2-all.zip for some cloudflare regions description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues-->Downloading https://services.gradle.org/distributions/gradle-7.3.2-all.zip returns wrong file (sha256: `8d4b75c97c5b74fcda1b049d1e9a3ef45c0d8af4974b2d384cc26d69deb8d46b`) (for some cloudflare regions, I guess; Atlanta GA for example)<!--- Provide a brief summary of the issue in the title above -->### Expected Behavior- Checksum for https://services.gradle.org/distributions/gradle-7.3.2-all.zip should be `dd54e87b4d7aa8ff3c6afb0f7805aa121d4b70bca55b8c9b1b896eb103184582` (as per https://services.gradle.org/distributions/gradle-7.3.2-all.zip.sha256) for all regions<!--- Tell us what should happen -->### Current Behavior- Checksum is wrong `8d4b75c97c5b74fcda1b049d1e9a3ef45c0d8af4974b2d384cc26d69deb8d46b` for Atlanta GA region- Checksum is correct `dd54e87b4d7aa8ff3c6afb0f7805aa121d4b70bca55b8c9b1b896eb103184582` for Dublin region### Context<!--- How has this issue affected you? What are you trying to accomplish? --><!--- Providing context helps us come up with a solution that is most useful in the real world -->We're trying to update `gradle` to 7.3.2 in homebrew (https://github.com/Homebrew/homebrew-core/pull/91372) and macOS arm64 runners downloads file with the wrong checksum (arm64 runners in Atlanta GA, Intel runners in Dublin)### Steps to Reproduce - Download https://services.gradle.org/distributions/gradle-7.3.2-all.zip from Atlanta GA 闂?checksum will be wrong<!--- Provide a self-contained example project (as an attached archive or a Github project). --><!--- In the rare cases where this is infeasible, we will also accept a detailed set of instructions. -->### Your Environment<!--- Include as many relevant details about the environment you experienced the bug in --><!--- A build scan https://scans.gradle.com/get-started is ideal -->Build scan URL: N/A
"
19334,1,1360,62,0,0,MLNW,0,"title:Dependency resolution via configurations does not work with certain naming scheme description:### Expected BehaviorWhen defining configurations and consuming them as described in [Simple sharing artifacts between projects](https://docs.gradle.org/current/userguide/cross_project_publications.html#sec:simple-sharing-artifacts-between-projects) it should be possible to depend on multiple such configurations:```groovy  testRuntimeOnly(project(path: "":service-a:impl:backend"", configuration: ""classesJars""))  testRuntimeOnly(project(path: "":service-b:impl:backend"", configuration: ""classesJars""))  testRuntimeOnly(project(path: "":service-c:impl:backend"", configuration: ""classesJars""))```### Current BehaviorSince each of the modules has a `backend` component in the back dependency resolution does not work as expected:`gradle dependencies````texttestImplementation - Implementation only dependencies for source set 'test'. (n)...+--- project :service-a:impl:backend -> project :service-c:impl:backend                                                                                                                                                          +--- project :service-b:impl:backend -> project :service-c:impl:backend                                                                                                                                                    +--- project :service-c:impl:backend testRuntimeOnly - Runtime only dependencies for source set 'test'. (n)...+--- project backend (n)+--- project backend (n)\--- project backend (n)```### ContextI am trying to include the class files from some of my services into a single project in order to run some ArchUnit tests.### Steps to ReproduceI have tried to reproduce this in a self-contained project but was unable to achieve the same effect. For some reason here the dependency resolution at runtime is different and works more like expected:`gradle dependencies````texttestRuntimeClasspath - Runtime classpath of source set 'test'....+--- project :service-a:impl:backend+--- project :service-b:impl:backend\--- project :service-c:impl:backendtestRuntimeOnly - Runtime only dependencies for source set 'test'. (n)...+--- project backend (n)+--- project backend (n)\--- project backend (n)```https://github.com/MLNW/gradle-dependency-resolution-issue-example### Your EnvironmentJava: 11Gradle: 7.3
"
19332,1,0,14,0,1,jschneidereit,0,"title:prepareKotlinBuildScriptModel doesn't respect plugin repositories description:I have a requirement for security purposes to only use a certain set of internal repositories, I've tried setting these repositories in `buildSrc/build.gradle.kts` both before and after adding `kotlin-dsl` to the plugins block. When I run my build my project detects that https://repo.gradle.org/gradle/list/libs-releases is registered and blows up, immediately after `prepareKotlinBuildScriptModel`. ### Expected Behavior1. `kotlin-dsl` should not add https://repo.gradle.org/gradle/list/libs-releases2. `kotlin-dsl` should use existing repositories### Current Behavior`kotlin-dsl` adds an unexpected repository https://repo.gradle.org/gradle/list/libs-releases### ContextThis is an internal security issue that prevents me from using the `kotlin-dsl` in a `buildSrc` style project. A fix for this would be useful since this is not the first shop I've worked at that required usage of only an internal artifactory server.### Steps to Reproduce Create a multi-project application with `gradle init` per the [docs](https://docs.gradle.org/current/samples/sample_building_kotlin_applications_multi_project.html#header) and interrogate the dependencies used### Your EnvironmentN/A
"
19331,1,1135,104,0,0,nefilim,0,"title:publish-plugin tasks dependency warnings?  description:### Expected BehaviorThe plugin should work out of the box without warnings ### Current Behavior```  - Gradle detected a problem with the following location: 'my-plugin-0.0.4-javadoc.jar'. Reason: Task ':generateMetadataFileForPluginMavenPublication' uses this output of task ':publishPluginJavaDocsJar' without declaring an explicit or implicit dependency. This can lead to incorrect results being produced, depending on what order the tasks are executed. Please refer to https://docs.gradle.org/7.3.1/userguide/validation_problems.html#implicit_dependency for more details about this problem.  - Gradle detected a problem with the following location: 'my-plugin-0.0.4-sources.jar'. Reason: Task ':generateMetadataFileForPluginMavenPublication' uses this output of task ':publishPluginJar' without declaring an explicit or implicit dependency. This can lead to incorrect results being produced, depending on what order the tasks are executed. Please refer to https://docs.gradle.org/7.3.1/userguide/validation_problems.html#implicit_dependency for more details about this problem.```### Contexthttps://github.com/nefilim/gradle-semver-plugin/blob/main/build.gradle.ktsattempting to do something like this:```tasks.named(""generateMetadataFileForPluginMavenPublication"") {    dependsOn(""publishPluginJar"")    dependsOn(""publishPluginJavaDocsJar"")}```fails with tasks not found. these tasks all appear to be internal to the publish plugin, so one would assume the plugin would setup the dependencies correctly? ### Steps to Reproduce run task `publishPlugins`### Your Environment<!--- Include as many relevant details about the environment you experienced the bug in --><!--- A build scan https://scans.gradle.com/get-started is ideal -->Build scan URL: https://scans.gradle.com/s/2p344bf76jjrs
"
19328,0,0,218,0,0,ljacomet,0,"title:Mitigations for log4j vulnerability in Gradle builds (Backport 6.x) description:See #19300The following has been done in Gradle:* Ensure Zinc compiler does not put a vulnerable Log4j on a classpath. This is done by upgrading `log4j-core` to `2.17.0` on the zinc compiler classpath when using the scala plugin.* Protect buildscript classpath from having vulnerable Log4j. This is done by adding a constraint that rejects known vulnerable versions [2.0, 2.17)` and requires `2.17.0`More information on [our blog post](https://blog.gradle.org/log4j-vulnerability).
"
19326,0,0,0,0,0,f2tt,0,"title:Problems reading data from Binary store in /private/var/folders/6n/5bjtch856nj5rkch9t2dnqzc0000gn/T/gradle1030692378674898310.bin offset 45585202 exists? true description:### Expected Behaviorgradle should work with multiple projects, Run normally on Android studio terminal.### Current Behavior#### The operating environment is as follows:- Mac big sur 11.6.2- Android  studio 4.1.1- gradle 6.5-  classpath ""com.android.tools.build:gradle:4.0.0"" When trying to do anything (except CLEAN) i get this error:Could not determine the dependencies of task ':module_question:compileEnv_testOfficialReleaseUnitTestKotlin'.> Could not resolve all dependencies for configuration ':module_question:env_testOfficialReleaseUnitTestRuntimeClasspath'.   > Problems reading data from Binary store in /private/var/folders/6n/5bjtch856nj5rkch9t2dnqzc0000gn/T/gradle1030692378674898310.bin offset 45585202 exists? true### Contexttrying to build my android projects using gradleI have removed my ~/.gradle folder, Also deleted the .idea and .gradle files in the app. all the .gradle folders in the enclosing folder all to no avail. I deleted the running gradle daemons.
"
19320,1,0,1,0,0,chrispoulsen,0,"title:Circular dependency error for identically named sub modules on different paths description:I was messing around with a multi module build and had the following modules::api:model:area:impl:model:areaBoth modules use the java library plugin and :impl:model:area has an implementation dependency on project(':api:model:area')When I try to issue ./gradlew build it complains about :impl:model:area having a circular dependency against itself. Maybe the identical :area parts confuses gradle ?### Expected BehaviorEither the build should work or if it is an expected error it should have a better description.### Current BehaviorAn error saying that :impl:model:area has a circular dependency against itself### ContextI was trying to have ""api"" and ""impl"" nicely separated while communicating that they are about the same thing (""model:area"")I ended up flattening the modules into "":api-model-area"" and "":impl-model-area"" its not as nice though as there are several different other modules  in play (values for ""model"" and ""area"").After flattening things the build worked.### Your EnvironmentJava 17 (openjdk - preview features enabled), gradle 7.3.1, linux
"
19300,0,0,297,0,0,big-guy,0,"title:Mitigations for log4j vulnerability in Gradle builds description:A [RCE vulnerability in log4j](https://www.lunasec.io/docs/blog/log4j-zero-day/) has been found that affects certain combinations of Java and applications using log4j 2.This is a critical vulnerability that is actively being exploited. While Gradle itself is not directly impacted by this, we should provide some mitigations and recommendations for Gradle users.The following has been done in Gradle:* Ensure Zinc compiler does not put a vulnerable Log4j on a classpath. This is done by upgrading `log4j-core` to `2.16.0` on the zinc compiler classpath when using the scala plugin.* Protect buildscript classpath from having vulnerable Log4j. This is done by adding a constraint that rejects known vulnerable versions [2.0, 2.16)` and requires `2.16.0`More information on [our blog post](https://blog.gradle.org/log4j-vulnerability).
"
19271,1,0,46,0,0,MiqueiasDevGames,0,"title:Error aapt2 gradle android develops description:So I have named 32bit linux an aapt2 version 3.+ which has the functional function for gradle, but gradle uses its own aapt2 version which is not compatible with my 32bit linux, if I could make gradle use the aapt2 I have could generate .aab on my 32bit linux.Is there any way to define or modify which aapt2 gradle will use?ORCould I trick gradle into using my aapt2 that I set?
"
19258,0,0,297,0,1,tresat,0,"title:Fix links in new test suite samples description:We renamed the plugin chapter, but the old link was left on the sample page: https://docs.gradle.org/current/samples/sample_incubating_jvm_multi_project_with_additional_test_types.htmlAnd the link to the incubating page doesn't work.
"
19257,0,1018,18,0,0,horseunnamed,0,"title:Incremental java compilation fails when renaming classname with $ character description:Issue occurs since Gradle 7.3. Tested with OpenJDK 11 and 13. Tiny reproduction sample is here: https://github.com/horseunnamed/Gradle-change-detection-issue  ### Expected BehaviorIncremental java compilation is successful when classname with $ is renamed (as it is with Gradle 7.2 and earlier versions) ### Current BehaviorAfter changing java class name with $ character and running incremental build we get the error:```> Task :compileJava FAILEDCaching disabled for task ':compileJava' because:  Build cache is disabledTask ':compileJava' is not up-to-date because:  Input property 'stableSources' file .../src/main/java/issue/Class$Name.java has been removed.  Input property 'stableSources' file .../src/main/java/issue/Main.java has changed.  Input property 'stableSources' file .../src/main/java/issue/Class$NameChanged.java has been added.Created classpath snapshot for incremental compilation in 0.0 secs.Compiling with toolchain '/Library/Java/JavaVirtualMachines/openjdk-11.0.2.jdk/Contents/Home'.Compiling with JDK Java compiler API..../src/main/java/issue/Main.java:5: error: cannot find symbol        new Class$NameChanged();            ^  symbol:   class Class$NameChanged  location: class Main1 errorIncremental compilation of 3 classes completed in 0.012 secs.:compileJava (Thread[Execution worker for ':',5,main]) completed. Took 0.02 secs.FAILURE: Build failed with an exception.```### ContextOn our real world Android-project we had a very harmful impact from this issue when upgrading Gradle version to 7.3.1.Incremental annotation processor in our project generates some files with dollar sign and this issue silently led us to `ClassNotFoundException` at runtime in some cases. It's very serious blocker for us to upgrade from 7.2.### Steps to Reproduce Please see reproduction sample: https://github.com/horseunnamed/Gradle-change-detection-issue  1. Run build task to compile java project with classname that conatins dollar sign (e.g. `Class$Name.java`) and reference to it somewhere else (from `Main.java` in my reproduction sample)2. Change classname and reference to it with something that still contains dollar sign3. Rerun build task4. Get mentioned incremental compilation error### Your EnvironmentBuild scan of failed incremental build from reproduction sample: https://scans.gradle.com/s/b4qlo2umn7dms
"
19247,1,0,297,0,0,matejdro,0,"title:`apply false` plugin modifier does not appear to always work in precompiled script plugins description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues--><!--- Provide a brief summary of the issue in the title above -->### Expected Behavior`id(""com.android.library"") apply false` should only add the plugin to the script's classpath, but it should not actually apply the plugin### Current BehaviorPlugin is applied (at least in this case)### ContextIn gradle kts precompiled plugin in the Android app, I need access to the `implementation` and `api` dependency extensions. To get access to that, I need to add one of the android plugins to the classpath. However, since this plugin is used by both app and library modules, I don't want to actually apply the plugin, only add it to the classpath. But not applying the plugin does not appear to work.### Steps to Reproduce 1. Download [ApplyTest.zip](https://github.com/gradle/gradle/files/7674245/ApplyTest.zip)2. Run `./gradlew assemble` on the above project3. Note that build will fail with `Failed to apply plugin 'com.android.internal.library'`. But this plugin should not have been applied in the first place since it has `apply false`
"
19237,1,138,0,0,0,hfazai,0,"title:compileKotlin task is deleting files in destinationDir description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues--><!--- Provide a brief summary of the issue in the title above -->I defined a custom destination directory in compileKotlin task using:````KOTLINcompileKotlin {    destinationDir = file(""classRoot"")}````When start compileKotlin task, all files in `classRoot` directory are deleted.### Expected Behavior<!--- Tell us what should happen -->compileKotlin should'nt clean `classRoot` directory.### Current Behavior<!--- Tell us what happens instead of the expected behavior -->compileKotlin is cleaning `classRoot` directory.### Steps to Reproduce <!--- Provide a self-contained example project (as an attached archive or a Github project). --><!--- In the rare cases where this is infeasible, we will also accept a detailed set of instructions. -->1. Create a very basic kotlin project.2. Add this line to your build script build.gradle.kts: (change `classRoot` with a directory in your machine)````KOTLINcompileKotlin {    destinationDir = file(""classRoot"")}````3. Create a file in the directory `classRoot` (`touch f.txt`)4. Run compileKotlin task (`./gradlew compileKotlin`)5. The file `classRoot/f.txt` is deleted.### Your Environment<!--- Include as many relevant details about the environment you experienced the bug in --><!--- A build scan https://scans.gradle.com/get-started is ideal -->Gradle 7.2OS: Fedora 34
"
19234,0,0,282,0,0,melix,0,"title:JavaToolchainService not available on JVM ecosystem projects description:### Expected BehaviorThe `JavaToolchainService` service should be available on projects which do not apply the `java` base plugin, but are still working in the Java ecosystem.### Current BehaviorIn order to use toolchains, a project must apply the `JavaBasePlugin` plugin.### ContextI have a multi-project build where most of the subprojects are Java project, and the root project is an aggregator. As part of aggregation, it needs to generate some Javadocs. The aggregation only requires the application of the `JvmEcosystemPlugin` (to get the usual disambiguation rules for dependency resolution). However, in order to use toolchains for Javadocs, I need to apply the `JavaBasePlugin` which does _too much_ and risks that folks would reintroduce things on the root project that they shouldn't.It would be good if the toolchains service was created as part of the `JvmEcosystemPlugin`, or, possibly, as part of its own plugin which would then be applied by the `JavaBasePlugin`, but that one could apply independently in their own plugin.### Steps to Reproduce Create a project which only applies the `jvm-ecosystem` plugin: the `JavaToolchainService` service isn't available as an extension.### Your EnvironmentBuild scan URL: https://ge.micronaut.io/s/n7fjvvx2lrvjq
"
19232,0,974,262,0,0,unredundant,0,"title:gradleTestKit not available in test suite description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues--><!--- Provide a brief summary of the issue in the title above -->### Expected BehaviorI should be able to declare gradleTestKit as a dependency in my test suite like so```kotlintesting {  suites {    val test by getting(JvmTestSuite::class) {      useJUnitJupiter()      dependencies {        val kotestVersion = ""4.6.4""        implementation(""io.kotest:kotest-runner-junit5-jvm:$kotestVersion"")        implementation(""io.kotest:kotest-assertions-core-jvm:$kotestVersion"")        implementation(""io.kotest:kotest-property-jvm:$kotestVersion"")        implementation(gradleTestKit())      }    }  }}```### Current BehaviorDoing so results in an exception `Unresolved reference: gradleTestKit`there is a work around (assuming you are only using unit testing)```kotlindependencies {  // my deps  // ...  // workaround  testImplementation(gradleTestKit())}testing {  suites {    val test by getting(JvmTestSuite::class) {      useJUnitJupiter()      dependencies {        val kotestVersion = ""4.6.4""        implementation(""io.kotest:kotest-runner-junit5-jvm:$kotestVersion"")        implementation(""io.kotest:kotest-assertions-core-jvm:$kotestVersion"")        implementation(""io.kotest:kotest-property-jvm:$kotestVersion"")      }    }  }}```### Context<!--- How has this issue affected you? What are you trying to accomplish? --><!--- Providing context helps us come up with a solution that is most useful in the real world -->Would block any kind of additional test suites from leveraging the test kit ### Steps to Reproduce <!--- Provide a self-contained example project (as an attached archive or a Github project). --><!--- In the rare cases where this is infeasible, we will also accept a detailed set of instructions. -->1. Try to import gradle test kit directly into test suite ### Your Environment<!--- Include as many relevant details about the environment you experienced the bug in --><!--- A build scan https://scans.gradle.com/get-started is ideal -->MacOS MojaveGradle 7.3.1Java 17
"
19213,0,417,297,0,0,tresat,0,"title:Address new Deprecation warning in Gradle/Gradle build  description:After adding a new warning to the build when the `Test` task's options are configured prior to selecting a test framework, we now see a deprecation warning in the Gradle build's cross-version-tests script:```at org.gradle.api.tasks.testing.Test.useTestFramework(Test.java:992)		at org.gradle.api.tasks.testing.Test.useJUnitPlatform(Test.java:1070)		at Gradlebuild_cross_version_tests_gradle$createQuickFeedbackTasks$1$testTask$1.execute(gradlebuild.cross-version-tests.gradle.kts:54)		at Gradlebuild_cross_version_tests_gradle$createQuickFeedbackTasks$1$testTask$1.execute(gradlebuild.cross-version-tests.gradle.kts:21)```Build scan here: https://ge.gradle.org/s/ygu4zin3m2l6a/deprecations?expanded=WyIzIiwiMTEiXQ&expanded-stacktrace=WyI1Il0#4This should be corrected.
"
19205,1,0,152,0,0,papuSpartan,0,"title:Project failing to build because ""Unsupported class file major version 61"" description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues--><!--- Provide a brief summary of the issue in the title above -->I'm trying to build a project but for some reason it errors out within less than a second.[https://gist.github.com/papuSpartan/4bc9c4d7220f4092d759a8dccef38447](url)### Expected BehaviorGradle builds the project### Current BehaviorGradle fails to build### ContextTrying to get a project to build### Steps to Reproduce - clone https://github.com/paulevsGitch/BCLib.git- sh gradlew build### Your EnvironmentBuild scan URL: https://gradle.com/s/2baemnv6lseee
"
19193,0,916,3,0,0,alexander-schubert,0,"title:Paths specified via org.gradle.java.installations.paths are not resolved relatively to the project root directory description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues--><!--- Provide a brief summary of the issue in the title above -->When specifying a relative path through the Gradle property `org.gradle.java.installations.paths`, it is not resolved relatively to the project root directory, but relatively to the current working directory of the Gradle daemon process.The underlying problem is likely caused by `org.gradle.jvm.toolchain.internal.LocationListInstallationSupplier` using `new File(..)` to resolve the directory. According to the [Gradle documentation on Working with Files](https://docs.gradle.org/7.3.1/userguide/working_with_files.html#sec:single_file_paths), `new File(relative path)` should never be used (in build configurations) as it can lead to unexpected behavior:> Never use `new File(relative path)` because this creates a path relative to the current working directory (CWD). Gradle can make no guarantees about the location of the CWD, which means builds that rely on it may break at any time.### Expected BehaviorPaths specified through the Gradle property `org.gradle.java.installations.paths` are resolve relatively to the project root directory.<!--- Tell us what should happen -->### Current Behavior<!--- Tell us what happens instead of the expected behavior -->Paths specified through the Gradle property `org.gradle.java.installations.paths` are resolve relatively to the current working directory of the Gradle daemon process.### Context<!--- How has this issue affected you? What are you trying to accomplish? --><!--- Providing context helps us come up with a solution that is most useful in the real world -->We're trying to use the Java toolchain feature with a JDK that is provisioned dynamically through a configuration the Gradle build script. URLs to snapshot versions of a JDKs for multiple platforms are checked into Git together with the project source code. A custom task downloads and unpacks the correct JDK to a build directory. Previously, we just configured the JDK path on the `CompileOptions` of the `JavaCompile` task and created a task dependency on the JDK provisioning task. To use the toolchain support, we moved to the provisioning task to the `:buildSrc` project as the toolchain detection already expects the JDK to exist during configuration time (that's not great but ok).But there doesn't seem to be a way to specify the URL to download or the directory of the pre-provisioned JDK directly through the toolchain APIs. Currently, setting the JDK path through `org.gradle.java.installations.paths` only works when specifying an absolute path, so the information would always need to be injected from outside the build, even though a relative path to the project root directory would suffice. `org.gradle.java.installations.fromEnv` has the same issue.### Steps to Reproduce <!--- Provide a self-contained example project (as an attached archive or a Github project). --><!--- In the rare cases where this is infeasible, we will also accept a detailed set of instructions. -->Add the following configuration to a simple Java Gradle build:```org.gradle.java.installations.auto-detect=falseorg.gradle.java.installations.auto-download=falseorg.gradle.java.installations.paths=relative/path/to/jdk```Run the Gradle Java build or just the `javaToolchains` task:```$ ./gradlew javaToolchains> Task :javaToolchainsDirectory '/home/user/.gradle/daemon/7.3/relative/path/to/jdk' (system property 'org.gradle.java.installations.paths') used for java installations does not exist + Options     | Auto-detection:     Disabled     | Auto-download:      Disabled```### Your Environment<!--- Include as many relevant details about the environment you experienced the bug in --><!--- A build scan https://scans.gradle.com/get-started is ideal --><!--- Build scan URL: -->```------------------------------------------------------------Gradle 7.3------------------------------------------------------------Build time:   2021-11-09 20:40:36 UTCRevision:     96754b8c44399658178a768ac764d727c2addb37Kotlin:       1.5.31Groovy:       3.0.9Ant:          Apache Ant(TM) version 1.10.11 compiled on July 10 2021JVM:          11.0.13 (Red Hat, Inc. 11.0.13+8)OS:           Linux 5.14.15-200.fc34.x86_64 amd64```Note that the relative path resolution behavior seems to be different depending on the Java version that is used to run Gradle (specified through `JAVA_HOME` for the Gradle wrapper). With JDK 8, `org.gradle.java.installations.paths` is resolved relatively to the directory where the Gradle wrapper is started from (if necessary with `-p` to set the project root directory). But that just underlines that the current behavior is inconsistent and unexpected.
"
19189,1,1670,293,0,0,ansman,0,"title:ClassNotFoundException when applying custom plugin description:### Expected BehaviorA custom plugin should be able to refer to a potentially missing class if guarded by a `target.pluginManager.withPlugin` statement.### Current BehaviorWhen Gradle tries to apply the plugin a `java.lang.ClassNotFoundException` is found if the optional dependency is not found on the classpath.### ContextWe have a custom plugin that helps us configure the Kotlin Gradle Plugin. The plugin looks like this:```target.pluginManager.withPlugin(""org.jetbrains.kotlin.jvm"") {    target.extensions.configure(JavaPluginExtension::class.java) {        it.sourceCompatibility = JavaVersion.VERSION_1_8        it.targetCompatibility = JavaVersion.VERSION_1_8    }    target.tasks.withType(KotlinCompile::class.java).configureEach {        it.kotlinOptions.configure()    }}target.pluginManager.withPlugin(""org.jetbrains.kotlin.android"") {    target.extensions.configure(JavaPluginExtension::class.java) {        it.sourceCompatibility = JavaVersion.VERSION_1_8        it.targetCompatibility = JavaVersion.VERSION_1_8    }    target.extensions.configure<BaseExtension>(""android"") { android ->        android.kotlinOptions.configure()    }}target.pluginManager.withPlugin(""org.jetbrains.kotlin.kapt"") {    target.extensions.configure<KaptExtension>(""kapt"") {        it.includeCompileClasspath = false    }}```The plugin support many types of Kotlin plugins among them is the Kotlin plugin for Android. Our plugin has a `compileOnly` dependency on the Android Gradle Plugin since not all consumers use Android. For these consumers the second config block should never be executed but when using Gradle 7+ applying the plugin causes an exception when Gradle tries to scan the plugin:```Caused by: java.lang.NoClassDefFoundError: com/android/build/gradle/BaseExtension        at org.gradle.internal.reflect.ClassInspector.inspectClass(ClassInspector.java:70)        at org.gradle.internal.reflect.ClassInspector.visitGraph(ClassInspector.java:56)        at org.gradle.internal.reflect.ClassInspector.inspect(ClassInspector.java:36)        at org.gradle.internal.instantiation.generator.AbstractClassGenerator.inspectType(AbstractClassGenerator.java:272)        at org.gradle.internal.instantiation.generator.AbstractClassGenerator.generateUnderLock(AbstractClassGenerator.java:211)        ... 247 moreCaused by: java.lang.ClassNotFoundException: com.android.build.gradle.BaseExtension        ... 252 more```### Steps to Reproduce To reproduce you need to create a library project that refers to some dependency using `compileOnly` and some class in that dependency should be referenced inside a `pluginManager.withPlugin` block.The consumer should then try to apply this plugin.### Your EnvironmentThis is using Gradle 7.3
"
19184,0,321,273,0,0,bamboo,0,"title:Configuration cache doesn't load system properties from included build `gradle.properties` files description:Related to #15820.Consider the following build structure:```build-logic/    build.gradle.kts       println(providers.systemProperty(""property"").orNull)    gradle.properties       systemProp.property=42settings.gradle.kts    includeBuild(""build-logic"")```# Expected BehaviorSecond run successfully loads from the cache.# Actual BehaviorSecond run fails to load from the cache with:```Calculating task graph as configuration cache cannot be reused because system property 'property' has changed.```
"
19181,1,0,1,0,0,aritranagnordcloud,0,"title:403 Forbidden error on package repository description:Hi, Gradle team!I have cloned this repo. But I got an error as follows when I execute ./gradlew build.`* What went wrong:A problem occurred configuring project ':app'.> Could not resolve all dependencies for configuration ':app:classpath'.   > Could not determine artifacts for io.quarkus:io.quarkus.gradle.plugin:1.13.3.Final Received status code 403 from server: Forbidden`Expected BehaviorBuild Project SuccessfulCurrent Behavior* What went wrong:A problem occurred configuring project ':app'. Received status code 403 from server: ForbiddenYour Environmentmac os 11.6Java 11Gradle 7.3
"
19170,0,0,293,0,1,JLLeitschuh,0,"title:Fix ConcurrentModificationException in DefaultSerializerRegistry description:Fixes https://github.com/JLLeitschuh/ktlint-gradle/issues/518### ContextThis is a very naive fix for the `ConcurrentModificationException` in `DefaultSerializerRegistry`.This is the exception a user of the Ktlint Gradle project was getting:  Stack Trace<pre>* What went wrong:Execution failed for task ':feedback:loadKtlintReporters'.> A failure occurred while executing org.jlleitschuh.gradle.ktlint.worker.LoadReportersWorkAction   > Could not serialize unit of work.      > java.util.ConcurrentModificationException (no error message)* Try:Run with --info or --debug option to get more log output. Run with --scan to get full insights.* Exception is:org.gradle.api.tasks.TaskExecutionException: Execution failed for task ':feedback:loadKtlintReporters'.	at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.lambda$executeIfValid$1(ExecuteActionsTaskExecuter.java:188)	at org.gradle.internal.Try$Failure.ifSuccessfulOrElse(Try.java:282)	at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeIfValid(ExecuteActionsTaskExecuter.java:186)	at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.execute(ExecuteActionsTaskExecuter.java:174)	at org.gradle.api.internal.tasks.execution.CleanupStaleOutputsExecuter.execute(CleanupStaleOutputsExecuter.java:109)	at org.gradle.api.internal.tasks.execution.FinalizePropertiesTaskExecuter.execute(FinalizePropertiesTaskExecuter.java:46)	at org.gradle.api.internal.tasks.execution.ResolveTaskExecutionModeExecuter.execute(ResolveTaskExecutionModeExecuter.java:51)	at org.gradle.api.internal.tasks.execution.SkipTaskWithNoActionsExecuter.execute(SkipTaskWithNoActionsExecuter.java:57)	at org.gradle.api.internal.tasks.execution.SkipOnlyIfTaskExecuter.execute(SkipOnlyIfTaskExecuter.java:56)	at org.gradle.api.internal.tasks.execution.CatchExceptionTaskExecuter.execute(CatchExceptionTaskExecuter.java:36)	at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.executeTask(EventFiringTaskExecuter.java:77)	at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.call(EventFiringTaskExecuter.java:55)	at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.call(EventFiringTaskExecuter.java:52)	at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:200)	at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:195)	at org.gradle.internal.operations.DefaultBuildOperationRunner$3.execute(DefaultBuildOperationRunner.java:75)	at org.gradle.internal.operations.DefaultBuildOperationRunner$3.execute(DefaultBuildOperationRunner.java:68)	at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:153)	at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:68)	at org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:62)	at org.gradle.internal.operations.DefaultBuildOperationExecutor.lambda$call$2(DefaultBuildOperationExecutor.java:79)	at org.gradle.internal.operations.UnmanagedBuildOperationWrapper.callWithUnmanagedSupport(UnmanagedBuildOperationWrapper.java:54)	at org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:79)	at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter.execute(EventFiringTaskExecuter.java:52)	at org.gradle.execution.plan.LocalTaskNodeExecutor.execute(LocalTaskNodeExecutor.java:74)	at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$InvokeNodeExecutorsAction.execute(DefaultTaskExecutionGraph.java:402)	at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$InvokeNodeExecutorsAction.execute(DefaultTaskExecutionGraph.java:389)	at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$BuildOperationAwareExecutionAction.execute(DefaultTaskExecutionGraph.java:382)	at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$BuildOperationAwareExecutionAction.execute(DefaultTaskExecutionGraph.java:368)	at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.lambda$run$0(DefaultPlanExecutor.java:127)	at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.execute(DefaultPlanExecutor.java:191)	at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.executeNextNode(DefaultPlanExecutor.java:182)	at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.run(DefaultPlanExecutor.java:124)	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:61)Caused by: org.gradle.workers.internal.DefaultWorkerExecutor$WorkExecutionException: A failure occurred while executing org.jlleitschuh.gradle.ktlint.worker.LoadReportersWorkAction	at org.gradle.workers.internal.DefaultWorkerExecutor.lambda$submitWork$2(DefaultWorkerExecutor.java:208)	at org.gradle.internal.work.DefaultConditionalExecutionQueue$ExecutionRunner.runExecution(DefaultConditionalExecutionQueue.java:214)	at org.gradle.internal.work.DefaultConditionalExecutionQueue$ExecutionRunner.runBatch(DefaultConditionalExecutionQueue.java:164)	at org.gradle.internal.work.DefaultConditionalExecutionQueue$ExecutionRunner.run(DefaultConditionalExecutionQueue.java:131)	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:61)Caused by: org.gradle.workers.internal.WorkSerializationException: Could not serialize unit of work.	at org.gradle.workers.internal.DefaultActionExecutionSpecFactory.serialize(DefaultActionExecutionSpecFactory.java:79)	at org.gradle.workers.internal.DefaultActionExecutionSpecFactory.newTransportableSpec(DefaultActionExecutionSpecFactory.java:42)	at org.gradle.workers.internal.IsolatedClassloaderWorkerFactory$1.lambda$execute$0(IsolatedClassloaderWorkerFactory.java:51)	at org.gradle.workers.internal.AbstractWorker$1.call(AbstractWorker.java:44)	at org.gradle.workers.internal.AbstractWorker$1.call(AbstractWorker.java:41)	at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:200)	at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:195)	at org.gradle.internal.operations.DefaultBuildOperationRunner$3.execute(DefaultBuildOperationRunner.java:75)	at org.gradle.internal.operations.DefaultBuildOperationRunner$3.execute(DefaultBuildOperationRunner.java:68)	at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:153)	at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:68)	at org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:62)	at org.gradle.internal.operations.DefaultBuildOperationExecutor.lambda$call$2(DefaultBuildOperationExecutor.java:79)	at org.gradle.internal.operations.UnmanagedBuildOperationWrapper.callWithUnmanagedSupport(UnmanagedBuildOperationWrapper.java:54)	at org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:79)	at org.gradle.workers.internal.AbstractWorker.executeWrappedInBuildOperation(AbstractWorker.java:41)	at org.gradle.workers.internal.IsolatedClassloaderWorkerFactory$1.execute(IsolatedClassloaderWorkerFactory.java:49)	at org.gradle.workers.internal.DefaultWorkerExecutor.lambda$submitWork$2(DefaultWorkerExecutor.java:206)	... 6 moreCaused by: java.util.ConcurrentModificationException	at org.gradle.internal.serialize.DefaultSerializerRegistry.build(DefaultSerializerRegistry.java:84)	at org.gradle.workers.internal.IsolatableSerializerRegistry.writeIsolatable(IsolatableSerializerRegistry.java:129)	at org.gradle.workers.internal.IsolatableSerializerRegistry$IsolatedManagedValueSerializer.write(IsolatableSerializerRegistry.java:345)	at org.gradle.workers.internal.IsolatableSerializerRegistry$IsolatedManagedValueSerializer.write(IsolatableSerializerRegistry.java:338)	at org.gradle.workers.internal.IsolatableSerializerRegistry.writeIsolatable(IsolatableSerializerRegistry.java:129)	at org.gradle.workers.internal.IsolatableSerializerRegistry.writeIsolatableSequence(IsolatableSerializerRegistry.java:142)	at org.gradle.workers.internal.IsolatableSerializerRegistry.access$2200(IsolatableSerializerRegistry.java:62)	at org.gradle.workers.internal.IsolatableSerializerRegistry$IsolatedArraySerializer.write(IsolatableSerializerRegistry.java:515)	at org.gradle.workers.internal.IsolatableSerializerRegistry$IsolatedArraySerializer.write(IsolatableSerializerRegistry.java:510)	at org.gradle.workers.internal.IsolatableSerializerRegistry.writeIsolatable(IsolatableSerializerRegistry.java:129)	at org.gradle.workers.internal.IsolatableSerializerRegistry$IsolatedManagedValueSerializer.write(IsolatableSerializerRegistry.java:345)	at org.gradle.workers.internal.IsolatableSerializerRegistry$IsolatedManagedValueSerializer.write(IsolatableSerializerRegistry.java:338)	at org.gradle.workers.internal.IsolatableSerializerRegistry.writeIsolatable(IsolatableSerializerRegistry.java:129)	at org.gradle.workers.internal.DefaultActionExecutionSpecFactory.serialize(DefaultActionExecutionSpecFactory.java:76)	... 23 more</pre></details>I'm not entirely certain how to unit test this change best. Any suggestions welcome.### Contributor Checklist- [ ] [Review Contribution Guidelines](https://github.com/gradle/gradle/blob/master/CONTRIBUTING.md)- [ ] Make sure that all commits are [signed off](https://git-scm.com/docs/git-commit#Documentation/git-commit.txt---signoff) to indicate that you agree to the terms of [Developer Certificate of Origin](https://developercertificate.org/).- [ ] Make sure all contributed code can be distributed under the terms of the [Apache License 2.0](https://github.com/gradle/gradle/blob/master/LICENSE), e.g. the code was written by yourself or the original code is licensed under [a license compatible to Apache License 2.0](https://apache.org/legal/resolved.html).- [ ] Check [""Allow edit from maintainers"" option](https://help.github.com/articles/allowing-changes-to-a-pull-request-branch-created-from-a-fork/) in pull request so that additional changes can be pushed by Gradle team- [ ] Provide integration tests (under `<subproject>/src/integTest`) to verify changes from a user perspective- [ ] Provide unit tests (under `<subproject>/src/test`) to verify logic- [ ] Update User Guide, DSL Reference, and Javadoc for public-facing changes- [ ] Ensure that tests pass sanity check: `./gradlew sanityCheck`- [ ] Ensure that tests pass locally: `./gradlew <changed-subproject>:quickTest`### Gradle Core Team Checklist- [ ] Verify design and implementation - [ ] Verify test coverage and CI build status- [ ] Verify documentation- [ ] Recognize contributor in release notes
"
19152,0,0,297,1,0,tresat,0,"title:Revert usage of generic argument to objects.named extension in Kotlin samples and snippets, and build-logic scripts description:This is additional followup to https://github.com/gradle/gradle/issues/19014 from feedback on the community Slack.  This will prevent unnecessary change to the sample code and clear any info level warnings now flagged by the IDE for extraneous type arguments. 
"
19151,0,19151,288,0,0,Marcono1234,0,"title:Documentation contains `{user-manual}` references causing malformed links description:Several documentation pages use `{user-manual}` references in their links, for example:https://github.com/gradle/gradle/blob/49663363b9b6e333ef45397323b22863ff339124/subprojects/docs/src/docs/userguide/migration/migrating_from_groovy_to_kotlin_dsl.adoc#L170These references seem to produce malformed links because the `{user-manual}` placeholder is not replaced.### Expected BehaviorWorking links should be created### Current BehaviorThe placeholder `{user-manual}` is not replaced:<pre>https://docs.gradle.org/current/userguide/<b>%7Buser-manual%7D</b>plugin_reference.html</pre>Actually, the `{user-manual}` placeholder might not even be needed because the links refer to relative sibling pages.### Steps to Reproduce 1. Open https://docs.gradle.org/current/userguide/migrating_from_groovy_to_kotlin_dsl.html#applying_plugins2. Scroll down to the text ""The Kotlin DSL provides property extensions for all Gradle core plugins""3. Click on the ""Gradle core plugins"" link:x: It leads to a 404 page
"
19138,1,714,74,0,0,dweiss,0,"title:gradle does not write module version attribute for modules with zero dependencies description:Original bug report: https://issues.apache.org/jira/browse/LUCENE-10267Gradle uses javac's ""--module-version"" option to embed module version passed via options.javaModuleVersion. But this option is not passed to the compile unless there is at least one dependency (classpath/ module path entry). This is easily demonstrated by a simple attached project. If you run it out of the box, it shows module version embedded in the output:```>gradlew clean jar && java --module-path build\libs --describe-module foo> Task :compileJavaSetting module version to: 1.0.0BUILD SUCCESSFUL in 972ms3 actionable tasks: 3 executedfoo@1.0.0 file:///C:/_tmp/test/build/libs/test-1.0.0.jar       // << VERSION HERE: foo@1.0.0exports foorequires java.base mandated```but if you comment out the single dependency:```dependencies {  // api ""org.slf4j:slf4j-api:2.0.0-alpha5""}```and re-run it, the version is gone:```>gradlew clean jar && java --module-path build\libs --describe-module foo> Task :compileJavaSetting module version to: 1.0.0BUILD SUCCESSFUL in 1s3 actionable tasks: 3 executedfoo file:///C:/_tmp/test/build/libs/test-1.0.0.jar  // << VERSION HERE IS MISSINGexports foorequires java.base mandated```The problem is here in gradle sources:https://github.com/gradle/gradle/blob/master/subprojects/language-java/src/main/java/org/gradle/api/internal/tasks/compile/JavaCompilerArgumentsBuilder.java#L277-L284I think the condition there should actually look at inferModulePath and, if module version is set, always add that option to javac.
"
19120,1,0,10,0,0,cfraenkel,0,"title:Wrong receiver types shown for precompiled script plugins in composite builds in Intellij description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues--><!--- Provide a brief summary of the issue in the title above -->### Expected Behavior<!--- Tell us what should happen -->When editing a precompiled Script plugin included via composite build in IntelliJ the receiver should be correct.### Current Behavior<!--- Tell us what happens instead of the expected behavior -->Receivers are sometimes shown as ""it"" instead of ""this"".![image](https://user-images.githubusercontent.com/20723556/143450228-d60b8589-2aa3-40f2-adb3-04423198a954.png)### Context<!--- How has this issue affected you? What are you trying to accomplish? --><!--- Providing context helps us come up with a solution that is most useful in the real world -->I'm using precompiled script plugins in a multi-module project to maintain common configuration for all projects. The script plugin is included in the Build using `includeBuild()` in the root settings.xml.When I edit the Plugins as a standalone project syntax highlighting works correctly and the correct receiver is chosen. When I include the plugin project using `includeBuild()` then the receiver is often `it` instead of `this`.**To clarify: In either case the build works perfectly fine. It seems to be an Intellij / integration issue related to composite builds and precompiled script plugins**### Steps to Reproduce <!--- Provide a self-contained example project (as an attached archive or a Github project). --><!--- In the rare cases where this is infeasible, we will also accept a detailed set of instructions. -->[plugin-dev-kotlin.zip](https://github.com/gradle/gradle/files/7603431/plugin-dev-kotlin.zip)### Your Environment<!--- Include as many relevant details about the environment you experienced the bug in --><!--- A build scan https://scans.gradle.com/get-started is ideal -->Build scan URL: https://scans.gradle.com/s/lfliknpqhoxhmIntelliJ IDEA 2021.2.3 (Ultimate Edition)Kotlin: 212-1.6.0-release-799-IJ5457.46
"
19117,0,0,300,0,0,larsgrefer,0,"title:Eclipse Adoptium installations not found on MacOS description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues--><!--- Provide a brief summary of the issue in the title above -->### Expected BehaviorI'd expect `./gradlew javaToolchains` to list all Eclipse Adoptium installations in `/Library/Java/JavaVirtualMachines/`### Current BehaviorGradle auto-provisions a JDK 8 to `/Users/larsgrefer/.gradle/jdks/jdk8u312-b07/Contents/Home` although I have one available at `/Library/Java/JavaVirtualMachines/temurin-8.jdk/Contents/Home`### Context<!--- How has this issue affected you? What are you trying to accomplish? --><!--- Providing context helps us come up with a solution that is most useful in the real world -->### Steps to Reproduce Install multiple Adoptium versions using homebrew:`brew install temurin temurin8 temurin11`Run `./gradlew javaToolchains`### Your Environment<!--- Include as many relevant details about the environment you experienced the bug in --><!--- A build scan https://scans.gradle.com/get-started is ideal -->Build scan URL: https://scans.gradle.com/s/5usjdj3pmffh2
"
19114,1,466,18,0,0,ZakTaccardi,0,"title:`GradleProperties has not been loaded yet` error when re-using stored configuration cache entry description:I'm seeing the following error when re-using a stored configuration cache entry.```java.lang.IllegalStateException: GradleProperties has not been loaded yet.```This occurs when running the following task (only when re-using a stored configuration cache entry). On the first run when there is no stored configuration cache entry, the task works as expected.```./gradlew :printProps``````ktstasks.register(""printProps"", PrintPropsTask::class) { }abstract class PrintPropsTask @Inject constructor(    private val providers: ProviderFactory): DefaultTask() {    @org.gradle.api.tasks.TaskAction    fun doWork() {       // occurs on this line        logger.lifecycle(providers.gradleProperty(""some.gradle.property"").get())    }}```### Steps to Reproduce I don't have a reproducer at the moment - but could potentially try and make one later### Your EnvironmentGradle 7.3
"
19113,0,952,300,0,0,ZacSweers,0,"title:Configuration caching uses private java.base module APIs description:<!--- Please follow the instructions below. We receive dozens of issues every week, so to stay productive, we will close issues that don't provide enough information. Please open Android-related issues on the Android Issue Tracker at https://source.android.com/source/report-bugsPlease open Gradle Native-related issues at https://github.com/gradle/gradle-native/issues--><!--- Provide a brief summary of the issue in the title above -->### Expected BehaviorGradle should either not use these or handle it accordingly### Current Behavior<!--- Tell us what happens instead of the expected behavior -->Configuration cache does not work in some cases on JDK 16+ due to module encapsulation```* What went wrong:Configuration cache state could not be cached: field 'lineEndingsPolicy' from type 'com.diffplug.gradle.spotless.SpotlessTaskImpl': error writing value of type 'com.diffplug.spotless.extra.GitAttributesLineEndings$RelocatablePolicy'> Configuration cache state could not be cached: field 'hasNonDefaultEnding' from type 'com.diffplug.spotless.extra.GitAttributesLineEndings$CachedEndings': error writing value of type 'com.googlecode.concurrenttrees.radix.ConcurrentRadixTree'   > Configuration cache state could not be cached: field 'writeLock' from type 'com.googlecode.concurrenttrees.radix.ConcurrentRadixTree': error writing value of type 'java.util.concurrent.locks.ReentrantLock'      > Unable to make field private final java.util.concurrent.locks.ReentrantLock$Sync java.util.concurrent.locks.ReentrantLock.sync accessible: module java.base does not ""opens java.util.concurrent.locks"" to unnamed module @6783dbc5```### Context<!--- How has this issue affected you? What are you trying to accomplish? --><!--- Providing context helps us come up with a solution that is most useful in the real world -->I reproduce this running the Spotless gradle plugin (6.0.0) with Gradle 7.3 and configuration caching enabled### Steps to Reproduce <!--- Provide a self-contained example project (as an attached archive or a Github project). --><!--- In the rare cases where this is infeasible, we will also accept a detailed set of instructions. -->See above### Your Environment<!--- Include as many relevant details about the environment you experienced the bug in --><!--- A build scan https://scans.gradle.com/get-started is ideal -->Build scan URL:
"
19095,1,1351,36,0,0,mathjeff,0,"title:`dependencies` task support for configuration cache description:### Expected BehaviorRunning `./gradlew :subproject:dependencies && ./gradlew :subproject:dependencies` should succeed even if configuration caching is enabled### Current BehaviorRunning `./gradlew :subproject:dependencies && ./gradlew :subproject:dependencies` fails because the set of dependencies has been discarded```frameworks/support$ ./gradlew viewpager2:viewpager2:dependenciesConfiguration cache is an incubating feature.Reusing configuration cache.> Task :viewpager2:viewpager2:dependencies FAILED1 problem was found reusing the configuration cache.- Task `:viewpager2:viewpager2:dependencies` of type `org.gradle.api.tasks.diagnostics.DependencyReportTask`: cannot deserialize object of type 'org.gradle.api.artifacts.Configuration' as these are not supported with the configuration cache.  See https://docs.gradle.org/7.2/userguide/configuration_cache.html#config_cache:requirements:disallowed_typesSee the complete report at file:///Users/jellefresen/workspace/android/androidx-compose/frameworks/support/build/reports/configuration-cache/9y7v26ujv7wt5ov514l2f5976/4c6ykuuvrws934qp4ff0uw25c/configuration-cache-report.htmlFAILURE: Build failed with an exception.* What went wrong:Execution failed for task ':viewpager2:viewpager2:dependencies'.> The value of this property has been discarded during serialization.* Try:Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights.* Get more help at https://help.gradle.orgBUILD FAILED in 892ms1 actionable task: 1 executedConfiguration cache entry reused with 1 problem.```
"
19089,0,2952,259,1,0,asodja,0,"title:Dependency verification does not find a verification-metadata entry on Android Studio sync description:As reported in: https://github.com/gradle/gradle/issues/18498#issuecomment-952482865 by @liutikas:Reproducer:https://github.com/liutikas/gradle-bug-crash-android-studio-sync-kmpWhen using Android Studio sync it can happen that Dependency verifier ignores some entries in verification-metadata.xml.```Failed building KotlinMPPGradleModelorg.gradle.api.internal.artifacts.verification.DependencyVerificationException: Dependency verification failed for junit:junit:4.12:  - On artifact kotlin-test-junit-1.5.31.module (org.jetbrains.kotlin:kotlin-test-junit:1.5.31) in repository 'maven': checksum is missing from verification metadata.If the artifacts are trustworthy, you will need to update the gradle/verification-metadata.xml file by following the instructions at https://docs.gradle.org/7.4-20211026220137+0000/userguide/dependency_verification.html#sec:troubleshooting-verificationThese files failed verification:  - GRADLE_USER_HOME/../../../../../../ssd/ssd1/temp/gradle-bug-crash-android-studio-sync/repo/org/jetbrains/kotlin/kotlin-test-junit/1.5.31/kotlin-test-junit-1.5.31.moduleGRADLE_USER_HOME = /usr/local/google/home/aurimas/.gradleThese files failed verification:  - GRADLE_USER_HOME/../../../../../../ssd/ssd1/temp/gradle-bug-crash-android-studio-sync/repo/org/jetbrains/kotlin/kotlin-test-junit/1.5.31/kotlin-test-junit-1.5.31.moduleGRADLE_USER_HOME = /usr/local/google/home/aurimas/.gradleOpen this report for more details: file:///ssd/ssd1/temp/gradle-bug-crash-android-studio-sync/build/reports/dependency-verification/at-1635301289127/dependency-verification-report.html	at org.gradle.api.internal.artifacts.ivyservice.ivyresolve.verification.ChecksumAndSignatureVerificationOverride.artifactsAccessed(ChecksumAndSignatureVerificationOverride.java:182)	at org.gradle.api.internal.artifacts.ivyservice.ivyresolve.verification.ChecksumAndSignatureVerificationOverride$2.getFile(ChecksumAndSignatureVerificationOverride.java:200)	at org.jetbrains.plugins.gradle.tooling.util.resolve.DependencyResolverImpl.resolveDependencies(DependencyResolverImpl.java:309)	at org.jetbrains.plugins.gradle.tooling.util.resolve.DependencyResolverImpl.resolveDependencies(DependencyResolverImpl.java:120)	at org.jetbrains.kotlin.gradle.KotlinMPPGradleModelBuilder.buildDependencies(KotlinMPPGradleModelBuilder.kt:229)	at org.jetbrains.kotlin.gradle.KotlinMPPGradleModelBuilder.buildSourceSetDependencies(KotlinMPPGradleModelBuilder.kt:650)	at org.jetbrains.kotlin.gradle.KotlinMPPGradleModelBuilder.access$buildSourceSetDependencies(KotlinMPPGradleModelBuilder.kt:39)	at org.jetbrains.kotlin.gradle.KotlinMPPGradleModelBuilder$buildSourceSet$sourceSetDependenciesBuilder$1.invoke(KotlinMPPGradleModelBuilder.kt:173)	at org.jetbrains.kotlin.gradle.KotlinMPPGradleModelBuilder$buildSourceSet$sourceSetDependenciesBuilder$1.invoke(KotlinMPPGradleModelBuilder.kt:39)	at org.jetbrains.kotlin.gradle.KotlinSourceSetProto.buildKotlinSourceSetImpl(KotlinMPPGradleModelImpl.kt:27)	at org.jetbrains.kotlin.gradle.KotlinMPPGradleModelBuilder.buildSourceSets(KotlinMPPGradleModelBuilder.kt:128)	at org.jetbrains.kotlin.gradle.KotlinMPPGradleModelBuilder.buildAll(KotlinMPPGradleModelBuilder.kt:57)...```The problem seems to be that `DependencyVerifier.verificationMetadata` has key `ComponentIdentifier` but Android Studio/IntelliJ can inject it's own `ComponentIdentifier` implementation so comparison methods (hashcode/equals) are different:<img width=""1364"" alt=""Screenshot 2021-11-23 at 15 50 23"" src=""https://user-images.githubusercontent.com/3939893/143046963-e5473d93-804b-4d70-bf8d-e21c0b57512a.png""> 
"
19077,0,0,281,0,0,jjohannes,0,"title:[Build Scans] Class-based Settings Plugin breaks build scans when using pluginManagement.includeBuild(...) description:<!--- Provide a brief summary of the issue in the title above -->Running the following build prints`This build uses Gradle features that are incompatible with build scans (code: late-load-build-op).`instead of publishing a build scan.https://github.com/jjohannes/gradle-demos/tree/main/settings-plugin-late-load-build-op-issue/product### Expected BehaviorA build scan should be produced.### Current BehaviorNo build scan, but info message printed.### ContextThis is likely caused by the fact that if the Settings Plugin is implemented as a class, the `pluginManagment.includeBuild(...)` is evaluated later compared to pre-compiled script plugins. As done [here](https://github.com/jjohannes/gradle-demos/blob/740191c539a759736b6ad37518267354069d477b/settings-plugin-late-load-build-op-issue/settings-plugin/src/main/java/MySmartSettingPlugin.java#L18) in the reproducer.The issue does not exist with pre-compiled script plugins written in Groovy or Kotlin DSL.It's unclear, if this is an issue with Gradle, the GE Plugin, or GE itself.### WorkaroundUse a pre-compiled script plugin instead of a Class-based plugin.### Steps to Reproduce See instructions in:https://github.com/jjohannes/gradle-demos/tree/main/settings-plugin-late-load-build-op-issue/product#readme
"
19074,1,0,0,0,0,theskylinetech,0,"title:Unable to Resolve Class From Parent Object description:A working project demo is attached<img width=""741"" alt=""Screen Shot 2021-11-21 at 11 48 22 AM"" src=""https://user-images.githubusercontent.com/60714626/142862177-ce697667-f447-4131-aa81-7149f59cb3c0.png""><img width=""1379"" alt=""Screen Shot 2021-11-21 at 12 20 32 PM"" src=""https://user-images.githubusercontent.com/60714626/142862180-cb4fa611-7574-4777-9e91-0dd164885ad3.png"">[inheritance-issue.zip](https://github.com/gradle/gradle/files/7580973/inheritance-issue.zip)### Expected BehaviorGradle should be able to compile the project### Current BehaviorGradle build complains that Builder cannot be resolved### ContextThe project cannot be built even though the IDE recognizes and resolves the class### Steps to Reproduce -- A working project with all details implemented is attached1. Create a new Gradle project with Groovy framework support2. Create a new package called 'parents'3. Create 2 new abstract classes4. The second abstract class should extend the first5. The first should have a generic Builder pattern6. Create a third object that is dependent on the second abstract class### Your EnvironmentBuild scan URL:https://scans.gradle.com/s/7dm6d6j6qj3o6
"
19066,1,681,0,0,1,toerni,0,"title:Test fixtures dependencies not possible in dependency block of test suite plugin description:While testing the new test-suite plugin, I tried to add a dependency to the test-fixtures of another project in the new dependency block using kotlin dsl### Expected BehaviorExpecting the dependency below to compile```testing {    suites {        val integrationtest by registering(JvmTestSuite::class) {            this.useJUnitJupiter()            dependencies {                implementation(platform(testfixtures("":myProject"")))            }                        targets {                all {                    testTask.configure {                        shouldRunAfter(tasks.named(""test""))                        testLogging {                            events(FAILED, SKIPPED)                            exceptionFormat = TestExceptionFormat.FULL                        }                    }                }            }        }    }}```### Current Behaviortestfixtures dependency does not compile in script plugin in buildSrc### Your Environment* gradle 7.3* jvm-test-suite plugin
"
19065,0,677,0,0,0,toerni,0,"title:Platform dependencies not possible in dependency block of test suite plugin description:While testing the new test-suite plugin, I tried to add a dependency to my platform in the new dependency block using kotlin dsl### Expected BehaviorExpecting the dependency below to compile```testing {    suites {        val integrationtest by registering(JvmTestSuite::class) {            this.useJUnitJupiter()            dependencies {                implementation(platform(project("":myPlatform"")))            }                        targets {                all {                    testTask.configure {                        shouldRunAfter(tasks.named(""test""))                        testLogging {                            events(FAILED, SKIPPED)                            exceptionFormat = TestExceptionFormat.FULL                        }                    }                }            }        }    }}```### Current Behaviorplatform dependency does not compile in script plugin in buildSrc![image](https://user-images.githubusercontent.com/2105382/142669008-f4e56176-90df-413f-a7a3-997af90794c2.png)### Your Environment* gradle 7.3* jvm-test-suite plugin* used in a script plugin in `buildSrc`
"
19052,0,126631,2,0,0,GrahamDennis,0,"title:ConcurrentModificationException during Ivy resolve description:### Expected BehaviorGradle should be able to resolve artifacts without failing with an internal error.### Current BehaviorIn an internal project with complex dependency constraints, gradle (version 7.2.0) configuration resolution fails with a ConcurrentModificationException (stacktrace below). The ConcurrentModificationException occurs during iteration over the [outgoingEdges collection of NodeState](https://github.com/gradle/gradle/blob/v7.2.0/subprojects/dependency-management/src/main/java/org/gradle/api/internal/artifacts/ivyservice/resolveengine/graph/builder/NodeState.java#L1022).I added [additional validation](https://github.com/GrahamDennis/gradle/commit/aff76435c1eef159bcfb170c3a16146fd0ed8440) to the class triggering the ConcurrentModificationException to verify that the collection was being deterministically mutated during iteration. i.e. this is not a race condition involving multiple threads. The stacktrace from this modified version of Gradle is also below.Could this problem be resolved by iterating over a copy of the collection instead of the collection itself?### StacktracesThe original build failure stacktrace on Gradle 7.2 is:```* Exception is:org.gradle.api.tasks.TaskExecutionException: Execution failed for task ':redacted:resolveDependencies'.        at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.lambda$executeIfValid$1(ExecuteActionsTaskExecuter.java:188)        at org.gradle.internal.Try$Failure.ifSuccessfulOrElse(Try.java:282)        at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeIfValid(ExecuteActionsTaskExecuter.java:186)        at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.execute(ExecuteActionsTaskExecuter.java:174)        at org.gradle.api.internal.tasks.execution.CleanupStaleOutputsExecuter.execute(CleanupStaleOutputsExecuter.java:109)        at org.gradle.api.internal.tasks.execution.FinalizePropertiesTaskExecuter.execute(FinalizePropertiesTaskExecuter.java:46)        at org.gradle.api.internal.tasks.execution.ResolveTaskExecutionModeExecuter.execute(ResolveTaskExecutionModeExecuter.java:51)        at org.gradle.api.internal.tasks.execution.SkipTaskWithNoActionsExecuter.execute(SkipTaskWithNoActionsExecuter.java:57)        at org.gradle.api.internal.tasks.execution.SkipOnlyIfTaskExecuter.execute(SkipOnlyIfTaskExecuter.java:56)        at org.gradle.api.internal.tasks.execution.CatchExceptionTaskExecuter.execute(CatchExceptionTaskExecuter.java:36)        at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.executeTask(EventFiringTaskExecuter.java:77)        at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.call(EventFiringTaskExecuter.java:55)        at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.call(EventFiringTaskExecuter.java:52)        at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:200)        at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:195)        at org.gradle.internal.operations.DefaultBuildOperationRunner$3.execute(DefaultBuildOperationRunner.java:75)        at org.gradle.internal.operations.DefaultBuildOperationRunner$3.execute(DefaultBuildOperationRunner.java:68)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:153)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:68)        at org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:62)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.lambda$call$2(DefaultBuildOperationExecutor.java:79)        at org.gradle.internal.operations.UnmanagedBuildOperationWrapper.callWithUnmanagedSupport(UnmanagedBuildOperationWrapper.java:54)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:79)        at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter.execute(EventFiringTaskExecuter.java:52)        at org.gradle.execution.plan.LocalTaskNodeExecutor.execute(LocalTaskNodeExecutor.java:74)        at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$InvokeNodeExecutorsAction.execute(DefaultTaskExecutionGraph.java:402)        at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$InvokeNodeExecutorsAction.execute(DefaultTaskExecutionGraph.java:389)        at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$BuildOperationAwareExecutionAction.execute(DefaultTaskExecutionGraph.java:382)        at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$BuildOperationAwareExecutionAction.execute(DefaultTaskExecutionGraph.java:368)        at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.lambda$run$0(DefaultPlanExecutor.java:127)        at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.execute(DefaultPlanExecutor.java:191)        at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.executeNextNode(DefaultPlanExecutor.java:182)        at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.run(DefaultPlanExecutor.java:124)        at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)        at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)        at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:61)Caused by: org.gradle.api.artifacts.ResolveException: Could not resolve all dependencies for configuration ':redacted:runtimeClasspathForMetrics'.        at org.gradle.api.internal.artifacts.ivyservice.ErrorHandlingConfigurationResolver.wrapException(ErrorHandlingConfigurationResolver.java:105)        at org.gradle.api.internal.artifacts.ivyservice.ErrorHandlingConfigurationResolver.resolveGraph(ErrorHandlingConfigurationResolver.java:76)        at org.gradle.api.internal.artifacts.configurations.DefaultConfiguration$1.call(DefaultConfiguration.java:644)        at org.gradle.api.internal.artifacts.configurations.DefaultConfiguration$1.call(DefaultConfiguration.java:635)        at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:200)        at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:195)        at org.gradle.internal.operations.DefaultBuildOperationRunner$3.execute(DefaultBuildOperationRunner.java:75)        at org.gradle.internal.operations.DefaultBuildOperationRunner$3.execute(DefaultBuildOperationRunner.java:68)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:153)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:68)        at org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:62)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.lambda$call$2(DefaultBuildOperationExecutor.java:79)        at org.gradle.internal.operations.UnmanagedBuildOperationWrapper.callWithUnmanagedSupport(UnmanagedBuildOperationWrapper.java:54)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:79)        at org.gradle.api.internal.artifacts.configurations.DefaultConfiguration.resolveGraphIfRequired(DefaultConfiguration.java:635)        at org.gradle.api.internal.artifacts.configurations.DefaultConfiguration.lambda$resolveExclusively$4(DefaultConfiguration.java:615)        at org.gradle.api.internal.project.DefaultProjectStateRegistry$CalculatedModelValueImpl.update(DefaultProjectStateRegistry.java:437)        at org.gradle.api.internal.artifacts.configurations.DefaultConfiguration.resolveExclusively(DefaultConfiguration.java:612)        at org.gradle.api.internal.artifacts.configurations.DefaultConfiguration.resolveToStateOrLater(DefaultConfiguration.java:599)        at org.gradle.api.internal.artifacts.configurations.DefaultConfiguration.access$1900(DefaultConfiguration.java:152)        at org.gradle.api.internal.artifacts.configurations.DefaultConfiguration$SelectedArtifactsProvider.getValue(DefaultConfiguration.java:1340)        at org.gradle.api.internal.artifacts.configurations.DefaultConfiguration$SelectedArtifactsProvider.getValue(DefaultConfiguration.java:1330)        at org.gradle.api.internal.artifacts.configurations.DefaultConfiguration$ConfigurationFileCollection.getSelectedArtifacts(DefaultConfiguration.java:1402)        at org.gradle.api.internal.artifacts.configurations.DefaultConfiguration$ConfigurationFileCollection.visitContents(DefaultConfiguration.java:1389)        at org.gradle.api.internal.artifacts.configurations.DefaultConfiguration.visitContents(DefaultConfiguration.java:498)        at org.gradle.api.internal.file.AbstractFileCollection.getFiles(AbstractFileCollection.java:130)        at org.gradle.api.internal.artifacts.configurations.DefaultConfiguration_Decorated.getFiles(Unknown Source)        at org.gradle.api.internal.artifacts.configurations.DefaultConfiguration.resolve(DefaultConfiguration.java:488)        at com.palantir.willamette.DependencyResolver.lambda$apply$2(DependencyResolver.java:52)        at org.gradle.api.internal.AbstractTask$TaskActionWrapper.execute(AbstractTask.java:752)        at org.gradle.api.internal.AbstractTask$TaskActionWrapper.execute(AbstractTask.java:725)        at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter$2.run(ExecuteActionsTaskExecuter.java:502)        at org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:29)        at org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:26)        at org.gradle.internal.operations.DefaultBuildOperationRunner$3.execute(DefaultBuildOperationRunner.java:75)        at org.gradle.internal.operations.DefaultBuildOperationRunner$3.execute(DefaultBuildOperationRunner.java:68)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:153)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:68)        at org.gradle.internal.operations.DefaultBuildOperationRunner.run(DefaultBuildOperationRunner.java:56)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.lambda$run$1(DefaultBuildOperationExecutor.java:74)        at org.gradle.internal.operations.UnmanagedBuildOperationWrapper.runWithUnmanagedSupport(UnmanagedBuildOperationWrapper.java:45)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:74)        at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeAction(ExecuteActionsTaskExecuter.java:487)        at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeActions(ExecuteActionsTaskExecuter.java:470)        at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.access$300(ExecuteActionsTaskExecuter.java:106)        at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter$TaskExecution.executeWithPreviousOutputFiles(ExecuteActionsTaskExecuter.java:271)        at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter$TaskExecution.execute(ExecuteActionsTaskExecuter.java:249)        at org.gradle.internal.execution.steps.ExecuteStep.executeInternal(ExecuteStep.java:89)        at org.gradle.internal.execution.steps.ExecuteStep.access$000(ExecuteStep.java:40)        at org.gradle.internal.execution.steps.ExecuteStep$1.call(ExecuteStep.java:53)        at org.gradle.internal.execution.steps.ExecuteStep$1.call(ExecuteStep.java:50)        at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:200)        at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:195)        at org.gradle.internal.operations.DefaultBuildOperationRunner$3.execute(DefaultBuildOperationRunner.java:75)        at org.gradle.internal.operations.DefaultBuildOperationRunner$3.execute(DefaultBuildOperationRunner.java:68)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:153)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:68)        at org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:62)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.lambda$call$2(DefaultBuildOperationExecutor.java:79)        at org.gradle.internal.operations.UnmanagedBuildOperationWrapper.callWithUnmanagedSupport(UnmanagedBuildOperationWrapper.java:54)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:79)        at org.gradle.internal.execution.steps.ExecuteStep.execute(ExecuteStep.java:50)        at org.gradle.internal.execution.steps.ExecuteStep.execute(ExecuteStep.java:40)        at org.gradle.internal.execution.steps.RemovePreviousOutputsStep.execute(RemovePreviousOutputsStep.java:68)        at org.gradle.internal.execution.steps.RemovePreviousOutputsStep.execute(RemovePreviousOutputsStep.java:38)        at org.gradle.internal.execution.steps.ResolveInputChangesStep.execute(ResolveInputChangesStep.java:50)        at org.gradle.internal.execution.steps.ResolveInputChangesStep.execute(ResolveInputChangesStep.java:36)        at org.gradle.internal.execution.steps.CancelExecutionStep.execute(CancelExecutionStep.java:41)        at org.gradle.internal.execution.steps.TimeoutStep.executeWithoutTimeout(TimeoutStep.java:74)        at org.gradle.internal.execution.steps.TimeoutStep.execute(TimeoutStep.java:55)        at org.gradle.internal.execution.steps.CreateOutputsStep.execute(CreateOutputsStep.java:51)        at org.gradle.internal.execution.steps.CreateOutputsStep.execute(CreateOutputsStep.java:29)        at org.gradle.internal.execution.steps.CaptureStateAfterExecutionStep.execute(CaptureStateAfterExecutionStep.java:58)        at org.gradle.internal.execution.steps.CaptureStateAfterExecutionStep.execute(CaptureStateAfterExecutionStep.java:39)        at org.gradle.internal.execution.steps.BroadcastChangingOutputsStep.execute(BroadcastChangingOutputsStep.java:60)        at org.gradle.internal.execution.steps.BroadcastChangingOutputsStep.execute(BroadcastChangingOutputsStep.java:27)        at org.gradle.internal.execution.steps.BuildCacheStep.executeWithoutCache(BuildCacheStep.java:180)        at org.gradle.internal.execution.steps.BuildCacheStep.execute(BuildCacheStep.java:75)        at org.gradle.internal.execution.steps.BuildCacheStep.execute(BuildCacheStep.java:46)        at org.gradle.internal.execution.steps.StoreExecutionStateStep.execute(StoreExecutionStateStep.java:40)        at org.gradle.internal.execution.steps.StoreExecutionStateStep.execute(StoreExecutionStateStep.java:29)        at org.gradle.internal.execution.steps.RecordOutputsStep.execute(RecordOutputsStep.java:36)        at org.gradle.internal.execution.steps.RecordOutputsStep.execute(RecordOutputsStep.java:22)        at org.gradle.internal.execution.steps.SkipUpToDateStep.executeBecause(SkipUpToDateStep.java:105)        at org.gradle.internal.execution.steps.SkipUpToDateStep.lambda$execute$0(SkipUpToDateStep.java:98)        at org.gradle.internal.execution.steps.SkipUpToDateStep.execute(SkipUpToDateStep.java:53)        at org.gradle.internal.execution.steps.SkipUpToDateStep.execute(SkipUpToDateStep.java:37)        at org.gradle.internal.execution.steps.ResolveChangesStep.execute(ResolveChangesStep.java:85)        at org.gradle.internal.execution.steps.ResolveChangesStep.execute(ResolveChangesStep.java:42)        at org.gradle.internal.execution.steps.legacy.MarkSnapshottingInputsFinishedStep.execute(MarkSnapshottingInputsFinishedStep.java:37)        at org.gradle.internal.execution.steps.legacy.MarkSnapshottingInputsFinishedStep.execute(MarkSnapshottingInputsFinishedStep.java:27)        at org.gradle.internal.execution.steps.ResolveCachingStateStep.execute(ResolveCachingStateStep.java:92)        at org.gradle.internal.execution.steps.ResolveCachingStateStep.execute(ResolveCachingStateStep.java:50)        at org.gradle.internal.execution.steps.ValidateStep.execute(ValidateStep.java:114)        at org.gradle.internal.execution.steps.ValidateStep.execute(ValidateStep.java:57)        at org.gradle.internal.execution.steps.CaptureStateBeforeExecutionStep.execute(CaptureStateBeforeExecutionStep.java:73)        at org.gradle.internal.execution.steps.CaptureStateBeforeExecutionStep.execute(CaptureStateBeforeExecutionStep.java:47)        at org.gradle.internal.execution.steps.SkipEmptyWorkStep.lambda$execute$2(SkipEmptyWorkStep.java:92)        at org.gradle.internal.execution.steps.SkipEmptyWorkStep.execute(SkipEmptyWorkStep.java:92)        at org.gradle.internal.execution.steps.SkipEmptyWorkStep.execute(SkipEmptyWorkStep.java:33)        at org.gradle.internal.execution.steps.legacy.MarkSnapshottingInputsStartedStep.execute(MarkSnapshottingInputsStartedStep.java:38)        at org.gradle.internal.execution.steps.LoadExecutionStateStep.execute(LoadExecutionStateStep.java:43)        at org.gradle.internal.execution.steps.LoadExecutionStateStep.execute(LoadExecutionStateStep.java:31)        at org.gradle.internal.execution.steps.AssignWorkspaceStep.lambda$execute$0(AssignWorkspaceStep.java:40)        at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter$TaskExecution$2.withWorkspace(ExecuteActionsTaskExecuter.java:284)        at org.gradle.internal.execution.steps.AssignWorkspaceStep.execute(AssignWorkspaceStep.java:40)        at org.gradle.internal.execution.steps.AssignWorkspaceStep.execute(AssignWorkspaceStep.java:30)        at org.gradle.internal.execution.steps.IdentityCacheStep.execute(IdentityCacheStep.java:37)        at org.gradle.internal.execution.steps.IdentityCacheStep.execute(IdentityCacheStep.java:27)        at org.gradle.internal.execution.steps.IdentifyStep.execute(IdentifyStep.java:44)        at org.gradle.internal.execution.steps.IdentifyStep.execute(IdentifyStep.java:33)        at org.gradle.internal.execution.impl.DefaultExecutionEngine$1.execute(DefaultExecutionEngine.java:76)        at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeIfValid(ExecuteActionsTaskExecuter.java:185)        at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.execute(ExecuteActionsTaskExecuter.java:174)        at org.gradle.api.internal.tasks.execution.CleanupStaleOutputsExecuter.execute(CleanupStaleOutputsExecuter.java:109)        at org.gradle.api.internal.tasks.execution.FinalizePropertiesTaskExecuter.execute(FinalizePropertiesTaskExecuter.java:46)        at org.gradle.api.internal.tasks.execution.ResolveTaskExecutionModeExecuter.execute(ResolveTaskExecutionModeExecuter.java:51)        at org.gradle.api.internal.tasks.execution.SkipTaskWithNoActionsExecuter.execute(SkipTaskWithNoActionsExecuter.java:57)        at org.gradle.api.internal.tasks.execution.SkipOnlyIfTaskExecuter.execute(SkipOnlyIfTaskExecuter.java:56)        at org.gradle.api.internal.tasks.execution.CatchExceptionTaskExecuter.execute(CatchExceptionTaskExecuter.java:36)        at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.executeTask(EventFiringTaskExecuter.java:77)        at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.call(EventFiringTaskExecuter.java:55)        at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.call(EventFiringTaskExecuter.java:52)        at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:200)        at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:195)        at org.gradle.internal.operations.DefaultBuildOperationRunner$3.execute(DefaultBuildOperationRunner.java:75)        at org.gradle.internal.operations.DefaultBuildOperationRunner$3.execute(DefaultBuildOperationRunner.java:68)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:153)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:68)        at org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:62)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.lambda$call$2(DefaultBuildOperationExecutor.java:79)        at org.gradle.internal.operations.UnmanagedBuildOperationWrapper.callWithUnmanagedSupport(UnmanagedBuildOperationWrapper.java:54)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:79)        at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter.execute(EventFiringTaskExecuter.java:52)        at org.gradle.execution.plan.LocalTaskNodeExecutor.execute(LocalTaskNodeExecutor.java:74)        at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$InvokeNodeExecutorsAction.execute(DefaultTaskExecutionGraph.java:402)        at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$InvokeNodeExecutorsAction.execute(DefaultTaskExecutionGraph.java:389)        at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$BuildOperationAwareExecutionAction.execute(DefaultTaskExecutionGraph.java:382)        at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$BuildOperationAwareExecutionAction.execute(DefaultTaskExecutionGraph.java:368)        at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.lambda$run$0(DefaultPlanExecutor.java:127)        at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.execute(DefaultPlanExecutor.java:191)        at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.executeNextNode(DefaultPlanExecutor.java:182)        at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.run(DefaultPlanExecutor.java:124)        at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)        at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)        at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:61)Caused by: java.util.ConcurrentModificationException        at org.gradle.api.internal.artifacts.ivyservice.resolveengine.graph.builder.NodeState.removeOutgoingEdges(NodeState.java:1022)        at org.gradle.api.internal.artifacts.ivyservice.resolveengine.graph.builder.NodeState.reselect(NodeState.java:1109)        at org.gradle.api.internal.artifacts.ivyservice.resolveengine.graph.builder.NodeState.reselectEndorsingNode(NodeState.java:1101)        at org.gradle.api.internal.artifacts.ivyservice.resolveengine.graph.builder.NodeState.deselect(NodeState.java:1086)        at org.gradle.api.internal.artifacts.ivyservice.resolveengine.graph.builder.ComponentState.removeOutgoingEdges(ComponentState.java:396)        at org.gradle.api.internal.artifacts.ivyservice.resolveengine.graph.builder.ModuleResolveState.changeSelection(ModuleResolveState.java:209)        at org.gradle.api.internal.artifacts.ivyservice.resolveengine.graph.builder.ModuleResolveState.maybeUpdateSelection(ModuleResolveState.java:432)        at org.gradle.api.internal.artifacts.ivyservice.resolveengine.graph.builder.DependencyGraphBuilder.performSelection(DependencyGraphBuilder.java:302)        at org.gradle.api.internal.artifacts.ivyservice.resolveengine.graph.builder.DependencyGraphBuilder.performSelectionSerially(DependencyGraphBuilder.java:283)        at org.gradle.api.internal.artifacts.ivyservice.resolveengine.graph.builder.DependencyGraphBuilder.resolveEdges(DependencyGraphBuilder.java:259)        at org.gradle.api.internal.artifacts.ivyservice.resolveengine.graph.builder.DependencyGraphBuilder.traverseGraph(DependencyGraphBuilder.java:198)        at org.gradle.api.internal.artifacts.ivyservice.resolveengine.graph.builder.DependencyGraphBuilder.resolve(DependencyGraphBuilder.java:149)        at org.gradle.api.internal.artifacts.ivyservice.resolveengine.DefaultArtifactDependencyResolver.resolve(DefaultArtifactDependencyResolver.java:145)        at org.gradle.api.internal.artifacts.ivyservice.DefaultConfigurationResolver.resolveGraph(DefaultConfigurationResolver.java:186)        at org.gradle.api.internal.artifacts.ivyservice.ShortCircuitEmptyConfigurationResolver.resolveGraph(ShortCircuitEmptyConfigurationResolver.java:85)        at org.gradle.api.internal.artifacts.ivyservice.ErrorHandlingConfigurationResolver.resolveGraph(ErrorHandlingConfigurationResolver.java:74)        at org.gradle.api.internal.artifacts.configurations.DefaultConfiguration$1.call(DefaultConfiguration.java:644)        at org.gradle.api.internal.artifacts.configurations.DefaultConfiguration$1.call(DefaultConfiguration.java:635)        at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:200)        at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:195)        at org.gradle.internal.operations.DefaultBuildOperationRunner$3.execute(DefaultBuildOperationRunner.java:75)        at org.gradle.internal.operations.DefaultBuildOperationRunner$3.execute(DefaultBuildOperationRunner.java:68)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:153)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:68)        at org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:62)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.lambda$call$2(DefaultBuildOperationExecutor.java:79)        at org.gradle.internal.operations.UnmanagedBuildOperationWrapper.callWithUnmanagedSupport(UnmanagedBuildOperationWrapper.java:54)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:79)        at org.gradle.api.internal.artifacts.configurations.DefaultConfiguration.resolveGraphIfRequired(DefaultConfiguration.java:635)        at org.gradle.api.internal.artifacts.configurations.DefaultConfiguration.lambda$resolveExclusively$4(DefaultConfiguration.java:615)        at org.gradle.api.internal.project.DefaultProjectStateRegistry$CalculatedModelValueImpl.update(DefaultProjectStateRegistry.java:437)        at org.gradle.api.internal.artifacts.configurations.DefaultConfiguration.resolveExclusively(DefaultConfiguration.java:612)        at org.gradle.api.internal.artifacts.configurations.DefaultConfiguration.resolveToStateOrLater(DefaultConfiguration.java:599)        at org.gradle.api.internal.artifacts.configurations.DefaultConfiguration.access$1900(DefaultConfiguration.java:152)        at org.gradle.api.internal.artifacts.configurations.DefaultConfiguration$SelectedArtifactsProvider.getValue(DefaultConfiguration.java:1340)        at org.gradle.api.internal.artifacts.configurations.DefaultConfiguration$SelectedArtifactsProvider.getValue(DefaultConfiguration.java:1330)        at org.gradle.api.internal.artifacts.configurations.DefaultConfiguration$ConfigurationFileCollection.getSelectedArtifacts(DefaultConfiguration.java:1402)        at org.gradle.api.internal.artifacts.configurations.DefaultConfiguration$ConfigurationFileCollection.visitContents(DefaultConfiguration.java:1389)        at org.gradle.api.internal.artifacts.configurations.DefaultConfiguration.visitContents(DefaultConfiguration.java:498)        at org.gradle.api.internal.file.AbstractFileCollection.getFiles(AbstractFileCollection.java:130)        at org.gradle.api.internal.artifacts.configurations.DefaultConfiguration_Decorated.getFiles(Unknown Source)        at org.gradle.api.internal.artifacts.configurations.DefaultConfiguration.resolve(DefaultConfiguration.java:488)        at com.palantir.willamette.DependencyResolver.lambda$apply$2(DependencyResolver.java:52)        at org.gradle.api.internal.AbstractTask$TaskActionWrapper.execute(AbstractTask.java:752)        at org.gradle.api.internal.AbstractTask$TaskActionWrapper.execute(AbstractTask.java:725)        at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter$2.run(ExecuteActionsTaskExecuter.java:502)        at org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:29)        at org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:26)        at org.gradle.internal.operations.DefaultBuildOperationRunner$3.execute(DefaultBuildOperationRunner.java:75)        at org.gradle.internal.operations.DefaultBuildOperationRunner$3.execute(DefaultBuildOperationRunner.java:68)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:153)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:68)        at org.gradle.internal.operations.DefaultBuildOperationRunner.run(DefaultBuildOperationRunner.java:56)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.lambda$run$1(DefaultBuildOperationExecutor.java:74)        at org.gradle.internal.operations.UnmanagedBuildOperationWrapper.runWithUnmanagedSupport(UnmanagedBuildOperationWrapper.java:45)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:74)        at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeAction(ExecuteActionsTaskExecuter.java:487)        at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeActions(ExecuteActionsTaskExecuter.java:470)        at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.access$300(ExecuteActionsTaskExecuter.java:106)        at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter$TaskExecution.executeWithPreviousOutputFiles(ExecuteActionsTaskExecuter.java:271)        at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter$TaskExecution.execute(ExecuteActionsTaskExecuter.java:249)        at org.gradle.internal.execution.steps.ExecuteStep.executeInternal(ExecuteStep.java:89)        at org.gradle.internal.execution.steps.ExecuteStep.access$000(ExecuteStep.java:40)        at org.gradle.internal.execution.steps.ExecuteStep$1.call(ExecuteStep.java:53)        at org.gradle.internal.execution.steps.ExecuteStep$1.call(ExecuteStep.java:50)        at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:200)        at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:195)        at org.gradle.internal.operations.DefaultBuildOperationRunner$3.execute(DefaultBuildOperationRunner.java:75)        at org.gradle.internal.operations.DefaultBuildOperationRunner$3.execute(DefaultBuildOperationRunner.java:68)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:153)        at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:68)        at org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:62)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.lambda$call$2(DefaultBuildOperationExecutor.java:79)        at org.gradle.internal.operations.UnmanagedBuildOperationWrapper.callWithUnmanagedSupport(UnmanagedBuildOperationWrapper.java:54)        at org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:79)        at org.gradle.internal.execution.steps.ExecuteStep.execute(ExecuteStep.java:50)        at org.gradle.internal.execution.steps.ExecuteStep.execute(ExecuteStep.java:40)        at org.gradle.internal.execution.steps.RemovePreviousOutputsStep.execute(Rem"
